{
.appVersion = "3032";
DisplayStrings = (
"/iGlottal-ethiopic",
"/te-ethiopic",
"/xaa-ethiopic"
);
copyright = "Copyright Â© 2020 by fasil fikreab. All rights reserved.";
customParameters = (
{
name = panose;
value = (
2,
0,
0,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
35,
36,
38,
45,
60,
62,
69
);
},
{
name = fsType;
value = (
0
);
},
{
name = glyphOrder;
value = (
.notdef,
uni0000,
uni0002,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
currency,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemetleft,
logicalnot,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
micro,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemetright,
onequarter,
onehalf,
threequarters,
questiondown,
AE,
multiply,
Oslash,
Thorn,
germandbls,
ae,
eth,
divide,
oslash,
thorn,
dcroat,
Hbar,
idotless,
kgreenlandic,
Lslash,
lslash,
Eng,
eng,
OE,
oe,
longs,
Schwa,
florin,
Ohorn,
ohorn,
Uhorn,
uhorn,
jdotless,
schwa,
circumflex,
caron,
firsttonechinese,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
lowringmod,
gravecomb,
acutecomb,
tildecomb,
hookabovecomb,
dblgravecomb,
dotbelowcomb,
tonos,
dieresistonos,
anoteleia,
Gamma,
Delta,
Theta,
Lambda,
Xi,
Pi,
Sigma,
Phi,
Psi,
Ohm,
alpha,
beta,
gamma,
delta,
epsilon,
zeta,
eta,
theta,
iota,
lambda,
xi,
pi,
rho,
sigmafinal,
sigma,
tau,
upsilon,
phi,
psi,
omega,
thetaSymbol,
UpsilonhookSymbol,
piSymbol,
"Dje-cy",
"E-cy",
"Lje-cy",
"Nje-cy",
"Tshe-cy",
"Dzhe-cy",
"Be-cy",
"De-cy",
"Zhe-cy",
"Ze-cy",
"Ii-cy",
"El-cy",
"U-cy",
"Ef-cy",
"Tse-cy",
"Che-cy",
"Sha-cy",
"Shcha-cy",
"Hardsign-cy",
"Yeru-cy",
"Softsign-cy",
"Ereversed-cy",
"Iu-cy",
"Ia-cy",
"be-cy",
"ve-cy",
"ge-cy",
"de-cy",
"zhe-cy",
"ze-cy",
"ii-cy",
"ka-cy",
"el-cy",
"em-cy",
"en-cy",
"pe-cy",
"te-cy",
"ef-cy",
"tse-cy",
"che-cy",
"sha-cy",
"shcha-cy",
"hardsign-cy",
"yeru-cy",
"softsign-cy",
"ereversed-cy",
"iu-cy",
"ia-cy",
"dje-cy",
"e-cy",
"lje-cy",
"nje-cy",
"tshe-cy",
"dzhe-cy",
"Omega-cy",
"omega-cy",
"yat-cy",
"Eiotified-cy",
"eiotified-cy",
"Yuslittle-cy",
"yuslittle-cy",
"Yuslittleiotified-cy",
"yuslittleiotified-cy",
"Yusbig-cy",
"yusbig-cy",
"Yusbigiotified-cy",
"yusbigiotified-cy",
"Ksi-cy",
"ksi-cy",
"Fita-cy",
"fita-cy",
"Izhitsa-cy",
"izhitsa-cy",
uni047A,
uni047B,
uni047C,
uni047D,
uni047E,
uni047F,
"Koppa-cy",
"koppa-cy",
"thousand-cy",
"titlocomb-cy",
"palatalizationcomb-cy",
"dasiapneumatacomb-cy",
"psilipneumatacomb-cy",
"hundredthousandssigncomb-cy",
"millionssigncomb-cy",
"Iishorttail-cy",
"iishorttail-cy",
"semisoftsign-cy",
"Ertick-cy",
"ertick-cy",
"Gheupturn-cy",
"gheupturn-cy",
"Ghemiddlehook-cy",
"ghemiddlehook-cy",
"Zhedescender-cy",
"zhedescender-cy",
"Kadescender-cy",
"kadescender-cy",
"Kaverticalstroke-cy",
"kaverticalstroke-cy",
"Kabashkir-cy",
"kabashkir-cy",
"Endescender-cy",
"endescender-cy",
"Enghe-cy",
"enghe-cy",
"Pemiddlehook-cy",
"pemiddlehook-cy",
"Haabkhasian-cy",
"haabkhasian-cy",
"Hadescender-cy",
"hadescender-cy",
"Tetse-cy",
"tetse-cy",
"Chedescender-cy",
"chedescender-cy",
"Cheverticalstroke-cy",
"cheverticalstroke-cy",
"Shha-cy",
"Cheabkhasian-cy",
"cheabkhasian-cy",
"Kahook-cy",
"kahook-cy",
"Eltail-cy",
"eltail-cy",
"Enhook-cy",
"enhook-cy",
"Entail-cy",
"entail-cy",
"Emtail-cy",
"emtail-cy",
"Schwa-cy",
"Dzeabkhasian-cy",
"dzeabkhasian-cy",
"Gestrokehook-cy",
"gestrokehook-cy",
"Hahook-cy",
"hahook-cy",
"Komide-cy",
"Komidje-cy",
"komidje-cy",
"Komizje-cy",
"komizje-cy",
"Komidzje-cy",
"komidzje-cy",
"Komilje-cy",
"komilje-cy",
"Kominje-cy",
"kominje-cy",
"Komisje-cy",
"komisje-cy",
"Komitje-cy",
"komitje-cy",
"Reversedze-cy",
"Elhook-cy",
"elhook-cy",
glyph00369,
enquad,
emquad,
enspace,
emspace,
threeperemspace,
fourperemspace,
sixperemspace,
figurespace,
punctuationspace,
thinspace,
thinspace.locl,
hairspace,
zerowidthspace,
hyphentwo,
nonbreakinghyphen,
endash,
emdash,
underscoredbl,
quoteleft,
quoteright,
quotesinglbase,
quotereversed,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
twodotenleader,
ellipsis,
hyphenationpoint,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
foursuperior,
nmod,
lira,
naira,
peseta,
rupee,
won,
sheqel,
euro,
peso,
rupeeIndian,
liraTurkish,
manat,
ruble,
careof,
literSign,
numero,
trademark,
estimated,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
partialdiff,
product,
summation,
minus,
radical,
infinity,
integral,
approxequal,
notequal,
lessequal,
greaterequal,
lozenge,
uniEE01,
uniEE02,
uniF6C3,
f_f,
fi,
fl,
f_f_i,
f_f_l,
longs_t,
s_t,
zeroWidthNoBreakSpace,
objectReplacementCharacter,
replacementCharacter,
two.dnom,
one.dnom,
zero.dnom,
nine.c2sc,
eight.c2sc,
seven.c2sc,
six.c2sc,
five.c2sc,
four.c2sc,
three.c2sc,
two.c2sc,
one.c2sc,
zero.c2sc,
Z.c2sc,
Y.c2sc,
X.c2sc,
W.c2sc,
V.c2sc,
U.c2sc,
T.c2sc,
S.c2sc,
R.c2sc,
Q.c2sc,
P.c2sc,
O.c2sc,
N.c2sc,
M.c2sc,
L.c2sc,
K.c2sc,
J.c2sc,
I.c2sc,
H.c2sc,
G.c2sc,
F.c2sc,
dollar.c2sc,
sterling.c2sc,
yen.c2sc,
Gamma.c2sc,
Delta.c2sc,
Theta.c2sc,
Lambda.c2sc,
Xi.c2sc,
Pi.c2sc,
Sigma.c2sc,
Phi.c2sc,
Psi.c2sc,
Ohm.c2sc,
"Dje-cy.c2sc",
"E-cy.c2sc",
"Lje-cy.c2sc",
"Nje-cy.c2sc",
"Tshe-cy.c2sc",
"Dzhe-cy.c2sc",
"Be-cy.c2sc",
"De-cy.c2sc",
"Zhe-cy.c2sc",
"Ze-cy.c2sc",
"Ii-cy.c2sc",
"Ka-cy.c2sc",
"El-cy.c2sc",
"U-cy.c2sc",
"Tse-cy.c2sc",
"Che-cy.c2sc",
"Sha-cy.c2sc",
"Shcha-cy.c2sc",
"Hardsign-cy.c2sc",
"Yeru-cy.c2sc",
"Softsign-cy.c2sc",
"Ereversed-cy.c2sc",
"Iu-cy.c2sc",
"Ia-cy.c2sc",
"Ghestroke-cy.c2sc",
"Zhedescender-cy.c2sc",
"Kadescender-cy.c2sc",
"Kaverticalstroke-cy.c2sc",
"Kabashkir-cy.c2sc",
"Haabkhasian-cy.c2sc",
"Ustraightstroke-cy.c2sc",
"Hadescender-cy.c2sc",
"Tetse-cy.c2sc",
"Cheverticalstroke-cy.c2sc",
"Shha-cy.c2sc",
"Cheabkhasian-cy.c2sc",
"Schwa-cy.c2sc",
"Dzeabkhasian-cy.c2sc",
"Obarred-cy.c2sc",
lira.c2sc,
euro.c2sc,
numero.c2sc,
ruble.c2sc,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
glyph00550,
glyph00551,
E.c2sc,
g.ss01,
alpha.ss02,
R.ss03,
K.ss04,
k.ss04,
K.ss05,
k.ss05,
D.c2sc,
C.c2sc,
B.c2sc,
A.c2sc,
glyph00564,
glyph00565,
glyph00566,
glyph00567,
glyph00568,
glyph00569,
glyph00570,
"Gheupturn-cy.c2sc",
glyph00572,
glyph00573,
zero.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
C.ss06,
G.ss06,
D.ss06,
O.ss06,
Q.ss06,
glyph00586,
glyph00587,
glyph00588,
glyph00589,
glyph00590,
glyph00591,
glyph00592,
glyph00593,
OE.c2sc,
glyph00595,
glyph00596,
three.onum,
five.onum,
four.onum,
two.onum,
seven.onum,
zero.onum,
six.onum,
nine.onum,
eight.onum,
one.onum,
j.ccmp0,
"je-cy.ccmp0",
i.ccmp0,
iogonek.ccmp0,
"i-cy.ccmp0",
germandbls.smcp,
glyph00613,
seven.pnum,
b.ss06,
c.ss06,
d.ss06,
g.ss06,
o.ss06,
p.ss06,
q.ss06,
e.ss07,
g.ss07,
one.pnum,
ampersand.c2sc,
Lslash.c2sc,
AE.c2sc,
Thorn.c2sc,
Oslash.c2sc,
Hbar.c2sc,
Eng.c2sc,
nbspace,
softhyphen,
Dcroat,
Eth,
hbar,
Tbar,
tbar,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
Aringacute,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
aringacute,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
ydieresis,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
Cdotaccent,
cdotaccent,
Ccaron,
ccaron,
Dcaron,
dcaron,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
Gdotaccent,
gdotaccent,
Gcommaaccent,
gcommaaccent,
Hcircumflex,
hcircumflex,
Itilde,
itilde,
Imacron,
imacron,
Ibreve,
ibreve,
Iogonek,
iogonek,
Idotaccent,
IJ,
ij,
Jcircumflex,
jcircumflex,
Kcommaaccent,
kcommaaccent,
Lacute,
lacute,
Lcommaaccent,
lcommaaccent,
Lcaron,
lcaron,
Ldot,
ldot,
Nacute,
nacute,
Ncommaaccent,
ncommaaccent,
Ncaron,
ncaron,
napostrophe,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
Racute,
racute,
Rcommaaccent,
rcommaaccent,
Rcaron,
rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
Scommaaccent,
scommaaccent,
Scaron,
scaron,
Tcommaaccent,
tcommaaccent,
Tcedilla,
tcedilla,
Tcaron,
tcaron,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
Ydieresis,
Zacute,
zacute,
Zdotaccent,
zdotaccent,
Zcaron,
zcaron,
AEacute,
aeacute,
Oslashacute,
oslashacute,
Dcroat.c2sc,
Eth.c2sc,
Tbar.c2sc,
Agrave.c2sc,
Aacute.c2sc,
Acircumflex.c2sc,
Atilde.c2sc,
Adieresis.c2sc,
Aring.c2sc,
Aringacute.c2sc,
Ccedilla.c2sc,
Egrave.c2sc,
Eacute.c2sc,
Ecircumflex.c2sc,
Edieresis.c2sc,
Igrave.c2sc,
Iacute.c2sc,
Icircumflex.c2sc,
Idieresis.c2sc,
Ntilde.c2sc,
Ograve.c2sc,
Oacute.c2sc,
Ocircumflex.c2sc,
Otilde.c2sc,
Odieresis.c2sc,
Ugrave.c2sc,
Uacute.c2sc,
Ucircumflex.c2sc,
Udieresis.c2sc,
Yacute.c2sc,
Amacron.c2sc,
Abreve.c2sc,
Aogonek.c2sc,
Cacute.c2sc,
Ccircumflex.c2sc,
Cdotaccent.c2sc,
Ccaron.c2sc,
Dcaron.c2sc,
Emacron.c2sc,
Ebreve.c2sc,
Edotaccent.c2sc,
Eogonek.c2sc,
Ecaron.c2sc,
Gcircumflex.c2sc,
Gbreve.c2sc,
Gdotaccent.c2sc,
Gcommaaccent.c2sc,
Hcircumflex.c2sc,
Itilde.c2sc,
Imacron.c2sc,
Ibreve.c2sc,
Iogonek.c2sc,
Idotaccent.c2sc,
Jcircumflex.c2sc,
Kcommaaccent.c2sc,
Lacute.c2sc,
Lcommaaccent.c2sc,
Lcaron.c2sc,
Ldot.c2sc,
Nacute.c2sc,
Ncommaaccent.c2sc,
Ncaron.c2sc,
Omacron.c2sc,
Obreve.c2sc,
Ohungarumlaut.c2sc,
Racute.c2sc,
Rcommaaccent.c2sc,
Rcaron.c2sc,
Sacute.c2sc,
Scircumflex.c2sc,
Scedilla.c2sc,
Scaron.c2sc,
Tcommaaccent.c2sc,
Tcaron.c2sc,
Tcedilla.c2sc,
Utilde.c2sc,
Umacron.c2sc,
Ubreve.c2sc,
Uring.c2sc,
Uhungarumlaut.c2sc,
Uogonek.c2sc,
Wcircumflex.c2sc,
Ycircumflex.c2sc,
Ydieresis.c2sc,
Zacute.c2sc,
Zdotaccent.c2sc,
Zcaron.c2sc,
Alphatonos,
Epsilontonos,
Etatonos,
Iotatonos,
Omicrontonos,
Upsilontonos,
Omegatonos,
iotadieresistonos,
Alpha,
Beta,
Epsilon,
Zeta,
Eta,
Iota,
Kappa,
Mu,
Nu,
Omicron,
Rho,
Tau,
Upsilon,
Chi,
Iotadieresis,
Upsilondieresis,
alphatonos,
epsilontonos,
etatonos,
iotatonos,
upsilondieresistonos,
kappa,
omicron,
mu,
nu,
chi,
iotadieresis,
upsilondieresis,
omicrontonos,
upsilontonos,
omegatonos,
"Io-cy",
"Gje-cy",
"Dze-cy",
"I-cy",
"Yi-cy",
"Je-cy",
"Ka-cy",
"Kje-cy",
"Ushort-cy",
"A-cy",
"Ve-cy",
"Ge-cy",
"Ie-cy",
"Iishort-cy",
"Em-cy",
"En-cy",
"O-cy",
"Pe-cy",
"Er-cy",
"Es-cy",
"Te-cy",
"Ha-cy",
"a-cy",
"ie-cy",
"iishort-cy",
"o-cy",
"er-cy",
"es-cy",
"u-cy",
"ha-cy",
"io-cy",
"gje-cy",
"dze-cy",
"i-cy",
"yi-cy",
"je-cy",
"kje-cy",
"ushort-cy",
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Ygrave,
ygrave,
minute,
second,
exclamdouble,
jcaron,
apostrophemod,
Macute,
macute,
Aringbelow,
aringbelow,
"Iegrave-cy",
"Iigrave-cy",
"iegrave-cy",
"iigrave-cy",
"Psi-cy",
"psi-cy",
"Izhitsadblgrave-cy",
"izhitsadblgrave-cy",
"uk-cy",
"Uk-cy",
"Zedescender-cy",
"zedescender-cy",
"Esdescender-cy",
"esdescender-cy",
"Ustraight-cy",
"ustraight-cy",
"Palochka-cy",
"Zhebreve-cy",
"zhebreve-cy",
"palochka-cy",
"Abreve-cy",
"abreve-cy",
"Adieresis-cy",
"adieresis-cy",
"Aie-cy",
"aie-cy",
"Iebreve-cy",
"iebreve-cy",
"Schwadieresis-cy",
"schwa-cy",
"schwadieresis-cy",
"Zhedieresis-cy",
"zhedieresis-cy",
"Zedieresis-cy",
"zedieresis-cy",
"Imacron-cy",
"imacron-cy",
"Idieresis-cy",
"idieresis-cy",
"Odieresis-cy",
"odieresis-cy",
"Obarred-cy",
"obarred-cy",
"Obarreddieresis-cy",
"obarreddieresis-cy",
"Edieresis-cy",
"edieresis-cy",
"Umacron-cy",
"umacron-cy",
"Udieresis-cy",
"udieresis-cy",
"Uhungarumlaut-cy",
"uhungarumlaut-cy",
"Chedieresis-cy",
"chedieresis-cy",
"Yerudieresis-cy",
"yerudieresis-cy",
"komide-cy",
Adotbelow,
adotbelow,
Ahookabove,
ahookabove,
Acircumflexacute,
acircumflexacute,
Acircumflexgrave,
acircumflexgrave,
Acircumflexhookabove,
acircumflexhookabove,
Acircumflextilde,
acircumflextilde,
Acircumflexdotbelow,
acircumflexdotbelow,
Abreveacute,
abreveacute,
Abrevegrave,
abrevegrave,
Abrevehookabove,
abrevehookabove,
Abrevetilde,
abrevetilde,
Abrevedotbelow,
abrevedotbelow,
Edotbelow,
edotbelow,
Ehookabove,
ehookabove,
Etilde,
etilde,
Ecircumflexacute,
ecircumflexacute,
Ecircumflexgrave,
ecircumflexgrave,
Ecircumflexhookabove,
ecircumflexhookabove,
Ecircumflextilde,
ecircumflextilde,
Ecircumflexdotbelow,
ecircumflexdotbelow,
Ihookabove,
ihookabove,
Idotbelow,
idotbelow,
Odotbelow,
odotbelow,
Ohookabove,
ohookabove,
Ocircumflexacute,
ocircumflexacute,
Ocircumflexgrave,
ocircumflexgrave,
Ocircumflexhookabove,
ocircumflexhookabove,
Ocircumflextilde,
ocircumflextilde,
Ocircumflexdotbelow,
ocircumflexdotbelow,
Ohornacute,
ohornacute,
Ohorngrave,
ohorngrave,
Ohornhookabove,
ohornhookabove,
Ohorntilde,
ohorntilde,
Ohorndotbelow,
ohorndotbelow,
Udotbelow,
udotbelow,
Uhookabove,
uhookabove,
Uhornacute,
uhornacute,
Uhorngrave,
uhorngrave,
Uhornhookabove,
uhornhookabove,
Uhorntilde,
uhorntilde,
Uhorndotbelow,
uhorndotbelow,
Ydotbelow,
ydotbelow,
Yhookabove,
yhookabove,
Ytilde,
ytilde,
dong,
"Tedescender-cy",
"tedescender-cy",
"Chekhakassian-cy",
"chekhakassian-cy",
"Gedescender-cy",
"gedescender-cy",
"Chedescenderabkhasian-cy",
"chedescenderabkhasian-cy",
"shha-cy",
"Semisoftsign-cy",
"Yat-cy",
"Ghestroke-cy",
"ghestroke-cy",
"Kastroke-cy",
"kastroke-cy",
"Ustraightstroke-cy",
"ustraightstroke-cy",
"Hastroke-cy",
"hastroke-cy",
"reversedze-cy",
franc,
horizontalbar,
two.pnum,
three.pnum,
four.pnum,
five.pnum,
six.pnum,
eight.pnum,
nine.pnum,
zero.pnum,
G_acutecomb.c2sc,
g_acutecomb,
N_gravecomb.c2sc,
n_gravecomb,
A_dblgravecomb.c2sc,
a_dblgravecomb,
E_dblgravecomb.c2sc,
e_dblgravecomb,
I_dblgravecomb.c2sc,
idotless_dblgravecomb,
O_dblgravecomb.c2sc,
o_dblgravecomb,
R_dblgravecomb.c2sc,
r_dblgravecomb,
U_dblgravecomb.c2sc,
u_dblgravecomb,
UpsilonhookSymbol_acutecomb,
B_dotbelowcomb.c2sc,
b_dotbelowcomb,
D_dotbelowcomb.c2sc,
d_dotbelowcomb,
D_uniF6C3.c2sc,
d_uniF6C3,
H_dotbelowcomb.c2sc,
h_dotbelowcomb,
K_acutecomb.c2sc,
k_acutecomb,
K_dotbelowcomb.c2sc,
k_dotbelowcomb,
L_dotbelowcomb.c2sc,
l_dotbelowcomb,
M_dotbelowcomb.c2sc,
m_dotbelowcomb,
N_dotbelowcomb.c2sc,
n_dotbelowcomb,
O_tildecomb_acutecomb.c2sc,
P_acutecomb.c2sc,
p_acutecomb,
R_dotbelowcomb.c2sc,
r_dotbelowcomb,
S_dotbelowcomb.c2sc,
s_dotbelowcomb,
T_dotbelowcomb.c2sc,
t_dotbelowcomb,
U_tildecomb_acutecomb.c2sc,
V_tildecomb.c2sc,
v_tildecomb,
V_dotbelowcomb.c2sc,
v_dotbelowcomb,
W_dotbelowcomb.c2sc,
w_dotbelowcomb,
Z_dotbelowcomb.c2sc,
z_dotbelowcomb,
Omicrondasiaoxia,
Alphatonos.c2sc,
Epsilontonos.c2sc,
Etatonos.c2sc,
Iotatonos.c2sc,
Omicrontonos.c2sc,
Upsilontonos.c2sc,
Omegatonos.c2sc,
Alpha.c2sc,
Beta.c2sc,
Epsilon.c2sc,
Zeta.c2sc,
Eta.c2sc,
Iota.c2sc,
Kappa.c2sc,
Mu.c2sc,
Nu.c2sc,
Omicron.c2sc,
Rho.c2sc,
Tau.c2sc,
Upsilon.c2sc,
Chi.c2sc,
Iotadieresis.c2sc,
Upsilondieresis.c2sc,
"Io-cy.c2sc",
"Gje-cy.c2sc",
"Dze-cy.c2sc",
"I-cy.c2sc",
"Yi-cy.c2sc",
"Je-cy.c2sc",
"Kje-cy.c2sc",
"Ushort-cy.c2sc",
"A-cy.c2sc",
"Ve-cy.c2sc",
"Ge-cy.c2sc",
"Ie-cy.c2sc",
"Iishort-cy.c2sc",
"Em-cy.c2sc",
"En-cy.c2sc",
"O-cy.c2sc",
"Pe-cy.c2sc",
"Er-cy.c2sc",
"Es-cy.c2sc",
"Te-cy.c2sc",
"Ha-cy.c2sc",
"Zedescender-cy.c2sc",
"Endescender-cy.c2sc",
"Esdescender-cy.c2sc",
"Ustraight-cy.c2sc",
"Chedescenderabkhasian-cy.c2sc",
"Imacron-cy.c2sc",
"Umacron-cy.c2sc",
"Ef-cy.c2sc",
IJ.c2sc,
AEacute.c2sc,
Oslashacute.c2sc,
Scommaaccent.c2sc,
Wgrave.c2sc,
Wacute.c2sc,
Wdieresis.c2sc,
Ygrave.c2sc,
Aogonek.locl,
aogonek.locl,
Eogonek.locl,
eogonek.locl,
glyph01291,
glyph01292,
idotbelow.ccmp0
);
},
{
name = copyright;
value = "Copyright Â© 2020 by fasil fikreab. All rights reserved.";
},
{
name = designer;
value = "fasil fikreab";
},
{
name = manufacturer;
value = mulat;
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
},
{
Name = Width;
Tag = wdth;
}
);
},
{
name = note;
value = "base on Roboto by google";
}
);
date = "2020-05-19 20:45:52 +0000";
designer = "fasil fikreab";
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
familyName = "Mulat Abay";
featurePrefixes = (
{
code = "lookup lookup_0 {\012sub i by i.ccmp0;\012sub j by j.ccmp0;\012sub iogonek by iogonek.ccmp0;\012sub i-cy by i-cy.ccmp5;\012sub je-cy by i-cy.ccmp5;\012sub idotbelow by idotbelow.ccmp5;\012} lookup_0;\012";
name = lookup_0;
},
{
code = "lookup lookup_1 {\012sub zero by zero.dnom;\012sub one by one.dnom;\012sub two by two.dnom;\012sub three by three.dnom;\012sub four by four.dnom;\012sub five by five.dnom;\012sub six by six.dnom;\012sub seven by seven.dnom;\012sub eight by eight.dnom;\012sub nine by nine.dnom;\012} lookup_1;\012";
name = lookup_1;
},
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012languagesystem latn ROM;\012languagesystem latn MOL;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature c2sc;\012feature dnom;\012feature frac;\012feature locl;\012feature numr;\012feature smcp;\012feature ss01;\012feature ss02;\012feature ss03;\012feature ss04;\012feature ss05;\012feature ss06;\012feature ss07;\012feature sups;\012feature ordn;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb dblgravecomb gravecomb hookabovecomb tildecomb];\012	@CombiningNonTopAccents = [dotbelowcomb];\012	sub [i j]' @CombiningTopAccents by [idotless jdotless];\012	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];\012} ccmp_Other_1;\012\012lookup ccmp_latn_1 {\012	sub fi by f i;\012	sub fl by f l;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "sub A by A.c2sc;\012sub B by B.c2sc;\012sub C by C.c2sc;\012sub D by D.c2sc;\012sub E by E.c2sc;\012sub F by F.c2sc;\012sub G by G.c2sc;\012sub H by H.c2sc;\012sub I by I.c2sc;\012sub J by J.c2sc;\012sub K by K.c2sc;\012sub L by L.c2sc;\012sub M by M.c2sc;\012sub N by N.c2sc;\012sub O by O.c2sc;\012sub P by P.c2sc;\012sub Q by Q.c2sc;\012sub R by R.c2sc;\012sub S by S.c2sc;\012sub T by T.c2sc;\012sub U by U.c2sc;\012sub V by V.c2sc;\012sub W by W.c2sc;\012sub X by X.c2sc;\012sub Y by Y.c2sc;\012sub Z by Z.c2sc;\012sub AE by AE.c2sc;\012sub Oslash by Oslash.c2sc;\012sub Thorn by Thorn.c2sc;\012sub Hbar by Hbar.c2sc;\012sub Lslash by Lslash.c2sc;\012sub Eng by Eng.c2sc;\012sub OE by OE.c2sc;\012sub Gamma by Gamma.c2sc;\012sub Delta by Delta.c2sc;\012sub Theta by Theta.c2sc;\012sub Lambda by Lambda.c2sc;\012sub Xi by Xi.c2sc;\012sub Pi by Pi.c2sc;\012sub Sigma by Sigma.c2sc;\012sub Phi by Phi.c2sc;\012sub Psi by Psi.c2sc;\012sub Dje-cy by dje-cy.smcp;\012sub E-cy by e-cy.smcp;\012sub Lje-cy by lje-cy.smcp;\012sub Nje-cy by nje-cy.smcp;\012sub Tshe-cy by tshe-cy.smcp;\012sub Dzhe-cy by dzhe-cy.smcp;\012sub Be-cy by be-cy.smcp;\012sub De-cy by de-cy.smcp;\012sub Zhe-cy by zhe-cy.smcp;\012sub Ze-cy by ze-cy.smcp;\012sub Ii-cy by ii-cy.smcp;\012sub El-cy by el-cy.smcp;\012sub U-cy by u-cy.smcp;\012sub Ef-cy by ef-cy.smcp;\012sub Tse-cy by tse-cy.smcp;\012sub Che-cy by che-cy.smcp;\012sub Sha-cy by sha-cy.smcp;\012sub Shcha-cy by shcha-cy.smcp;\012sub Hardsign-cy by hardsign-cy.smcp;\012sub Yeru-cy by yeru-cy.smcp;\012sub Softsign-cy by softsign-cy.smcp;\012sub Ereversed-cy by ereversed-cy.smcp;\012sub Zhedescender-cy by zhedescender-cy.smcp;\012sub Kadescender-cy by kadescender-cy.smcp;\012sub Kaverticalstroke-cy by kaverticalstroke-cy.smcp;\012sub Kabashkir-cy by kabashkir-cy.smcp;\012sub Endescender-cy by endescender-cy.smcp;\012sub Haabkhasian-cy by haabkhasian-cy.smcp;\012sub Hadescender-cy by hadescender-cy.smcp;\012sub Tetse-cy by tetse-cy.smcp;\012sub Cheverticalstroke-cy by cheverticalstroke-cy.smcp;\012sub Shha-cy by shha-cy.smcp;\012sub Cheabkhasian-cy by cheabkhasian-cy.smcp;\012sub Schwa-cy by schwa-cy.smcp;\012sub Dzeabkhasian-cy by dzeabkhasian-cy.smcp;\012sub Dcroat by dcroat.smcp;\012sub Eth by eth.smcp;\012sub Tbar by tbar.smcp;\012sub Agrave by agrave.smcp;\012sub Aacute by aacute.smcp;\012sub Acircumflex by acircumflex.smcp;\012sub Atilde by atilde.smcp;\012sub Adieresis by adieresis.smcp;\012sub Aring by aring.smcp;\012sub Aringacute by aringacute.smcp;\012sub Ccedilla by ccedilla.smcp;\012sub Egrave by egrave.smcp;\012sub Eacute by eacute.smcp;\012sub Ecircumflex by ecircumflex.smcp;\012sub Edieresis by edieresis.smcp;\012sub Igrave by igrave.smcp;\012sub Iacute by iacute.smcp;\012sub Icircumflex by icircumflex.smcp;\012sub Idieresis by idieresis.smcp;\012sub Ntilde by ntilde.smcp;\012sub Ograve by ograve.smcp;\012sub Oacute by oacute.smcp;\012sub Ocircumflex by ocircumflex.smcp;\012sub Otilde by otilde.smcp;\012sub Odieresis by odieresis.smcp;\012sub Ugrave by ugrave.smcp;\012sub Uacute by uacute.smcp;\012sub Ucircumflex by ucircumflex.smcp;\012sub Udieresis by udieresis.smcp;\012sub Yacute by yacute.smcp;\012sub Amacron by amacron.smcp;\012sub Abreve by abreve.smcp;\012sub Aogonek by aogonek.smcp;\012sub Cacute by cacute.smcp;\012sub Ccircumflex by ccircumflex.smcp;\012sub Cdotaccent by cdotaccent.smcp;\012sub Ccaron by ccaron.smcp;\012sub Dcaron by dcaron.smcp;\012sub Emacron by emacron.smcp;\012sub Ebreve by ebreve.smcp;\012sub Edotaccent by edotaccent.smcp;\012sub Eogonek by eogonek.smcp;\012sub Ecaron by ecaron.smcp;\012sub Gcircumflex by gcircumflex.smcp;\012sub Gbreve by gbreve.smcp;\012sub Gdotaccent by gdotaccent.smcp;\012sub Gcommaaccent by gcommaaccent.smcp;\012sub Hcircumflex by hcircumflex.smcp;\012sub Itilde by itilde.smcp;\012sub Imacron by imacron.smcp;\012sub Ibreve by ibreve.smcp;\012sub Iogonek by iogonek.smcp;\012sub Idotaccent by Idotaccent.c2sc;\012sub IJ by ij.smcp;\012sub Jcircumflex by jcircumflex.smcp;\012sub Kcommaaccent by kcommaaccent.smcp;\012sub Lacute by lacute.smcp;\012sub Lcommaaccent by lcommaaccent.smcp;\012sub Lcaron by lcaron.smcp;\012sub Ldot by ldot.smcp;\012sub Nacute by nacute.smcp;\012sub Ncommaaccent by ncommaaccent.smcp;\012sub Ncaron by ncaron.smcp;\012sub Omacron by omacron.smcp;\012sub Obreve by obreve.smcp;\012sub Ohungarumlaut by ohungarumlaut.smcp;\012sub Racute by racute.smcp;\012sub Rcommaaccent by rcommaaccent.smcp;\012sub Rcaron by rcaron.smcp;\012sub Sacute by sacute.smcp;\012sub Scircumflex by scircumflex.smcp;\012sub Scedilla by scedilla.smcp;\012sub Scommaaccent by scommaaccent.smcp;\012sub Scaron by scaron.smcp;\012sub Tcommaaccent by tcommaaccent.smcp;\012sub Tcedilla by tcedilla.smcp;\012sub Tcaron by tcaron.smcp;\012sub Utilde by utilde.smcp;\012sub Umacron by umacron.smcp;\012sub Ubreve by ubreve.smcp;\012sub Uring by uring.smcp;\012sub Uhungarumlaut by uhungarumlaut.smcp;\012sub Uogonek by uogonek.smcp;\012sub Wcircumflex by wcircumflex.smcp;\012sub Ycircumflex by ycircumflex.smcp;\012sub Ydieresis by ydieresis.smcp;\012sub Zacute by zacute.smcp;\012sub Zdotaccent by zdotaccent.smcp;\012sub Zcaron by zcaron.smcp;\012sub AEacute by aeacute.smcp;\012sub Oslashacute by oslashacute.smcp;\012sub Alphatonos by alphatonos.smcp;\012sub Epsilontonos by epsilontonos.smcp;\012sub Etatonos by etatonos.smcp;\012sub Iotatonos by iotatonos.smcp;\012sub Omicrontonos by omicrontonos.smcp;\012sub Upsilontonos by upsilontonos.smcp;\012sub Omegatonos by omegatonos.smcp;\012sub Alpha by alpha.smcp;\012sub Beta by beta.smcp;\012sub Epsilon by epsilon.smcp;\012sub Zeta by zeta.smcp;\012sub Eta by eta.smcp;\012sub Iota by iota.smcp;\012sub Kappa by kappa.smcp;\012sub Mu by mu.smcp;\012sub Nu by nu.smcp;\012sub Omicron by omicron.smcp;\012sub Rho by rho.smcp;\012sub Tau by tau.smcp;\012sub Upsilon by upsilon.smcp;\012sub Chi by chi.smcp;\012sub Iotadieresis by iotadieresis.smcp;\012sub Upsilondieresis by upsilondieresis.smcp;\012sub Io-cy by io-cy.smcp;\012sub Gje-cy by gje-cy.smcp;\012sub Dze-cy by dze-cy.smcp;\012sub I-cy by i-cy.smcp;\012sub Yi-cy by yi-cy.smcp;\012sub Je-cy by je-cy.smcp;\012sub Ka-cy by ka-cy.smcp;\012sub Kje-cy by kje-cy.smcp;\012sub Ushort-cy by ushort-cy.smcp;\012sub A-cy by a-cy.smcp;\012sub Ve-cy by ve-cy.smcp;\012sub Ge-cy by ge-cy.smcp;\012sub Ie-cy by ie-cy.smcp;\012sub Iishort-cy by iishort-cy.smcp;\012sub Em-cy by em-cy.smcp;\012sub En-cy by en-cy.smcp;\012sub O-cy by o-cy.smcp;\012sub Pe-cy by pe-cy.smcp;\012sub Er-cy by er-cy.smcp;\012sub Es-cy by es-cy.smcp;\012sub Te-cy by te-cy.smcp;\012sub Ha-cy by ha-cy.smcp;\012sub Wgrave by wgrave.smcp;\012sub Wacute by wacute.smcp;\012sub Wdieresis by wdieresis.smcp;\012sub Ygrave by ygrave.smcp;\012sub Zedescender-cy by zedescender-cy.smcp;\012sub Esdescender-cy by esdescender-cy.smcp;\012sub Ustraight-cy by ustraight-cy.smcp;\012sub Imacron-cy by imacron-cy.smcp;\012sub Obarred-cy by obarred-cy.smcp;\012sub Umacron-cy by umacron-cy.smcp;\012sub Chedescenderabkhasian-cy by chedescenderabkhasian-cy.smcp;\012sub Ustraightstroke-cy by ustraightstroke-cy.smcp;\012sub Geupturn-cy by geupturn-cy.smcp;\012sub Gestroke-cy by gestroke-cy.smcp;\012sub Yu-cy by yu-cy.smcp;\012sub Ya-cy by ya-cy.smcp;\012sub Omega by omega.smcp;\012sub nine by nine.c2sc;\012sub eight by eight.c2sc;\012sub seven by seven.c2sc;\012sub six by six.c2sc;\012sub five by five.c2sc;\012sub four by four.c2sc;\012sub three by three.c2sc;\012sub two by two.c2sc;\012sub one by one.c2sc;\012sub zero by zero.c2sc;\012sub dollar by dollar.c2sc;\012sub sterling by sterling.c2sc;\012sub yen by yen.c2sc;\012sub Ohm by Ohm.c2sc;\012sub lira by lira.c2sc;\012sub euro by euro.c2sc;\012sub numero by numero.c2sc;\012sub ruble by ruble.c2sc;\012sub ampersand by ampersand.c2sc;\012";
name = c2sc;
},
{
code = "sub f f by f_f;\012sub s t by s_t;\012sub longs t by longs_t;\012";
name = dlig;
},
{
code = "sub zero by zero.dnom;\012sub one by one.dnom;\012sub two by two.dnom;\012sub three by three.dnom;\012sub four by four.dnom;\012sub five by five.dnom;\012sub six by six.dnom;\012sub seven by seven.dnom;\012sub eight by eight.dnom;\012sub nine by nine.dnom;\012";
name = dnom;
},
{
code = "lookup frac0 {\012	sub slash by fraction;\012} frac0;\012lookup frac1 {\012	sub [fraction two.dnom one.dnom zero.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero one two three four five six seven eight nine]' lookup lookup_1 ;\012} frac1;\012lookup frac2 {\012	sub zero by zero.numr;\012	sub one by onesuperior;\012	sub two by twosuperior;\012	sub three by threesuperior;\012	sub four by four.numr;\012	sub five by five.numr;\012	sub six by six.numr;\012	sub seven by seven.numr;\012	sub eight by eight.numr;\012	sub nine by nine.numr;\012} frac2;\012";
name = frac;
},
{
automatic = 1;
code = "lookup locl_latn_0 {\012	script latn;\012	language ROM;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012	language MOL;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012} locl_latn_0;\012\012lookup locl_latn_1 {\012	script latn;\012	language CAT;\012	sub  l' periodcentered' l by ldot;\012	sub  L' periodcentered' L by Ldot;\012} locl_latn_1;\012";
name = locl;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f f by f_f;\012sub ra-ethiopic ga-ethiopic by ra_ga-ethiopic.liga;\012sub ra-ethiopic gaa-ethiopic by ra_gaa-ethiopic.liga;\012sub ra-ethiopic ge-ethiopic by ra_ge-ethiopic.liga;\012sub ra-ethiopic gee-ethiopic by ra_gee-ethiopic.liga;\012sub ra-ethiopic gga-ethiopic by ra_gga-ethiopic.liga;\012sub ra-ethiopic ggaa-ethiopic by ra_ggaa-ethiopic.liga;\012sub ra-ethiopic gge-ethiopic by ra_gge-ethiopic.liga;\012sub ra-ethiopic ggee-ethiopic by ra_ggee-ethiopic.liga;\012sub ra-ethiopic ggi-ethiopic by ra_ggi-ethiopic.liga;\012sub ra-ethiopic ggo-ethiopic by ra_ggo-ethiopic.liga;\012sub ra-ethiopic ggu-ethiopic by ra_ggu-ethiopic.liga;\012sub ra-ethiopic ggwaa-ethiopic by ra_ggwaa-ethiopic.liga;\012sub ra-ethiopic gi-ethiopic by ra_gi-ethiopic.liga;\012sub ra-ethiopic go-ethiopic by ra_go-ethiopic.liga;\012sub ra-ethiopic gu-ethiopic by ra_gu-ethiopic.liga;\012sub ra-ethiopic gwaa-ethiopic by ra_gwaa-ethiopic.liga;\012sub ra-ethiopic na-ethiopic by ra_na-ethiopic.liga;\012sub ra-ethiopic ne-ethiopic by ra_ne-ethiopic.liga;\012sub ra-ethiopic nee-ethiopic by ra_nee-ethiopic.liga;\012sub ra-ethiopic ni-ethiopic by ra_ni-ethiopic.liga;\012sub ra-ethiopic nu-ethiopic by ra_nu-ethiopic.liga;\012sub ra-ethiopic nya-ethiopic by ra_nya-ethiopic.liga;\012sub ra-ethiopic nyee-ethiopic by ra_nyee-ethiopic.liga;\012sub ra-ethiopic nyi-ethiopic by ra_nyi-ethiopic.liga;\012sub ra-ethiopic nyu-ethiopic by ra_nyu-ethiopic.liga;\012sub ra-ethiopic xa-ethiopic by ra_xa-ethiopic.liga;\012sub ra-ethiopic xe-ethiopic by ra_xe-ethiopic.liga;\012sub ra-ethiopic xee-ethiopic by ra_xee-ethiopic.liga;\012sub ra-ethiopic xi-ethiopic by ra_xi-ethiopic.liga;\012sub ra-ethiopic xu-ethiopic by ra_xu-ethiopic.liga;\012sub ra-ethiopic xwaa-ethiopic by ra_xwaa-ethiopic.liga;\012sub raa-ethiopic ga-ethiopic by raa_ga-ethiopic.liga;\012sub raa-ethiopic gaa-ethiopic by raa_gaa-ethiopic.liga;\012sub raa-ethiopic ge-ethiopic by raa_ge-ethiopic.liga;\012sub raa-ethiopic gee-ethiopic by raa_gee-ethiopic.liga;\012sub raa-ethiopic gga-ethiopic by raa_gga-ethiopic.liga;\012sub raa-ethiopic ggaa-ethiopic by raa_ggaa-ethiopic.liga;\012sub raa-ethiopic gge-ethiopic by raa_gge-ethiopic.liga;\012sub raa-ethiopic ggee-ethiopic by raa_ggee-ethiopic.liga;\012sub raa-ethiopic ggi-ethiopic by raa_ggi-ethiopic.liga;\012sub raa-ethiopic ggo-ethiopic by raa_ggo-ethiopic.liga;\012sub raa-ethiopic ggu-ethiopic by raa_ggu-ethiopic.liga;\012sub raa-ethiopic ggwaa-ethiopic by raa_ggwaa-ethiopic.liga;\012sub raa-ethiopic gi-ethiopic by raa_gi-ethiopic.liga;\012sub raa-ethiopic go-ethiopic by raa_go-ethiopic.liga;\012sub raa-ethiopic gu-ethiopic by raa_gu-ethiopic.liga;\012sub raa-ethiopic gwaa-ethiopic by raa_gwaa-ethiopic.liga;\012sub raa-ethiopic na-ethiopic by raa_na-ethiopic.liga;\012sub raa-ethiopic ne-ethiopic by raa_ne-ethiopic.liga;\012sub raa-ethiopic nee-ethiopic by raa_nee-ethiopic.liga;\012sub raa-ethiopic ni-ethiopic by raa_ni-ethiopic.liga;\012sub raa-ethiopic nu-ethiopic by raa_nu-ethiopic.liga;\012sub raa-ethiopic nya-ethiopic by raa_nya-ethiopic.liga;\012sub raa-ethiopic nyee-ethiopic by raa_nyee-ethiopic.liga;\012sub raa-ethiopic nyi-ethiopic by raa_nyi-ethiopic.liga;\012sub raa-ethiopic nyu-ethiopic by raa_nyu-ethiopic.liga;\012sub raa-ethiopic xa-ethiopic by raa_xa-ethiopic.liga;\012sub raa-ethiopic xe-ethiopic by raa_xe-ethiopic.liga;\012sub raa-ethiopic xee-ethiopic by raa_xee-ethiopic.liga;\012sub raa-ethiopic xi-ethiopic by raa_xi-ethiopic.liga;\012sub raa-ethiopic xu-ethiopic by raa_xu-ethiopic.liga;\012sub raa-ethiopic xwaa-ethiopic by raa_xwaa-ethiopic.liga;\012sub ree-ethiopic ga-ethiopic by ree_ga-ethiopic.liga;\012sub ree-ethiopic gaa-ethiopic by ree_gaa-ethiopic.liga;\012sub ree-ethiopic ge-ethiopic by ree_ge-ethiopic.liga;\012sub ree-ethiopic gee-ethiopic by ree_gee-ethiopic.liga;\012sub ree-ethiopic gga-ethiopic by ree_gga-ethiopic.liga;\012sub ree-ethiopic ggaa-ethiopic by ree_ggaa-ethiopic.liga;\012sub ree-ethiopic gge-ethiopic by ree_gge-ethiopic.liga;\012sub ree-ethiopic ggee-ethiopic by ree_ggee-ethiopic.liga;\012sub ree-ethiopic ggi-ethiopic by ree_ggi-ethiopic.liga;\012sub ree-ethiopic ggo-ethiopic by ree_ggo-ethiopic.liga;\012sub ree-ethiopic ggu-ethiopic by ree_ggu-ethiopic.liga;\012sub ree-ethiopic ggwaa-ethiopic by ree_ggwaa-ethiopic.liga;\012sub ree-ethiopic gi-ethiopic by ree_gi-ethiopic.liga;\012sub ree-ethiopic go-ethiopic by ree_go-ethiopic.liga;\012sub ree-ethiopic gu-ethiopic by ree_gu-ethiopic.liga;\012sub ree-ethiopic gwaa-ethiopic by ree_gwaa-ethiopic.liga;\012sub ree-ethiopic na-ethiopic by ree_na-ethiopic.liga;\012sub ree-ethiopic ne-ethiopic by ree_ne-ethiopic.liga;\012sub ree-ethiopic nee-ethiopic by ree_nee-ethiopic.liga;\012sub ree-ethiopic ni-ethiopic by ree_ni-ethiopic.liga;\012sub ree-ethiopic nu-ethiopic by ree_nu-ethiopic.liga;\012sub ree-ethiopic nya-ethiopic by ree_nya-ethiopic.liga;\012sub ree-ethiopic nyee-ethiopic by ree_nyee-ethiopic.liga;\012sub ree-ethiopic nyi-ethiopic by ree_nyi-ethiopic.liga;\012sub ree-ethiopic nyu-ethiopic by ree_nyu-ethiopic.liga;\012sub ree-ethiopic xa-ethiopic by ree_xa-ethiopic.liga;\012sub ree-ethiopic xe-ethiopic by ree_xe-ethiopic.liga;\012sub ree-ethiopic xee-ethiopic by ree_xee-ethiopic.liga;\012sub ree-ethiopic xi-ethiopic by ree_xi-ethiopic.liga;\012sub ree-ethiopic xu-ethiopic by ree_xu-ethiopic.liga;\012sub ree-ethiopic xwaa-ethiopic by ree_xwaa-ethiopic.liga;\012sub ri-ethiopic ga-ethiopic by ri_ga-ethiopic.liga;\012sub ri-ethiopic gaa-ethiopic by ri_gaa-ethiopic.liga;\012sub ri-ethiopic ge-ethiopic by ri_ge-ethiopic.liga;\012sub ri-ethiopic gee-ethiopic by ri_gee-ethiopic.liga;\012sub ri-ethiopic gga-ethiopic by ri_gga-ethiopic.liga;\012sub ri-ethiopic ggaa-ethiopic by ri_ggaa-ethiopic.liga;\012sub ri-ethiopic gge-ethiopic by ri_gge-ethiopic.liga;\012sub ri-ethiopic ggee-ethiopic by ri_ggee-ethiopic.liga;\012sub ri-ethiopic ggi-ethiopic by ri_ggi-ethiopic.liga;\012sub ri-ethiopic ggo-ethiopic by ri_ggo-ethiopic.liga;\012sub ri-ethiopic ggu-ethiopic by ri_ggu-ethiopic.liga;\012sub ri-ethiopic ggwaa-ethiopic by ri_ggwaa-ethiopic.liga;\012sub ri-ethiopic gi-ethiopic by ri_gi-ethiopic.liga;\012sub ri-ethiopic go-ethiopic by ri_go-ethiopic.liga;\012sub ri-ethiopic gu-ethiopic by ri_gu-ethiopic.liga;\012sub ri-ethiopic gwaa-ethiopic by ri_gwaa-ethiopic.liga;\012sub ri-ethiopic na-ethiopic by ri_na-ethiopic.liga;\012sub ri-ethiopic ne-ethiopic by ri_ne-ethiopic.liga;\012sub ri-ethiopic nee-ethiopic by ri_nee-ethiopic.liga;\012sub ri-ethiopic ni-ethiopic by ri_ni-ethiopic.liga;\012sub ri-ethiopic nu-ethiopic by ri_nu-ethiopic.liga;\012sub ri-ethiopic nya-ethiopic by ri_nya-ethiopic.liga;\012sub ri-ethiopic nyee-ethiopic by ri_nyee-ethiopic.liga;\012sub ri-ethiopic nyi-ethiopic by ri_nyi-ethiopic.liga;\012sub ri-ethiopic nyu-ethiopic by ri_nyu-ethiopic.liga;\012sub ri-ethiopic xa-ethiopic by ri_xa-ethiopic.liga;\012sub ri-ethiopic xe-ethiopic by ri_xe-ethiopic.liga;\012sub ri-ethiopic xee-ethiopic by ri_xee-ethiopic.liga;\012sub ri-ethiopic xi-ethiopic by ri_xi-ethiopic.liga;\012sub ri-ethiopic xu-ethiopic by ri_xu-ethiopic.liga;\012sub ri-ethiopic xwaa-ethiopic by ri_xwaa-ethiopic.liga;\012sub ru-ethiopic ga-ethiopic by ru_ga-ethiopic.liga;\012sub ru-ethiopic gaa-ethiopic by ru_gaa-ethiopic.liga;\012sub ru-ethiopic ge-ethiopic by ru_ge-ethiopic.liga;\012sub ru-ethiopic gee-ethiopic by ru_gee-ethiopic.liga;\012sub ru-ethiopic gga-ethiopic by ru_gga-ethiopic.liga;\012sub ru-ethiopic ggaa-ethiopic by ru_ggaa-ethiopic.liga;\012sub ru-ethiopic gge-ethiopic by ru_gge-ethiopic.liga;\012sub ru-ethiopic ggee-ethiopic by ru_ggee-ethiopic.liga;\012sub ru-ethiopic ggi-ethiopic by ru_ggi-ethiopic.liga;\012sub ru-ethiopic ggo-ethiopic by ru_ggo-ethiopic.liga;\012sub ru-ethiopic ggu-ethiopic by ru_ggu-ethiopic.liga;\012sub ru-ethiopic ggwaa-ethiopic by ru_ggwaa-ethiopic.liga;\012sub ru-ethiopic gi-ethiopic by ru_gi-ethiopic.liga;\012sub ru-ethiopic go-ethiopic by ru_go-ethiopic.liga;\012sub ru-ethiopic gu-ethiopic by ru_gu-ethiopic.liga;\012sub ru-ethiopic gwaa-ethiopic by ru_gwaa-ethiopic.liga;\012sub ru-ethiopic na-ethiopic by ru_na-ethiopic.liga;\012sub ru-ethiopic ne-ethiopic by ru_ne-ethiopic.liga;\012sub ru-ethiopic nee-ethiopic by ru_nee-ethiopic.liga;\012sub ru-ethiopic ni-ethiopic by ru_ni-ethiopic.liga;\012sub ru-ethiopic nu-ethiopic by ru_nu-ethiopic.liga;\012sub ru-ethiopic nya-ethiopic by ru_nya-ethiopic.liga;\012sub ru-ethiopic nyee-ethiopic by ru_nyee-ethiopic.liga;\012sub ru-ethiopic nyi-ethiopic by ru_nyi-ethiopic.liga;\012sub ru-ethiopic nyu-ethiopic by ru_nyu-ethiopic.liga;\012sub ru-ethiopic xa-ethiopic by ru_xa-ethiopic.liga;\012sub ru-ethiopic xe-ethiopic by ru_xe-ethiopic.liga;\012sub ru-ethiopic xee-ethiopic by ru_xee-ethiopic.liga;\012sub ru-ethiopic xi-ethiopic by ru_xi-ethiopic.liga;\012sub ru-ethiopic xu-ethiopic by ru_xu-ethiopic.liga;\012sub ru-ethiopic xwaa-ethiopic by ru_xwaa-ethiopic.liga;\012sub rwa-ethiopic ga-ethiopic by rwa_ga-ethiopic.liga;\012sub rwa-ethiopic gaa-ethiopic by rwa_gaa-ethiopic.liga;\012sub rwa-ethiopic ge-ethiopic by rwa_ge-ethiopic.liga;\012sub rwa-ethiopic gee-ethiopic by rwa_gee-ethiopic.liga;\012sub rwa-ethiopic gga-ethiopic by rwa_gga-ethiopic.liga;\012sub rwa-ethiopic ggaa-ethiopic by rwa_ggaa-ethiopic.liga;\012sub rwa-ethiopic gge-ethiopic by rwa_gge-ethiopic.liga;\012sub rwa-ethiopic ggee-ethiopic by rwa_ggee-ethiopic.liga;\012sub rwa-ethiopic ggi-ethiopic by rwa_ggi-ethiopic.liga;\012sub rwa-ethiopic ggo-ethiopic by rwa_ggo-ethiopic.liga;\012sub rwa-ethiopic ggu-ethiopic by rwa_ggu-ethiopic.liga;\012sub rwa-ethiopic ggwaa-ethiopic by rwa_ggwaa-ethiopic.liga;\012sub rwa-ethiopic gi-ethiopic by rwa_gi-ethiopic.liga;\012sub rwa-ethiopic go-ethiopic by rwa_go-ethiopic.liga;\012sub rwa-ethiopic gu-ethiopic by rwa_gu-ethiopic.liga;\012sub rwa-ethiopic gwaa-ethiopic by rwa_gwaa-ethiopic.liga;\012sub rwa-ethiopic na-ethiopic by rwa_na-ethiopic.liga;\012sub rwa-ethiopic ne-ethiopic by rwa_ne-ethiopic.liga;\012sub rwa-ethiopic nee-ethiopic by rwa_nee-ethiopic.liga;\012sub rwa-ethiopic ni-ethiopic by rwa_ni-ethiopic.liga;\012sub rwa-ethiopic nu-ethiopic by rwa_nu-ethiopic.liga;\012sub rwa-ethiopic nya-ethiopic by rwa_nya-ethiopic.liga;\012sub rwa-ethiopic nyee-ethiopic by rwa_nyee-ethiopic.liga;\012sub rwa-ethiopic nyi-ethiopic by rwa_nyi-ethiopic.liga;\012sub rwa-ethiopic nyu-ethiopic by rwa_nyu-ethiopic.liga;\012sub rwa-ethiopic xa-ethiopic by rwa_xa-ethiopic.liga;\012sub rwa-ethiopic xe-ethiopic by rwa_xe-ethiopic.liga;\012sub rwa-ethiopic xee-ethiopic by rwa_xee-ethiopic.liga;\012sub rwa-ethiopic xi-ethiopic by rwa_xi-ethiopic.liga;\012sub rwa-ethiopic xu-ethiopic by rwa_xu-ethiopic.liga;\012sub rwa-ethiopic xwaa-ethiopic by rwa_xwaa-ethiopic.liga;\012sub f i by fi;\012sub f l by fl;\012";
name = liga;
},
{
code = "sub zero by zero.numr;\012sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by four.numr;\012sub five by five.numr;\012sub six by six.numr;\012sub seven by seven.numr;\012sub eight by eight.numr;\012sub nine by nine.numr;\012";
name = numr;
},
{
automatic = 1;
code = "sub a by a.smcp;\012sub b by b.smcp;\012sub c by c.smcp;\012sub d by d.smcp;\012sub e by e.smcp;\012sub f by f.smcp;\012sub g by g.smcp;\012sub h by h.smcp;\012sub j by j.smcp;\012sub k by k.smcp;\012sub l by l.smcp;\012sub m by m.smcp;\012sub n by n.smcp;\012sub o by o.smcp;\012sub p by p.smcp;\012sub q by q.smcp;\012sub r by r.smcp;\012sub s by s.smcp;\012sub t by t.smcp;\012sub u by u.smcp;\012sub v by v.smcp;\012sub w by w.smcp;\012sub x by x.smcp;\012sub y by y.smcp;\012sub z by z.smcp;\012sub germandbls by germandbls.smcp;\012sub ae by ae.smcp;\012sub eth by eth.smcp;\012sub oslash by oslash.smcp;\012sub thorn by thorn.smcp;\012sub dcroat by dcroat.smcp;\012sub idotless by idotless.smcp;\012sub lslash by lslash.smcp;\012sub eng by eng.smcp;\012sub oe by oe.smcp;\012sub jdotless by j.smcp;\012sub alpha by alpha.smcp;\012sub beta by beta.smcp;\012sub gamma by gamma.smcp;\012sub delta by delta.smcp;\012sub epsilon by epsilon.smcp;\012sub zeta by zeta.smcp;\012sub eta by eta.smcp;\012sub theta by theta.smcp;\012sub iota by iota.smcp;\012sub lambda by lambda.smcp;\012sub xi by xi.smcp;\012sub pi by pi.smcp;\012sub rho by rho.smcp;\012sub sigma by sigma.smcp;\012sub tau by tau.smcp;\012sub upsilon by upsilon.smcp;\012sub phi by phi.smcp;\012sub psi by psi.smcp;\012sub omega by omega.smcp;\012sub be-cy by be-cy.smcp;\012sub ve-cy by ve-cy.smcp;\012sub ge-cy by ge-cy.smcp;\012sub de-cy by de-cy.smcp;\012sub zhe-cy by zhe-cy.smcp;\012sub ze-cy by ze-cy.smcp;\012sub ii-cy by ii-cy.smcp;\012sub ka-cy by ka-cy.smcp;\012sub el-cy by el-cy.smcp;\012sub em-cy by em-cy.smcp;\012sub en-cy by en-cy.smcp;\012sub pe-cy by pe-cy.smcp;\012sub te-cy by te-cy.smcp;\012sub ef-cy by ef-cy.smcp;\012sub tse-cy by tse-cy.smcp;\012sub che-cy by che-cy.smcp;\012sub sha-cy by sha-cy.smcp;\012sub shcha-cy by shcha-cy.smcp;\012sub hardsign-cy by hardsign-cy.smcp;\012sub yeru-cy by yeru-cy.smcp;\012sub softsign-cy by softsign-cy.smcp;\012sub ereversed-cy by ereversed-cy.smcp;\012sub dje-cy by dje-cy.smcp;\012sub e-cy by e-cy.smcp;\012sub lje-cy by lje-cy.smcp;\012sub nje-cy by nje-cy.smcp;\012sub tshe-cy by tshe-cy.smcp;\012sub dzhe-cy by dzhe-cy.smcp;\012sub zhedescender-cy by zhedescender-cy.smcp;\012sub kadescender-cy by kadescender-cy.smcp;\012sub kaverticalstroke-cy by kaverticalstroke-cy.smcp;\012sub kabashkir-cy by kabashkir-cy.smcp;\012sub endescender-cy by endescender-cy.smcp;\012sub haabkhasian-cy by haabkhasian-cy.smcp;\012sub hadescender-cy by hadescender-cy.smcp;\012sub tetse-cy by tetse-cy.smcp;\012sub cheverticalstroke-cy by cheverticalstroke-cy.smcp;\012sub cheabkhasian-cy by cheabkhasian-cy.smcp;\012sub dzeabkhasian-cy by dzeabkhasian-cy.smcp;\012sub hbar by hbar.smcp;\012sub tbar by tbar.smcp;\012sub agrave by agrave.smcp;\012sub aacute by aacute.smcp;\012sub acircumflex by acircumflex.smcp;\012sub atilde by atilde.smcp;\012sub adieresis by adieresis.smcp;\012sub aring by aring.smcp;\012sub aringacute by aringacute.smcp;\012sub ccedilla by ccedilla.smcp;\012sub egrave by egrave.smcp;\012sub eacute by eacute.smcp;\012sub ecircumflex by ecircumflex.smcp;\012sub edieresis by edieresis.smcp;\012sub igrave by igrave.smcp;\012sub iacute by iacute.smcp;\012sub icircumflex by icircumflex.smcp;\012sub idieresis by idieresis.smcp;\012sub ntilde by ntilde.smcp;\012sub ograve by ograve.smcp;\012sub oacute by oacute.smcp;\012sub ocircumflex by ocircumflex.smcp;\012sub otilde by otilde.smcp;\012sub odieresis by odieresis.smcp;\012sub ugrave by ugrave.smcp;\012sub uacute by uacute.smcp;\012sub ucircumflex by ucircumflex.smcp;\012sub udieresis by udieresis.smcp;\012sub yacute by yacute.smcp;\012sub ydieresis by ydieresis.smcp;\012sub amacron by amacron.smcp;\012sub abreve by abreve.smcp;\012sub aogonek by aogonek.smcp;\012sub cacute by cacute.smcp;\012sub ccircumflex by ccircumflex.smcp;\012sub cdotaccent by cdotaccent.smcp;\012sub ccaron by ccaron.smcp;\012sub dcaron by dcaron.smcp;\012sub emacron by emacron.smcp;\012sub ebreve by ebreve.smcp;\012sub edotaccent by edotaccent.smcp;\012sub eogonek by eogonek.smcp;\012sub ecaron by ecaron.smcp;\012sub gcircumflex by gcircumflex.smcp;\012sub gbreve by gbreve.smcp;\012sub gdotaccent by gdotaccent.smcp;\012sub gcommaaccent by gcommaaccent.smcp;\012sub hcircumflex by hcircumflex.smcp;\012sub itilde by itilde.smcp;\012sub imacron by imacron.smcp;\012sub ibreve by ibreve.smcp;\012sub iogonek by iogonek.smcp;\012sub ij by ij.smcp;\012sub jcircumflex by jcircumflex.smcp;\012sub kcommaaccent by kcommaaccent.smcp;\012sub lacute by lacute.smcp;\012sub lcommaaccent by lcommaaccent.smcp;\012sub lcaron by lcaron.smcp;\012sub ldot by ldot.smcp;\012sub nacute by nacute.smcp;\012sub ncommaaccent by ncommaaccent.smcp;\012sub ncaron by ncaron.smcp;\012sub omacron by omacron.smcp;\012sub obreve by obreve.smcp;\012sub ohungarumlaut by ohungarumlaut.smcp;\012sub racute by racute.smcp;\012sub rcommaaccent by rcommaaccent.smcp;\012sub rcaron by rcaron.smcp;\012sub sacute by sacute.smcp;\012sub scircumflex by scircumflex.smcp;\012sub scedilla by scedilla.smcp;\012sub scommaaccent by scommaaccent.smcp;\012sub scaron by scaron.smcp;\012sub tcommaaccent by tcommaaccent.smcp;\012sub tcedilla by tcedilla.smcp;\012sub tcaron by tcaron.smcp;\012sub utilde by utilde.smcp;\012sub umacron by umacron.smcp;\012sub ubreve by ubreve.smcp;\012sub uring by uring.smcp;\012sub uhungarumlaut by uhungarumlaut.smcp;\012sub uogonek by uogonek.smcp;\012sub wcircumflex by wcircumflex.smcp;\012sub ycircumflex by ycircumflex.smcp;\012sub zacute by zacute.smcp;\012sub zdotaccent by zdotaccent.smcp;\012sub zcaron by zcaron.smcp;\012sub aeacute by aeacute.smcp;\012sub oslashacute by oslashacute.smcp;\012sub alphatonos by alphatonos.smcp;\012sub epsilontonos by epsilontonos.smcp;\012sub etatonos by etatonos.smcp;\012sub iotatonos by iotatonos.smcp;\012sub kappa by kappa.smcp;\012sub omicron by omicron.smcp;\012sub mu by mu.smcp;\012sub nu by nu.smcp;\012sub chi by chi.smcp;\012sub iotadieresis by iotadieresis.smcp;\012sub upsilondieresis by upsilondieresis.smcp;\012sub omicrontonos by omicrontonos.smcp;\012sub upsilontonos by upsilontonos.smcp;\012sub omegatonos by omegatonos.smcp;\012sub a-cy by a-cy.smcp;\012sub ie-cy by ie-cy.smcp;\012sub iishort-cy by iishort-cy.smcp;\012sub o-cy by o-cy.smcp;\012sub er-cy by er-cy.smcp;\012sub es-cy by es-cy.smcp;\012sub u-cy by u-cy.smcp;\012sub ha-cy by ha-cy.smcp;\012sub io-cy by io-cy.smcp;\012sub gje-cy by gje-cy.smcp;\012sub dze-cy by dze-cy.smcp;\012sub i-cy by i-cy.smcp;\012sub yi-cy by yi-cy.smcp;\012sub je-cy by je-cy.smcp;\012sub kje-cy by kje-cy.smcp;\012sub ushort-cy by ushort-cy.smcp;\012sub wgrave by wgrave.smcp;\012sub wacute by wacute.smcp;\012sub wdieresis by wdieresis.smcp;\012sub ygrave by ygrave.smcp;\012sub zedescender-cy by zedescender-cy.smcp;\012sub esdescender-cy by esdescender-cy.smcp;\012sub ustraight-cy by ustraight-cy.smcp;\012sub schwa-cy by schwa-cy.smcp;\012sub imacron-cy by imacron-cy.smcp;\012sub obarred-cy by obarred-cy.smcp;\012sub umacron-cy by umacron-cy.smcp;\012sub chedescenderabkhasian-cy by chedescenderabkhasian-cy.smcp;\012sub shha-cy by shha-cy.smcp;\012sub ustraightstroke-cy by ustraightstroke-cy.smcp;\012sub aogonek.locl by aogonek.smcp;\012sub eogonek.locl by eogonek.smcp;\012sub geupturn-cy by geupturn-cy.smcp;\012sub gestroke-cy by gestroke-cy.smcp;\012sub yu-cy by yu-cy.smcp;\012sub ya-cy by ya-cy.smcp;\012sub ampersand by ampersand.smcp;\012";
name = smcp;
},
{
code = "sub g by g.ss01;\012";
name = ss01;
notes = "Name: ";
},
{
code = "sub alpha by alpha.ss02;\012";
name = ss02;
},
{
code = "sub R by R.ss03;\012";
name = ss03;
},
{
code = "sub K by K.ss04;\012sub k by k.ss04;\012";
name = ss04;
},
{
code = "sub K by K.ss05;\012sub k by k.ss05;\012";
name = ss05;
},
{
code = "sub C by C.ss06;\012sub D by D.ss06;\012sub G by G.ss06;\012sub O by O.ss06;\012sub Q by Q.ss06;\012sub b by b.ss06;\012sub c by c.ss06;\012sub d by d.ss06;\012sub g by g.ss06;\012sub o by o.ss06;\012sub p by p.ss06;\012sub q by q.ss06;\012";
name = ss06;
},
{
code = "sub e by e.ss07;\012sub g by g.ss07;\012sub g.ss06 by g.ss07;\012";
name = ss07;
notes = "Name: ";
},
{
automatic = 1;
code = "sub two by twosuperior;\012sub three by threesuperior;\012sub one by onesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012sub N o period by numero;\012";
name = ordn;
},
{
automatic = 1;
code = "sub longs t by longs_t;\012";
name = hlig;
},
{
code = "sub slash ha-ethiopic by ha-ethiopic.etcp;\012sub slash hu-ethiopic by hu-ethiopic.etcp;\012sub slash hi-ethiopic by hi-ethiopic.etcp;\012sub slash haa-ethiopic by haa-ethiopic.etcp;\012sub slash hee-ethiopic by hee-ethiopic.etcp;\012sub slash he-ethiopic by he-ethiopic.etcp;\012sub slash ho-ethiopic by ho-ethiopic.etcp;\012sub slash hoa-ethiopic by hoa-ethiopic.etcp;\012sub slash la-ethiopic by la-ethiopic.etcp;\012sub slash lu-ethiopic by lu-ethiopic.etcp;\012sub slash li-ethiopic by li-ethiopic.etcp;\012sub slash laa-ethiopic by laa-ethiopic.etcp;\012sub slash lee-ethiopic by lee-ethiopic.etcp;\012sub slash le-ethiopic by le-ethiopic.etcp;\012sub slash lo-ethiopic by lo-ethiopic.etcp;\012sub slash lwa-ethiopic by lwa-ethiopic.etcp;\012sub slash hha-ethiopic by hha-ethiopic.etcp;\012sub slash hhu-ethiopic by hhu-ethiopic.etcp;\012sub slash hhi-ethiopic by hhi-ethiopic.etcp;\012sub slash hhaa-ethiopic by hhaa-ethiopic.etcp;\012sub slash hhee-ethiopic by hhee-ethiopic.etcp;\012sub slash hhe-ethiopic by hhe-ethiopic.etcp;\012sub slash hho-ethiopic by hho-ethiopic.etcp;\012sub slash hhwa-ethiopic by hhwa-ethiopic.etcp;\012sub slash ma-ethiopic by ma-ethiopic.etcp;\012sub slash mu-ethiopic by mu-ethiopic.etcp;\012sub slash mi-ethiopic by mi-ethiopic.etcp;\012sub slash maa-ethiopic by maa-ethiopic.etcp;\012sub slash mee-ethiopic by mee-ethiopic.etcp;\012sub slash me-ethiopic by me-ethiopic.etcp;\012sub slash mo-ethiopic by mo-ethiopic.etcp;\012sub slash mwa-ethiopic by mwa-ethiopic.etcp;\012sub slash sza-ethiopic by sza-ethiopic.etcp;\012sub slash szu-ethiopic by szu-ethiopic.etcp;\012sub slash szi-ethiopic by szi-ethiopic.etcp;\012sub slash szaa-ethiopic by szaa-ethiopic.etcp;\012sub slash szee-ethiopic by szee-ethiopic.etcp;\012sub slash sze-ethiopic by sze-ethiopic.etcp;\012sub slash szo-ethiopic by szo-ethiopic.etcp;\012sub slash szwa-ethiopic by szwa-ethiopic.etcp;\012sub slash ra-ethiopic by ra-ethiopic.etcp;\012sub slash ru-ethiopic by ru-ethiopic.etcp;\012sub slash ri-ethiopic by ri-ethiopic.etcp;\012sub slash raa-ethiopic by raa-ethiopic.etcp;\012sub slash ree-ethiopic by ree-ethiopic.etcp;\012sub slash re-ethiopic by re-ethiopic.etcp;\012sub slash ro-ethiopic by ro-ethiopic.etcp;\012sub slash rwa-ethiopic by rwa-ethiopic.etcp;\012sub slash sa-ethiopic by sa-ethiopic.etcp;\012sub slash su-ethiopic by su-ethiopic.etcp;\012sub slash si-ethiopic by si-ethiopic.etcp;\012sub slash saa-ethiopic by saa-ethiopic.etcp;\012sub slash see-ethiopic by see-ethiopic.etcp;\012sub slash se-ethiopic by se-ethiopic.etcp;\012sub slash so-ethiopic by so-ethiopic.etcp;\012sub slash swa-ethiopic by swa-ethiopic.etcp;\012sub slash sha-ethiopic by sha-ethiopic.etcp;\012sub slash shu-ethiopic by shu-ethiopic.etcp;\012sub slash shi-ethiopic by shi-ethiopic.etcp;\012sub slash shaa-ethiopic by shaa-ethiopic.etcp;\012sub slash shee-ethiopic by shee-ethiopic.etcp;\012sub slash she-ethiopic by she-ethiopic.etcp;\012sub slash sho-ethiopic by sho-ethiopic.etcp;\012sub slash shwa-ethiopic by shwa-ethiopic.etcp;\012sub slash qa-ethiopic by qa-ethiopic.etcp;\012sub slash qu-ethiopic by qu-ethiopic.etcp;\012sub slash qi-ethiopic by qi-ethiopic.etcp;\012sub slash qaa-ethiopic by qaa-ethiopic.etcp;\012sub slash qee-ethiopic by qee-ethiopic.etcp;\012sub slash qe-ethiopic by qe-ethiopic.etcp;\012sub slash qo-ethiopic by qo-ethiopic.etcp;\012sub slash qwaa-ethiopic by qwaa-ethiopic.etcp;\012sub slash qha-ethiopic by qha-ethiopic.etcp;\012sub slash qhu-ethiopic by qhu-ethiopic.etcp;\012sub slash qhi-ethiopic by qhi-ethiopic.etcp;\012sub slash qhaa-ethiopic by qhaa-ethiopic.etcp;\012sub slash qhee-ethiopic by qhee-ethiopic.etcp;\012sub slash qhe-ethiopic by qhe-ethiopic.etcp;\012sub slash qho-ethiopic by qho-ethiopic.etcp;\012sub slash qhwaa-ethiopic by qhwaa-ethiopic.etcp;\012sub slash ba-ethiopic by ba-ethiopic.etcp;\012sub slash bu-ethiopic by bu-ethiopic.etcp;\012sub slash bi-ethiopic by bi-ethiopic.etcp;\012sub slash baa-ethiopic by baa-ethiopic.etcp;\012sub slash bee-ethiopic by bee-ethiopic.etcp;\012sub slash be-ethiopic by be-ethiopic.etcp;\012sub slash bo-ethiopic by bo-ethiopic.etcp;\012sub slash bwa-ethiopic by bwa-ethiopic.etcp;\012sub slash va-ethiopic by va-ethiopic.etcp;\012sub slash vu-ethiopic by vu-ethiopic.etcp;\012sub slash vi-ethiopic by vi-ethiopic.etcp;\012sub slash vaa-ethiopic by vaa-ethiopic.etcp;\012sub slash vee-ethiopic by vee-ethiopic.etcp;\012sub slash ve-ethiopic by ve-ethiopic.etcp;\012sub slash vo-ethiopic by vo-ethiopic.etcp;\012sub slash vwa-ethiopic by vwa-ethiopic.etcp;\012sub slash ta-ethiopic by ta-ethiopic.etcp;\012sub slash tu-ethiopic by tu-ethiopic.etcp;\012sub slash ti-ethiopic by ti-ethiopic.etcp;\012sub slash taa-ethiopic by taa-ethiopic.etcp;\012sub slash tee-ethiopic by tee-ethiopic.etcp;\012sub slash te-ethiopic by te-ethiopic.etcp;\012sub slash to-ethiopic by to-ethiopic.etcp;\012sub slash twa-ethiopic by twa-ethiopic.etcp;\012sub slash ca-ethiopic by ca-ethiopic.etcp;\012sub slash cu-ethiopic by cu-ethiopic.etcp;\012sub slash ci-ethiopic by ci-ethiopic.etcp;\012sub slash caa-ethiopic by caa-ethiopic.etcp;\012sub slash cee-ethiopic by cee-ethiopic.etcp;\012sub slash ce-ethiopic by ce-ethiopic.etcp;\012sub slash co-ethiopic by co-ethiopic.etcp;\012sub slash cwa-ethiopic by cwa-ethiopic.etcp;\012sub slash xa-ethiopic by xa-ethiopic.etcp;\012sub slash xu-ethiopic by xu-ethiopic.etcp;\012sub slash xi-ethiopic by xi-ethiopic.etcp;\012sub slash xaa-ethiopic by xaa-ethiopic.etcp;\012sub slash xee-ethiopic by xee-ethiopic.etcp;\012sub slash xe-ethiopic by xe-ethiopic.etcp;\012sub slash xo-ethiopic by xo-ethiopic.etcp;\012sub slash xwaa-ethiopic by xwaa-ethiopic.etcp;\012sub slash na-ethiopic by na-ethiopic.etcp;\012sub slash nu-ethiopic by nu-ethiopic.etcp;\012sub slash ni-ethiopic by ni-ethiopic.etcp;\012sub slash naa-ethiopic by naa-ethiopic.etcp;\012sub slash nee-ethiopic by nee-ethiopic.etcp;\012sub slash ne-ethiopic by ne-ethiopic.etcp;\012sub slash no-ethiopic by no-ethiopic.etcp;\012sub slash nwa-ethiopic by nwa-ethiopic.etcp;\012sub slash nya-ethiopic by nya-ethiopic.etcp;\012sub slash nyu-ethiopic by nyu-ethiopic.etcp;\012sub slash nyi-ethiopic by nyi-ethiopic.etcp;\012sub slash nyaa-ethiopic by nyaa-ethiopic.etcp;\012sub slash nyee-ethiopic by nyee-ethiopic.etcp;\012sub slash nye-ethiopic by nye-ethiopic.etcp;\012sub slash nyo-ethiopic by nyo-ethiopic.etcp;\012sub slash nywa-ethiopic by nywa-ethiopic.etcp;\012sub slash aGlottal-ethiopic by aGlottal-ethiopic.etcp;\012sub slash uGlottal-ethiopic by uGlottal-ethiopic.etcp;\012sub slash iGlottal-ethiopic by iGlottal-ethiopic.etcp;\012sub slash aaGlottal-ethiopic by aaGlottal-ethiopic.etcp;\012sub slash eeGlottal-ethiopic by eeGlottal-ethiopic.etcp;\012sub slash eGlottal-ethiopic by eGlottal-ethiopic.etcp;\012sub slash oGlottal-ethiopic by oGlottal-ethiopic.etcp;\012sub slash waGlottal-ethiopic by waGlottal-ethiopic.etcp;\012sub slash ka-ethiopic by ka-ethiopic.etcp;\012sub slash ku-ethiopic by ku-ethiopic.etcp;\012sub slash ki-ethiopic by ki-ethiopic.etcp;\012sub slash kaa-ethiopic by kaa-ethiopic.etcp;\012sub slash kee-ethiopic by kee-ethiopic.etcp;\012sub slash ke-ethiopic by ke-ethiopic.etcp;\012sub slash ko-ethiopic by ko-ethiopic.etcp;\012sub slash kwaa-ethiopic by kwaa-ethiopic.etcp;\012sub slash kxa-ethiopic by kxa-ethiopic.etcp;\012sub slash kxu-ethiopic by kxu-ethiopic.etcp;\012sub slash kxi-ethiopic by kxi-ethiopic.etcp;\012sub slash kxaa-ethiopic by kxaa-ethiopic.etcp;\012sub slash kxee-ethiopic by kxee-ethiopic.etcp;\012sub slash kxe-ethiopic by kxe-ethiopic.etcp;\012sub slash kxo-ethiopic by kxo-ethiopic.etcp;\012sub slash kxwaa-ethiopic by kxwaa-ethiopic.etcp;\012sub slash wa-ethiopic by wa-ethiopic.etcp;\012sub slash wu-ethiopic by wu-ethiopic.etcp;\012sub slash wi-ethiopic by wi-ethiopic.etcp;\012sub slash waa-ethiopic by waa-ethiopic.etcp;\012sub slash wee-ethiopic by wee-ethiopic.etcp;\012sub slash we-ethiopic by we-ethiopic.etcp;\012sub slash wo-ethiopic by wo-ethiopic.etcp;\012sub slash woa-ethiopic by woa-ethiopic.etcp;\012sub slash aPharyngeal-ethiopic by aPharyngeal-ethiopic.etcp;\012sub slash uPharyngeal-ethiopic by uPharyngeal-ethiopic.etcp;\012sub slash iPharyngeal-ethiopic by iPharyngeal-ethiopic.etcp;\012sub slash aaPharyngeal-ethiopic by aaPharyngeal-ethiopic.etcp;\012sub slash eePharyngeal-ethiopic by eePharyngeal-ethiopic.etcp;\012sub slash ePharyngeal-ethiopic by ePharyngeal-ethiopic.etcp;\012sub slash oPharyngeal-ethiopic by oPharyngeal-ethiopic.etcp;\012sub slash za-ethiopic by za-ethiopic.etcp;\012sub slash zu-ethiopic by zu-ethiopic.etcp;\012sub slash zi-ethiopic by zi-ethiopic.etcp;\012sub slash zaa-ethiopic by zaa-ethiopic.etcp;\012sub slash zee-ethiopic by zee-ethiopic.etcp;\012sub slash ze-ethiopic by ze-ethiopic.etcp;\012sub slash zo-ethiopic by zo-ethiopic.etcp;\012sub slash zwa-ethiopic by zwa-ethiopic.etcp;\012sub slash zha-ethiopic by zha-ethiopic.etcp;\012sub slash zhu-ethiopic by zhu-ethiopic.etcp;\012sub slash zhi-ethiopic by zhi-ethiopic.etcp;\012sub slash zhaa-ethiopic by zhaa-ethiopic.etcp;\012sub slash zhee-ethiopic by zhee-ethiopic.etcp;\012sub slash zhe-ethiopic by zhe-ethiopic.etcp;\012sub slash zho-ethiopic by zho-ethiopic.etcp;\012sub slash zhwa-ethiopic by zhwa-ethiopic.etcp;\012sub slash ya-ethiopic by ya-ethiopic.etcp;\012sub slash yu-ethiopic by yu-ethiopic.etcp;\012sub slash yi-ethiopic by yi-ethiopic.etcp;\012sub slash yaa-ethiopic by yaa-ethiopic.etcp;\012sub slash yee-ethiopic by yee-ethiopic.etcp;\012sub slash ye-ethiopic by ye-ethiopic.etcp;\012sub slash yo-ethiopic by yo-ethiopic.etcp;\012sub slash yoa-ethiopic by yoa-ethiopic.etcp;\012sub slash da-ethiopic by da-ethiopic.etcp;\012sub slash du-ethiopic by du-ethiopic.etcp;\012sub slash di-ethiopic by di-ethiopic.etcp;\012sub slash daa-ethiopic by daa-ethiopic.etcp;\012sub slash dee-ethiopic by dee-ethiopic.etcp;\012sub slash de-ethiopic by de-ethiopic.etcp;\012sub slash do-ethiopic by do-ethiopic.etcp;\012sub slash dwa-ethiopic by dwa-ethiopic.etcp;\012sub slash dda-ethiopic by dda-ethiopic.etcp;\012sub slash ddu-ethiopic by ddu-ethiopic.etcp;\012sub slash ddi-ethiopic by ddi-ethiopic.etcp;\012sub slash ddaa-ethiopic by ddaa-ethiopic.etcp;\012sub slash ddee-ethiopic by ddee-ethiopic.etcp;\012sub slash dde-ethiopic by dde-ethiopic.etcp;\012sub slash ddo-ethiopic by ddo-ethiopic.etcp;\012sub slash ddwa-ethiopic by ddwa-ethiopic.etcp;\012sub slash ja-ethiopic by ja-ethiopic.etcp;\012sub slash ju-ethiopic by ju-ethiopic.etcp;\012sub slash ji-ethiopic by ji-ethiopic.etcp;\012sub slash jaa-ethiopic by jaa-ethiopic.etcp;\012sub slash jee-ethiopic by jee-ethiopic.etcp;\012sub slash je-ethiopic by je-ethiopic.etcp;\012sub slash jo-ethiopic by jo-ethiopic.etcp;\012sub slash jwa-ethiopic by jwa-ethiopic.etcp;\012sub slash ga-ethiopic by ga-ethiopic.etcp;\012sub slash gu-ethiopic by gu-ethiopic.etcp;\012sub slash gi-ethiopic by gi-ethiopic.etcp;\012sub slash gaa-ethiopic by gaa-ethiopic.etcp;\012sub slash gee-ethiopic by gee-ethiopic.etcp;\012sub slash ge-ethiopic by ge-ethiopic.etcp;\012sub slash go-ethiopic by go-ethiopic.etcp;\012sub slash gwaa-ethiopic by gwaa-ethiopic.etcp;\012sub slash gga-ethiopic by gga-ethiopic.etcp;\012sub slash ggu-ethiopic by ggu-ethiopic.etcp;\012sub slash ggi-ethiopic by ggi-ethiopic.etcp;\012sub slash ggaa-ethiopic by ggaa-ethiopic.etcp;\012sub slash ggee-ethiopic by ggee-ethiopic.etcp;\012sub slash gge-ethiopic by gge-ethiopic.etcp;\012sub slash ggo-ethiopic by ggo-ethiopic.etcp;\012sub slash ggwaa-ethiopic by ggwaa-ethiopic.etcp;\012sub slash tha-ethiopic by tha-ethiopic.etcp;\012sub slash thu-ethiopic by thu-ethiopic.etcp;\012sub slash thi-ethiopic by thi-ethiopic.etcp;\012sub slash thaa-ethiopic by thaa-ethiopic.etcp;\012sub slash thee-ethiopic by thee-ethiopic.etcp;\012sub slash the-ethiopic by the-ethiopic.etcp;\012sub slash tho-ethiopic by tho-ethiopic.etcp;\012sub slash thwa-ethiopic by thwa-ethiopic.etcp;\012sub slash cha-ethiopic by cha-ethiopic.etcp;\012sub slash chu-ethiopic by chu-ethiopic.etcp;\012sub slash chi-ethiopic by chi-ethiopic.etcp;\012sub slash chaa-ethiopic by chaa-ethiopic.etcp;\012sub slash chee-ethiopic by chee-ethiopic.etcp;\012sub slash che-ethiopic by che-ethiopic.etcp;\012sub slash cho-ethiopic by cho-ethiopic.etcp;\012sub slash chwa-ethiopic by chwa-ethiopic.etcp;\012sub slash pha-ethiopic by pha-ethiopic.etcp;\012sub slash phu-ethiopic by phu-ethiopic.etcp;\012sub slash phi-ethiopic by phi-ethiopic.etcp;\012sub slash phaa-ethiopic by phaa-ethiopic.etcp;\012sub slash phee-ethiopic by phee-ethiopic.etcp;\012sub slash phe-ethiopic by phe-ethiopic.etcp;\012sub slash pho-ethiopic by pho-ethiopic.etcp;\012sub slash phwa-ethiopic by phwa-ethiopic.etcp;\012sub slash tsa-ethiopic by tsa-ethiopic.etcp;\012sub slash tsu-ethiopic by tsu-ethiopic.etcp;\012sub slash tsi-ethiopic by tsi-ethiopic.etcp;\012sub slash tsaa-ethiopic by tsaa-ethiopic.etcp;\012sub slash tsee-ethiopic by tsee-ethiopic.etcp;\012sub slash tse-ethiopic by tse-ethiopic.etcp;\012sub slash tso-ethiopic by tso-ethiopic.etcp;\012sub slash tswa-ethiopic by tswa-ethiopic.etcp;\012sub slash tza-ethiopic by tza-ethiopic.etcp;\012sub slash tzu-ethiopic by tzu-ethiopic.etcp;\012sub slash tzi-ethiopic by tzi-ethiopic.etcp;\012sub slash tzaa-ethiopic by tzaa-ethiopic.etcp;\012sub slash tzee-ethiopic by tzee-ethiopic.etcp;\012sub slash tze-ethiopic by tze-ethiopic.etcp;\012sub slash tzo-ethiopic by tzo-ethiopic.etcp;\012sub slash tzoa-ethiopic by tzoa-ethiopic.etcp;\012sub slash fa-ethiopic by fa-ethiopic.etcp;\012sub slash fu-ethiopic by fu-ethiopic.etcp;\012sub slash fi-ethiopic by fi-ethiopic.etcp;\012sub slash faa-ethiopic by faa-ethiopic.etcp;\012sub slash fee-ethiopic by fee-ethiopic.etcp;\012sub slash fe-ethiopic by fe-ethiopic.etcp;\012sub slash fo-ethiopic by fo-ethiopic.etcp;\012sub slash fwa-ethiopic by fwa-ethiopic.etcp;\012sub slash pa-ethiopic by pa-ethiopic.etcp;\012sub slash pu-ethiopic by pu-ethiopic.etcp;\012sub slash pi-ethiopic by pi-ethiopic.etcp;\012sub slash paa-ethiopic by paa-ethiopic.etcp;\012sub slash pee-ethiopic by pee-ethiopic.etcp;\012sub slash pe-ethiopic by pe-ethiopic.etcp;\012sub slash po-ethiopic by po-ethiopic.etcp;\012sub slash pwa-ethiopic by pwa-ethiopic.etcp;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 1536;
capHeight = 1456;
customParameters = (
{
name = typoAscender;
value = 1536;
},
{
name = typoDescender;
value = -512;
},
{
name = typoLineGap;
value = 102;
},
{
name = winAscent;
value = 1946;
},
{
name = winDescent;
value = 512;
},
{
name = hheaAscender;
value = 1900;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\01212 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 16 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01217 1 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 8 values pushed */\01217 58 48 37 27 16 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 8 values pushed */\0121 72 59 46 33 20 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0122 88 72 56 40 20 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0123 82 67 52 37 22 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0124 94 77 60 43 25 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0125 54 44 34 25 15 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0126 113 93 70 50 27 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0127 145 119 92 58 35 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0128 126 103 80 57 26 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0129 84 69 54 38 20 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01210 118 96 75 54 29 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01211 131 100 78 58 35 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01212 217 178 138 99 60 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01213 20 16 12 9 6 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01214 60 50 39 28 17 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01215 64 52 41 29 20 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01216 80 65 46 33 20 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01218 11 7 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\01263 26 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012PUSHB[ ]	/* 3 values pushed */\01295 26 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012PUSHB[ ]	/* 3 values pushed */\012127 26 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012PUSHB[ ]	/* 3 values pushed */\01247 26 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\01279 26 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\012111 26 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\012143 26 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\012175 26 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\012255 26 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\01231 26 1 \012DELTAC3[ ]	/* DeltaExceptionC3 */\012PUSHB[ ]	/* 3 values pushed */\01263 26 1 \012DELTAC3[ ]	/* DeltaExceptionC3 */\012PUSHB[ ]	/* 3 values pushed */\01295 26 1 \012DELTAC3[ ]	/* DeltaExceptionC3 */\012PUSHB[ ]	/* 3 values pushed */\012127 26 1 \012DELTAC3[ ]	/* DeltaExceptionC3 */\012PUSHB[ ]	/* 3 values pushed */\01215 30 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012PUSHB[ ]	/* 3 values pushed */\012127 30 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012PUSHB[ ]	/* 3 values pushed */\012239 30 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012PUSHB[ ]	/* 3 values pushed */\01231 30 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\01295 30 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\012143 30 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\012207 30 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\012255 30 1 \012DELTAC2[ ]	/* DeltaExceptionC2 */\012PUSHB[ ]	/* 3 values pushed */\01263 30 1 \012DELTAC3[ ]	/* DeltaExceptionC3 */\012PUSHB[ ]	/* 3 values pushed */\012111 30 1 \012DELTAC3[ ]	/* DeltaExceptionC3 */\012PUSHB[ ]	/* 3 values pushed */\01247 32 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012PUSHB[ ]	/* 3 values pushed */\012111 32 1 \012DELTAC1[ ]	/* DeltaExceptionC1 */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\012132 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHB[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012RCVT[ ]	/* ReadCVT */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012RCVT[ ]	/* ReadCVT */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01216384 1024 \012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01240 1000 \012WCVTF[ ]	/* WriteCVTInFUnits */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01235 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012GETINFO[ ]	/* GetInfo */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01240 1000 \012WCVTF[ ]	/* WriteCVTInFUnits */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012PUSHW[ ]	/* 1 value pushed */\0128192 \012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01241 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01241 1000 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    42,\012    157,\012    128,\012    138,\012    120,\012    212,\012    100,\012    78,\012    90,\012    135,\012    96,\012    86,\012    52,\012    572,\012    188,\012    178,\012    142,\012    196,\012    0,\012    20,\012    \"-416\",\012    20,\012    667,\012    32,\012    801,\012    11,\012    1082,\012    20,\012    1165,\012    16,\012    1456,\012    20,\012    1560,\012    21,\012    422,\012    17,\012    1728,\012    14,\012    1753,\012    6,\012    0,\012    0\012)";
}
);
descender = -512;
id = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
GSCornerRadius = 299;
};
weightValue = 400;
widthValue = 5;
xHeight = 1082;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"808 1456 LINE",
"100 1456 LINE",
"100 0 LINE",
"808 0 LINE",
"808 0 LINE"
);
},
{
closed = 1;
nodes = (
"480 728 LINE",
"754 1371 LINE",
"754 84 LINE",
"754 84 LINE"
);
},
{
closed = 1;
nodes = (
"422 728 LINE",
"154 96 LINE",
"154 1359 LINE",
"154 1359 LINE"
);
},
{
closed = 1;
nodes = (
"451 660 LINE",
"709 54 LINE",
"194 54 LINE",
"194 54 LINE"
);
},
{
closed = 1;
nodes = (
"194 1402 LINE",
"709 1402 LINE",
"451 796 LINE",
"451 796 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
10 12 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 3 values pushed */
12 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 12 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 908;
}
);
note = .notdef;
},
{
glyphname = uni0000;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
}
);
note = uni0000;
},
{
glyphname = uni0002;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
}
);
note = uni0002;
},
{
glyphname = CR;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 507;
}
);
note = uni000D;
},
{
glyphname = space;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 507;
}
);
note = uni0020;
unicode = 0020;
},
{
glyphname = exclam;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"361 1456 LINE",
"167 1456 LINE",
"180 411 LINE",
"347 411 LINE",
"347 411 LINE"
);
},
{
closed = 1;
nodes = (
"160 48 OFFCURVE",
"215 -11 OFFCURVE",
"323 -11 OFFCURVE",
"379 48 OFFCURVE",
"379 138 OFFCURVE",
"323 199 OFFCURVE",
"215 199 OFFCURVE",
"160 138 OFFCURVE",
"160 93 QCURVE",
"160 93 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 6 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 527;
}
);
note = uni0021;
unicode = 0021;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"277 1536 LINE",
"137 1536 LINE",
"136 1042 LINE",
"247 1042 LINE",
"277 1400 LINE",
"277 1400 LINE"
);
},
{
closed = 1;
nodes = (
"547 1536 LINE",
"407 1536 LINE",
"406 1042 LINE",
"517 1042 LINE",
"547 1400 LINE",
"547 1400 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 655;
}
);
leftKerningGroup = quotedbl;
note = uni0022;
rightKerningGroup = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"685 0 LINE",
"829 0 LINE",
"909 410 LINE",
"1160 410 LINE",
"1160 547 LINE",
"935 547 LINE",
"1004 901 LINE",
"1235 901 LINE",
"1235 1040 LINE",
"1031 1040 LINE",
"1113 1456 LINE",
"969 1456 LINE",
"887 1040 LINE",
"623 1040 LINE",
"705 1456 LINE",
"562 1456 LINE",
"480 1040 LINE",
"195 1040 LINE",
"195 901 LINE",
"453 901 LINE",
"384 547 LINE",
"119 547 LINE",
"119 410 LINE",
"358 410 LINE",
"278 0 LINE",
"421 0 LINE",
"501 410 LINE",
"765 410 LINE",
"765 410 LINE"
);
},
{
closed = 1;
nodes = (
"596 901 LINE",
"860 901 LINE",
"791 547 LINE",
"527 547 LINE",
"527 547 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1261;
}
);
note = uni0023;
unicode = 0023;
},
{
glyphname = dollar;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"856 266 OFFCURVE",
"706 140 OFFCURVE",
"575 140 QCURVE SMOOTH",
"441 140 OFFCURVE",
"295 290 OFFCURVE",
"295 429 QCURVE",
"110 429 LINE",
"110 231 OFFCURVE",
"321 0 OFFCURVE",
"507 -17 QCURVE",
"507 -208 LINE",
"655 -208 LINE",
"655 -17 LINE",
"838 2 OFFCURVE",
"1041 208 OFFCURVE",
"1041 377 QCURVE SMOOTH",
"1041 483 OFFCURVE",
"960 641 OFFCURVE",
"789 760 OFFCURVE",
"484 859 OFFCURVE",
"351 980 OFFCURVE",
"351 1082 QCURVE SMOOTH",
"351 1192 OFFCURVE",
"477 1315 OFFCURVE",
"596 1315 QCURVE SMOOTH",
"710 1315 OFFCURVE",
"844 1149 OFFCURVE",
"844 1008 QCURVE",
"1028 1008 LINE",
"1028 1213 OFFCURVE",
"841 1449 OFFCURVE",
"673 1472 QCURVE",
"673 1692 LINE",
"524 1692 LINE",
"524 1473 LINE",
"357 1453 OFFCURVE",
"166 1243 OFFCURVE",
"166 1079 QCURVE SMOOTH",
"166 918 OFFCURVE",
"361 709 OFFCURVE",
"574 644 QCURVE SMOOTH",
"727 593 OFFCURVE",
"856 467 OFFCURVE",
"856 375 QCURVE",
"856 375 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0024;
unicode = 0024;
},
{
glyphname = percent;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"105 1106 LINE SMOOTH",
"105 967 OFFCURVE",
"275 800 OFFCURVE",
"405 800 QCURVE SMOOTH",
"534 800 OFFCURVE",
"701 967 OFFCURVE",
"701 1099 QCURVE SMOOTH",
"701 1170 LINE SMOOTH",
"701 1306 OFFCURVE",
"536 1477 OFFCURVE",
"403 1477 QCURVE SMOOTH",
"272 1477 OFFCURVE",
"105 1307 OFFCURVE",
"105 1176 QCURVE",
"105 1176 LINE"
);
},
{
closed = 1;
nodes = (
"243 1172 LINE SMOOTH",
"243 1254 OFFCURVE",
"329 1356 OFFCURVE",
"477 1356 OFFCURVE",
"563 1254 OFFCURVE",
"563 1176 QCURVE SMOOTH",
"563 1103 LINE SMOOTH",
"563 1018 OFFCURVE",
"476 920 OFFCURVE",
"405 920 QCURVE SMOOTH",
"331 920 OFFCURVE",
"243 1021 OFFCURVE",
"243 1099 QCURVE",
"243 1099 LINE"
);
},
{
closed = 1;
nodes = (
"814 285 LINE SMOOTH",
"814 146 OFFCURVE",
"984 -21 OFFCURVE",
"1244 -21 OFFCURVE",
"1411 148 OFFCURVE",
"1411 279 QCURVE SMOOTH",
"1411 350 LINE SMOOTH",
"1411 489 OFFCURVE",
"1243 657 OFFCURVE",
"981 657 OFFCURVE",
"814 488 OFFCURVE",
"814 357 QCURVE",
"814 357 LINE"
);
},
{
closed = 1;
nodes = (
"952 353 LINE SMOOTH",
"952 437 OFFCURVE",
"1041 536 OFFCURVE",
"1112 536 QCURVE SMOOTH",
"1185 536 OFFCURVE",
"1272 436 OFFCURVE",
"1272 357 QCURVE SMOOTH",
"1272 283 LINE SMOOTH",
"1272 198 OFFCURVE",
"1186 99 OFFCURVE",
"1114 99 QCURVE SMOOTH",
"1040 99 OFFCURVE",
"952 200 OFFCURVE",
"952 279 QCURVE",
"952 279 LINE"
);
},
{
closed = 1;
nodes = (
"1158 1248 LINE",
"1053 1314 LINE",
"342 176 LINE",
"447 110 LINE",
"447 110 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
17 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
53 35 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
55 3 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1500;
}
);
note = uni0025;
unicode = 0025;
},
{
glyphname = ampersand;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"101 206 OFFCURVE",
"359 -20 OFFCURVE",
"572 -20 QCURVE SMOOTH",
"675 -20 OFFCURVE",
"874 49 OFFCURVE",
"948 115 QCURVE",
"1045 0 LINE",
"1267 0 LINE",
"1059 249 LINE",
"1182 417 OFFCURVE",
"1182 672 QCURVE",
"1015 672 LINE",
"1015 513 OFFCURVE",
"947 383 QCURVE",
"623 770 LINE",
"730 849 LINE SMOOTH",
"841 931 OFFCURVE",
"930 1080 OFFCURVE",
"930 1168 QCURVE SMOOTH",
"930 1301 OFFCURVE",
"734 1476 OFFCURVE",
"584 1476 QCURVE SMOOTH",
"416 1476 OFFCURVE",
"220 1288 OFFCURVE",
"220 1122 QCURVE SMOOTH",
"220 1051 OFFCURVE",
"286 907 OFFCURVE",
"383 789 QCURVE",
"218 672 OFFCURVE",
"101 496 OFFCURVE",
"101 391 QCURVE",
"101 391 LINE"
);
},
{
closed = 1;
nodes = (
"439 131 OFFCURVE",
"286 273 OFFCURVE",
"286 391 QCURVE SMOOTH",
"286 521 OFFCURVE",
"453 644 QCURVE SMOOTH",
"486 668 LINE",
"841 243 LINE",
"719 131 OFFCURVE",
"572 131 QCURVE",
"572 131 LINE"
);
},
{
closed = 1;
nodes = (
"405 1213 OFFCURVE",
"501 1324 OFFCURVE",
"583 1324 QCURVE SMOOTH",
"659 1324 OFFCURVE",
"759 1235 OFFCURVE",
"759 1168 QCURVE SMOOTH",
"759 1106 OFFCURVE",
"709 1019 OFFCURVE",
"641 971 QCURVE SMOOTH",
"523 888 LINE",
"405 1032 OFFCURVE",
"405 1128 QCURVE",
"405 1128 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
42 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 34 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
16 42 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
17 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 17 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 31 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1273;
}
);
note = uni0026;
unicode = 0026;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"253 1536 LINE",
"104 1536 LINE",
"103 1057 LINE",
"232 1057 LINE",
"253 1425 LINE",
"253 1425 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 357;
}
);
leftKerningGroup = quotedbl;
note = uni0027;
rightKerningGroup = quotedbl;
unicode = 0027;
},
{
glyphname = parenleft;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"133 118 OFFCURVE",
"369 -222 QCURVE SMOOTH",
"490 -396 OFFCURVE",
"623 -470 QCURVE",
"661 -357 LINE",
"544 -261 OFFCURVE",
"459 -91 QCURVE SMOOTH",
"318 193 OFFCURVE",
"318 579 QCURVE SMOOTH",
"319 664 LINE SMOOTH",
"328 949 OFFCURVE",
"515 1409 OFFCURVE",
"661 1521 QCURVE",
"623 1643 LINE",
"494 1573 OFFCURVE",
"254 1233 OFFCURVE",
"133 817 OFFCURVE",
"133 591 QCURVE",
"133 591 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = uni0028;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"567 816 OFFCURVE",
"448 1228 OFFCURVE",
"209 1570 OFFCURVE",
"77 1643 QCURVE",
"38 1530 LINE",
"136 1450 OFFCURVE",
"293 1164 OFFCURVE",
"381 803 OFFCURVE",
"381 593 QCURVE SMOOTH",
"381 561 LINE SMOOTH",
"379 258 OFFCURVE",
"192 -239 OFFCURVE",
"38 -357 QCURVE",
"77 -470 LINE",
"209 -397 OFFCURVE",
"450 -51 OFFCURVE",
"567 358 OFFCURVE",
"567 581 QCURVE",
"567 581 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 712;
}
);
note = uni0029;
unicode = 0029;
},
{
glyphname = asterisk;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"129 707 LINE",
"254 616 LINE",
"434 897 LINE",
"620 609 LINE",
"744 703 LINE",
"546 974 LINE",
"853 1065 LINE",
"807 1217 LINE",
"510 1107 LINE",
"520 1456 LINE",
"367 1456 LINE",
"376 1112 LINE",
"74 1224 LINE",
"28 1073 LINE",
"330 983 LINE",
"330 983 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 882;
}
);
note = uni002A;
unicode = 002A;
},
{
glyphname = plus;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"670 1206 LINE",
"484 1206 LINE",
"484 781 LINE",
"78 781 LINE",
"78 606 LINE",
"484 606 LINE",
"484 146 LINE",
"670 146 LINE",
"670 606 LINE",
"1076 606 LINE",
"1076 781 LINE",
"670 781 LINE",
"670 781 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1161;
}
);
note = uni002B;
unicode = 002B;
},
{
glyphname = comma;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"209 -229 OFFCURVE",
"308 -27 OFFCURVE",
"308 74 QCURVE SMOOTH",
"308 219 LINE",
"127 219 LINE",
"127 52 LINE SMOOTH",
"123 -87 OFFCURVE",
"29 -218 QCURVE",
"134 -290 LINE",
"134 -290 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 402;
}
);
leftKerningGroup = comma;
note = uni002C;
rightKerningGroup = comma;
unicode = 002C;
},
{
glyphname = hyphen;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"525 694 LINE",
"37 694 LINE",
"37 543 LINE",
"525 543 LINE",
"525 543 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 565;
}
);
leftKerningGroup = hyphen;
note = uni002D;
unicode = 002D;
},
{
glyphname = period;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"144 51 OFFCURVE",
"201 -11 OFFCURVE",
"315 -11 OFFCURVE",
"374 51 OFFCURVE",
"374 97 QCURVE SMOOTH",
"374 145 OFFCURVE",
"315 209 OFFCURVE",
"201 209 OFFCURVE",
"144 145 OFFCURVE",
"144 97 QCURVE",
"144 97 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 539;
}
);
leftKerningGroup = comma;
note = uni002E;
rightKerningGroup = comma;
unicode = 002E;
},
{
glyphname = slash;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"784 1456 LINE",
"626 1456 LINE",
"18 -125 LINE",
"177 -125 LINE",
"177 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
}
);
note = uni002F;
unicode = 002F;
},
{
glyphname = zero;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1034 861 LINE SMOOTH",
"1031 1175 OFFCURVE",
"809 1476 OFFCURVE",
"574 1476 QCURVE SMOOTH",
"337 1476 OFFCURVE",
"115 1164 OFFCURVE",
"115 843 QCURVE SMOOTH",
"115 596 LINE SMOOTH",
"119 289 OFFCURVE",
"343 -20 OFFCURVE",
"576 -20 QCURVE SMOOTH",
"812 -20 OFFCURVE",
"1034 296 OFFCURVE",
"1034 621 QCURVE",
"1034 621 LINE"
);
},
{
closed = 1;
nodes = (
"849 571 LINE SMOOTH",
"846 343 OFFCURVE",
"713 131 OFFCURVE",
"576 131 QCURVE SMOOTH",
"437 131 OFFCURVE",
"300 356 OFFCURVE",
"300 592 QCURVE SMOOTH",
"300 888 LINE SMOOTH",
"302 1110 OFFCURVE",
"432 1324 OFFCURVE",
"574 1324 QCURVE SMOOTH",
"717 1324 OFFCURVE",
"849 1109 OFFCURVE",
"849 874 QCURVE",
"849 874 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0030;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"729 1463 LINE",
"700 1463 LINE",
"170 1264 LINE",
"170 1096 LINE",
"543 1233 LINE",
"543 0 LINE",
"729 0 LINE",
"729 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0031;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1075 151 LINE",
"344 151 LINE",
"734 574 LINE SMOOTH",
"1008 871 OFFCURVE",
"1008 1086 QCURVE SMOOTH",
"1008 1263 OFFCURVE",
"772 1476 OFFCURVE",
"569 1476 QCURVE SMOOTH",
"352 1476 OFFCURVE",
"93 1228 OFFCURVE",
"93 1027 QCURVE",
"278 1027 LINE",
"278 1167 OFFCURVE",
"431 1324 OFFCURVE",
"569 1324 QCURVE SMOOTH",
"684 1324 OFFCURVE",
"822 1178 OFFCURVE",
"822 1064 QCURVE SMOOTH",
"822 979 OFFCURVE",
"737 820 OFFCURVE",
"625 693 QCURVE SMOOTH",
"121 133 LINE",
"121 0 LINE",
"1075 0 LINE",
"1075 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 16 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 23 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0032;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2020-11-28 02:12:22 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"390 667 LINE",
"529 667 LINE SMOOTH",
"725 664.333 OFFCURVE",
"832 571.333 OFFCURVE",
"832 402 CURVE SMOOTH",
"832 227.333 OFFCURVE",
"734.667 131 OFFCURVE",
"556 131 CURVE SMOOTH",
"388 131 OFFCURVE",
"280 230.667 OFFCURVE",
"280 384 CURVE",
"94 384 LINE",
"94 141.333 OFFCURVE",
"282.667 -20 OFFCURVE",
"556 -20 CURVE SMOOTH",
"829.333 -20 OFFCURVE",
"1017 144.667 OFFCURVE",
"1017 406 CURVE SMOOTH",
"1017 575.333 OFFCURVE",
"926 696.333 OFFCURVE",
"766 747 CURVE",
"907.333 805.667 OFFCURVE",
"995 937.333 OFFCURVE",
"995 1064 CURVE SMOOTH",
"995 1322.667 OFFCURVE",
"829.667 1476 OFFCURVE",
"555 1476 CURVE SMOOTH",
"295 1476 OFFCURVE",
"107 1304.667 OFFCURVE",
"107 1074 CURVE",
"292 1074 LINE",
"292 1224.667 OFFCURVE",
"395 1324 OFFCURVE",
"555 1324 CURVE SMOOTH",
"725 1324 OFFCURVE",
"810 1238.667 OFFCURVE",
"810 1068 CURVE SMOOTH",
"810 916 OFFCURVE",
"703.667 820.667 OFFCURVE",
"529 818 CURVE SMOOTH",
"390 818 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0033;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"902 1456 LINE",
"705 1456 LINE",
"53 447 LINE",
"53 338 LINE",
"716 338 LINE",
"716 0 LINE",
"902 0 LINE",
"902 338 LINE",
"1104 338 LINE",
"1104 489 LINE",
"902 489 LINE",
"902 489 LINE"
);
},
{
closed = 1;
nodes = (
"694 1163 LINE",
"716 1203 LINE",
"716 489 LINE",
"263 489 LINE",
"263 489 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 6 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0034;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"354 692 LINE",
"403 732 LINE SMOOTH",
"472 785 OFFCURVE",
"593 785 QCURVE SMOOTH",
"725 785 OFFCURVE",
"884 608 OFFCURVE",
"884 462 QCURVE SMOOTH",
"884 307 OFFCURVE",
"737 131 OFFCURVE",
"608 131 QCURVE SMOOTH",
"490 131 OFFCURVE",
"346 258 OFFCURVE",
"329 383 QCURVE",
"154 383 LINE",
"171 194 OFFCURVE",
"415 -20 OFFCURVE",
"608 -20 QCURVE SMOOTH",
"826 -20 OFFCURVE",
"1069 239 OFFCURVE",
"1069 464 QCURVE SMOOTH",
"1069 688 OFFCURVE",
"835 951 OFFCURVE",
"636 951 QCURVE SMOOTH",
"500 951 OFFCURVE",
"393 888 QCURVE",
"437 1285 LINE",
"1026 1285 LINE",
"1026 1456 LINE",
"280 1456 LINE",
"206 730 LINE",
"206 730 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0035;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"814 1457 LINE SMOOTH",
"475 1452 OFFCURVE",
"132 1027 OFFCURVE",
"132 625 QCURVE SMOOTH",
"132 554 LINE SMOOTH",
"132 301 OFFCURVE",
"392 -20 OFFCURVE",
"601 -20 QCURVE SMOOTH",
"807 -20 OFFCURVE",
"1052 250 OFFCURVE",
"1052 475 QCURVE SMOOTH",
"1052 687 OFFCURVE",
"825 955 OFFCURVE",
"635 955 QCURVE SMOOTH",
"436 955 OFFCURVE",
"321 823 QCURVE",
"341 1048 OFFCURVE",
"597 1296 OFFCURVE",
"813 1300 QCURVE SMOOTH",
"847 1300 LINE",
"847 1457 LINE",
"847 1457 LINE"
);
},
{
closed = 1;
nodes = (
"724 801 OFFCURVE",
"869 616 OFFCURVE",
"869 466 QCURVE SMOOTH",
"869 317 OFFCURVE",
"726 133 OFFCURVE",
"601 133 QCURVE SMOOTH",
"480 133 OFFCURVE",
"318 353 OFFCURVE",
"318 533 QCURVE SMOOTH",
"318 601 LINE",
"349 687 OFFCURVE",
"509 801 OFFCURVE",
"604 801 QCURVE",
"604 801 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0036;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1061 1456 LINE",
"77 1456 LINE",
"77 1304 LINE",
"865 1304 LINE",
"264 0 LINE",
"458 0 LINE",
"1061 1352 LINE",
"1061 1352 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0037;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1004 1260 OFFCURVE",
"767 1476 OFFCURVE",
"575 1476 QCURVE SMOOTH",
"382 1476 OFFCURVE",
"146 1260 OFFCURVE",
"146 1076 QCURVE SMOOTH",
"146 968 OFFCURVE",
"258 798 OFFCURVE",
"355 750 QCURVE",
"241 701 OFFCURVE",
"112 511 OFFCURVE",
"112 393 QCURVE SMOOTH",
"112 205 OFFCURVE",
"365 -20 OFFCURVE",
"575 -20 QCURVE SMOOTH",
"783 -20 OFFCURVE",
"1038 204 OFFCURVE",
"1038 393 QCURVE SMOOTH",
"1038 512 OFFCURVE",
"905 700 OFFCURVE",
"791 749 QCURVE",
"889 797 OFFCURVE",
"1004 967 OFFCURVE",
"1004 1076 QCURVE",
"1004 1076 LINE"
);
},
{
closed = 1;
nodes = (
"853 274 OFFCURVE",
"705 131 OFFCURVE",
"575 131 QCURVE SMOOTH",
"444 131 OFFCURVE",
"297 273 OFFCURVE",
"297 521 OFFCURVE",
"448 673 OFFCURVE",
"698 673 OFFCURVE",
"853 519 OFFCURVE",
"853 397 QCURVE",
"853 397 LINE"
);
},
{
closed = 1;
nodes = (
"681 1324 OFFCURVE",
"819 1184 OFFCURVE",
"819 962 OFFCURVE",
"686 825 OFFCURVE",
"464 825 OFFCURVE",
"331 962 OFFCURVE",
"331 1073 QCURVE SMOOTH",
"331 1189 OFFCURVE",
"466 1324 OFFCURVE",
"575 1324 QCURVE",
"575 1324 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
39 9 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 39 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0038;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"819 390 OFFCURVE",
"573 159 OFFCURVE",
"344 155 QCURVE SMOOTH",
"305 155 LINE",
"305 -1 LINE",
"341 -1 LINE SMOOTH",
"680 4 OFFCURVE",
"1016 395 OFFCURVE",
"1016 820 QCURVE SMOOTH",
"1016 874 LINE SMOOTH",
"1016 1153 OFFCURVE",
"767 1476 OFFCURVE",
"551 1476 QCURVE SMOOTH",
"415 1476 OFFCURVE",
"211 1352 OFFCURVE",
"100 1118 OFFCURVE",
"100 972 QCURVE SMOOTH",
"100 836 OFFCURVE",
"202 611 OFFCURVE",
"389 487 OFFCURVE",
"515 487 QCURVE SMOOTH",
"611 487 OFFCURVE",
"772 571 OFFCURVE",
"830 640 QCURVE",
"830 640 LINE"
);
},
{
closed = 1;
nodes = (
"425 640 OFFCURVE",
"282 833 OFFCURVE",
"282 982 QCURVE SMOOTH",
"282 1135 OFFCURVE",
"430 1322 OFFCURVE",
"552 1322 QCURVE SMOOTH",
"673 1322 OFFCURVE",
"831 1094 OFFCURVE",
"831 912 QCURVE SMOOTH",
"831 838 LINE",
"795 754 OFFCURVE",
"638 640 OFFCURVE",
"545 640 QCURVE",
"545 640 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni0039;
unicode = 0039;
},
{
glyphname = colon;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 496;
}
);
note = uni003A;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -33, 883}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 433;
}
);
note = uni003B;
unicode = 003B;
},
{
glyphname = less;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"890 902 LINE",
"890 1098 LINE",
"72 720 LINE",
"72 574 LINE",
"890 195 LINE",
"890 391 LINE",
"264 644 LINE",
"264 644 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1041;
}
);
note = uni003C;
unicode = 003C;
},
{
glyphname = equal;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"986 975 LINE",
"152 975 LINE",
"152 814 LINE",
"986 814 LINE",
"986 814 LINE"
);
},
{
closed = 1;
nodes = (
"986 559 LINE",
"152 559 LINE",
"152 399 LINE",
"986 399 LINE",
"986 399 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1124;
}
);
note = uni003D;
unicode = 003D;
},
{
glyphname = greater;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"134 388 LINE",
"134 196 LINE",
"988 575 LINE",
"988 721 LINE",
"134 1099 LINE",
"134 909 LINE",
"795 650 LINE",
"795 650 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1070;
}
);
note = uni003E;
unicode = 003E;
},
{
glyphname = question;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"542 410 LINE",
"542 562 OFFCURVE",
"615 643 QCURVE",
"724 751 LINE SMOOTH",
"886 921 OFFCURVE",
"886 1096 QCURVE SMOOTH",
"886 1273 OFFCURVE",
"675 1476 OFFCURVE",
"486 1476 QCURVE SMOOTH",
"304 1476 OFFCURVE",
"77 1277 OFFCURVE",
"75 1115 QCURVE",
"260 1115 LINE",
"260 1206 OFFCURVE",
"384 1314 OFFCURVE",
"486 1314 QCURVE SMOOTH",
"591 1314 OFFCURVE",
"701 1195 OFFCURVE",
"701 1090 QCURVE SMOOTH",
"701 981 OFFCURVE",
"617 886 QCURVE",
"486 751 LINE SMOOTH",
"409 667 OFFCURVE",
"359 529 OFFCURVE",
"357 410 QCURVE",
"357 410 LINE"
);
},
{
closed = 1;
nodes = (
"349 48 OFFCURVE",
"404 -11 OFFCURVE",
"512 -11 OFFCURVE",
"568 48 OFFCURVE",
"568 138 OFFCURVE",
"512 199 OFFCURVE",
"404 199 OFFCURVE",
"349 138 OFFCURVE",
"349 93 QCURVE",
"349 93 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 967;
}
);
note = uni003F;
unicode = 003F;
},
{
glyphname = at;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1750 785 OFFCURVE",
"1576 1207 OFFCURVE",
"1220 1431 OFFCURVE",
"971 1431 QCURVE SMOOTH",
"732 1431 OFFCURVE",
"352 1192 OFFCURVE",
"130 753 OFFCURVE",
"118 478 QCURVE SMOOTH",
"106 195 OFFCURVE",
"285 -228 OFFCURVE",
"645 -453 OFFCURVE",
"895 -453 QCURVE SMOOTH",
"1000 -453 OFFCURVE",
"1205 -403 OFFCURVE",
"1267 -364 QCURVE",
"1230 -249 LINE",
"1170 -284 OFFCURVE",
"989 -328 OFFCURVE",
"899 -328 QCURVE SMOOTH",
"690 -328 OFFCURVE",
"395 -135 OFFCURVE",
"251 230 OFFCURVE",
"263 478 QCURVE SMOOTH",
"274 724 OFFCURVE",
"454 1100 OFFCURVE",
"766 1299 OFFCURVE",
"967 1299 QCURVE SMOOTH",
"1301 1299 OFFCURVE",
"1628 891 OFFCURVE",
"1609 502 QCURVE SMOOTH",
"1603 322 OFFCURVE",
"1463 98 OFFCURVE",
"1350 98 QCURVE SMOOTH",
"1203 98 OFFCURVE",
"1222 329 QCURVE SMOOTH",
"1274 883 LINE",
"1194 946 OFFCURVE",
"1066 989 OFFCURVE",
"985 989 QCURVE SMOOTH",
"880 989 OFFCURVE",
"689 841 OFFCURVE",
"568 582 OFFCURVE",
"553 417 QCURVE SMOOTH",
"534 212 OFFCURVE",
"680 -20 OFFCURVE",
"822 -20 QCURVE SMOOTH",
"896 -20 OFFCURVE",
"1035 63 OFFCURVE",
"1089 148 QCURVE",
"1142 -20 OFFCURVE",
"1329 -20 QCURVE SMOOTH",
"1510 -20 OFFCURVE",
"1726 260 OFFCURVE",
"1738 502 QCURVE",
"1738 502 LINE"
);
},
{
closed = 1;
nodes = (
"731 623 OFFCURVE",
"884 861 OFFCURVE",
"1001 861 QCURVE SMOOTH",
"1065 861 OFFCURVE",
"1121 832 QCURVE",
"1075 329 LINE",
"1074 320 LINE",
"1038 225 OFFCURVE",
"927 123 OFFCURVE",
"867 123 QCURVE SMOOTH",
"779 123 OFFCURVE",
"698 275 OFFCURVE",
"712 417 QCURVE",
"712 417 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 50 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
5 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
57 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
35 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
64 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1839;
}
);
note = uni0040;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2020-11-28 02:58:44 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 0 LINE",
"1309 0 LINE",
"752 1456 LINE",
"584 1456 LINE",
"28 0 LINE",
"226 0 LINE",
"363 380 LINE",
"973 380 LINE"
);
},
{
closed = 1;
nodes = (
"668 1219 LINE",
"916 538 LINE",
"421 538 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1336;
}
);
leftKerningGroup = A;
note = uni0041;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = B;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"674 0 LINE SMOOTH",
"906 0 OFFCURVE",
"1160 224 OFFCURVE",
"1160 420 QCURVE SMOOTH",
"1160 548 OFFCURVE",
"1023 733 OFFCURVE",
"905 766 QCURVE",
"1005 809 OFFCURVE",
"1121 966 OFFCURVE",
"1121 1068 QCURVE SMOOTH",
"1121 1260 OFFCURVE",
"882 1456 OFFCURVE",
"645 1456 QCURVE SMOOTH",
"169 1456 LINE",
"169 0 LINE",
"169 0 LINE"
);
},
{
closed = 1;
nodes = (
"681 681 LINE SMOOTH",
"967 681 OFFCURVE",
"967 418 QCURVE SMOOTH",
"967 296 OFFCURVE",
"812 157 OFFCURVE",
"678 157 QCURVE SMOOTH",
"361 157 LINE",
"361 681 LINE",
"361 681 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"645 1298 LINE SMOOTH",
"788 1298 OFFCURVE",
"928 1189 OFFCURVE",
"928 1069 QCURVE SMOOTH",
"928 961 OFFCURVE",
"777 835 OFFCURVE",
"651 835 QCURVE SMOOTH",
"361 835 LINE",
"361 835 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1275;
}
);
note = uni0042;
rightKerningGroup = B;
unicode = 0042;
},
{
glyphname = C;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1047 462 LINE",
"1019 282 OFFCURVE",
"848 137 OFFCURVE",
"688 137 QCURVE SMOOTH",
"510 137 OFFCURVE",
"312 417 OFFCURVE",
"312 654 QCURVE SMOOTH",
"312 795 LINE SMOOTH",
"312 1046 OFFCURVE",
"521 1318 OFFCURVE",
"705 1318 QCURVE SMOOTH",
"855 1318 OFFCURVE",
"1022 1162 OFFCURVE",
"1047 988 QCURVE",
"1240 988 LINE",
"1217 1217 OFFCURVE",
"937 1476 OFFCURVE",
"705 1476 QCURVE SMOOTH",
"530 1476 OFFCURVE",
"264 1311 OFFCURVE",
"119 1003 OFFCURVE",
"119 800 QCURVE SMOOTH",
"119 660 LINE SMOOTH",
"119 350 OFFCURVE",
"430 -20 OFFCURVE",
"688 -20 QCURVE SMOOTH",
"926 -20 OFFCURVE",
"1213 231 OFFCURVE",
"1240 462 QCURVE",
"1240 462 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1333;
}
);
leftKerningGroup = C;
note = uni0043;
rightKerningGroup = C;
unicode = 0043;
},
{
glyphname = D;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"572 0 LINE SMOOTH",
"768 2 OFFCURVE",
"1063 168 OFFCURVE",
"1222 478 OFFCURVE",
"1222 684 QCURVE SMOOTH",
"1222 777 LINE SMOOTH",
"1221 978 OFFCURVE",
"1062 1288 OFFCURVE",
"770 1456 OFFCURVE",
"580 1456 QCURVE SMOOTH",
"169 1456 LINE",
"169 0 LINE",
"169 0 LINE"
);
},
{
closed = 1;
nodes = (
"585 1298 LINE SMOOTH",
"799 1296 OFFCURVE",
"1032 1021 OFFCURVE",
"1032 773 QCURVE SMOOTH",
"1032 688 LINE SMOOTH",
"1032 433 OFFCURVE",
"785 157 OFFCURVE",
"563 157 QCURVE SMOOTH",
"361 157 LINE",
"361 1298 LINE",
"361 1298 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1343;
}
);
note = uni0044;
rightKerningGroup = D;
unicode = 0044;
},
{
glyphname = E;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"992 830 LINE",
"361 830 LINE",
"361 1298 LINE",
"1084 1298 LINE",
"1084 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"1094 0 LINE",
"1094 157 LINE",
"361 157 LINE",
"361 673 LINE",
"992 673 LINE",
"992 673 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 4 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
}
);
note = uni0045;
rightKerningGroup = E;
unicode = 0045;
},
{
glyphname = F;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"972 800 LINE",
"361 800 LINE",
"361 1298 LINE",
"1071 1298 LINE",
"1071 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"361 0 LINE",
"361 643 LINE",
"972 643 LINE",
"972 643 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1132;
}
);
note = uni0046;
unicode = 0046;
},
{
glyphname = G;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1244 725 LINE",
"716 725 LINE",
"716 569 LINE",
"1053 569 LINE",
"1053 242 LINE",
"1000 185 OFFCURVE",
"838 137 OFFCURVE",
"730 137 QCURVE SMOOTH",
"539 137 OFFCURVE",
"315 426 OFFCURVE",
"315 671 QCURVE SMOOTH",
"315 790 LINE SMOOTH",
"316 1047 OFFCURVE",
"515 1318 OFFCURVE",
"708 1318 QCURVE SMOOTH",
"998 1318 OFFCURVE",
"1052 1029 QCURVE",
"1244 1029 LINE",
"1213 1243 OFFCURVE",
"935 1476 OFFCURVE",
"707 1476 QCURVE SMOOTH",
"429 1476 OFFCURVE",
"122 1114 OFFCURVE",
"122 785 QCURVE SMOOTH",
"122 658 LINE SMOOTH",
"124 455 OFFCURVE",
"275 147 OFFCURVE",
"551 -20 OFFCURVE",
"729 -20 QCURVE SMOOTH",
"905 -20 OFFCURVE",
"1170 85 OFFCURVE",
"1244 191 QCURVE",
"1244 191 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1395;
}
);
leftKerningGroup = C;
note = uni0047;
unicode = 0047;
},
{
glyphname = H;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1288 1456 LINE",
"1095 1456 LINE",
"1095 830 LINE",
"361 830 LINE",
"361 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"361 0 LINE",
"361 673 LINE",
"1095 673 LINE",
"1095 0 LINE",
"1288 0 LINE",
"1288 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
239 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
207 9 223 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
143 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
}
);
note = uni0048;
rightKerningGroup = H;
unicode = 0048;
},
{
glyphname = I;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"375 1456 LINE",
"183 1456 LINE",
"183 0 LINE",
"375 0 LINE",
"375 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 557;
}
);
note = uni0049;
rightKerningGroup = H;
unicode = 0049;
},
{
glyphname = J;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"779 422 LINE SMOOTH",
"778 287 OFFCURVE",
"631 137 OFFCURVE",
"512 137 QCURVE SMOOTH",
"382 137 OFFCURVE",
"245 277 OFFCURVE",
"245 402 QCURVE",
"53 402 LINE",
"53 202 OFFCURVE",
"295 -20 OFFCURVE",
"512 -20 QCURVE SMOOTH",
"721 -20 OFFCURVE",
"972 216 OFFCURVE",
"972 425 QCURVE SMOOTH",
"972 1456 LINE",
"779 1456 LINE",
"779 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
}
);
leftKerningGroup = J;
note = uni004A;
rightKerningGroup = J;
unicode = 004A;
},
{
glyphname = K;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1055 0 LINE",
"1285 0 LINE",
"667 813 LINE",
"1240 1456 LINE",
"1008 1456 LINE",
"361 736 LINE",
"361 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"361 0 LINE",
"361 492 LINE",
"539 677 LINE",
"539 677 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 17 values pushed */
74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 8 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
57 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 5 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 19 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 9 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
}
);
note = uni004B;
rightKerningGroup = K;
unicode = 004B;
},
{
glyphname = L;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"362 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"1052 0 LINE",
"1052 157 LINE",
"362 157 LINE",
"362 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1102;
}
);
note = uni004C;
rightKerningGroup = L;
unicode = 004C;
},
{
glyphname = M;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"169 1456 LINE",
"169 0 LINE",
"361 0 LINE",
"361 567 LINE",
"342 1176 LINE",
"819 0 LINE",
"966 0 LINE",
"1444 1179 LINE",
"1426 567 LINE",
"1426 0 LINE",
"1618 0 LINE",
"1618 1456 LINE",
"1369 1456 LINE",
"893 268 LINE",
"417 1456 LINE",
"417 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1788;
}
);
note = uni004D;
rightKerningGroup = H;
unicode = 004D;
},
{
glyphname = N;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1288 1456 LINE",
"1097 1456 LINE",
"1097 329 LINE",
"362 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"362 0 LINE",
"362 1122 LINE",
"1095 0 LINE",
"1288 0 LINE",
"1288 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
}
);
note = uni004E;
rightKerningGroup = H;
unicode = 004E;
},
{
glyphname = O;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1289 773 LINE SMOOTH",
"1289 986 OFFCURVE",
"1145 1307 OFFCURVE",
"878 1476 OFFCURVE",
"703 1476 QCURVE SMOOTH",
"531 1476 OFFCURVE",
"264 1305 OFFCURVE",
"118 983 OFFCURVE",
"118 773 QCURVE SMOOTH",
"118 668 LINE SMOOTH",
"120 462 OFFCURVE",
"267 149 OFFCURVE",
"533 -20 OFFCURVE",
"705 -20 QCURVE SMOOTH",
"881 -20 OFFCURVE",
"1145 148 OFFCURVE",
"1289 467 OFFCURVE",
"1289 681 QCURVE",
"1289 681 LINE"
);
},
{
closed = 1;
nodes = (
"1098 667 LINE SMOOTH",
"1095 414 OFFCURVE",
"891 143 OFFCURVE",
"705 143 QCURVE SMOOTH",
"520 143 OFFCURVE",
"309 430 OFFCURVE",
"309 681 QCURVE SMOOTH",
"309 788 LINE SMOOTH",
"312 1034 OFFCURVE",
"521 1311 OFFCURVE",
"703 1311 QCURVE SMOOTH",
"890 1311 OFFCURVE",
"1098 1034 OFFCURVE",
"1098 775 QCURVE",
"1098 775 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
}
);
leftKerningGroup = C;
note = uni004F;
rightKerningGroup = D;
unicode = 004F;
},
{
glyphname = P;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"704 570 LINE SMOOTH",
"951 570 OFFCURVE",
"1216 799 OFFCURVE",
"1216 1011 QCURVE SMOOTH",
"1216 1212 OFFCURVE",
"945 1456 OFFCURVE",
"706 1456 QCURVE SMOOTH",
"169 1456 LINE",
"169 0 LINE",
"361 0 LINE",
"361 570 LINE",
"361 570 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"717 1298 LINE SMOOTH",
"860 1295 OFFCURVE",
"1024 1139 OFFCURVE",
"1024 1009 QCURVE SMOOTH",
"1024 872 OFFCURVE",
"860 727 OFFCURVE",
"706 727 QCURVE SMOOTH",
"361 727 LINE",
"361 727 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1292;
}
);
note = uni0050;
rightKerningGroup = P;
unicode = 0050;
},
{
glyphname = Q;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1281 774 LINE SMOOTH",
"1281 987 OFFCURVE",
"1137 1306 OFFCURVE",
"870 1476 OFFCURVE",
"694 1476 QCURVE SMOOTH",
"522 1476 OFFCURVE",
"255 1305 OFFCURVE",
"109 983 OFFCURVE",
"109 773 QCURVE SMOOTH",
"109 668 LINE SMOOTH",
"111 462 OFFCURVE",
"258 149 OFFCURVE",
"524 -20 OFFCURVE",
"696 -20 QCURVE SMOOTH",
"776 -20 OFFCURVE",
"848 -2 QCURVE",
"1155 -246 LINE",
"1286 -125 LINE",
"1026 79 LINE",
"1147 165 OFFCURVE",
"1281 470 OFFCURVE",
"1281 681 QCURVE",
"1281 681 LINE"
);
},
{
closed = 1;
nodes = (
"1089 667 LINE SMOOTH",
"1086 414 OFFCURVE",
"882 143 OFFCURVE",
"510 143 OFFCURVE",
"301 431 OFFCURVE",
"301 681 QCURVE SMOOTH",
"301 788 LINE SMOOTH",
"304 1034 OFFCURVE",
"513 1311 OFFCURVE",
"694 1311 QCURVE SMOOTH",
"884 1311 OFFCURVE",
"1089 1032 OFFCURVE",
"1089 775 QCURVE",
"1089 775 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
}
);
leftKerningGroup = C;
note = uni0051;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1019 0 LINE",
"1225 0 LINE",
"1225 12 LINE",
"883 630 LINE",
"1014 680 OFFCURVE",
"1161 882 OFFCURVE",
"1161 1018 QCURVE SMOOTH",
"1161 1232 OFFCURVE",
"896 1456 OFFCURVE",
"650 1456 QCURVE SMOOTH",
"168 1456 LINE",
"168 0 LINE",
"361 0 LINE",
"361 589 LINE",
"703 589 LINE",
"703 589 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"655 1298 LINE SMOOTH",
"807 1297 OFFCURVE",
"968 1153 OFFCURVE",
"968 1018 QCURVE SMOOTH",
"968 894 OFFCURVE",
"799 746 OFFCURVE",
"656 746 QCURVE SMOOTH",
"361 746 LINE",
"361 746 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1261;
}
);
note = uni0052;
unicode = 0052;
},
{
glyphname = S;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"795 592 OFFCURVE",
"945 475 OFFCURVE",
"945 261 OFFCURVE",
"783 137 OFFCURVE",
"631 137 QCURVE SMOOTH",
"468 137 OFFCURVE",
"273 290 OFFCURVE",
"273 422 QCURVE",
"80 422 LINE",
"80 295 OFFCURVE",
"221 95 OFFCURVE",
"481 -20 OFFCURVE",
"631 -20 QCURVE SMOOTH",
"862 -20 OFFCURVE",
"1138 193 OFFCURVE",
"1138 370 QCURVE SMOOTH",
"1138 481 OFFCURVE",
"1039 645 OFFCURVE",
"834 768 OFFCURVE",
"471 870 OFFCURVE",
"320 993 OFFCURVE",
"320 1082 QCURVE SMOOTH",
"320 1193 OFFCURVE",
"479 1318 OFFCURVE",
"621 1318 QCURVE SMOOTH",
"774 1318 OFFCURVE",
"942 1167 OFFCURVE",
"942 1035 QCURVE",
"1135 1035 LINE",
"1135 1156 OFFCURVE",
"1006 1360 OFFCURVE",
"771 1476 OFFCURVE",
"621 1476 QCURVE SMOOTH",
"401 1476 OFFCURVE",
"126 1251 OFFCURVE",
"126 1079 QCURVE SMOOTH",
"126 927 OFFCURVE",
"351 720 OFFCURVE",
"598 649 QCURVE",
"598 649 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
38 26 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1215;
}
);
leftKerningGroup = S;
note = uni0053;
unicode = 0053;
},
{
glyphname = T;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1175 1456 LINE",
"49 1456 LINE",
"49 1298 LINE",
"516 1298 LINE",
"516 0 LINE",
"707 0 LINE",
"707 1298 LINE",
"1175 1298 LINE",
"1175 1298 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1222;
}
);
leftKerningGroup = T;
note = uni0054;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = U;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1001 1456 LINE",
"1001 469 LINE SMOOTH",
"1001 311 OFFCURVE",
"828 137 OFFCURVE",
"665 137 QCURVE SMOOTH",
"504 137 OFFCURVE",
"330 312 OFFCURVE",
"330 470 QCURVE SMOOTH",
"330 1456 LINE",
"140 1456 LINE",
"140 464 LINE SMOOTH",
"142 238 OFFCURVE",
"426 -20 OFFCURVE",
"665 -20 QCURVE SMOOTH",
"716 -18 LINE SMOOTH",
"936 -2 OFFCURVE",
"1193 260 OFFCURVE",
"1194 466 QCURVE SMOOTH",
"1194 1456 LINE",
"1194 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1328;
}
);
leftKerningGroup = U;
note = uni0055;
rightKerningGroup = J;
unicode = 0055;
},
{
glyphname = V;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"237 1456 LINE",
"28 1456 LINE",
"567 0 LINE",
"737 0 LINE",
"1277 1456 LINE",
"1067 1456 LINE",
"651 255 LINE",
"651 255 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1303;
}
);
leftKerningGroup = V;
note = uni0056;
rightKerningGroup = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"253 1456 LINE",
"61 1456 LINE",
"413 0 LINE",
"588 0 LINE",
"899 1061 LINE",
"922 1172 LINE",
"945 1061 LINE",
"1245 0 LINE",
"1420 0 LINE",
"1773 1456 LINE",
"1580 1456 LINE",
"1354 460 LINE",
"1323 264 LINE",
"1283 440 LINE",
"1002 1456 LINE",
"840 1456 LINE",
"552 440 LINE",
"511 267 LINE",
"483 459 LINE",
"483 459 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1817;
}
);
leftKerningGroup = W;
note = uni0057;
rightKerningGroup = W;
unicode = 0057;
},
{
glyphname = X;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"293 1456 LINE",
"68 1456 LINE",
"529 734 LINE",
"57 0 LINE",
"284 0 LINE",
"644 568 LINE",
"1002 0 LINE",
"1230 0 LINE",
"759 734 LINE",
"1219 1456 LINE",
"993 1456 LINE",
"644 898 LINE",
"644 898 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
134 0 150 0 166 0 182 0 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
137 6 153 6 169 6 185 6 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
}
);
leftKerningGroup = X;
note = uni0058;
rightKerningGroup = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"235 1456 LINE",
"15 1456 LINE",
"517 543 LINE",
"517 0 LINE",
"709 0 LINE",
"709 543 LINE",
"1211 1456 LINE",
"993 1456 LINE",
"613 725 LINE",
"613 725 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
}
);
leftKerningGroup = Y;
note = uni0059;
rightKerningGroup = Y;
unicode = 0059;
},
{
glyphname = Z;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1114 1315 LINE",
"1114 1456 LINE",
"99 1456 LINE",
"99 1298 LINE",
"884 1298 LINE",
"86 144 LINE",
"86 0 LINE",
"1146 0 LINE",
"1146 157 LINE",
"313 157 LINE",
"313 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1226;
}
);
leftKerningGroup = Z;
note = uni005A;
rightKerningGroup = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"523 1664 LINE",
"146 1664 LINE",
"146 -312 LINE",
"523 -312 LINE",
"523 -160 LINE",
"332 -160 LINE",
"332 1512 LINE",
"523 1512 LINE",
"523 1512 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
}
);
note = uni005B;
unicode = 005B;
},
{
glyphname = backslash;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"648 -125 LINE",
"824 -125 LINE",
"216 1456 LINE",
"40 1456 LINE",
"40 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 840;
}
);
note = uni005C;
unicode = 005C;
},
{
glyphname = bracketright;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"9 1512 LINE",
"202 1512 LINE",
"202 -160 LINE",
"9 -160 LINE",
"9 -312 LINE",
"387 -312 LINE",
"387 1664 LINE",
"9 1664 LINE",
"9 1664 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
}
);
note = uni005D;
unicode = 005D;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"617 729 LINE",
"788 729 LINE",
"490 1456 LINE",
"363 1456 LINE",
"64 729 LINE",
"236 729 LINE",
"426 1211 LINE",
"426 1211 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
1 7 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
}
);
note = uni005E;
unicode = 005E;
},
{
glyphname = underscore;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"920 0 LINE",
"4 0 LINE",
"4 -151 LINE",
"920 -151 LINE",
"920 -151 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 924;
}
);
note = uni005F;
unicode = 005F;
},
{
glyphname = grave;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"280 1536 LINE",
"57 1536 LINE",
"315 1242 LINE",
"474 1242 LINE",
"474 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 633;
}
);
note = uni0060;
unicode = 0060;
},
{
glyphname = a;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1002 0 LINE",
"1002 16 LINE",
"964 104 OFFCURVE",
"964 253 QCURVE SMOOTH",
"964 751 LINE SMOOTH",
"960 915 OFFCURVE",
"748 1102 OFFCURVE",
"561 1102 QCURVE SMOOTH",
"443 1102 OFFCURVE",
"246 1014 OFFCURVE",
"131 863 OFFCURVE",
"131 782 QCURVE",
"317 782 LINE",
"317 853 OFFCURVE",
"451 953 OFFCURVE",
"550 953 QCURVE SMOOTH",
"663 953 OFFCURVE",
"779 838 OFFCURVE",
"779 741 QCURVE SMOOTH",
"779 656 LINE",
"599 656 LINE SMOOTH",
"366 656 OFFCURVE",
"109 469 OFFCURVE",
"109 300 QCURVE SMOOTH",
"109 161 OFFCURVE",
"314 -20 OFFCURVE",
"474 -20 QCURVE SMOOTH",
"653 -20 OFFCURVE",
"782 114 QCURVE",
"792 32 OFFCURVE",
"808 0 QCURVE",
"808 0 LINE"
);
},
{
closed = 1;
nodes = (
"410 141 OFFCURVE",
"294 239 OFFCURVE",
"294 326 QCURVE SMOOTH",
"294 525 OFFCURVE",
"634 525 QCURVE SMOOTH",
"779 525 LINE",
"779 303 LINE",
"744 231 OFFCURVE",
"588 141 OFFCURVE",
"501 141 QCURVE",
"501 141 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
23 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1114;
}
);
leftKerningGroup = a;
note = uni0061;
rightKerningGroup = a;
unicode = 0061;
},
{
glyphname = b;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1056 545 LINE SMOOTH",
"1056 804 OFFCURVE",
"831 1102 OFFCURVE",
"437 1102 OFFCURVE",
"325 963 QCURVE",
"325 1536 LINE",
"140 1536 LINE",
"140 0 LINE",
"310 0 LINE",
"319 125 LINE",
"431 -20 OFFCURVE",
"636 -20 QCURVE SMOOTH",
"828 -20 OFFCURVE",
"1056 281 OFFCURVE",
"1056 529 QCURVE",
"1056 529 LINE"
);
},
{
closed = 1;
nodes = (
"871 343 OFFCURVE",
"723 137 OFFCURVE",
"590 137 QCURVE SMOOTH",
"410 137 OFFCURVE",
"325 307 QCURVE",
"325 775 LINE",
"405 945 OFFCURVE",
"588 945 QCURVE SMOOTH",
"725 945 OFFCURVE",
"871 739 OFFCURVE",
"871 550 QCURVE",
"871 550 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 8 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
note = uni0062;
rightKerningGroup = b;
unicode = 0062;
},
{
glyphname = c;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"431 131 OFFCURVE",
"277 333 OFFCURVE",
"277 520 QCURVE SMOOTH",
"277 555 LINE SMOOTH",
"277 747 OFFCURVE",
"432 950 OFFCURVE",
"573 950 QCURVE SMOOTH",
"678 950 OFFCURVE",
"821 815 OFFCURVE",
"829 710 QCURVE",
"1004 710 LINE",
"996 884 OFFCURVE",
"755 1102 OFFCURVE",
"573 1102 QCURVE SMOOTH",
"425 1102 OFFCURVE",
"208 966 OFFCURVE",
"92 720 OFFCURVE",
"92 562 QCURVE SMOOTH",
"92 531 LINE SMOOTH",
"92 275 OFFCURVE",
"353 -20 OFFCURVE",
"574 -20 QCURVE SMOOTH",
"684 -20 OFFCURVE",
"881 80 OFFCURVE",
"999 248 OFFCURVE",
"1004 341 QCURVE",
"829 341 LINE",
"821 251 OFFCURVE",
"673 131 OFFCURVE",
"574 131 QCURVE",
"574 131 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1072;
}
);
leftKerningGroup = c;
note = uni0063;
rightKerningGroup = c;
unicode = 0063;
},
{
glyphname = d;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"95 536 LINE SMOOTH",
"95 288 OFFCURVE",
"332 -20 OFFCURVE",
"520 -20 QCURVE SMOOTH",
"718 -20 OFFCURVE",
"829 116 QCURVE",
"838 0 LINE",
"1008 0 LINE",
"1008 1536 LINE",
"823 1536 LINE",
"823 972 LINE",
"712 1102 OFFCURVE",
"522 1102 QCURVE SMOOTH",
"331 1102 OFFCURVE",
"95 799 OFFCURVE",
"95 550 QCURVE",
"95 550 LINE"
);
},
{
closed = 1;
nodes = (
"280 735 OFFCURVE",
"432 945 OFFCURVE",
"568 945 QCURVE SMOOTH",
"740 945 OFFCURVE",
"823 792 QCURVE",
"823 295 LINE",
"742 137 OFFCURVE",
"566 137 QCURVE SMOOTH",
"432 137 OFFCURVE",
"280 345 OFFCURVE",
"280 529 QCURVE",
"280 529 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1155;
}
);
leftKerningGroup = c;
note = uni0064;
unicode = 0064;
},
{
glyphname = e;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"861 -20 OFFCURVE",
"997 189 QCURVE",
"884 277 LINE",
"833 211 OFFCURVE",
"697 131 OFFCURVE",
"599 131 QCURVE SMOOTH",
"461 131 OFFCURVE",
"282 328 OFFCURVE",
"278 488 QCURVE",
"1011 488 LINE",
"1011 565 LINE SMOOTH",
"1011 824 OFFCURVE",
"777 1102 OFFCURVE",
"566 1102 QCURVE SMOOTH",
"437 1102 OFFCURVE",
"216 959 OFFCURVE",
"93 706 OFFCURVE",
"93 545 QCURVE SMOOTH",
"93 511 LINE SMOOTH",
"93 269 OFFCURVE",
"369 -20 OFFCURVE",
"589 -20 QCURVE",
"589 -20 LINE"
);
},
{
closed = 1;
nodes = (
"682 950 OFFCURVE",
"818 795 OFFCURVE",
"826 654 QCURVE SMOOTH",
"826 640 LINE",
"284 640 LINE",
"302 787 OFFCURVE",
"454 950 OFFCURVE",
"566 950 QCURVE",
"566 950 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 26 207 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
}
);
leftKerningGroup = c;
note = uni0065;
rightKerningGroup = e;
unicode = 0065;
},
{
glyphname = f;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 939 LINE",
"647 939 LINE",
"647 1082 LINE",
"416 1082 LINE",
"416 1196 LINE SMOOTH",
"416 1294 OFFCURVE",
"514 1399 OFFCURVE",
"604 1399 QCURVE SMOOTH",
"657 1399 OFFCURVE",
"704 1390 QCURVE",
"714 1540 LINE",
"651 1557 OFFCURVE",
"587 1557 QCURVE SMOOTH",
"417 1557 OFFCURVE",
"231 1367 OFFCURVE",
"231 1193 QCURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE",
"231 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
note = uni0066;
unicode = 0066;
},
{
glyphname = g;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"96 286 OFFCURVE",
"331 -20 OFFCURVE",
"521 -20 QCURVE SMOOTH",
"713 -20 OFFCURVE",
"824 108 QCURVE",
"824 15 LINE SMOOTH",
"824 -123 OFFCURVE",
"673 -275 OFFCURVE",
"538 -275 QCURVE SMOOTH",
"366 -275 OFFCURVE",
"247 -128 QCURVE",
"151 -239 LINE",
"210 -326 OFFCURVE",
"434 -426 OFFCURVE",
"551 -426 QCURVE SMOOTH",
"761 -426 OFFCURVE",
"1010 -184 OFFCURVE",
"1010 26 QCURVE SMOOTH",
"1010 1082 LINE",
"841 1082 LINE",
"832 962 LINE",
"721 1102 OFFCURVE",
"523 1102 QCURVE SMOOTH",
"330 1102 OFFCURVE",
"96 803 OFFCURVE",
"96 550 QCURVE",
"96 550 LINE"
);
},
{
closed = 1;
nodes = (
"282 735 OFFCURVE",
"434 945 OFFCURVE",
"569 945 QCURVE SMOOTH",
"739 945 OFFCURVE",
"824 790 QCURVE",
"824 296 LINE",
"742 137 OFFCURVE",
"567 137 QCURVE SMOOTH",
"432 137 OFFCURVE",
"282 346 OFFCURVE",
"282 529 QCURVE",
"282 529 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
34 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 23 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
leftKerningGroup = c;
note = uni0067;
unicode = 0067;
},
{
glyphname = h;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"325 1536 LINE",
"140 1536 LINE",
"140 0 LINE",
"325 0 LINE",
"325 771 LINE",
"363 849 OFFCURVE",
"499 945 OFFCURVE",
"589 945 QCURVE SMOOTH",
"700 945 OFFCURVE",
"805 833 OFFCURVE",
"806 716 QCURVE SMOOTH",
"806 0 LINE",
"991 0 LINE",
"991 715 LINE SMOOTH",
"988 1102 OFFCURVE",
"645 1102 QCURVE SMOOTH",
"448 1102 OFFCURVE",
"325 951 QCURVE",
"325 951 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1128;
}
);
note = uni0068;
rightKerningGroup = h;
unicode = 0068;
},
{
glyphname = i;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1082 LINE",
"156 1082 LINE",
"156 0 LINE",
"341 0 LINE",
"341 0 LINE"
);
},
{
closed = 1;
nodes = (
"141 1324 OFFCURVE",
"196 1264 OFFCURVE",
"304 1264 OFFCURVE",
"360 1324 OFFCURVE",
"360 1414 OFFCURVE",
"304 1476 OFFCURVE",
"196 1476 OFFCURVE",
"141 1414 OFFCURVE",
"141 1369 QCURVE",
"141 1369 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
}
);
note = uni0069;
unicode = 0069;
},
{
glyphname = j;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"146 1082 LINE",
"146 -129 LINE SMOOTH",
"146 -212 OFFCURVE",
"81 -279 OFFCURVE",
"19 -279 QCURVE SMOOTH",
"-33 -279 OFFCURVE",
"-65 -271 QCURVE",
"-65 -419 LINE",
"-13 -437 OFFCURVE",
"48 -437 QCURVE SMOOTH",
"331 -437 OFFCURVE",
"331 -125 QCURVE SMOOTH",
"331 1082 LINE",
"331 1082 LINE"
);
},
{
closed = 1;
nodes = (
"127 1324 OFFCURVE",
"181 1264 OFFCURVE",
"289 1264 OFFCURVE",
"345 1324 OFFCURVE",
"345 1414 OFFCURVE",
"289 1476 OFFCURVE",
"235 1476 QCURVE SMOOTH",
"182 1476 OFFCURVE",
"127 1413 OFFCURVE",
"127 1369 QCURVE",
"127 1369 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 489;
}
);
note = uni006A;
unicode = 006A;
},
{
glyphname = k;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"819 0 LINE",
"1036 0 LINE",
"566 630 LINE",
"987 1082 LINE",
"762 1082 LINE",
"425 726 LINE",
"326 607 LINE",
"326 1536 LINE",
"141 1536 LINE",
"141 0 LINE",
"326 0 LINE",
"326 380 LINE",
"442 501 LINE",
"442 501 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
58 0 74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 202 0 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1038;
}
);
note = uni006B;
unicode = 006B;
},
{
glyphname = l;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1536 LINE",
"156 1536 LINE",
"156 0 LINE",
"341 0 LINE",
"341 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
}
);
note = uni006C;
unicode = 006C;
},
{
glyphname = m;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"139 1082 LINE",
"139 0 LINE",
"324 0 LINE",
"324 790 LINE",
"391 945 OFFCURVE",
"573 945 QCURVE SMOOTH",
"804 945 OFFCURVE",
"804 709 QCURVE SMOOTH",
"804 0 LINE",
"990 0 LINE",
"990 718 LINE",
"1001 822 OFFCURVE",
"1137 945 OFFCURVE",
"1240 945 QCURVE SMOOTH",
"1365 945 OFFCURVE",
"1471 830 OFFCURVE",
"1471 714 QCURVE SMOOTH",
"1471 0 LINE",
"1656 0 LINE",
"1656 725 LINE SMOOTH",
"1650 1102 OFFCURVE",
"1294 1102 QCURVE SMOOTH",
"1176 1102 OFFCURVE",
"1003 1006 OFFCURVE",
"949 928 QCURVE",
"867 1102 OFFCURVE",
"640 1102 QCURVE SMOOTH",
"438 1102 OFFCURVE",
"319 962 QCURVE",
"314 1082 LINE",
"314 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1795;
}
);
leftKerningGroup = m;
note = uni006D;
rightKerningGroup = h;
unicode = 006D;
},
{
glyphname = n;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"140 1082 LINE",
"140 0 LINE",
"325 0 LINE",
"325 771 LINE",
"363 849 OFFCURVE",
"499 945 OFFCURVE",
"589 945 QCURVE SMOOTH",
"700 945 OFFCURVE",
"805 833 OFFCURVE",
"806 716 QCURVE SMOOTH",
"806 0 LINE",
"991 0 LINE",
"991 715 LINE SMOOTH",
"988 1102 OFFCURVE",
"645 1102 QCURVE SMOOTH",
"445 1102 OFFCURVE",
"321 946 QCURVE",
"315 1082 LINE",
"315 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
}
);
leftKerningGroup = m;
note = uni006E;
rightKerningGroup = h;
unicode = 006E;
},
{
glyphname = o;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 538 LINE SMOOTH",
"91 286 OFFCURVE",
"364 -20 OFFCURVE",
"584 -20 QCURVE SMOOTH",
"730 -20 OFFCURVE",
"955 120 OFFCURVE",
"1076 371 OFFCURVE",
"1076 529 QCURVE SMOOTH",
"1076 542 LINE SMOOTH",
"1076 796 OFFCURVE",
"803 1102 OFFCURVE",
"582 1102 QCURVE SMOOTH",
"439 1102 OFFCURVE",
"216 964 OFFCURVE",
"91 710 OFFCURVE",
"91 551 QCURVE",
"91 551 LINE"
);
},
{
closed = 1;
nodes = (
"277 732 OFFCURVE",
"445 950 OFFCURVE",
"582 950 QCURVE SMOOTH",
"722 950 OFFCURVE",
"891 729 OFFCURVE",
"891 551 QCURVE SMOOTH",
"891 352 OFFCURVE",
"725 131 OFFCURVE",
"584 131 QCURVE SMOOTH",
"444 131 OFFCURVE",
"277 349 OFFCURVE",
"277 529 QCURVE",
"277 529 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1168;
}
);
leftKerningGroup = o;
note = uni006F;
rightKerningGroup = o;
unicode = 006F;
},
{
glyphname = p;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1054 546 LINE SMOOTH",
"1054 808 OFFCURVE",
"827 1102 OFFCURVE",
"632 1102 QCURVE SMOOTH",
"431 1102 OFFCURVE",
"318 962 QCURVE",
"309 1082 LINE",
"140 1082 LINE",
"140 -416 LINE",
"325 -416 LINE",
"325 105 LINE",
"438 -20 OFFCURVE",
"635 -20 QCURVE SMOOTH",
"828 -20 OFFCURVE",
"1054 282 OFFCURVE",
"1054 529 QCURVE",
"1054 529 LINE"
);
},
{
closed = 1;
nodes = (
"869 342 OFFCURVE",
"712 131 OFFCURVE",
"579 131 QCURVE SMOOTH",
"408 131 OFFCURVE",
"325 279 QCURVE",
"325 796 LINE",
"409 945 OFFCURVE",
"577 945 QCURVE SMOOTH",
"713 945 OFFCURVE",
"869 733 OFFCURVE",
"869 550 QCURVE",
"869 550 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
leftKerningGroup = m;
note = uni0070;
rightKerningGroup = b;
unicode = 0070;
},
{
glyphname = q;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"95 537 LINE SMOOTH",
"95 285 OFFCURVE",
"328 -20 OFFCURVE",
"524 -20 QCURVE SMOOTH",
"710 -20 OFFCURVE",
"822 100 QCURVE",
"822 -416 LINE",
"1007 -416 LINE",
"1007 1082 LINE",
"837 1082 LINE",
"829 973 LINE",
"718 1102 OFFCURVE",
"526 1102 QCURVE SMOOTH",
"329 1102 OFFCURVE",
"95 805 OFFCURVE",
"95 550 QCURVE",
"95 550 LINE"
);
},
{
closed = 1;
nodes = (
"280 737 OFFCURVE",
"438 950 OFFCURVE",
"572 950 QCURVE SMOOTH",
"734 950 OFFCURVE",
"822 807 QCURVE",
"822 277 LINE",
"735 131 OFFCURVE",
"570 131 QCURVE SMOOTH",
"437 131 OFFCURVE",
"280 343 OFFCURVE",
"280 529 QCURVE",
"280 529 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
}
);
leftKerningGroup = c;
note = uni0071;
unicode = 0071;
},
{
glyphname = r;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"663 1088 LINE",
"635 1102 OFFCURVE",
"581 1102 QCURVE SMOOTH",
"414 1102 OFFCURVE",
"323 957 QCURVE",
"320 1082 LINE",
"140 1082 LINE",
"140 0 LINE",
"325 0 LINE",
"325 768 LINE",
"390 923 OFFCURVE",
"572 923 QCURVE SMOOTH",
"621 923 OFFCURVE",
"663 916 QCURVE",
"663 916 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 11 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
}
);
note = uni0072;
rightKerningGroup = r;
unicode = 0072;
},
{
glyphname = s;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"770 216 OFFCURVE",
"643 131 OFFCURVE",
"538 131 QCURVE SMOOTH",
"424 131 OFFCURVE",
"285 240 OFFCURVE",
"280 333 QCURVE",
"95 333 LINE",
"95 237 OFFCURVE",
"208 72 OFFCURVE",
"408 -20 OFFCURVE",
"538 -20 QCURVE SMOOTH",
"723 -20 OFFCURVE",
"955 155 OFFCURVE",
"955 300 QCURVE SMOOTH",
"955 387 OFFCURVE",
"872 508 OFFCURVE",
"700 594 OFFCURVE",
"423 656 OFFCURVE",
"317 724 OFFCURVE",
"317 791 QCURVE SMOOTH",
"317 862 OFFCURVE",
"431 950 OFFCURVE",
"532 950 QCURVE SMOOTH",
"630 950 OFFCURVE",
"759 840 OFFCURVE",
"759 764 QCURVE",
"945 764 LINE",
"945 912 OFFCURVE",
"716 1102 OFFCURVE",
"532 1102 QCURVE SMOOTH",
"357 1102 OFFCURVE",
"132 918 OFFCURVE",
"132 785 QCURVE SMOOTH",
"132 705 OFFCURVE",
"211 589 OFFCURVE",
"376 505 OFFCURVE",
"657 445 OFFCURVE",
"770 362 OFFCURVE",
"770 287 QCURVE",
"770 287 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
}
);
leftKerningGroup = s;
note = uni0073;
unicode = 0073;
},
{
glyphname = t;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"206 1344 LINE",
"206 1082 LINE",
"9 1082 LINE",
"9 939 LINE",
"206 939 LINE",
"206 268 LINE SMOOTH",
"206 130 OFFCURVE",
"332 -20 OFFCURVE",
"456 -20 QCURVE SMOOTH",
"525 -20 OFFCURVE",
"598 0 QCURVE",
"598 150 LINE",
"542 138 OFFCURVE",
"510 138 QCURVE SMOOTH",
"445 138 OFFCURVE",
"391 203 OFFCURVE",
"391 268 QCURVE SMOOTH",
"391 939 LINE",
"593 939 LINE",
"593 1082 LINE",
"391 1082 LINE",
"391 1344 LINE",
"391 1344 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 669;
}
);
note = uni0074;
unicode = 0074;
},
{
glyphname = u;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"812 0 LINE",
"988 0 LINE",
"988 1082 LINE",
"803 1082 LINE",
"803 295 LINE",
"733 137 OFFCURVE",
"521 137 QCURVE SMOOTH",
"321 137 OFFCURVE",
"321 383 QCURVE SMOOTH",
"321 1082 LINE",
"136 1082 LINE",
"136 378 LINE SMOOTH",
"137 181 OFFCURVE",
"318 -20 OFFCURVE",
"491 -20 QCURVE SMOOTH",
"700 -20 OFFCURVE",
"808 107 QCURVE",
"808 107 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
}
);
leftKerningGroup = u;
note = uni0075;
unicode = 0075;
},
{
glyphname = v;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"222 1082 LINE",
"33 1082 LINE",
"425 0 LINE",
"566 0 LINE",
"954 1082 LINE",
"765 1082 LINE",
"497 251 LINE",
"497 251 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 992;
}
);
leftKerningGroup = v;
note = uni0076;
rightKerningGroup = v;
unicode = 0076;
},
{
glyphname = w;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"841 1082 LINE",
"692 1082 LINE",
"440 272 LINE",
"227 1082 LINE",
"43 1082 LINE",
"357 0 LINE",
"507 0 LINE",
"763 820 LINE",
"1026 0 LINE",
"1176 0 LINE",
"1491 1082 LINE",
"1306 1082 LINE",
"1098 255 LINE",
"1098 255 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1539;
}
);
note = uni0077;
unicode = 0077;
},
{
glyphname = x;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"266 1082 LINE",
"52 1082 LINE",
"406 547 LINE",
"41 0 LINE",
"256 0 LINE",
"506 405 LINE",
"756 0 LINE",
"970 0 LINE",
"605 547 LINE",
"959 1082 LINE",
"743 1082 LINE",
"503 687 LINE",
"503 687 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
}
);
leftKerningGroup = x;
note = uni0078;
rightKerningGroup = x;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"224 1082 LINE",
"22 1082 LINE",
"408 12 LINE",
"367 -98 LINE SMOOTH",
"333 -199 OFFCURVE",
"228 -275 OFFCURVE",
"134 -275 QCURVE",
"84 -271 LINE",
"84 -421 LINE",
"153 -434 LINE",
"188 -437 LINE",
"408 -437 OFFCURVE",
"509 -167 QCURVE",
"944 1082 LINE",
"746 1082 LINE",
"494 271 LINE",
"494 271 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 14 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
}
);
leftKerningGroup = v;
note = uni0079;
rightKerningGroup = v;
unicode = 0079;
},
{
glyphname = z;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"917 951 LINE",
"917 1082 LINE",
"97 1082 LINE",
"97 929 LINE",
"685 929 LINE",
"88 136 LINE",
"88 0 LINE",
"947 0 LINE",
"947 151 LINE",
"314 151 LINE",
"314 151 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
}
);
leftKerningGroup = z;
note = uni007A;
rightKerningGroup = z;
unicode = 007A;
},
{
glyphname = braceleft;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"670 -251 LINE",
"464 -185 OFFCURVE",
"461 90 QCURVE SMOOTH",
"461 296 LINE SMOOTH",
"461 525 OFFCURVE",
"294 615 QCURVE",
"461 704 OFFCURVE",
"461 931 QCURVE SMOOTH",
"461 1133 LINE SMOOTH",
"461 1415 OFFCURVE",
"670 1482 QCURVE",
"632 1597 LINE",
"453 1546 OFFCURVE",
"278 1321 OFFCURVE",
"276 1138 QCURVE SMOOTH",
"276 930 LINE SMOOTH",
"276 688 OFFCURVE",
"64 688 QCURVE",
"64 543 LINE",
"276 543 OFFCURVE",
"276 300 QCURVE SMOOTH",
"276 101 LINE SMOOTH",
"276 -87 OFFCURVE",
"455 -316 OFFCURVE",
"632 -366 QCURVE",
"632 -366 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
}
);
note = uni007B;
unicode = 007B;
},
{
glyphname = bar;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"324 1456 LINE",
"175 1456 LINE",
"175 -270 LINE",
"324 -270 LINE",
"324 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 499;
}
);
note = uni007C;
unicode = 007C;
},
{
glyphname = braceright;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"58 -366 LINE",
"233 -316 OFFCURVE",
"414 -90 OFFCURVE",
"414 98 QCURVE SMOOTH",
"414 300 LINE SMOOTH",
"414 543 OFFCURVE",
"626 543 QCURVE",
"626 688 LINE",
"414 688 OFFCURVE",
"414 927 QCURVE SMOOTH",
"414 1137 LINE SMOOTH",
"413 1322 OFFCURVE",
"235 1547 OFFCURVE",
"58 1597 QCURVE",
"20 1482 LINE",
"229 1415 OFFCURVE",
"229 1133 QCURVE SMOOTH",
"229 930 LINE SMOOTH",
"229 697 OFFCURVE",
"410 615 QCURVE",
"229 531 OFFCURVE",
"229 300 QCURVE SMOOTH",
"229 80 LINE SMOOTH",
"222 -186 OFFCURVE",
"19 -251 QCURVE",
"19 -251 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 11 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 17 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 18 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
}
);
note = uni007D;
unicode = 007D;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1110 776 LINE",
"1110 681 OFFCURVE",
"1015 565 OFFCURVE",
"939 565 QCURVE",
"910 567 LINE",
"846 577 OFFCURVE",
"670 738 OFFCURVE",
"530 802 OFFCURVE",
"454 802 QCURVE SMOOTH",
"315 802 OFFCURVE",
"131 596 OFFCURVE",
"131 436 QCURVE",
"292 438 LINE",
"292 532 OFFCURVE",
"376 639 OFFCURVE",
"454 639 QCURVE SMOOTH",
"496 639 OFFCURVE",
"570 603 OFFCURVE",
"739 455 OFFCURVE",
"867 402 OFFCURVE",
"939 402 QCURVE SMOOTH",
"1076 402 OFFCURVE",
"1263 619 OFFCURVE",
"1263 777 QCURVE",
"1263 777 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1393;
}
);
note = uni007E;
unicode = 007E;
},
{
glyphname = exclamdown;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"157 -360 LINE",
"351 -360 LINE",
"338 684 LINE",
"170 684 LINE",
"170 684 LINE"
);
},
{
closed = 1;
nodes = (
"358 1041 OFFCURVE",
"303 1101 OFFCURVE",
"195 1101 OFFCURVE",
"139 1041 OFFCURVE",
"139 951 OFFCURVE",
"195 889 OFFCURVE",
"303 889 OFFCURVE",
"358 951 OFFCURVE",
"358 996 QCURVE",
"358 996 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 2 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 499;
}
);
note = uni00A1;
unicode = 00A1;
},
{
glyphname = cent;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"445 131 OFFCURVE",
"290 333 OFFCURVE",
"290 520 QCURVE SMOOTH",
"290 555 LINE SMOOTH",
"290 747 OFFCURVE",
"445 950 OFFCURVE",
"586 950 QCURVE SMOOTH",
"691 950 OFFCURVE",
"834 815 OFFCURVE",
"842 710 QCURVE",
"1017 710 LINE",
"1011 860 OFFCURVE",
"819 1072 OFFCURVE",
"669 1095 QCURVE",
"669 1318 LINE",
"484 1318 LINE",
"484 1092 LINE",
"307 1059 OFFCURVE",
"105 774 OFFCURVE",
"105 562 QCURVE SMOOTH",
"105 527 LINE SMOOTH",
"105 307 OFFCURVE",
"305 23 OFFCURVE",
"484 -11 QCURVE",
"484 -245 LINE",
"669 -245 LINE",
"669 -12 LINE",
"813 14 OFFCURVE",
"1011 215 OFFCURVE",
"1017 341 QCURVE",
"842 341 LINE",
"834 252 OFFCURVE",
"686 131 OFFCURVE",
"586 131 QCURVE",
"586 131 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1120;
}
);
note = uni00A2;
unicode = 00A2;
},
{
glyphname = sterling;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"763 622 LINE",
"763 779 LINE",
"444 779 LINE",
"435 1039 LINE",
"435 1164 OFFCURVE",
"565 1318 OFFCURVE",
"670 1318 QCURVE SMOOTH",
"781 1318 OFFCURVE",
"908 1194 OFFCURVE",
"908 1087 QCURVE",
"1099 1087 LINE",
"1099 1264 OFFCURVE",
"877 1476 OFFCURVE",
"687 1476 QCURVE SMOOTH",
"487 1476 OFFCURVE",
"242 1238 OFFCURVE",
"242 1039 QCURVE",
"251 779 LINE",
"91 779 LINE",
"91 622 LINE",
"256 622 LINE",
"264 401 LINE",
"264 393 LINE SMOOTH",
"262 297 OFFCURVE",
"212 166 OFFCURVE",
"172 157 QCURVE",
"95 157 LINE",
"95 0 LINE",
"1127 0 LINE",
"1128 157 LINE",
"395 157 LINE",
"457 248 OFFCURVE",
"457 402 QCURVE",
"449 622 LINE",
"449 622 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 20 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 31 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 31 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1190;
}
);
note = uni00A3;
unicode = 00A3;
},
{
glyphname = currency;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1239 -27 LINE",
"1371 109 LINE",
"1228 253 LINE",
"1330 412 OFFCURVE",
"1330 608 QCURVE SMOOTH",
"1330 811 OFFCURVE",
"1220 974 QCURVE",
"1371 1128 LINE",
"1239 1265 LINE",
"1090 1113 LINE",
"931 1234 OFFCURVE",
"735 1234 QCURVE SMOOTH",
"540 1234 OFFCURVE",
"382 1114 QCURVE",
"235 1264 LINE",
"105 1128 LINE",
"252 977 LINE",
"140 814 OFFCURVE",
"140 608 QCURVE SMOOTH",
"140 406 OFFCURVE",
"244 250 QCURVE",
"105 109 LINE",
"235 -26 LINE",
"369 110 LINE",
"528 -20 OFFCURVE",
"735 -20 QCURVE SMOOTH",
"944 -20 OFFCURVE",
"1103 112 QCURVE",
"1103 112 LINE"
);
},
{
closed = 1;
nodes = (
"311 730 OFFCURVE",
"426 942 OFFCURVE",
"622 1062 OFFCURVE",
"735 1062 QCURVE SMOOTH",
"847 1062 OFFCURVE",
"1044 941 OFFCURVE",
"1157 730 OFFCURVE",
"1157 608 QCURVE SMOOTH",
"1157 485 OFFCURVE",
"1044 274 OFFCURVE",
"848 151 OFFCURVE",
"622 151 OFFCURVE",
"426 273 OFFCURVE",
"311 485 OFFCURVE",
"311 608 QCURVE",
"311 608 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
}
);
note = uni00A4;
unicode = 00A4;
},
{
glyphname = yen;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"231 1456 LINE",
"15 1456 LINE",
"382 736 LINE",
"119 736 LINE",
"119 611 LINE",
"437 611 LINE",
"437 446 LINE",
"119 446 LINE",
"119 322 LINE",
"437 322 LINE",
"437 0 LINE",
"630 0 LINE",
"630 322 LINE",
"954 322 LINE",
"954 446 LINE",
"630 446 LINE",
"630 611 LINE",
"954 611 LINE",
"954 736 LINE",
"693 736 LINE",
"1060 1456 LINE",
"847 1456 LINE",
"539 793 LINE",
"539 793 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 1 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1075;
}
);
note = uni00A5;
unicode = 00A5;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"333 -270 LINE",
"333 521 LINE",
"147 521 LINE",
"147 -270 LINE",
"147 -270 LINE"
);
},
{
closed = 1;
nodes = (
"333 1456 LINE",
"147 1456 LINE",
"147 698 LINE",
"333 698 LINE",
"333 698 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 491;
}
);
note = uni00A6;
unicode = 00A6;
},
{
glyphname = section;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1145 520 OFFCURVE",
"1087 649 OFFCURVE",
"974 746 OFFCURVE",
"805 818 OFFCURVE",
"518 898 OFFCURVE",
"383 963 OFFCURVE",
"327 1043 OFFCURVE",
"327 1112 QCURVE SMOOTH",
"327 1210 OFFCURVE",
"488 1325 OFFCURVE",
"630 1325 QCURVE SMOOTH",
"769 1325 OFFCURVE",
"937 1170 OFFCURVE",
"937 1045 QCURVE",
"1122 1045 LINE",
"1122 1250 OFFCURVE",
"862 1476 OFFCURVE",
"630 1476 QCURVE SMOOTH",
"408 1476 OFFCURVE",
"141 1276 OFFCURVE",
"141 1110 QCURVE SMOOTH",
"141 1010 OFFCURVE",
"212 874 OFFCURVE",
"278 825 QCURVE",
"96 737 OFFCURVE",
"96 551 QCURVE SMOOTH",
"96 440 OFFCURVE",
"189 285 OFFCURVE",
"381 174 OFFCURVE",
"563 126 QCURVE SMOOTH",
"772 64 OFFCURVE",
"914 -41 OFFCURVE",
"914 -130 QCURVE SMOOTH",
"914 -226 OFFCURVE",
"748 -343 OFFCURVE",
"612 -343 QCURVE SMOOTH",
"456 -343 OFFCURVE",
"276 -192 OFFCURVE",
"276 -62 QCURVE",
"90 -64 LINE",
"90 -269 OFFCURVE",
"229 -382 QCURVE SMOOTH",
"299 -439 OFFCURVE",
"500 -495 OFFCURVE",
"612 -495 QCURVE SMOOTH",
"840 -495 OFFCURVE",
"1100 -296 OFFCURVE",
"1100 -128 QCURVE SMOOTH",
"1100 -28 OFFCURVE",
"1028 108 OFFCURVE",
"959 157 QCURVE",
"1145 242 OFFCURVE",
"1145 431 QCURVE",
"1145 431 LINE"
);
},
{
closed = 1;
nodes = (
"820 625 OFFCURVE",
"959 516 OFFCURVE",
"959 428 QCURVE SMOOTH",
"959 359 OFFCURVE",
"875 258 OFFCURVE",
"797 238 QCURVE",
"753 255 OFFCURVE",
"469 337 OFFCURVE",
"336 403 OFFCURVE",
"282 483 OFFCURVE",
"282 553 QCURVE SMOOTH",
"282 622 OFFCURVE",
"357 723 OFFCURVE",
"437 742 QCURVE",
"512 715 OFFCURVE",
"602 691 QCURVE",
"602 691 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
35 69 70 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 8 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
63 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 22 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
48 35 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
55 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 55 48 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1256;
}
);
note = uni00A7;
unicode = 00A7;
},
{
glyphname = dieresis;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"101 1326 OFFCURVE",
"156 1266 OFFCURVE",
"264 1266 OFFCURVE",
"320 1326 OFFCURVE",
"320 1416 OFFCURVE",
"264 1477 OFFCURVE",
"156 1477 OFFCURVE",
"101 1416 OFFCURVE",
"101 1371 QCURVE",
"101 1371 LINE"
);
},
{
closed = 1;
nodes = (
"531 1324 OFFCURVE",
"586 1264 OFFCURVE",
"694 1264 OFFCURVE",
"750 1324 OFFCURVE",
"750 1414 OFFCURVE",
"694 1476 OFFCURVE",
"586 1476 OFFCURVE",
"531 1414 OFFCURVE",
"531 1369 QCURVE",
"531 1369 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
}
);
note = uni00A8;
unicode = 00A8;
},
{
glyphname = copyright;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"973 597 LINE",
"973 496 OFFCURVE",
"880 412 OFFCURVE",
"788 412 QCURVE SMOOTH",
"694 412 OFFCURVE",
"586 550 OFFCURVE",
"586 670 QCURVE SMOOTH",
"586 783 LINE SMOOTH",
"586 906 OFFCURVE",
"694 1044 OFFCURVE",
"788 1044 QCURVE SMOOTH",
"879 1044 OFFCURVE",
"974 959 OFFCURVE",
"974 860 QCURVE",
"1120 860 LINE",
"1120 1009 OFFCURVE",
"948 1173 OFFCURVE",
"788 1173 QCURVE SMOOTH",
"633 1173 OFFCURVE",
"442 962 OFFCURVE",
"442 786 QCURVE SMOOTH",
"442 676 LINE SMOOTH",
"442 494 OFFCURVE",
"631 283 OFFCURVE",
"788 283 QCURVE SMOOTH",
"946 283 OFFCURVE",
"1119 444 OFFCURVE",
"1119 597 QCURVE",
"1119 597 LINE"
);
},
{
closed = 1;
nodes = (
"206 899 OFFCURVE",
"365 1191 OFFCURVE",
"641 1356 OFFCURVE",
"801 1356 QCURVE SMOOTH",
"962 1356 OFFCURVE",
"1237 1189 OFFCURVE",
"1395 899 OFFCURVE",
"1395 729 QCURVE SMOOTH",
"1395 557 OFFCURVE",
"1235 264 OFFCURVE",
"961 98 OFFCURVE",
"641 98 OFFCURVE",
"366 264 OFFCURVE",
"206 557 OFFCURVE",
"206 729 QCURVE",
"206 729 LINE"
);
},
{
closed = 1;
nodes = (
"91 530 OFFCURVE",
"273 186 OFFCURVE",
"604 -21 OFFCURVE",
"801 -21 QCURVE SMOOTH",
"999 -21 OFFCURVE",
"1330 188 OFFCURVE",
"1510 532 OFFCURVE",
"1510 729 QCURVE SMOOTH",
"1510 931 OFFCURVE",
"1323 1277 OFFCURVE",
"993 1476 OFFCURVE",
"609 1476 OFFCURVE",
"278 1277 OFFCURVE",
"91 931 OFFCURVE",
"91 729 QCURVE",
"91 729 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
39 58 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
46 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
54 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 54 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 3 31 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
10 46 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 10 16 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
14 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
17 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1609;
}
);
note = uni00A9;
unicode = 00A9;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"783 705 LINE",
"757 786 OFFCURVE",
"757 883 QCURVE SMOOTH",
"757 1199 LINE SMOOTH",
"757 1333 OFFCURVE",
"603 1476 OFFCURVE",
"470 1476 QCURVE SMOOTH",
"333 1476 OFFCURVE",
"161 1346 OFFCURVE",
"161 1243 QCURVE",
"322 1231 LINE",
"322 1282 OFFCURVE",
"401 1336 OFFCURVE",
"470 1336 QCURVE SMOOTH",
"594 1336 OFFCURVE",
"594 1201 QCURVE SMOOTH",
"594 1149 LINE",
"486 1149 LINE SMOOTH",
"314 1149 OFFCURVE",
"147 1029 OFFCURVE",
"147 918 QCURVE SMOOTH",
"147 815 OFFCURVE",
"277 691 OFFCURVE",
"396 691 QCURVE SMOOTH",
"524 691 OFFCURVE",
"600 777 QCURVE",
"606 739 OFFCURVE",
"618 705 QCURVE",
"618 705 LINE"
);
},
{
closed = 1;
nodes = (
"310 828 OFFCURVE",
"310 922 QCURVE SMOOTH",
"310 973 OFFCURVE",
"399 1036 OFFCURVE",
"482 1037 QCURVE SMOOTH",
"594 1037 LINE",
"594 895 LINE",
"566 868 OFFCURVE",
"478 828 OFFCURVE",
"435 828 QCURVE",
"435 828 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 38 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 11 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 915;
}
);
note = uni00AA;
unicode = 00AA;
},
{
glyphname = guillemetleft;
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, -6, -2}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 324, -2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 961;
}
);
note = uni00AB;
unicode = 00AB;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"958 800 LINE",
"127 800 LINE",
"127 639 LINE",
"772 639 LINE",
"772 375 LINE",
"958 375 LINE",
"958 375 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1134;
}
);
note = uni00AC;
unicode = 00AC;
},
{
glyphname = registered;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"90 530 OFFCURVE",
"272 186 OFFCURVE",
"603 -21 OFFCURVE",
"800 -21 QCURVE SMOOTH",
"998 -21 OFFCURVE",
"1329 188 OFFCURVE",
"1509 532 OFFCURVE",
"1509 729 QCURVE SMOOTH",
"1509 931 OFFCURVE",
"1322 1277 OFFCURVE",
"992 1476 OFFCURVE",
"608 1476 OFFCURVE",
"277 1277 OFFCURVE",
"90 931 OFFCURVE",
"90 729 QCURVE",
"90 729 LINE"
);
},
{
closed = 1;
nodes = (
"205 899 OFFCURVE",
"364 1191 OFFCURVE",
"640 1356 OFFCURVE",
"800 1356 QCURVE SMOOTH",
"961 1356 OFFCURVE",
"1237 1189 OFFCURVE",
"1394 900 OFFCURVE",
"1394 729 QCURVE SMOOTH",
"1394 557 OFFCURVE",
"1237 267 OFFCURVE",
"961 98 OFFCURVE",
"800 98 QCURVE SMOOTH",
"640 98 OFFCURVE",
"365 264 OFFCURVE",
"205 557 OFFCURVE",
"205 729 QCURVE",
"205 729 LINE"
);
},
{
closed = 1;
nodes = (
"829 654 LINE SMOOTH",
"944 650 OFFCURVE",
"960 554 QCURVE SMOOTH",
"963 537 OFFCURVE",
"963 352 OFFCURVE",
"977 316 QCURVE",
"1122 316 LINE",
"1122 332 LINE",
"1105 370 OFFCURVE",
"1105 456 QCURVE SMOOTH",
"1105 517 LINE SMOOTH",
"1104 671 OFFCURVE",
"982 721 QCURVE",
"1110 786 OFFCURVE",
"1110 909 QCURVE SMOOTH",
"1110 1034 OFFCURVE",
"941 1165 OFFCURVE",
"788 1165 QCURVE SMOOTH",
"512 1165 LINE",
"512 316 LINE",
"653 316 LINE",
"653 654 LINE",
"653 654 LINE"
);
},
{
closed = 1;
nodes = (
"653 1038 LINE",
"791 1038 LINE SMOOTH",
"891 1038 OFFCURVE",
"969 977 OFFCURVE",
"969 904 QCURVE SMOOTH",
"969 850 OFFCURVE",
"881 784 OFFCURVE",
"809 782 QCURVE SMOOTH",
"653 782 LINE",
"653 782 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
54 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
34 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 34 16 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
53 32 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 53 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
0 53 16 53 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 31 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
61 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1610;
}
);
note = uni00AE;
unicode = 00AE;
},
{
glyphname = macron;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"814 1445 LINE",
"142 1445 LINE",
"142 1302 LINE",
"814 1302 LINE",
"814 1302 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 4 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 938;
}
);
note = uni00AF;
unicode = 00AF;
},
{
glyphname = degree;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"130 1110 OFFCURVE",
"280 960 OFFCURVE",
"385 960 QCURVE SMOOTH",
"489 960 OFFCURVE",
"636 1110 OFFCURVE",
"636 1216 QCURVE SMOOTH",
"636 1321 OFFCURVE",
"489 1476 OFFCURVE",
"385 1476 QCURVE SMOOTH",
"279 1476 OFFCURVE",
"130 1320 OFFCURVE",
"130 1216 QCURVE",
"130 1216 LINE"
);
},
{
closed = 1;
nodes = (
"330 1088 OFFCURVE",
"255 1162 OFFCURVE",
"255 1270 OFFCURVE",
"330 1349 OFFCURVE",
"385 1349 QCURVE SMOOTH",
"439 1349 OFFCURVE",
"513 1274 OFFCURVE",
"513 1216 QCURVE SMOOTH",
"513 1159 OFFCURVE",
"439 1088 OFFCURVE",
"385 1088 QCURVE",
"385 1088 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 765;
}
);
note = uni00B0;
unicode = 00B0;
},
{
glyphname = plusminus;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"649 1267 LINE",
"482 1267 LINE",
"482 854 LINE",
"97 854 LINE",
"97 703 LINE",
"482 703 LINE",
"482 289 LINE",
"649 289 LINE",
"649 703 LINE",
"1013 703 LINE",
"1013 854 LINE",
"649 854 LINE",
"649 854 LINE"
);
},
{
closed = 1;
nodes = (
"970 152 LINE",
"135 152 LINE",
"135 0 LINE",
"970 0 LINE",
"970 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1094;
}
);
note = uni00B1;
unicode = 00B1;
},
{
glyphname = twosuperior;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"683 795 LINE",
"284 795 LINE",
"460 940 LINE",
"544 1019 LINE SMOOTH",
"651 1126 OFFCURVE",
"651 1230 QCURVE SMOOTH",
"651 1340 OFFCURVE",
"497 1467 OFFCURVE",
"233 1467 OFFCURVE",
"66 1319 OFFCURVE",
"66 1205 QCURVE",
"223 1205 LINE",
"223 1262 OFFCURVE",
"294 1338 OFFCURVE",
"369 1338 QCURVE SMOOTH",
"429 1338 OFFCURVE",
"493 1277 OFFCURVE",
"493 1228 QCURVE SMOOTH",
"493 1159 OFFCURVE",
"384 1057 QCURVE SMOOTH",
"84 775 LINE",
"84 667 LINE",
"683 667 LINE",
"683 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
22 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 14 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = uni00B2;
unicode = 00B2;
},
{
glyphname = threesuperior;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"265 1010 LINE",
"353 1010 LINE SMOOTH",
"509 1008 OFFCURVE",
"509 895 QCURVE SMOOTH",
"509 844 OFFCURVE",
"436 784 OFFCURVE",
"366 784 QCURVE SMOOTH",
"299 784 OFFCURVE",
"220 844 OFFCURVE",
"220 889 QCURVE",
"62 889 LINE",
"62 782 OFFCURVE",
"228 656 OFFCURVE",
"360 656 QCURVE SMOOTH",
"496 656 OFFCURVE",
"666 781 OFFCURVE",
"666 887 QCURVE SMOOTH",
"666 1030 OFFCURVE",
"517 1071 QCURVE",
"583 1096 OFFCURVE",
"653 1187 OFFCURVE",
"653 1242 QCURVE SMOOTH",
"653 1346 OFFCURVE",
"497 1467 OFFCURVE",
"360 1467 QCURVE SMOOTH",
"236 1467 OFFCURVE",
"73 1344 OFFCURVE",
"73 1246 QCURVE",
"230 1246 LINE",
"230 1287 OFFCURVE",
"305 1338 OFFCURVE",
"362 1338 QCURVE SMOOTH",
"432 1338 OFFCURVE",
"495 1280 OFFCURVE",
"495 1235 QCURVE SMOOTH",
"495 1187 OFFCURVE",
"423 1126 OFFCURVE",
"349 1126 QCURVE SMOOTH",
"265 1126 LINE",
"265 1126 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
111 0 127 0 143 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
15 0 31 0 47 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 14 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
29 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = uni00B3;
unicode = 00B3;
},
{
glyphname = acute;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"123 1242 LINE",
"272 1242 LINE",
"540 1536 LINE",
"316 1536 LINE",
"316 1536 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 642;
}
);
note = uni00B4;
unicode = 00B4;
},
{
glyphname = micro;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"154 1082 LINE",
"154 -416 LINE",
"339 -416 LINE",
"339 53 LINE",
"420 -20 OFFCURVE",
"567 -20 QCURVE SMOOTH",
"737 -20 OFFCURVE",
"830 115 QCURVE",
"839 0 LINE",
"1006 0 LINE",
"1006 1082 LINE",
"820 1082 LINE",
"820 282 LINE",
"758 130 OFFCURVE",
"559 130 QCURVE SMOOTH",
"443 130 OFFCURVE",
"340 286 OFFCURVE",
"339 449 QCURVE SMOOTH",
"339 1082 LINE",
"339 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 7 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
note = uni00B5;
unicode = 00B5;
},
{
glyphname = paragraph;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"832 0 LINE",
"832 1456 LINE",
"563 1456 LINE SMOOTH",
"333 1456 OFFCURVE",
"67 1201 OFFCURVE",
"67 988 QCURVE SMOOTH",
"67 774 OFFCURVE",
"332 520 OFFCURVE",
"562 520 QCURVE SMOOTH",
"646 520 LINE",
"646 0 LINE",
"646 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1001;
}
);
note = uni00B6;
unicode = 00B6;
},
{
glyphname = periodcentered;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"147 682 OFFCURVE",
"204 619 OFFCURVE",
"318 619 OFFCURVE",
"377 682 OFFCURVE",
"377 729 QCURVE SMOOTH",
"377 777 OFFCURVE",
"318 841 OFFCURVE",
"204 841 OFFCURVE",
"147 777 OFFCURVE",
"147 729 QCURVE",
"147 729 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 534;
}
);
note = uni00B7;
unicode = 00B7;
},
{
glyphname = cedilla;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"152 0 LINE",
"120 -134 LINE",
"218 -143 OFFCURVE",
"282 -185 OFFCURVE",
"282 -229 QCURVE SMOOTH",
"282 -276 OFFCURVE",
"195 -328 OFFCURVE",
"116 -328 QCURVE",
"123 -435 LINE",
"266 -435 OFFCURVE",
"426 -322 OFFCURVE",
"426 -225 QCURVE SMOOTH",
"426 -79 OFFCURVE",
"273 -52 QCURVE",
"285 0 LINE",
"285 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
19 6 35 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
1 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 507;
}
);
note = uni00B8;
unicode = 00B8;
},
{
glyphname = onesuperior;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"495 1456 LINE",
"477 1456 LINE",
"122 1339 LINE",
"122 1211 LINE",
"338 1268 LINE",
"338 667 LINE",
"495 667 LINE",
"495 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = uni00B9;
unicode = 00B9;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"122 1049 LINE SMOOTH",
"122 884 OFFCURVE",
"312 690 OFFCURVE",
"620 690 OFFCURVE",
"807 884 OFFCURVE",
"807 1043 QCURVE SMOOTH",
"807 1117 LINE SMOOTH",
"807 1283 OFFCURVE",
"619 1476 OFFCURVE",
"464 1476 QCURVE SMOOTH",
"310 1476 OFFCURVE",
"122 1281 OFFCURVE",
"122 1123 QCURVE",
"122 1123 LINE"
);
},
{
closed = 1;
nodes = (
"285 1129 LINE SMOOTH",
"287 1226 OFFCURVE",
"383 1336 OFFCURVE",
"464 1336 QCURVE SMOOTH",
"547 1336 OFFCURVE",
"644 1222 OFFCURVE",
"644 1123 QCURVE SMOOTH",
"644 1045 LINE SMOOTH",
"644 944 OFFCURVE",
"549 829 OFFCURVE",
"466 829 QCURVE SMOOTH",
"382 829 OFFCURVE",
"285 943 OFFCURVE",
"285 1043 QCURVE",
"285 1043 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 27 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 931;
}
);
note = uni00BA;
unicode = 00BA;
},
{
glyphname = guillemetright;
layers = (
{
components = (
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 13, 0}";
},
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 362, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 960;
}
);
note = uni00BB;
unicode = 00BB;
},
{
glyphname = onequarter;
layers = (
{
components = (
{
name = one.dnom;
transform = "{1, 0, 0, 1, -37, 664}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 280, 8}";
},
{
name = four.dnom;
transform = "{1, 0, 0, 1, 726, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1500;
}
);
note = uni00BC;
unicode = 00BC;
},
{
glyphname = onehalf;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 236, 8}";
},
{
name = one.dnom;
transform = "{1, 0, 0, 1, -42, 664}";
},
{
name = two.dnom;
transform = "{1, 0, 0, 1, 798, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1589;
}
);
note = uni00BD;
unicode = 00BD;
},
{
glyphname = threequarters;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 407, 8}";
},
{
name = four.dnom;
transform = "{1, 0, 0, 1, 818, 0}";
},
{
name = three.dnom;
transform = "{1, 0, 0, 1, 49, 667}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1593;
}
);
note = uni00BE;
unicode = 00BE;
},
{
glyphname = questiondown;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"403 680 LINE",
"403 534 OFFCURVE",
"337 456 QCURVE",
"228 343 LINE SMOOTH",
"68 168 OFFCURVE",
"68 -5 QCURVE SMOOTH",
"68 -184 OFFCURVE",
"282 -385 OFFCURVE",
"478 -385 QCURVE SMOOTH",
"661 -385 OFFCURVE",
"886 -181 OFFCURVE",
"888 -20 QCURVE",
"703 -20 LINE",
"703 -111 OFFCURVE",
"578 -224 OFFCURVE",
"478 -224 QCURVE SMOOTH",
"369 -224 OFFCURVE",
"253 -109 OFFCURVE",
"253 0 QCURVE SMOOTH",
"255 37 LINE",
"266 136 OFFCURVE",
"450 329 OFFCURVE",
"546 447 OFFCURVE",
"587 574 OFFCURVE",
"588 680 QCURVE",
"588 680 LINE"
);
},
{
closed = 1;
nodes = (
"596 1041 OFFCURVE",
"541 1101 OFFCURVE",
"433 1101 OFFCURVE",
"377 1041 OFFCURVE",
"377 997 QCURVE SMOOTH",
"377 952 OFFCURVE",
"433 890 OFFCURVE",
"541 890 OFFCURVE",
"596 952 OFFCURVE",
"596 997 QCURVE",
"596 997 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 16 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
}
);
note = uni00BF;
unicode = 00BF;
},
{
glyphname = AE;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1879 151 LINE",
"1174 151 LINE",
"1152 682 LINE",
"1736 682 LINE",
"1736 833 LINE",
"1146 833 LINE",
"1126 1304 LINE",
"1817 1304 LINE",
"1817 1456 LINE",
"866 1456 LINE",
"-14 0 LINE",
"212 0 LINE",
"417 353 LINE",
"981 353 LINE",
"996 0 LINE",
"1879 0 LINE",
"1879 0 LINE"
);
},
{
closed = 1;
nodes = (
"943 1260 LINE",
"974 527 LINE",
"518 527 LINE",
"518 527 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1914;
}
);
note = uni00C6;
unicode = 00C6;
},
{
glyphname = multiply;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"208 206 LINE",
"539 543 LINE",
"870 206 LINE",
"989 329 LINE",
"659 665 LINE",
"987 1000 LINE",
"868 1123 LINE",
"539 788 LINE",
"210 1123 LINE",
"91 1000 LINE",
"419 665 LINE",
"89 329 LINE",
"89 329 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
9 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
10 9 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
1 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
7 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1092;
}
);
note = uni00D7;
unicode = 00D7;
},
{
glyphname = Oslash;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1289 780 LINE SMOOTH",
"1287 1074 OFFCURVE",
"1150 1261 QCURVE",
"1309 1516 LINE",
"1168 1516 LINE",
"1065 1351 LINE",
"917 1476 OFFCURVE",
"703 1476 QCURVE SMOOTH",
"531 1476 OFFCURVE",
"264 1305 OFFCURVE",
"118 983 OFFCURVE",
"118 773 QCURVE SMOOTH",
"118 690 LINE SMOOTH",
"118 330 OFFCURVE",
"308 138 QCURVE",
"164 -93 LINE",
"306 -93 LINE",
"403 62 LINE",
"534 -20 OFFCURVE",
"705 -20 QCURVE SMOOTH",
"881 -20 OFFCURVE",
"1145 148 OFFCURVE",
"1289 467 OFFCURVE",
"1289 681 QCURVE",
"1289 681 LINE"
);
},
{
closed = 1;
nodes = (
"309 788 LINE SMOOTH",
"312 1034 OFFCURVE",
"521 1311 OFFCURVE",
"703 1311 QCURVE SMOOTH",
"869 1311 OFFCURVE",
"971 1200 QCURVE",
"407 296 LINE",
"309 437 OFFCURVE",
"309 681 QCURVE",
"309 681 LINE"
);
},
{
closed = 1;
nodes = (
"1098 667 LINE SMOOTH",
"1095 414 OFFCURVE",
"891 143 OFFCURVE",
"705 143 QCURVE SMOOTH",
"584 143 OFFCURVE",
"493 207 QCURVE",
"1042 1088 LINE",
"1098 957 OFFCURVE",
"1098 775 QCURVE",
"1098 775 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
}
);
leftKerningGroup = C;
note = uni00D8;
unicode = 00D8;
},
{
glyphname = Thorn;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"166 1456 LINE",
"166 0 LINE",
"352 0 LINE",
"352 313 LINE",
"626 313 LINE SMOOTH",
"853 313 OFFCURVE",
"1117 544 OFFCURVE",
"1117 738 QCURVE SMOOTH",
"1117 864 OFFCURVE",
"998 1058 OFFCURVE",
"778 1163 OFFCURVE",
"631 1163 QCURVE SMOOTH",
"352 1163 LINE",
"352 1456 LINE",
"352 1456 LINE"
);
},
{
closed = 1;
nodes = (
"635 1011 LINE SMOOTH",
"771 1010 OFFCURVE",
"931 859 OFFCURVE",
"931 736 QCURVE SMOOTH",
"931 616 OFFCURVE",
"771 465 OFFCURVE",
"629 465 QCURVE SMOOTH",
"352 465 LINE",
"352 1011 LINE",
"352 1011 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1210;
}
);
note = uni00DE;
unicode = 00DE;
},
{
glyphname = germandbls;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"324 1109 LINE SMOOTH",
"324 1402 OFFCURVE",
"542 1402 QCURVE SMOOTH",
"630 1402 OFFCURVE",
"734 1295 OFFCURVE",
"734 1201 QCURVE SMOOTH",
"734 1117 OFFCURVE",
"595 910 OFFCURVE",
"595 821 QCURVE SMOOTH",
"595 740 OFFCURVE",
"682 602 OFFCURVE",
"871 455 OFFCURVE",
"945 359 OFFCURVE",
"945 307 QCURVE SMOOTH",
"945 225 OFFCURVE",
"832 131 OFFCURVE",
"725 131 QCURVE SMOOTH",
"672 131 OFFCURVE",
"537 175 OFFCURVE",
"488 207 QCURVE",
"445 52 LINE",
"483 24 OFFCURVE",
"664 -20 OFFCURVE",
"745 -20 QCURVE SMOOTH",
"927 -20 OFFCURVE",
"1130 158 OFFCURVE",
"1130 317 QCURVE SMOOTH",
"1130 393 OFFCURVE",
"1044 529 OFFCURVE",
"856 673 OFFCURVE",
"781 768 OFFCURVE",
"781 819 QCURVE SMOOTH",
"781 888 OFFCURVE",
"909 1091 OFFCURVE",
"909 1216 QCURVE SMOOTH",
"909 1375 OFFCURVE",
"712 1554 OFFCURVE",
"532 1554 QCURVE SMOOTH",
"346 1554 OFFCURVE",
"139 1319 OFFCURVE",
"139 1111 QCURVE SMOOTH",
"139 0 LINE",
"324 0 LINE",
"324 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1218;
}
);
note = uni00DF;
unicode = 00DF;
},
{
glyphname = ae;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1484 -20 OFFCURVE",
"1642 101 QCURVE",
"1578 237 LINE",
"1531 206 LINE SMOOTH",
"1410 130 OFFCURVE",
"1262 130 QCURVE SMOOTH",
"1113 130 OFFCURVE",
"939 321 OFFCURVE",
"932 497 QCURVE",
"1660 497 LINE",
"1660 612 LINE SMOOTH",
"1660 845 OFFCURVE",
"1428 1102 OFFCURVE",
"1218 1102 QCURVE SMOOTH",
"1113 1102 OFFCURVE",
"939 1015 OFFCURVE",
"876 936 QCURVE",
"826 1019 OFFCURVE",
"650 1102 OFFCURVE",
"535 1102 QCURVE SMOOTH",
"348 1102 OFFCURVE",
"106 921 OFFCURVE",
"106 778 QCURVE",
"290 759 LINE",
"290 840 OFFCURVE",
"430 950 OFFCURVE",
"535 950 QCURVE SMOOTH",
"639 950 OFFCURVE",
"749 827 OFFCURVE",
"749 720 QCURVE SMOOTH",
"749 635 LINE",
"526 635 LINE SMOOTH",
"305 635 OFFCURVE",
"78 461 OFFCURVE",
"78 304 QCURVE SMOOTH",
"78 153 OFFCURVE",
"266 -20 OFFCURVE",
"433 -20 QCURVE SMOOTH",
"574 -20 OFFCURVE",
"800 74 OFFCURVE",
"865 160 QCURVE",
"1001 -20 OFFCURVE",
"1262 -20 QCURVE",
"1262 -20 LINE"
);
},
{
closed = 1;
nodes = (
"370 130 OFFCURVE",
"264 223 OFFCURVE",
"264 300 QCURVE SMOOTH",
"264 383 OFFCURVE",
"404 493 OFFCURVE",
"521 495 QCURVE SMOOTH",
"749 495 LINE",
"749 258 LINE",
"699 204 OFFCURVE",
"541 130 OFFCURVE",
"469 130 QCURVE",
"469 130 LINE"
);
},
{
closed = 1;
nodes = (
"1341 950 OFFCURVE",
"1475 803 OFFCURVE",
"1475 671 QCURVE SMOOTH",
"1475 640 LINE",
"937 640 LINE",
"954 779 OFFCURVE",
"1103 950 OFFCURVE",
"1218 950 QCURVE",
"1218 950 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 5 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 12 207 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
58 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 58 207 58 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
47 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1729;
}
);
note = uni00E6;
unicode = 00E6;
},
{
glyphname = eth;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"988 1416 LINE",
"915 1516 LINE",
"726 1387 LINE",
"551 1526 OFFCURVE",
"312 1580 QCURVE",
"255 1421 LINE",
"438 1372 OFFCURVE",
"570 1281 QCURVE",
"378 1150 LINE",
"451 1051 LINE",
"669 1199 LINE",
"810 1058 OFFCURVE",
"858 863 QCURVE",
"737 977 OFFCURVE",
"574 977 QCURVE SMOOTH",
"445 977 OFFCURVE",
"238 847 OFFCURVE",
"126 614 OFFCURVE",
"126 467 QCURVE SMOOTH",
"126 333 OFFCURVE",
"247 109 OFFCURVE",
"467 -20 OFFCURVE",
"602 -20 QCURVE SMOOTH",
"736 -20 OFFCURVE",
"952 124 OFFCURVE",
"1069 377 OFFCURVE",
"1069 535 QCURVE SMOOTH",
"1069 628 LINE SMOOTH",
"1069 1037 OFFCURVE",
"820 1301 QCURVE",
"820 1301 LINE"
);
},
{
closed = 1;
nodes = (
"884 541 LINE SMOOTH",
"884 357 OFFCURVE",
"731 131 OFFCURVE",
"606 131 QCURVE SMOOTH",
"478 131 OFFCURVE",
"311 327 OFFCURVE",
"311 467 QCURVE SMOOTH",
"311 634 OFFCURVE",
"473 825 OFFCURVE",
"618 825 QCURVE SMOOTH",
"710 825 OFFCURVE",
"849 752 OFFCURVE",
"882 691 QCURVE",
"884 635 LINE",
"884 635 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 44 45 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 25 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 25 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1200;
}
);
note = uni00F0;
unicode = 00F0;
},
{
glyphname = divide;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1069 784 LINE",
"71 784 LINE",
"71 600 LINE",
"1069 600 LINE",
"1069 600 LINE"
);
},
{
closed = 1;
nodes = (
"461 1051 OFFCURVE",
"518 989 OFFCURVE",
"632 989 OFFCURVE",
"691 1051 OFFCURVE",
"691 1098 QCURVE SMOOTH",
"691 1146 OFFCURVE",
"632 1210 OFFCURVE",
"518 1210 OFFCURVE",
"461 1146 OFFCURVE",
"461 1098 QCURVE",
"461 1098 LINE"
);
},
{
closed = 1;
nodes = (
"461 235 OFFCURVE",
"518 172 OFFCURVE",
"632 172 OFFCURVE",
"691 235 OFFCURVE",
"691 281 QCURVE SMOOTH",
"691 329 OFFCURVE",
"632 393 OFFCURVE",
"518 393 OFFCURVE",
"461 329 OFFCURVE",
"461 281 QCURVE",
"461 281 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1169;
}
);
note = uni00F7;
unicode = 00F7;
},
{
glyphname = oslash;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 218 OFFCURVE",
"296 69 QCURVE",
"196 -134 LINE",
"320 -134 LINE",
"394 15 LINE",
"480 -20 OFFCURVE",
"584 -20 QCURVE SMOOTH",
"728 -20 OFFCURVE",
"952 117 OFFCURVE",
"1076 371 OFFCURVE",
"1076 529 QCURVE SMOOTH",
"1076 849 OFFCURVE",
"881 1003 QCURVE",
"983 1208 LINE",
"859 1208 LINE",
"786 1060 LINE",
"692 1102 OFFCURVE",
"582 1102 QCURVE SMOOTH",
"439 1102 OFFCURVE",
"214 963 OFFCURVE",
"91 710 OFFCURVE",
"91 551 QCURVE",
"91 551 LINE"
);
},
{
closed = 1;
nodes = (
"276 732 OFFCURVE",
"444 950 OFFCURVE",
"582 950 QCURVE SMOOTH",
"654 950 OFFCURVE",
"716 918 QCURVE",
"373 224 LINE",
"276 335 OFFCURVE",
"276 529 QCURVE",
"276 529 LINE"
);
},
{
closed = 1;
nodes = (
"890 535 LINE SMOOTH",
"890 350 OFFCURVE",
"723 131 OFFCURVE",
"584 131 QCURVE SMOOTH",
"518 131 OFFCURVE",
"463 156 QCURVE",
"803 844 LINE",
"890 733 OFFCURVE",
"890 551 QCURVE",
"890 551 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 35 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 27 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
note = uni00F8;
unicode = 00F8;
},
{
glyphname = thorn;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1063 546 LINE SMOOTH",
"1063 808 OFFCURVE",
"836 1102 OFFCURVE",
"641 1102 QCURVE SMOOTH",
"447 1102 OFFCURVE",
"334 970 QCURVE",
"334 1536 LINE",
"149 1536 LINE",
"149 -416 LINE",
"334 -416 LINE",
"334 105 LINE",
"447 -20 OFFCURVE",
"644 -20 QCURVE SMOOTH",
"837 -20 OFFCURVE",
"1063 282 OFFCURVE",
"1063 529 QCURVE",
"1063 529 LINE"
);
},
{
closed = 1;
nodes = (
"878 342 OFFCURVE",
"721 131 OFFCURVE",
"588 131 QCURVE SMOOTH",
"417 131 OFFCURVE",
"334 279 QCURVE",
"334 796 LINE",
"418 945 OFFCURVE",
"586 945 QCURVE SMOOTH",
"722 945 OFFCURVE",
"878 733 OFFCURVE",
"878 550 QCURVE",
"878 550 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1180;
}
);
note = uni00FE;
rightKerningGroup = b;
unicode = 00FE;
},
{
glyphname = dcroat;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1196 1384 LINE",
"1008 1384 LINE",
"1008 1536 LINE",
"823 1536 LINE",
"823 1384 LINE",
"559 1384 LINE",
"559 1233 LINE",
"823 1233 LINE",
"823 972 LINE",
"712 1102 OFFCURVE",
"522 1102 QCURVE SMOOTH",
"331 1102 OFFCURVE",
"95 799 OFFCURVE",
"95 550 QCURVE SMOOTH",
"95 536 LINE SMOOTH",
"95 288 OFFCURVE",
"332 -20 OFFCURVE",
"520 -20 QCURVE SMOOTH",
"718 -20 OFFCURVE",
"829 116 QCURVE",
"838 0 LINE",
"1008 0 LINE",
"1008 1233 LINE",
"1196 1233 LINE",
"1196 1233 LINE"
);
},
{
closed = 1;
nodes = (
"280 735 OFFCURVE",
"432 945 OFFCURVE",
"568 945 QCURVE SMOOTH",
"740 945 OFFCURVE",
"823 792 QCURVE",
"823 295 LINE",
"742 137 OFFCURVE",
"566 137 QCURVE SMOOTH",
"432 137 OFFCURVE",
"280 345 OFFCURVE",
"280 529 QCURVE",
"280 529 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 20 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 20 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
19 3 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
4 6 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 13 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
}
);
note = uni0111;
unicode = 0111;
},
{
glyphname = Hbar;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1282 1456 LINE",
"1089 1456 LINE",
"1089 1166 LINE",
"356 1166 LINE",
"356 1456 LINE",
"163 1456 LINE",
"163 1166 LINE",
"29 1166 LINE",
"29 1024 LINE",
"163 1024 LINE",
"163 0 LINE",
"356 0 LINE",
"356 673 LINE",
"1089 673 LINE",
"1089 0 LINE",
"1282 0 LINE",
"1282 1024 LINE",
"1416 1024 LINE",
"1416 1166 LINE",
"1282 1166 LINE",
"1282 1166 LINE"
);
},
{
closed = 1;
nodes = (
"356 1024 LINE",
"1089 1024 LINE",
"1089 830 LINE",
"356 830 LINE",
"356 830 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 20 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1434;
}
);
note = uni0126;
unicode = 0126;
},
{
glyphname = idotless;
lastChange = "2020-11-28 02:16:55 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1082 LINE",
"155 1082 LINE",
"155 0 LINE",
"341 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 506;
}
);
note = uni0131;
unicode = 0131;
},
{
glyphname = kgreenlandic;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"854 0 LINE",
"1087 0 LINE",
"599 557 LINE",
"1051 1082 LINE",
"828 1082 LINE",
"431 624 LINE",
"340 624 LINE",
"340 1082 LINE",
"154 1082 LINE",
"154 0 LINE",
"340 0 LINE",
"340 461 LINE",
"447 461 LINE",
"447 461 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
159 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 6 207 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 1 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1139;
}
);
note = uni0138;
unicode = 0138;
},
{
glyphname = Lslash;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"361 1456 LINE",
"168 1456 LINE",
"168 782 LINE",
"34 740 LINE",
"34 615 LINE",
"168 657 LINE",
"168 0 LINE",
"1051 0 LINE",
"1051 157 LINE",
"361 157 LINE",
"361 718 LINE",
"624 802 LINE",
"624 927 LINE",
"361 843 LINE",
"361 843 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 12 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1103;
}
);
note = uni0141;
unicode = 0141;
},
{
glyphname = lslash;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"364 1536 LINE",
"178 1536 LINE",
"178 798 LINE",
"34 743 LINE",
"34 620 LINE",
"178 675 LINE",
"178 0 LINE",
"364 0 LINE",
"364 746 LINE",
"522 807 LINE",
"522 930 LINE",
"364 869 LINE",
"364 869 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 553;
}
);
note = uni0142;
unicode = 0142;
},
{
glyphname = Eng;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1071 1456 LINE",
"1071 328 LINE",
"354 1456 LINE",
"162 1456 LINE",
"162 0 LINE",
"354 0 LINE",
"354 1130 LINE",
"1071 0 LINE",
"1071 -71 LINE SMOOTH",
"1071 -279 OFFCURVE",
"935 -279 QCURVE SMOOTH",
"874 -279 OFFCURVE",
"837 -265 QCURVE",
"823 -419 LINE",
"877 -437 OFFCURVE",
"938 -437 QCURVE SMOOTH",
"1094 -437 OFFCURVE",
"1265 -251 OFFCURVE",
"1265 -83 QCURVE SMOOTH",
"1265 1456 LINE",
"1265 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 14 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
18 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1419;
}
);
note = uni014A;
unicode = 014A;
},
{
glyphname = eng;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"145 1082 LINE",
"145 0 LINE",
"331 0 LINE",
"331 812 LINE",
"412 945 OFFCURVE",
"587 945 QCURVE SMOOTH",
"712 945 OFFCURVE",
"823 817 OFFCURVE",
"823 678 QCURVE SMOOTH",
"823 -81 LINE SMOOTH",
"823 -275 OFFCURVE",
"686 -275 QCURVE SMOOTH",
"620 -275 OFFCURVE",
"585 -262 QCURVE",
"571 -419 LINE",
"625 -437 OFFCURVE",
"686 -437 QCURVE SMOOTH",
"841 -437 OFFCURVE",
"1008 -253 OFFCURVE",
"1008 -89 QCURVE SMOOTH",
"1008 691 LINE SMOOTH",
"1006 894 OFFCURVE",
"822 1102 OFFCURVE",
"643 1102 QCURVE SMOOTH",
"440 1102 OFFCURVE",
"324 928 QCURVE",
"311 1082 LINE",
"311 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 24 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
note = uni014B;
unicode = 014B;
},
{
glyphname = OE;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1801 157 LINE",
"1068 157 LINE",
"1068 673 LINE",
"1699 673 LINE",
"1699 830 LINE",
"1068 830 LINE",
"1068 1298 LINE",
"1791 1298 LINE",
"1791 1456 LINE",
"953 1456 LINE",
"783 1476 OFFCURVE",
"659 1476 QCURVE SMOOTH",
"497 1476 OFFCURVE",
"243 1325 OFFCURVE",
"104 1052 OFFCURVE",
"104 880 QCURVE SMOOTH",
"104 571 LINE SMOOTH",
"105 400 OFFCURVE",
"245 129 OFFCURVE",
"499 -21 OFFCURVE",
"661 -21 QCURVE SMOOTH",
"775 -21 OFFCURVE",
"953 0 QCURVE",
"1801 0 LINE",
"1801 0 LINE"
);
},
{
closed = 1;
nodes = (
"485 130 OFFCURVE",
"290 365 OFFCURVE",
"290 576 QCURVE SMOOTH",
"290 889 LINE SMOOTH",
"292 1096 OFFCURVE",
"486 1325 OFFCURVE",
"659 1325 QCURVE SMOOTH",
"767 1325 OFFCURVE",
"876 1310 QCURVE",
"876 144 LINE",
"774 130 OFFCURVE",
"661 130 QCURVE",
"661 130 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 0 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1953;
}
);
leftKerningGroup = C;
note = uni0152;
unicode = 0152;
},
{
glyphname = oe;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"97 538 LINE SMOOTH",
"97 284 OFFCURVE",
"361 -20 OFFCURVE",
"581 -20 QCURVE SMOOTH",
"715 -20 OFFCURVE",
"914 93 OFFCURVE",
"976 192 QCURVE",
"1039 92 OFFCURVE",
"1244 -20 OFFCURVE",
"1379 -20 QCURVE SMOOTH",
"1624 -20 OFFCURVE",
"1761 112 QCURVE",
"1687 238 LINE",
"1567 130 OFFCURVE",
"1379 130 QCURVE SMOOTH",
"1245 130 OFFCURVE",
"1081 327 OFFCURVE",
"1074 497 QCURVE",
"1792 497 LINE",
"1792 613 LINE SMOOTH",
"1792 848 OFFCURVE",
"1558 1102 OFFCURVE",
"1351 1102 QCURVE SMOOTH",
"1239 1102 OFFCURVE",
"1043 987 OFFCURVE",
"978 885 QCURVE",
"917 985 OFFCURVE",
"716 1102 OFFCURVE",
"579 1102 QCURVE SMOOTH",
"437 1102 OFFCURVE",
"218 965 OFFCURVE",
"97 711 OFFCURVE",
"97 551 QCURVE",
"97 551 LINE"
);
},
{
closed = 1;
nodes = (
"282 736 OFFCURVE",
"444 950 OFFCURVE",
"579 950 QCURVE SMOOTH",
"717 950 OFFCURVE",
"878 733 OFFCURVE",
"878 551 QCURVE SMOOTH",
"878 345 OFFCURVE",
"718 130 OFFCURVE",
"581 130 QCURVE SMOOTH",
"442 130 OFFCURVE",
"282 346 OFFCURVE",
"282 529 QCURVE",
"282 529 LINE"
);
},
{
closed = 1;
nodes = (
"1469 950 OFFCURVE",
"1606 800 OFFCURVE",
"1606 675 QCURVE SMOOTH",
"1606 649 LINE",
"1080 649 LINE",
"1102 787 OFFCURVE",
"1252 950 OFFCURVE",
"1351 950 QCURVE",
"1351 950 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 53 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 10 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
49 10 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 10 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 10 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1860;
}
);
leftKerningGroup = c;
note = uni0153;
unicode = 0153;
},
{
glyphname = longs;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"345 0 LINE",
"345 1184 LINE SMOOTH",
"345 1405 OFFCURVE",
"528 1405 QCURVE SMOOTH",
"579 1405 OFFCURVE",
"619 1394 QCURVE",
"642 1536 LINE",
"558 1557 OFFCURVE",
"499 1557 QCURVE SMOOTH",
"337 1557 OFFCURVE",
"161 1367 OFFCURVE",
"160 1198 QCURVE SMOOTH",
"160 0 LINE",
"160 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 508;
}
);
note = uni017F;
unicode = 017F;
},
{
glyphname = Schwa;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"864 -20 OFFCURVE",
"1142 162 OFFCURVE",
"1298 483 OFFCURVE",
"1298 680 QCURVE SMOOTH",
"1298 764 LINE SMOOTH",
"1298 1099 OFFCURVE",
"942 1476 OFFCURVE",
"640 1476 QCURVE SMOOTH",
"408 1476 OFFCURVE",
"250 1388 QCURVE SMOOTH",
"228 1375 LINE",
"275 1232 LINE",
"336 1258 LINE SMOOTH",
"475 1316 OFFCURVE",
"640 1316 QCURVE SMOOTH",
"861 1316 OFFCURVE",
"1105 1032 OFFCURVE",
"1105 774 QCURVE SMOOTH",
"1105 767 LINE",
"93 767 LINE",
"93 650 LINE SMOOTH",
"93 325 OFFCURVE",
"412 -20 OFFCURVE",
"697 -20 QCURVE",
"697 -20 LINE"
);
},
{
closed = 1;
nodes = (
"497 138 OFFCURVE",
"286 366 OFFCURVE",
"286 584 QCURVE SMOOTH",
"286 618 LINE",
"1103 618 LINE",
"1088 399 OFFCURVE",
"866 138 OFFCURVE",
"697 138 QCURVE",
"697 138 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1415;
}
);
note = uni018F;
rightKerningGroup = D;
unicode = 018F;
},
{
glyphname = florin;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"608 1082 LINE",
"405 1082 LINE",
"405 1204 LINE SMOOTH",
"409 1399 OFFCURVE",
"580 1399 QCURVE SMOOTH",
"640 1399 OFFCURVE",
"678 1389 QCURVE",
"700 1536 LINE",
"616 1557 OFFCURVE",
"557 1557 QCURVE SMOOTH",
"396 1557 OFFCURVE",
"221 1369 OFFCURVE",
"219 1202 QCURVE SMOOTH",
"219 1082 LINE",
"48 1082 LINE",
"48 939 LINE",
"219 939 LINE",
"219 -89 LINE SMOOTH",
"219 -181 OFFCURVE",
"148 -285 OFFCURVE",
"83 -285 QCURVE SMOOTH",
"16 -285 OFFCURVE",
"-14 -272 QCURVE",
"-28 -419 LINE",
"22 -437 OFFCURVE",
"83 -437 QCURVE SMOOTH",
"237 -437 OFFCURVE",
"405 -254 OFFCURVE",
"405 -87 QCURVE SMOOTH",
"405 939 LINE",
"608 939 LINE",
"608 939 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 697;
}
);
note = uni0192;
unicode = 0192;
},
{
glyphname = Ohorn;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1272 779 LINE SMOOTH",
"1271 1025 OFFCURVE",
"1174 1197 QCURVE",
"1437 1258 OFFCURVE",
"1437 1591 QCURVE",
"1270 1591 LINE",
"1270 1459 OFFCURVE",
"1177 1328 OFFCURVE",
"1081 1321 QCURVE",
"926 1476 OFFCURVE",
"686 1476 QCURVE SMOOTH",
"514 1476 OFFCURVE",
"247 1304 OFFCURVE",
"101 983 OFFCURVE",
"101 773 QCURVE SMOOTH",
"101 673 LINE SMOOTH",
"102 466 OFFCURVE",
"251 148 OFFCURVE",
"517 -20 OFFCURVE",
"688 -20 QCURVE SMOOTH",
"864 -20 OFFCURVE",
"1128 148 OFFCURVE",
"1272 467 OFFCURVE",
"1272 681 QCURVE",
"1272 681 LINE"
);
},
{
closed = 1;
nodes = (
"1082 682 LINE SMOOTH",
"1082 425 OFFCURVE",
"879 143 OFFCURVE",
"688 143 QCURVE SMOOTH",
"503 143 OFFCURVE",
"292 430 OFFCURVE",
"292 681 QCURVE SMOOTH",
"292 788 LINE SMOOTH",
"295 1034 OFFCURVE",
"504 1311 OFFCURVE",
"686 1311 QCURVE SMOOTH",
"875 1311 OFFCURVE",
"1082 1033 OFFCURVE",
"1082 775 QCURVE",
"1082 775 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 13 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1406;
}
);
leftKerningGroup = C;
note = uni01A0;
unicode = 01A0;
},
{
glyphname = ohorn;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 538 LINE SMOOTH",
"91 287 OFFCURVE",
"362 -20 OFFCURVE",
"584 -20 QCURVE SMOOTH",
"728 -20 OFFCURVE",
"952 117 OFFCURVE",
"1076 371 OFFCURVE",
"1076 529 QCURVE SMOOTH",
"1076 551 LINE SMOOTH",
"1076 720 OFFCURVE",
"1003 858 QCURVE",
"1210 909 OFFCURVE",
"1210 1200 QCURVE",
"1060 1200 LINE",
"1060 1072 OFFCURVE",
"996 972 OFFCURVE",
"925 964 QCURVE",
"789 1102 OFFCURVE",
"582 1102 QCURVE SMOOTH",
"439 1102 OFFCURVE",
"214 963 OFFCURVE",
"91 710 OFFCURVE",
"91 551 QCURVE",
"91 551 LINE"
);
},
{
closed = 1;
nodes = (
"276 732 OFFCURVE",
"444 950 OFFCURVE",
"582 950 QCURVE SMOOTH",
"721 950 OFFCURVE",
"890 732 OFFCURVE",
"890 551 QCURVE SMOOTH",
"890 535 LINE SMOOTH",
"890 350 OFFCURVE",
"723 131 OFFCURVE",
"584 131 QCURVE SMOOTH",
"443 131 OFFCURVE",
"276 349 OFFCURVE",
"276 529 QCURVE",
"276 529 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 4 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1170;
}
);
leftKerningGroup = c;
note = uni01A1;
unicode = 01A1;
},
{
glyphname = Uhorn;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1001 1456 LINE",
"1001 469 LINE SMOOTH",
"1001 311 OFFCURVE",
"828 137 OFFCURVE",
"665 137 QCURVE SMOOTH",
"504 137 OFFCURVE",
"330 312 OFFCURVE",
"330 470 QCURVE SMOOTH",
"330 1456 LINE",
"140 1456 LINE",
"140 464 LINE SMOOTH",
"142 238 OFFCURVE",
"426 -20 OFFCURVE",
"665 -20 QCURVE",
"738 -16 LINE",
"949 6 OFFCURVE",
"1193 266 OFFCURVE",
"1194 465 QCURVE SMOOTH",
"1194 1107 LINE",
"1388 1119 OFFCURVE",
"1565 1328 OFFCURVE",
"1565 1538 QCURVE",
"1406 1538 LINE",
"1406 1391 OFFCURVE",
"1309 1254 OFFCURVE",
"1194 1243 QCURVE",
"1194 1456 LINE",
"1194 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 13 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1424;
}
);
note = uni01AF;
unicode = 01AF;
},
{
glyphname = uhorn;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1153 1168 LINE",
"1153 1060 OFFCURVE",
"1124 988 OFFCURVE",
"1056 953 OFFCURVE",
"988 951 QCURVE",
"988 1082 LINE",
"803 1082 LINE",
"803 295 LINE",
"733 137 OFFCURVE",
"521 137 QCURVE SMOOTH",
"321 137 OFFCURVE",
"321 383 QCURVE SMOOTH",
"321 1082 LINE",
"136 1082 LINE",
"136 378 LINE SMOOTH",
"137 181 OFFCURVE",
"318 -20 OFFCURVE",
"491 -20 QCURVE SMOOTH",
"700 -20 OFFCURVE",
"808 107 QCURVE",
"812 0 LINE",
"988 0 LINE",
"988 837 LINE",
"1148 841 OFFCURVE",
"1295 988 OFFCURVE",
"1295 1168 QCURVE",
"1295 1168 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 8 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
6 8 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1267;
}
);
leftKerningGroup = u;
note = uni01B0;
unicode = 01B0;
},
{
glyphname = jdotless;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"172 1082 LINE",
"172 -89 LINE SMOOTH",
"172 -181 OFFCURVE",
"100 -285 OFFCURVE",
"35 -285 QCURVE SMOOTH",
"-32 -285 OFFCURVE",
"-62 -272 QCURVE",
"-76 -419 LINE",
"-24 -437 OFFCURVE",
"35 -437 QCURVE SMOOTH",
"187 -437 OFFCURVE",
"357 -259 OFFCURVE",
"357 -89 QCURVE SMOOTH",
"357 1082 LINE",
"357 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 515;
}
);
note = uni0237;
unicode = 0237;
},
{
glyphname = schwa;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"269 1103 OFFCURVE",
"129 969 QCURVE",
"202 844 LINE",
"325 952 OFFCURVE",
"511 952 QCURVE SMOOTH",
"647 952 OFFCURVE",
"808 752 OFFCURVE",
"815 584 QCURVE",
"98 584 LINE",
"98 468 LINE SMOOTH",
"98 235 OFFCURVE",
"331 -19 OFFCURVE",
"539 -19 QCURVE SMOOTH",
"661 -20 OFFCURVE",
"877 121 OFFCURVE",
"1001 369 OFFCURVE",
"1001 518 QCURVE SMOOTH",
"1001 554 LINE SMOOTH",
"1001 803 OFFCURVE",
"731 1103 OFFCURVE",
"511 1103 QCURVE",
"511 1103 LINE"
);
},
{
closed = 1;
nodes = (
"421 132 OFFCURVE",
"284 282 OFFCURVE",
"284 407 QCURVE SMOOTH",
"284 433 LINE",
"809 433 LINE",
"788 296 OFFCURVE",
"637 132 OFFCURVE",
"539 132 QCURVE",
"539 132 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1079;
}
);
note = uni0259;
unicode = 0259;
},
{
glyphname = circumflex;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"527 1536 LINE",
"415 1536 LINE",
"169 1264 LINE",
"169 1252 LINE",
"322 1252 LINE",
"471 1422 LINE",
"621 1252 LINE",
"774 1252 LINE",
"774 1262 LINE",
"774 1262 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 7 31 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
5 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 964;
}
);
note = uni02C6;
unicode = 02C6;
},
{
glyphname = caron;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"298 1535 LINE",
"141 1535 LINE",
"141 1525 LINE",
"392 1251 LINE",
"505 1251 LINE",
"759 1525 LINE",
"759 1535 LINE",
"599 1535 LINE",
"449 1365 LINE",
"449 1365 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 4 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 909;
}
);
note = uni02C7;
unicode = 02C7;
},
{
glyphname = firsttonechinese;
layers = (
{
components = (
{
name = macron;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 939;
}
);
note = uni02C9;
unicode = 02C9;
},
{
glyphname = breve;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"578 1495 LINE",
"578 1424 OFFCURVE",
"499 1346 OFFCURVE",
"429 1346 QCURVE SMOOTH",
"356 1346 OFFCURVE",
"280 1425 OFFCURVE",
"280 1495 QCURVE",
"129 1495 LINE",
"129 1375 OFFCURVE",
"295 1227 OFFCURVE",
"563 1227 OFFCURVE",
"728 1374 OFFCURVE",
"728 1495 QCURVE",
"728 1495 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
9 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 874;
}
);
note = uni02D8;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2020-11-27 19:57:25 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 249, 1287}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
}
);
note = uni02D9;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2020-11-27 19:42:55 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"156 1275 OFFCURVE",
"254 1181 OFFCURVE",
"330 1181 QCURVE SMOOTH",
"403 1181 OFFCURVE",
"499 1274 OFFCURVE",
"499 1344 QCURVE SMOOTH",
"499 1415 OFFCURVE",
"401 1511 OFFCURVE",
"330 1511 QCURVE SMOOTH",
"256 1511 OFFCURVE",
"156 1414 OFFCURVE",
"156 1344 QCURVE",
"156 1344 LINE"
);
},
{
closed = 1;
nodes = (
"243 1378 OFFCURVE",
"293 1430 OFFCURVE",
"330 1430 QCURVE SMOOTH",
"365 1430 OFFCURVE",
"413 1380 OFFCURVE",
"413 1344 QCURVE SMOOTH",
"413 1309 OFFCURVE",
"365 1261 OFFCURVE",
"295 1261 OFFCURVE",
"243 1309 OFFCURVE",
"243 1344 QCURVE",
"243 1344 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
63 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 685;
}
);
note = uni02DA;
unicode = 02DA;
},
{
glyphname = ogonek;
lastChange = "2020-11-28 02:18:04 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"307 56 LINE",
"184 0 OFFCURVE",
"50 -154 OFFCURVE",
"50 -243 QCURVE SMOOTH",
"50 -329 OFFCURVE",
"153 -433 OFFCURVE",
"242 -433 QCURVE SMOOTH",
"332 -433 OFFCURVE",
"402 -389 QCURVE",
"389 -268 LINE",
"337 -294 OFFCURVE",
"289 -294 QCURVE SMOOTH",
"211 -294 OFFCURVE",
"211 -222 QCURVE SMOOTH",
"211 -136 OFFCURVE",
"324 -45 QCURVE SMOOTH",
"382 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
15 16 31 16 47 16 63 16 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 554;
}
);
note = uni02DB;
unicode = 02DB;
},
{
glyphname = tilde;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"706 1512 LINE",
"706 1467 OFFCURVE",
"649 1399 OFFCURVE",
"606 1399 QCURVE SMOOTH",
"575 1399 OFFCURVE",
"524 1417 OFFCURVE",
"428 1475 OFFCURVE",
"372 1495 OFFCURVE",
"337 1495 QCURVE SMOOTH",
"244 1495 OFFCURVE",
"123 1355 OFFCURVE",
"123 1248 QCURVE",
"247 1241 LINE",
"247 1290 OFFCURVE",
"305 1353 OFFCURVE",
"346 1353 QCURVE SMOOTH",
"374 1353 OFFCURVE",
"417 1340 OFFCURVE",
"514 1278 OFFCURVE",
"574 1258 OFFCURVE",
"615 1258 QCURVE SMOOTH",
"707 1258 OFFCURVE",
"830 1392 OFFCURVE",
"830 1500 QCURVE",
"830 1500 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 8 31 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 966;
}
);
note = uni02DC;
unicode = 02DC;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"374 1232 LINE",
"543 1232 LINE",
"812 1535 LINE",
"605 1535 LINE",
"605 1535 LINE"
);
},
{
closed = 1;
nodes = (
"94 1232 LINE",
"244 1232 LINE",
"462 1535 LINE",
"265 1535 LINE",
"265 1535 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 764;
}
);
note = uni02DD;
unicode = 02DD;
},
{
glyphname = lowringmod;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"126 -311 OFFCURVE",
"224 -405 OFFCURVE",
"300 -405 QCURVE SMOOTH",
"373 -405 OFFCURVE",
"469 -312 OFFCURVE",
"469 -242 QCURVE SMOOTH",
"469 -171 OFFCURVE",
"371 -75 OFFCURVE",
"300 -75 QCURVE SMOOTH",
"226 -75 OFFCURVE",
"126 -172 OFFCURVE",
"126 -242 QCURVE",
"126 -242 LINE"
);
},
{
closed = 1;
nodes = (
"213 -208 OFFCURVE",
"263 -156 OFFCURVE",
"300 -156 QCURVE SMOOTH",
"335 -156 OFFCURVE",
"383 -206 OFFCURVE",
"383 -242 QCURVE SMOOTH",
"383 -277 OFFCURVE",
"335 -325 OFFCURVE",
"265 -325 OFFCURVE",
"213 -277 OFFCURVE",
"213 -242 QCURVE",
"213 -242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
0 3 16 3 32 3 48 3 64 3 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
48 9 64 9 80 9 96 9 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 602;
}
);
note = uni02F3;
unicode = 02F3;
},
{
glyphname = gravecomb;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-633 1536 LINE",
"-857 1536 LINE",
"-599 1242 LINE",
"-440 1242 LINE",
"-440 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0300;
unicode = 0300;
},
{
glyphname = acutecomb;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-657 1242 LINE",
"-508 1242 LINE",
"-240 1536 LINE",
"-464 1536 LINE",
"-464 1536 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0301;
unicode = 0301;
},
{
glyphname = tildecomb;
layers = (
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -1008, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
}
);
note = uni0303;
unicode = 0303;
},
{
glyphname = hookabovecomb;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-520 1241 LINE",
"-519 1312 LINE",
"-442 1323 OFFCURVE",
"-364 1403 OFFCURVE",
"-364 1464 QCURVE SMOOTH",
"-364 1549 OFFCURVE",
"-518 1652 OFFCURVE",
"-667 1652 QCURVE",
"-674 1546 LINE",
"-599 1546 OFFCURVE",
"-508 1507 OFFCURVE",
"-508 1429 OFFCURVE",
"-578 1399 OFFCURVE",
"-653 1394 QCURVE",
"-652 1241 LINE",
"-652 1241 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
15 7 31 7 47 7 63 7 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
1 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0309;
unicode = 0309;
},
{
glyphname = dblgravecomb;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-760 1518 LINE",
"-985 1518 LINE",
"-679 1252 LINE",
"-510 1252 LINE",
"-510 1252 LINE"
);
},
{
closed = 1;
nodes = (
"-439 1518 LINE",
"-645 1518 LINE",
"-399 1252 LINE",
"-249 1252 LINE",
"-249 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 6 31 6 47 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni030F;
unicode = 030F;
},
{
glyphname = dotbelowcomb;
lastChange = "2020-11-27 19:57:51 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, -608, -335}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0323;
unicode = 0323;
},
{
glyphname = tonos;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"183 1262 LINE",
"295 1262 LINE",
"411 1599 LINE",
"237 1599 LINE",
"237 1599 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 525;
}
);
note = uni0384;
unicode = 0384;
},
{
glyphname = dieresistonos;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"433 1408 LINE",
"568 1408 LINE",
"669 1672 LINE",
"481 1672 LINE",
"481 1672 LINE"
);
},
{
closed = 1;
nodes = (
"113 1326 OFFCURVE",
"168 1266 OFFCURVE",
"276 1266 OFFCURVE",
"332 1326 OFFCURVE",
"332 1416 OFFCURVE",
"276 1477 OFFCURVE",
"168 1477 OFFCURVE",
"113 1416 OFFCURVE",
"113 1371 QCURVE",
"113 1371 LINE"
);
},
{
closed = 1;
nodes = (
"680 1324 OFFCURVE",
"735 1264 OFFCURVE",
"843 1264 OFFCURVE",
"899 1324 OFFCURVE",
"899 1414 OFFCURVE",
"843 1476 OFFCURVE",
"735 1476 OFFCURVE",
"680 1414 OFFCURVE",
"680 1369 QCURVE",
"680 1369 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1035;
}
);
note = uni0385;
unicode = 0385;
},
{
glyphname = anoteleia;
layers = (
{
components = (
{
name = periodcentered;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 535;
}
);
note = uni0387;
unicode = 0387;
},
{
glyphname = Gamma;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1072 1456 LINE",
"177 1456 LINE",
"177 0 LINE",
"370 0 LINE",
"370 1298 LINE",
"1072 1298 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1139;
}
);
note = uni0393;
rightKerningGroup = Gamma;
unicode = 0393;
},
{
glyphname = Delta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"31 0 LINE",
"1395 0 LINE",
"816 1456 LINE",
"646 1456 LINE"
);
},
{
closed = 1;
nodes = (
"728 1221 LINE",
"1137 157 LINE",
"293 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1444;
}
);
leftKerningGroup = A;
note = uni0394;
rightKerningGroup = A;
unicode = "0394,2206";
},
{
glyphname = Theta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"960 811 LINE",
"443 811 LINE",
"443 659 LINE",
"960 659 LINE"
);
},
{
closed = 1;
nodes = (
"105 462 OFFCURVE",
"252 149 OFFCURVE",
"518 -20 OFFCURVE",
"690 -20 QCURVE SMOOTH",
"867 -20 OFFCURVE",
"1131 150 OFFCURVE",
"1274 468 OFFCURVE",
"1274 681 QCURVE SMOOTH",
"1274 786 LINE SMOOTH",
"1272 993 OFFCURVE",
"1127 1308 OFFCURVE",
"863 1476 OFFCURVE",
"688 1476 QCURVE SMOOTH",
"516 1476 OFFCURVE",
"249 1305 OFFCURVE",
"103 983 OFFCURVE",
"103 773 QCURVE SMOOTH",
"103 668 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 788 LINE SMOOTH",
"297 1034 OFFCURVE",
"506 1311 OFFCURVE",
"688 1311 QCURVE SMOOTH",
"875 1311 OFFCURVE",
"1083 1034 OFFCURVE",
"1083 775 QCURVE SMOOTH",
"1083 667 LINE SMOOTH",
"1080 414 OFFCURVE",
"876 143 OFFCURVE",
"690 143 QCURVE SMOOTH",
"503 143 OFFCURVE",
"294 431 OFFCURVE",
"294 681 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 2 207 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1393;
}
);
leftKerningGroup = C;
note = uni0398;
rightKerningGroup = D;
unicode = 0398;
},
{
glyphname = Lambda;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1076 0 LINE",
"1283 0 LINE",
"752 1456 LINE",
"580 1456 LINE",
"50 0 LINE",
"256 0 LINE",
"666 1161 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1342;
}
);
leftKerningGroup = A;
note = uni039B;
rightKerningGroup = A;
unicode = 039B;
},
{
glyphname = Xi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"120 0 LINE",
"1057 0 LINE",
"1057 157 LINE",
"120 157 LINE"
);
},
{
closed = 1;
nodes = (
"1040 1298 LINE",
"1040 1456 LINE",
"124 1456 LINE",
"124 1298 LINE"
);
},
{
closed = 1;
nodes = (
"961 674 LINE",
"961 831 LINE",
"207 831 LINE",
"207 674 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 5 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1169;
}
);
note = uni039E;
unicode = 039E;
},
{
glyphname = Pi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1281 1456 LINE",
"178 1456 LINE",
"178 0 LINE",
"370 0 LINE",
"370 1298 LINE",
"1088 1298 LINE",
"1088 0 LINE",
"1281 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1461;
}
);
note = uni03A0;
unicode = 03A0;
},
{
glyphname = Sigma;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"754 742 LINE",
"311 1298 LINE",
"1043 1298 LINE",
"1043 1456 LINE",
"69 1456 LINE",
"69 1312 LINE",
"550 729 LINE",
"69 143 LINE",
"69 0 LINE",
"1092 0 LINE",
"1092 157 LINE",
"309 157 LINE",
"754 718 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1169;
}
);
note = uni03A3;
unicode = 03A3;
},
{
glyphname = Phi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"834 1456 LINE",
"640 1456 LINE",
"640 1271 LINE",
"457 1268 OFFCURVE",
"318 1181 QCURVE SMOOTH",
"202 1108 OFFCURVE",
"77 870 OFFCURVE",
"77 722 QCURVE SMOOTH",
"77 482 OFFCURVE",
"389 179 OFFCURVE",
"640 175 QCURVE",
"640 0 LINE",
"834 0 LINE",
"834 175 LINE",
"998 179 OFFCURVE",
"1253 316 OFFCURVE",
"1396 566 OFFCURVE",
"1396 724 QCURVE SMOOTH",
"1396 880 OFFCURVE",
"1252 1130 OFFCURVE",
"995 1268 OFFCURVE",
"834 1271 QCURVE"
);
},
{
closed = 1;
nodes = (
"268 905 OFFCURVE",
"460 1107 OFFCURVE",
"640 1111 QCURVE",
"640 334 LINE",
"462 338 OFFCURVE",
"268 538 OFFCURVE",
"268 722 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"834 1111 LINE",
"1012 1107 OFFCURVE",
"1205 905 OFFCURVE",
"1205 724 QCURVE SMOOTH",
"1205 541 OFFCURVE",
"1014 338 OFFCURVE",
"834 334 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 20 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 9 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1467;
}
);
note = uni03A6;
unicode = 03A6;
},
{
glyphname = Psi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"790 1456 LINE",
"597 1456 LINE",
"597 524 LINE",
"448 549 OFFCURVE",
"283 764 OFFCURVE",
"282 927 QCURVE SMOOTH",
"282 1456 LINE",
"90 1456 LINE",
"90 920 LINE SMOOTH",
"93 683 OFFCURVE",
"366 385 OFFCURVE",
"597 362 QCURVE",
"597 0 LINE",
"790 0 LINE",
"790 362 LINE",
"949 377 OFFCURVE",
"1186 524 OFFCURVE",
"1313 769 OFFCURVE",
"1313 928 QCURVE SMOOTH",
"1313 1456 LINE",
"1120 1456 LINE",
"1120 931 LINE SMOOTH",
"1120 761 OFFCURVE",
"946 546 OFFCURVE",
"790 523 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 4 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1417;
}
);
note = uni03A8;
unicode = 03A8;
},
{
glyphname = Ohm;
lastChange = "2020-11-28 02:34:35 +0000";
layers = (
{
components = (
{
name = omega.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1266;
}
);
unicode = 2126;
},
{
glyphname = alpha;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"849 1082 LINE",
"832 941 LINE",
"725 1102 OFFCURVE",
"522 1102 QCURVE SMOOTH",
"326 1102 OFFCURVE",
"100 785 OFFCURVE",
"100 521 QCURVE SMOOTH",
"100 506 LINE SMOOTH",
"100 262 OFFCURVE",
"328 -21 OFFCURVE",
"520 -21 QCURVE SMOOTH",
"729 -21 OFFCURVE",
"836 144 QCURVE",
"874 -21 OFFCURVE",
"1021 -21 QCURVE SMOOTH",
"1095 -21 OFFCURVE",
"1143 13 QCURVE",
"1120 150 LINE",
"1105 145 OFFCURVE",
"1086 145 QCURVE SMOOTH",
"1008 145 OFFCURVE",
"1006 285 QCURVE SMOOTH",
"1006 1082 LINE"
);
},
{
closed = 1;
nodes = (
"285 723 OFFCURVE",
"434 950 OFFCURVE",
"568 950 QCURVE SMOOTH",
"736 950 OFFCURVE",
"821 762 QCURVE",
"821 316 LINE",
"739 130 OFFCURVE",
"566 130 QCURVE SMOOTH",
"431 130 OFFCURVE",
"285 325 OFFCURVE",
"285 500 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
31 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 19 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
21 19 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1157;
}
);
leftKerningGroup = c;
note = uni03B1;
unicode = 03B1;
},
{
glyphname = beta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"489 1476 OFFCURVE",
"282 1369 OFFCURVE",
"160 1181 OFFCURVE",
"160 1073 QCURVE SMOOTH",
"160 -384 LINE",
"346 -384 LINE",
"346 75 LINE",
"466 -20 OFFCURVE",
"647 -20 QCURVE SMOOTH",
"852 -20 OFFCURVE",
"1101 219 OFFCURVE",
"1101 424 QCURVE SMOOTH",
"1101 554 OFFCURVE",
"970 749 OFFCURVE",
"847 794 QCURVE",
"935 840 OFFCURVE",
"1033 992 OFFCURVE",
"1033 1083 QCURVE SMOOTH",
"1033 1257 OFFCURVE",
"798 1476 OFFCURVE",
"605 1476 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"346 1075 LINE SMOOTH",
"347 1182 OFFCURVE",
"497 1324 OFFCURVE",
"605 1324 QCURVE SMOOTH",
"712 1324 OFFCURVE",
"848 1189 OFFCURVE",
"848 1087 QCURVE SMOOTH",
"848 977 OFFCURVE",
"722 858 OFFCURVE",
"602 858 QCURVE SMOOTH",
"517 858 LINE",
"517 706 LINE",
"667 706 LINE SMOOTH",
"776 703 OFFCURVE",
"916 538 OFFCURVE",
"916 420 QCURVE SMOOTH",
"916 291 OFFCURVE",
"762 131 OFFCURVE",
"628 131 QCURVE SMOOTH",
"534 131 OFFCURVE",
"390 194 OFFCURVE",
"346 246 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 0 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 37 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1213;
}
);
note = uni03B2;
unicode = 03B2;
},
{
glyphname = gamma;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"235 1082 LINE",
"46 1082 LINE",
"426 64 LINE",
"426 -416 LINE",
"612 -416 LINE",
"612 57 LINE",
"991 1082 LINE",
"802 1082 LINE",
"522 276 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 7 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1026;
}
);
leftKerningGroup = v;
note = uni03B3;
rightKerningGroup = v;
unicode = 03B3;
},
{
glyphname = delta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"221 1178 OFFCURVE",
"328 1038 OFFCURVE",
"427 999 QCURVE",
"428 994 LINE",
"284 959 OFFCURVE",
"96 695 OFFCURVE",
"96 530 QCURVE SMOOTH",
"96 517 LINE SMOOTH",
"96 275 OFFCURVE",
"359 -20 OFFCURVE",
"581 -20 QCURVE SMOOTH",
"726 -20 OFFCURVE",
"945 113 OFFCURVE",
"1063 356 OFFCURVE",
"1063 509 QCURVE SMOOTH",
"1063 548 LINE SMOOTH",
"1058 744 OFFCURVE",
"851 1013 OFFCURVE",
"408 1166 OFFCURVE",
"408 1274 QCURVE SMOOTH",
"408 1336 OFFCURVE",
"509 1408 OFFCURVE",
"595 1408 QCURVE SMOOTH",
"719 1408 OFFCURVE",
"870 1349 QCURVE",
"872 1509 LINE",
"738 1564 OFFCURVE",
"599 1564 QCURVE SMOOTH",
"424 1564 OFFCURVE",
"221 1405 OFFCURVE",
"221 1269 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"283 705 OFFCURVE",
"447 910 OFFCURVE",
"583 910 QCURVE",
"708 885 OFFCURVE",
"877 666 OFFCURVE",
"877 530 QCURVE SMOOTH",
"877 332 OFFCURVE",
"717 130 OFFCURVE",
"581 130 QCURVE SMOOTH",
"444 130 OFFCURVE",
"283 333 OFFCURVE",
"283 509 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 20 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
40 11 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
note = uni03B4;
unicode = 03B4;
},
{
glyphname = epsilon;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"286 472 OFFCURVE",
"520 478 QCURVE SMOOTH",
"744 478 LINE",
"744 626 LINE",
"548 626 LINE SMOOTH",
"304 626 OFFCURVE",
"304 786 QCURVE SMOOTH",
"304 860 OFFCURVE",
"439 951 OFFCURVE",
"551 951 QCURVE SMOOTH",
"658 951 OFFCURVE",
"801 850 OFFCURVE",
"801 780 QCURVE",
"986 780 LINE",
"986 922 OFFCURVE",
"737 1101 OFFCURVE",
"551 1101 QCURVE SMOOTH",
"349 1101 OFFCURVE",
"118 935 OFFCURVE",
"118 787 QCURVE SMOOTH",
"118 714 OFFCURVE",
"216 592 OFFCURVE",
"304 556 QCURVE",
"99 490 OFFCURVE",
"99 304 QCURVE SMOOTH",
"99 157 OFFCURVE",
"347 -20 OFFCURVE",
"551 -20 QCURVE SMOOTH",
"749 -20 OFFCURVE",
"1004 165 OFFCURVE",
"1004 320 QCURVE",
"819 320 LINE",
"819 239 OFFCURVE",
"664 129 OFFCURVE",
"551 129 QCURVE SMOOTH",
"433 129 OFFCURVE",
"286 227 OFFCURVE",
"286 304 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 34 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
191 34 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 35 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 21 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1104;
}
);
note = uni03B5;
unicode = 03B5;
},
{
glyphname = zeta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"109 1456 LINE",
"109 1304 LINE",
"746 1304 LINE",
"461 981 LINE SMOOTH",
"334 831 OFFCURVE",
"188 511 OFFCURVE",
"188 381 QCURVE SMOOTH",
"188 252 OFFCURVE",
"279 99 OFFCURVE",
"382 54 QCURVE SMOOTH",
"436 30 OFFCURVE",
"744 -48 OFFCURVE",
"744 -116 QCURVE SMOOTH",
"744 -161 OFFCURVE",
"693 -246 OFFCURVE",
"646 -299 QCURVE",
"744 -383 LINE",
"811 -329 OFFCURVE",
"919 -157 OFFCURVE",
"921 -88 QCURVE SMOOTH",
"921 -10 OFFCURVE",
"850 78 OFFCURVE",
"769 102 QCURVE SMOOTH",
"522 174 LINE SMOOTH",
"440 199 OFFCURVE",
"373 296 OFFCURVE",
"373 386 QCURVE SMOOTH",
"373 519 OFFCURVE",
"475 748 OFFCURVE",
"613 909 QCURVE SMOOTH",
"963 1336 LINE",
"963 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 32 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
2 21 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
28 0 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1061;
}
);
note = uni03B6;
unicode = 03B6;
},
{
glyphname = eta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"145 1082 LINE",
"145 0 LINE",
"331 0 LINE",
"331 785 LINE",
"365 863 OFFCURVE",
"495 950 OFFCURVE",
"587 950 QCURVE SMOOTH",
"715 950 OFFCURVE",
"823 826 OFFCURVE",
"823 690 QCURVE SMOOTH",
"823 -415 LINE",
"1008 -415 LINE",
"1008 701 LINE SMOOTH",
"1007 905 OFFCURVE",
"833 1102 OFFCURVE",
"643 1102 QCURVE SMOOTH",
"443 1102 OFFCURVE",
"323 946 QCURVE",
"312 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 16 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
leftKerningGroup = m;
note = uni03B7;
rightKerningGroup = h;
unicode = 03B7;
},
{
glyphname = theta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1042 845 LINE SMOOTH",
"1038 1152 OFFCURVE",
"803 1476 OFFCURVE",
"581 1476 QCURVE SMOOTH",
"358 1476 OFFCURVE",
"122 1142 OFFCURVE",
"122 825 QCURVE SMOOTH",
"122 620 LINE SMOOTH",
"126 312 OFFCURVE",
"364 -20 OFFCURVE",
"583 -20 QCURVE SMOOTH",
"806 -20 OFFCURVE",
"1042 319 OFFCURVE",
"1042 640 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 649 LINE",
"856 649 LINE",
"856 598 LINE SMOOTH",
"854 371 OFFCURVE",
"713 131 OFFCURVE",
"453 131 OFFCURVE",
"307 381 OFFCURVE",
"307 610 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 856 LINE SMOOTH",
"307 1083 OFFCURVE",
"447 1324 OFFCURVE",
"581 1324 QCURVE SMOOTH",
"717 1324 OFFCURVE",
"856 1083 OFFCURVE",
"856 856 QCURVE SMOOTH",
"856 801 LINE",
"307 801 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
14 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
143 14 159 14 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 14 207 14 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 14 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
207 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
239 14 255 14 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1166;
}
);
note = uni03B8;
unicode = 03B8;
},
{
glyphname = iota;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"195 1082 LINE",
"195 282 LINE SMOOTH",
"195 -12 OFFCURVE",
"444 -12 QCURVE SMOOTH",
"517 -12 OFFCURVE",
"587 7 QCURVE",
"586 158 LINE",
"547 146 OFFCURVE",
"499 146 QCURVE SMOOTH",
"435 146 OFFCURVE",
"380 210 OFFCURVE",
"380 273 QCURVE SMOOTH",
"380 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 663;
}
);
note = uni03B9;
unicode = 03B9;
},
{
glyphname = lambda;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"208 1518 OFFCURVE",
"166 1506 QCURVE",
"167 1364 LINE",
"214 1366 LINE SMOOTH",
"259 1366 OFFCURVE",
"312 1320 OFFCURVE",
"335 1264 QCURVE SMOOTH",
"431 1029 LINE",
"37 0 LINE",
"243 0 LINE",
"529 779 LINE",
"759 186 LINE SMOOTH",
"788 106 OFFCURVE",
"850 20 OFFCURVE",
"928 -17 OFFCURVE",
"1005 -17 QCURVE SMOOTH",
"1047 -17 OFFCURVE",
"1083 -5 QCURVE",
"1077 147 LINE",
"1039 144 LINE SMOOTH",
"1004 144 OFFCURVE",
"959 183 OFFCURVE",
"939 234 QCURVE SMOOTH",
"512 1343 LINE",
"479 1438 OFFCURVE",
"359 1518 OFFCURVE",
"261 1518 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1134;
}
);
note = uni03BB;
unicode = 03BB;
},
{
glyphname = xi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"909 1437 LINE",
"797 1476 OFFCURVE",
"652 1476 QCURVE SMOOTH",
"424 1476 OFFCURVE",
"166 1291 OFFCURVE",
"166 1132 QCURVE SMOOTH",
"166 1036 OFFCURVE",
"297 884 OFFCURVE",
"415 842 QCURVE",
"265 796 OFFCURVE",
"101 593 OFFCURVE",
"101 448 QCURVE SMOOTH",
"101 337 OFFCURVE",
"166 184 OFFCURVE",
"285 79 OFFCURVE",
"454 13 OFFCURVE",
"684 -38 OFFCURVE",
"760 -84 OFFCURVE",
"760 -123 QCURVE SMOOTH",
"760 -185 OFFCURVE",
"711 -245 QCURVE SMOOTH",
"654 -309 LINE",
"761 -393 LINE",
"833 -332 OFFCURVE",
"937 -165 OFFCURVE",
"937 -101 QCURVE SMOOTH",
"937 4 OFFCURVE",
"858 53 QCURVE SMOOTH",
"826 73 OFFCURVE",
"702 110 OFFCURVE",
"431 175 OFFCURVE",
"287 332 OFFCURVE",
"287 444 QCURVE SMOOTH",
"287 607 OFFCURVE",
"486 763 OFFCURVE",
"668 765 QCURVE SMOOTH",
"818 765 LINE",
"818 917 LINE",
"685 917 LINE SMOOTH",
"352 917 OFFCURVE",
"352 1136 QCURVE SMOOTH",
"352 1221 OFFCURVE",
"512 1324 OFFCURVE",
"653 1324 QCURVE SMOOTH",
"750 1324 OFFCURVE",
"882 1288 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 46 47 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
43 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 46 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 46 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
37 9 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1004;
}
);
note = uni03BE;
unicode = 03BE;
},
{
glyphname = pi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1137 1082 LINE",
"41 1082 LINE",
"41 929 LINE",
"210 929 LINE",
"210 0 LINE",
"395 0 LINE",
"395 929 LINE",
"796 929 LINE",
"796 282 LINE SMOOTH",
"796 -12 OFFCURVE",
"1045 -12 QCURVE SMOOTH",
"1118 -12 OFFCURVE",
"1188 7 QCURVE",
"1187 158 LINE",
"1148 146 OFFCURVE",
"1100 146 QCURVE SMOOTH",
"1035 146 OFFCURVE",
"981 211 OFFCURVE",
"981 275 QCURVE SMOOTH",
"981 929 LINE",
"1137 929 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1220;
}
);
note = uni03C0;
unicode = 03C0;
},
{
glyphname = rho;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"463 1102 OFFCURVE",
"258 974 OFFCURVE",
"145 738 OFFCURVE",
"145 580 QCURVE SMOOTH",
"145 -416 LINE",
"331 -416 LINE",
"331 104 LINE",
"445 -20 OFFCURVE",
"640 -20 QCURVE SMOOTH",
"831 -20 OFFCURVE",
"1055 260 OFFCURVE",
"1055 500 QCURVE SMOOTH",
"1054 566 LINE SMOOTH",
"1043 820 OFFCURVE",
"799 1102 OFFCURVE",
"592 1102 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"331 565 LINE SMOOTH",
"331 734 OFFCURVE",
"475 950 OFFCURVE",
"592 950 QCURVE SMOOTH",
"725 950 OFFCURVE",
"870 726 OFFCURVE",
"870 521 QCURVE SMOOTH",
"870 326 OFFCURVE",
"720 131 OFFCURVE",
"585 131 QCURVE SMOOTH",
"414 131 OFFCURVE",
"331 278 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
note = uni03C1;
rightKerningGroup = b;
unicode = 03C1;
},
{
glyphname = sigmafinal;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"435 1102 OFFCURVE",
"220 965 OFFCURVE",
"101 714 OFFCURVE",
"101 562 QCURVE SMOOTH",
"101 520 LINE SMOOTH",
"101 309 OFFCURVE",
"349 52 OFFCURVE",
"585 0 QCURVE SMOOTH",
"671 -19 OFFCURVE",
"741 -62 OFFCURVE",
"741 -105 QCURVE SMOOTH",
"741 -175 OFFCURVE",
"692 -235 QCURVE SMOOTH",
"645 -289 LINE",
"743 -374 LINE",
"817 -312 OFFCURVE",
"916 -145 OFFCURVE",
"918 -82 QCURVE SMOOTH",
"918 -2 OFFCURVE",
"838 94 OFFCURVE",
"740 123 QCURVE SMOOTH",
"606 161 LINE SMOOTH",
"286 260 OFFCURVE",
"286 520 QCURVE SMOOTH",
"286 552 LINE SMOOTH",
"286 731 OFFCURVE",
"441 950 OFFCURVE",
"573 950 QCURVE SMOOTH",
"684 950 OFFCURVE",
"818 819 OFFCURVE",
"818 709 QCURVE",
"993 709 LINE",
"993 889 OFFCURVE",
"762 1102 OFFCURVE",
"573 1102 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1101;
}
);
leftKerningGroup = c;
note = uni03C2;
unicode = 03C2;
},
{
glyphname = sigma;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1147 1082 LINE",
"571 1082 LINE SMOOTH",
"431 1081 OFFCURVE",
"214 945 OFFCURVE",
"96 703 OFFCURVE",
"96 551 QCURVE SMOOTH",
"96 538 LINE SMOOTH",
"96 283 OFFCURVE",
"362 -20 OFFCURVE",
"580 -20 QCURVE SMOOTH",
"720 -20 OFFCURVE",
"941 116 OFFCURVE",
"1063 351 OFFCURVE",
"1063 491 QCURVE SMOOTH",
"1063 508 LINE SMOOTH",
"1063 781 OFFCURVE",
"863 929 QCURVE",
"1147 929 LINE"
);
},
{
closed = 1;
nodes = (
"282 725 OFFCURVE",
"441 929 OFFCURVE",
"578 929 QCURVE SMOOTH",
"717 929 OFFCURVE",
"878 723 OFFCURVE",
"878 551 QCURVE SMOOTH",
"878 348 OFFCURVE",
"719 131 OFFCURVE",
"580 131 QCURVE SMOOTH",
"442 131 OFFCURVE",
"282 346 OFFCURVE",
"282 529 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
leftKerningGroup = c;
note = uni03C3;
unicode = 03C3;
},
{
glyphname = tau;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"985 1082 LINE",
"81 1082 LINE",
"81 932 LINE",
"428 932 LINE",
"428 273 LINE SMOOTH",
"429 127 OFFCURVE",
"546 -20 OFFCURVE",
"671 -20 QCURVE SMOOTH",
"777 -20 OFFCURVE",
"853 32 QCURVE",
"811 162 LINE",
"762 136 OFFCURVE",
"719 136 QCURVE SMOOTH",
"614 136 OFFCURVE",
"614 269 QCURVE SMOOTH",
"614 932 LINE",
"985 932 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1068;
}
);
note = uni03C4;
unicode = 03C4;
},
{
glyphname = upsilon;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"143 1082 LINE",
"143 419 LINE SMOOTH",
"145 204 OFFCURVE",
"345 -20 OFFCURVE",
"539 -20 QCURVE SMOOTH",
"757 -20 OFFCURVE",
"1014 299 OFFCURVE",
"1014 562 QCURVE SMOOTH",
"1014 841 OFFCURVE",
"901 1082 QCURVE",
"706 1082 LINE",
"824 793 OFFCURVE",
"829 562 QCURVE SMOOTH",
"829 380 OFFCURVE",
"659 130 OFFCURVE",
"530 130 QCURVE SMOOTH",
"329 130 OFFCURVE",
"329 435 QCURVE SMOOTH",
"329 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1117;
}
);
leftKerningGroup = u;
note = uni03C5;
unicode = 03C5;
},
{
glyphname = phi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"620 -478 LINE",
"805 -478 LINE",
"805 -17 LINE",
"1066 4 OFFCURVE",
"1356 301 OFFCURVE",
"1356 544 QCURVE SMOOTH",
"1356 693 OFFCURVE",
"1226 941 OFFCURVE",
"1001 1082 OFFCURVE",
"871 1082 QCURVE SMOOTH",
"758 1082 OFFCURVE",
"620 957 OFFCURVE",
"620 852 QCURVE SMOOTH",
"620 136 LINE",
"454 162 OFFCURVE",
"273 391 OFFCURVE",
"273 564 QCURVE",
"283 809 OFFCURVE",
"444 949 QCURVE",
"343 1082 LINE",
"216 995 OFFCURVE",
"87 732 OFFCURVE",
"87 564 QCURVE SMOOTH",
"87 313 OFFCURVE",
"364 6 OFFCURVE",
"620 -17 QCURVE"
);
},
{
closed = 1;
nodes = (
"805 847 LINE SMOOTH",
"805 929 OFFCURVE",
"871 929 QCURVE SMOOTH",
"1001 929 OFFCURVE",
"1166 713 OFFCURVE",
"1171 544 QCURVE SMOOTH",
"1171 380 OFFCURVE",
"975 158 OFFCURVE",
"805 136 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1443;
}
);
note = uni03C6;
unicode = 03C6;
},
{
glyphname = psi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"611 1082 LINE",
"611 137 LINE",
"449 162 OFFCURVE",
"283 390 OFFCURVE",
"281 584 QCURVE SMOOTH",
"281 1082 LINE",
"95 1082 LINE",
"95 596 LINE SMOOTH",
"95 321 OFFCURVE",
"356 11 OFFCURVE",
"611 -15 QCURVE",
"611 -472 LINE",
"796 -472 LINE",
"796 -17 LINE",
"1062 4 OFFCURVE",
"1347 308 OFFCURVE",
"1347 567 QCURVE SMOOTH",
"1347 846 OFFCURVE",
"1229 1082 QCURVE",
"1035 1082 LINE",
"1157 799 OFFCURVE",
"1162 567 QCURVE SMOOTH",
"1162 389 OFFCURVE",
"967 160 OFFCURVE",
"796 136 QCURVE",
"796 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1434;
}
);
note = uni03C8;
unicode = 03C8;
},
{
glyphname = omega;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"257 1082 LINE",
"122 847 OFFCURVE",
"122 560 QCURVE SMOOTH",
"122 285 OFFCURVE",
"329 -20 OFFCURVE",
"517 -20 QCURVE SMOOTH",
"636 -20 OFFCURVE",
"800 101 OFFCURVE",
"841 218 QCURVE",
"926 -20 OFFCURVE",
"1166 -20 QCURVE SMOOTH",
"1354 -20 OFFCURVE",
"1561 285 OFFCURVE",
"1561 560 QCURVE SMOOTH",
"1561 838 OFFCURVE",
"1426 1082 QCURVE",
"1231 1082 LINE",
"1369 799 OFFCURVE",
"1376 560 QCURVE SMOOTH",
"1376 356 OFFCURVE",
"1262 130 OFFCURVE",
"1156 130 QCURVE SMOOTH",
"1049 130 OFFCURVE",
"936 300 OFFCURVE",
"935 464 QCURVE SMOOTH",
"935 770 LINE",
"748 770 LINE",
"748 469 LINE SMOOTH",
"748 303 OFFCURVE",
"635 130 OFFCURVE",
"527 130 QCURVE SMOOTH",
"421 130 OFFCURVE",
"307 357 OFFCURVE",
"307 560 QCURVE SMOOTH",
"314 799 OFFCURVE",
"452 1082 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
27 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
30 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
27 19 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1687;
}
);
note = uni03C9;
unicode = 03C9;
},
{
glyphname = thetaSymbol;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1137 776 LINE",
"1065 757 OFFCURVE",
"1002 752 QCURVE",
"1002 1103 LINE SMOOTH",
"1002 1281 OFFCURVE",
"824 1478 OFFCURVE",
"665 1478 QCURVE SMOOTH",
"515 1478 OFFCURVE",
"331 1291 OFFCURVE",
"331 1131 QCURVE SMOOTH",
"331 914 OFFCURVE",
"600 632 OFFCURVE",
"817 601 QCURVE",
"817 435 LINE SMOOTH",
"817 283 OFFCURVE",
"687 137 OFFCURVE",
"571 137 QCURVE SMOOTH",
"447 137 OFFCURVE",
"307 292 OFFCURVE",
"307 435 QCURVE SMOOTH",
"307 771 LINE",
"121 769 LINE",
"121 442 LINE SMOOTH",
"121 227 OFFCURVE",
"368 -20 OFFCURVE",
"571 -20 QCURVE SMOOTH",
"771 -20 OFFCURVE",
"1000 218 OFFCURVE",
"1002 429 QCURVE SMOOTH",
"1002 595 LINE",
"1085 604 OFFCURVE",
"1145 627 QCURVE"
);
},
{
closed = 1;
nodes = (
"517 1124 LINE SMOOTH",
"517 1320 OFFCURVE",
"665 1320 QCURVE SMOOTH",
"812 1320 OFFCURVE",
"817 1122 QCURVE SMOOTH",
"817 762 LINE",
"679 792 OFFCURVE",
"517 981 OFFCURVE",
"517 1114 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1185;
}
);
note = uni03D1;
unicode = 03D1;
},
{
glyphname = UpsilonhookSymbol;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"322 1291 LINE SMOOTH",
"280 1384 OFFCURVE",
"173 1468 OFFCURVE",
"85 1468 QCURVE SMOOTH",
"14 1468 OFFCURVE",
"-38 1440 QCURVE",
"-2 1290 LINE",
"11 1298 OFFCURVE",
"50 1298 QCURVE SMOOTH",
"117 1298 OFFCURVE",
"156 1219 QCURVE SMOOTH",
"452 572 LINE",
"452 0 LINE",
"643 0 LINE",
"643 570 LINE",
"940 1219 LINE SMOOTH",
"976 1298 OFFCURVE",
"1046 1298 QCURVE SMOOTH",
"1085 1298 OFFCURVE",
"1098 1290 QCURVE",
"1134 1441 LINE",
"1082 1468 OFFCURVE",
"1010 1468 QCURVE SMOOTH",
"923 1468 OFFCURVE",
"816 1380 OFFCURVE",
"773 1281 QCURVE SMOOTH",
"548 774 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 4 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1090;
}
);
note = uni03D2;
unicode = 03D2;
},
{
glyphname = piSymbol;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1563 1082 LINE",
"74 1082 LINE",
"74 929 LINE",
"190 929 LINE",
"126 751 OFFCURVE",
"126 560 QCURVE SMOOTH",
"126 284 OFFCURVE",
"315 -20 OFFCURVE",
"485 -20 QCURVE SMOOTH",
"725 -20 OFFCURVE",
"808 219 QCURVE",
"891 -20 OFFCURVE",
"1132 -20 QCURVE SMOOTH",
"1303 -20 OFFCURVE",
"1491 287 OFFCURVE",
"1491 560 QCURVE SMOOTH",
"1491 757 OFFCURVE",
"1427 929 QCURVE",
"1563 929 LINE"
);
},
{
closed = 1;
nodes = (
"315 729 OFFCURVE",
"390 929 QCURVE",
"1227 929 LINE",
"1301 730 OFFCURVE",
"1305 560 QCURVE SMOOTH",
"1305 356 OFFCURVE",
"1209 130 OFFCURVE",
"1123 130 QCURVE SMOOTH",
"1017 130 OFFCURVE",
"904 297 OFFCURVE",
"902 459 QCURVE SMOOTH",
"902 722 LINE",
"715 722 LINE",
"715 459 LINE SMOOTH",
"713 297 OFFCURVE",
"600 130 OFFCURVE",
"495 130 QCURVE SMOOTH",
"407 130 OFFCURVE",
"311 357 OFFCURVE",
"311 560 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 17 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 10 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1608;
}
);
note = uni03D6;
unicode = 03D6;
},
{
glyphname = "Dje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"42 1456 LINE",
"42 1298 LINE",
"457 1298 LINE",
"457 0 LINE",
"650 0 LINE",
"650 678 LINE",
"788 724 OFFCURVE",
"938 724 QCURVE SMOOTH",
"1100 724 OFFCURVE",
"1263 574 OFFCURVE",
"1265 432 QCURVE SMOOTH",
"1265 284 OFFCURVE",
"1113 139 OFFCURVE",
"958 139 QCURVE",
"960 -11 LINE",
"1197 -11 OFFCURVE",
"1457 216 OFFCURVE",
"1457 650 OFFCURVE",
"1183 891 OFFCURVE",
"939 891 QCURVE SMOOTH",
"807 891 OFFCURVE",
"650 843 QCURVE",
"650 1298 LINE",
"1172 1298 LINE",
"1172 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 23 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1535;
}
);
leftKerningGroup = T;
note = uni0402;
unicode = 0402;
},
{
glyphname = "E-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1023 282 OFFCURVE",
"852 137 OFFCURVE",
"692 137 QCURVE SMOOTH",
"514 137 OFFCURVE",
"316 417 OFFCURVE",
"316 654 QCURVE SMOOTH",
"316 656 LINE",
"886 656 LINE",
"886 813 LINE",
"316 813 LINE",
"318 1047 OFFCURVE",
"524 1318 OFFCURVE",
"709 1318 QCURVE SMOOTH",
"860 1318 OFFCURVE",
"1027 1160 OFFCURVE",
"1052 988 QCURVE",
"1244 988 LINE",
"1221 1217 OFFCURVE",
"941 1476 OFFCURVE",
"709 1476 QCURVE SMOOTH",
"533 1476 OFFCURVE",
"266 1309 OFFCURVE",
"123 1000 OFFCURVE",
"123 799 QCURVE SMOOTH",
"123 660 LINE SMOOTH",
"123 350 OFFCURVE",
"434 -20 OFFCURVE",
"692 -20 QCURVE SMOOTH",
"930 -20 OFFCURVE",
"1217 231 OFFCURVE",
"1244 462 QCURVE",
"1051 462 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 22 207 22 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
207 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 22 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 22 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 22 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1380;
}
);
leftKerningGroup = C;
note = uni0404;
unicode = 0404;
},
{
glyphname = "Lje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"345 750 LINE SMOOTH",
"334 507 OFFCURVE",
"282 273 OFFCURVE",
"182 166 OFFCURVE",
"89 159 QCURVE SMOOTH",
"49 157 LINE",
"49 0 LINE",
"112 0 LINE SMOOTH",
"256 2 OFFCURVE",
"428 139 OFFCURVE",
"517 431 OFFCURVE",
"532 721 QCURVE SMOOTH",
"558 1298 LINE",
"1070 1298 LINE",
"1070 0 LINE",
"1627 0 LINE SMOOTH",
"1849 4 OFFCURVE",
"2107 247 OFFCURVE",
"2107 445 QCURVE SMOOTH",
"2107 648 OFFCURVE",
"1845 888 OFFCURVE",
"1623 891 QCURVE SMOOTH",
"1262 891 LINE",
"1262 1456 LINE",
"375 1456 LINE"
);
},
{
closed = 1;
nodes = (
"1262 733 LINE",
"1620 733 LINE SMOOTH",
"1758 731 OFFCURVE",
"1915 575 OFFCURVE",
"1915 447 QCURVE SMOOTH",
"1915 315 OFFCURVE",
"1753 157 OFFCURVE",
"1613 157 QCURVE SMOOTH",
"1262 157 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2193;
}
);
leftKerningGroup = "Lje-cy";
note = uni0409;
unicode = 0409;
},
{
glyphname = "Nje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"177 1456 LINE",
"177 0 LINE",
"370 0 LINE",
"370 668 LINE",
"1088 668 LINE",
"1088 0 LINE",
"1645 0 LINE SMOOTH",
"1868 4 OFFCURVE",
"2125 237 OFFCURVE",
"2125 428 QCURVE SMOOTH",
"2125 617 OFFCURVE",
"1868 843 OFFCURVE",
"1642 846 QCURVE SMOOTH",
"1280 846 LINE",
"1280 1456 LINE",
"1088 1456 LINE",
"1088 825 LINE",
"370 825 LINE",
"370 1456 LINE"
);
},
{
closed = 1;
nodes = (
"1280 689 LINE",
"1643 689 LINE SMOOTH",
"1781 686 OFFCURVE",
"1933 546 OFFCURVE",
"1933 430 QCURVE SMOOTH",
"1933 308 OFFCURVE",
"1773 166 OFFCURVE",
"1631 166 QCURVE SMOOTH",
"1280 166 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
4 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2212;
}
);
note = uni040A;
unicode = 040A;
},
{
glyphname = "Tshe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"62 1456 LINE",
"62 1298 LINE",
"470 1298 LINE",
"470 0 LINE",
"662 0 LINE",
"662 706 LINE",
"828 748 OFFCURVE",
"997 748 QCURVE SMOOTH",
"1161 748 OFFCURVE",
"1298 614 OFFCURVE",
"1299 462 QCURVE SMOOTH",
"1299 0 LINE",
"1492 0 LINE",
"1492 467 LINE SMOOTH",
"1489 688 OFFCURVE",
"1247 906 OFFCURVE",
"997 906 QCURVE SMOOTH",
"822 906 OFFCURVE",
"662 866 QCURVE",
"662 1298 LINE",
"1190 1298 LINE",
"1190 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 20 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1666;
}
);
leftKerningGroup = T;
note = uni040B;
unicode = 040B;
},
{
glyphname = "Dzhe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"638 0 LINE",
"638 -359 LINE",
"831 -359 LINE",
"831 0 LINE",
"1279 0 LINE",
"1279 1456 LINE",
"1087 1456 LINE",
"1087 157 LINE",
"369 157 LINE",
"369 1456 LINE",
"176 1456 LINE",
"176 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
}
);
note = uni040F;
unicode = 040F;
},
{
glyphname = "Be-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"162 1456 LINE",
"162 0 LINE",
"720 0 LINE SMOOTH",
"943 4 OFFCURVE",
"1201 238 OFFCURVE",
"1201 435 QCURVE SMOOTH",
"1201 631 OFFCURVE",
"945 859 OFFCURVE",
"717 862 QCURVE SMOOTH",
"355 862 LINE",
"355 1298 LINE",
"1057 1298 LINE",
"1057 1456 LINE"
);
},
{
closed = 1;
nodes = (
"355 704 LINE",
"714 704 LINE SMOOTH",
"855 702 OFFCURVE",
"1008 560 OFFCURVE",
"1008 437 QCURVE SMOOTH",
"1008 309 OFFCURVE",
"849 157 OFFCURVE",
"706 157 QCURVE SMOOTH",
"355 157 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 11 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1291;
}
);
note = uni0411;
unicode = 0411;
},
{
glyphname = "De-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1291 157 LINE",
"1291 1456 LINE",
"420 1456 LINE",
"388 833 LINE SMOOTH",
"374 620 OFFCURVE",
"263 263 OFFCURVE",
"169 157 QCURVE",
"50 157 LINE",
"51 -358 LINE",
"243 -358 LINE",
"243 0 LINE",
"1288 0 LINE",
"1288 -357 LINE",
"1479 -357 LINE",
"1481 157 LINE"
);
},
{
closed = 1;
nodes = (
"464 265 OFFCURVE",
"571 619 OFFCURVE",
"584 870 QCURVE SMOOTH",
"605 1298 LINE",
"1098 1298 LINE",
"1098 157 LINE",
"388 157 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1540;
}
);
note = uni0414;
unicode = 0414;
},
{
glyphname = "Zhe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1845 0 LINE",
"1355 769 LINE",
"1807 1456 LINE",
"1581 1456 LINE",
"1194 824 LINE",
"1036 824 LINE",
"1036 1456 LINE",
"844 1456 LINE",
"844 824 LINE",
"679 824 LINE",
"292 1456 LINE",
"65 1456 LINE",
"517 768 LINE",
"27 0 LINE",
"267 0 LINE",
"679 664 LINE",
"844 664 LINE",
"844 0 LINE",
"1036 0 LINE",
"1036 664 LINE",
"1192 664 LINE",
"1606 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 16 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 16 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
19 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1859;
}
);
leftKerningGroup = X;
note = uni0416;
unicode = 0416;
},
{
glyphname = "Ze-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"916 950 OFFCURVE",
"766 824 OFFCURVE",
"620 821 QCURVE SMOOTH",
"441 821 LINE",
"441 663 LINE",
"621 663 LINE SMOOTH",
"938 658 OFFCURVE",
"938 402 QCURVE SMOOTH",
"938 282 OFFCURVE",
"751 136 OFFCURVE",
"594 136 QCURVE SMOOTH",
"454 136 OFFCURVE",
"272 289 OFFCURVE",
"272 404 QCURVE",
"80 404 LINE",
"80 273 OFFCURVE",
"212 83 OFFCURVE",
"449 -20 OFFCURVE",
"594 -20 QCURVE SMOOTH",
"838 -20 OFFCURVE",
"1130 210 OFFCURVE",
"1130 406 QCURVE SMOOTH",
"1130 661 OFFCURVE",
"873 747 QCURVE",
"984 795 OFFCURVE",
"1108 961 OFFCURVE",
"1108 1062 QCURVE SMOOTH",
"1108 1257 OFFCURVE",
"838 1476 OFFCURVE",
"594 1476 QCURVE SMOOTH",
"456 1476 OFFCURVE",
"228 1373 OFFCURVE",
"101 1189 OFFCURVE",
"101 1073 QCURVE",
"293 1073 LINE",
"293 1177 OFFCURVE",
"466 1318 OFFCURVE",
"594 1318 QCURVE SMOOTH",
"747 1318 OFFCURVE",
"916 1181 OFFCURVE",
"916 1065 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
37 22 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 37 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 37 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1215;
}
);
note = uni0417;
unicode = 0417;
},
{
glyphname = "Ii-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"370 1456 LINE",
"177 1456 LINE",
"177 0 LINE",
"370 0 LINE",
"1087 1122 LINE",
"1087 0 LINE",
"1279 0 LINE",
"1279 1456 LINE",
"1087 1456 LINE",
"370 334 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
138 4 154 4 170 4 186 4 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
9 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
133 9 149 9 165 9 181 9 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
}
);
note = uni0418;
unicode = 0418;
},
{
glyphname = "El-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"343 750 LINE SMOOTH",
"332 507 OFFCURVE",
"280 273 OFFCURVE",
"180 166 OFFCURVE",
"87 159 QCURVE SMOOTH",
"47 157 LINE",
"47 0 LINE",
"110 0 LINE SMOOTH",
"254 2 OFFCURVE",
"426 139 OFFCURVE",
"515 431 OFFCURVE",
"530 721 QCURVE SMOOTH",
"556 1298 LINE",
"1078 1298 LINE",
"1078 0 LINE",
"1270 0 LINE",
"1270 1456 LINE",
"373 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1449;
}
);
leftKerningGroup = "Lje-cy";
note = uni041B;
unicode = 041B;
},
{
glyphname = "U-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"77 1456 LINE",
"573 378 LINE",
"535 289 LINE",
"510 237 LINE SMOOTH",
"459 136 OFFCURVE",
"354 136 QCURVE SMOOTH",
"263 140 LINE",
"257 -12 LINE",
"279 -21 OFFCURVE",
"358 -21 QCURVE SMOOTH",
"449 -21 OFFCURVE",
"570 30 OFFCURVE",
"660 127 OFFCURVE",
"712 243 QCURVE SMOOTH",
"1227 1456 LINE",
"1004 1456 LINE",
"669 611 LINE",
"292 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 7 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1287;
}
);
leftKerningGroup = "U-cy";
note = uni0423;
unicode = 0423;
},
{
glyphname = "Ef-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"702 1516 LINE",
"702 1310 LINE",
"674 1310 LINE SMOOTH",
"507 1310 OFFCURVE",
"234 1158 OFFCURVE",
"83 890 OFFCURVE",
"83 556 OFFCURVE",
"234 288 OFFCURVE",
"507 136 OFFCURVE",
"674 136 QCURVE SMOOTH",
"702 136 LINE",
"702 -60 LINE",
"888 -60 LINE",
"888 136 LINE",
"923 136 LINE SMOOTH",
"1087 138 OFFCURVE",
"1355 289 OFFCURVE",
"1507 559 OFFCURVE",
"1507 725 QCURVE SMOOTH",
"1507 890 OFFCURVE",
"1356 1157 OFFCURVE",
"1084 1309 OFFCURVE",
"919 1310 QCURVE SMOOTH",
"888 1310 LINE",
"888 1516 LINE"
);
},
{
closed = 1;
nodes = (
"267 928 OFFCURVE",
"486 1159 OFFCURVE",
"674 1159 QCURVE SMOOTH",
"702 1159 LINE",
"702 288 LINE",
"676 288 LINE SMOOTH",
"485 288 OFFCURVE",
"267 517 OFFCURVE",
"267 723 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"888 1159 LINE",
"912 1159 LINE SMOOTH",
"1107 1159 OFFCURVE",
"1322 925 OFFCURVE",
"1322 725 QCURVE SMOOTH",
"1322 523 OFFCURVE",
"1107 288 OFFCURVE",
"916 288 QCURVE SMOOTH",
"888 288 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
21 23 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
9 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1580;
}
);
note = uni0424;
unicode = 0424;
},
{
glyphname = "Tse-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1240 0 LINE",
"1240 -351 LINE",
"1413 -351 LINE",
"1431 161 LINE",
"1278 161 LINE",
"1278 1456 LINE",
"1086 1456 LINE",
"1086 157 LINE",
"368 157 LINE",
"368 1456 LINE",
"175 1456 LINE",
"175 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1497;
}
);
note = uni0426;
unicode = 0426;
},
{
glyphname = "Che-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1031 762 LINE",
"834 708 OFFCURVE",
"644 708 QCURVE SMOOTH",
"481 708 OFFCURVE",
"344 842 OFFCURVE",
"343 994 QCURVE SMOOTH",
"343 1456 LINE",
"150 1456 LINE",
"150 989 LINE SMOOTH",
"153 766 OFFCURVE",
"395 550 OFFCURVE",
"644 550 QCURVE SMOOTH",
"754 550 OFFCURVE",
"926 573 OFFCURVE",
"1031 603 QCURVE",
"1031 0 LINE",
"1224 0 LINE",
"1224 1456 LINE",
"1031 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1402;
}
);
leftKerningGroup = "Che-cy";
note = uni0427;
unicode = 0427;
},
{
glyphname = "Sha-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"176 0 LINE",
"1751 0 LINE",
"1751 1456 LINE",
"1559 1456 LINE",
"1559 157 LINE",
"1061 157 LINE",
"1061 1456 LINE",
"870 1456 LINE",
"870 157 LINE",
"369 157 LINE",
"369 1456 LINE",
"176 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1927;
}
);
note = uni0428;
unicode = 0428;
},
{
glyphname = "Shcha-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"176 0 LINE",
"1715 0 LINE",
"1715 -351 LINE",
"1880 -351 LINE",
"1898 151 LINE",
"1751 151 LINE",
"1751 1456 LINE",
"1559 1456 LINE",
"1559 157 LINE",
"1061 157 LINE",
"1061 1456 LINE",
"870 1456 LINE",
"870 157 LINE",
"369 157 LINE",
"369 1456 LINE",
"176 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1984;
}
);
note = uni0429;
unicode = 0429;
},
{
glyphname = "Hardsign-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"426 1304 LINE",
"426 0 LINE",
"980 0 LINE SMOOTH",
"1206 3 OFFCURVE",
"1464 238 OFFCURVE",
"1464 435 QCURVE SMOOTH",
"1464 633 OFFCURVE",
"1204 862 OFFCURVE",
"965 862 QCURVE SMOOTH",
"619 862 LINE",
"619 1456 LINE",
"16 1456 LINE",
"16 1304 LINE"
);
},
{
closed = 1;
nodes = (
"619 704 LINE",
"978 704 LINE SMOOTH",
"1118 702 OFFCURVE",
"1271 560 OFFCURVE",
"1271 437 QCURVE SMOOTH",
"1271 309 OFFCURVE",
"1112 157 OFFCURVE",
"970 157 QCURVE SMOOTH",
"619 157 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 0 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1554;
}
);
note = uni042A;
unicode = 042A;
},
{
glyphname = "Yeru-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"178 1456 LINE",
"178 0 LINE",
"735 0 LINE SMOOTH",
"958 4 OFFCURVE",
"1216 238 OFFCURVE",
"1216 435 QCURVE SMOOTH",
"1216 631 OFFCURVE",
"960 859 OFFCURVE",
"732 862 QCURVE SMOOTH",
"370 862 LINE",
"370 1456 LINE"
);
},
{
closed = 1;
nodes = (
"370 704 LINE",
"729 704 LINE SMOOTH",
"870 702 OFFCURVE",
"1023 560 OFFCURVE",
"1023 437 QCURVE SMOOTH",
"1023 309 OFFCURVE",
"864 157 OFFCURVE",
"721 157 QCURVE SMOOTH",
"370 157 LINE"
);
},
{
closed = 1;
nodes = (
"1584 0 LINE",
"1584 1456 LINE",
"1392 1456 LINE",
"1392 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 9 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1771;
}
);
note = uni042B;
unicode = 042B;
},
{
glyphname = "Softsign-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"163 1456 LINE",
"163 0 LINE",
"720 0 LINE SMOOTH",
"943 4 OFFCURVE",
"1201 238 OFFCURVE",
"1201 435 QCURVE SMOOTH",
"1201 631 OFFCURVE",
"945 859 OFFCURVE",
"717 862 QCURVE SMOOTH",
"355 862 LINE",
"355 1456 LINE"
);
},
{
closed = 1;
nodes = (
"355 704 LINE",
"714 704 LINE SMOOTH",
"855 702 OFFCURVE",
"1008 560 OFFCURVE",
"1008 437 QCURVE SMOOTH",
"1008 309 OFFCURVE",
"849 157 OFFCURVE",
"706 157 QCURVE SMOOTH",
"355 157 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 9 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1285;
}
);
note = uni042C;
unicode = 042C;
},
{
glyphname = "Ereversed-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"174 231 OFFCURVE",
"461 -20 OFFCURVE",
"699 -20 QCURVE SMOOTH",
"867 -20 OFFCURVE",
"1126 145 OFFCURVE",
"1268 453 OFFCURVE",
"1268 654 QCURVE SMOOTH",
"1268 799 LINE SMOOTH",
"1268 1000 OFFCURVE",
"1125 1309 OFFCURVE",
"858 1476 OFFCURVE",
"682 1476 QCURVE SMOOTH",
"450 1476 OFFCURVE",
"170 1217 OFFCURVE",
"147 988 QCURVE",
"340 988 LINE",
"365 1162 OFFCURVE",
"532 1318 OFFCURVE",
"682 1318 QCURVE SMOOTH",
"868 1318 OFFCURVE",
"1075 1042 OFFCURVE",
"1075 805 QCURVE",
"502 805 LINE",
"502 647 LINE",
"1075 647 LINE",
"1073 407 OFFCURVE",
"872 137 OFFCURVE",
"699 137 QCURVE SMOOTH",
"539 137 OFFCURVE",
"368 282 OFFCURVE",
"340 462 QCURVE",
"147 462 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 28 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
239 8 255 8 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
207 8 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 8 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 8 207 8 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 8 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 8 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 8 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 8 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 8 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1380;
}
);
note = uni042D;
unicode = 042D;
},
{
glyphname = "be-cy";
lastChange = "2020-11-28 03:06:09 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"404 1020 OFFCURVE",
"257 850 QCURVE",
"282 1004 OFFCURVE",
"447 1189 OFFCURVE",
"612 1228 QCURVE SMOOTH",
"750 1259 LINE SMOOTH",
"874 1288 OFFCURVE",
"987 1428 OFFCURVE",
"987 1553 QCURVE",
"835 1553 LINE",
"835 1490 OFFCURVE",
"737 1418 OFFCURVE",
"597 1393 QCURVE SMOOTH",
"350 1349 OFFCURVE",
"97 947 OFFCURVE",
"97 606 QCURVE SMOOTH",
"97 516 LINE SMOOTH",
"97 271 OFFCURVE",
"363 -20 OFFCURVE",
"581 -20 QCURVE SMOOTH",
"725 -20 OFFCURVE",
"946 113 OFFCURVE",
"1064 354 OFFCURVE",
"1064 507 QCURVE SMOOTH",
"1064 524 LINE SMOOTH",
"1064 747 OFFCURVE",
"819 1020 OFFCURVE",
"615 1020 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"283 523 LINE SMOOTH",
"283 685 OFFCURVE",
"443 868 OFFCURVE",
"579 868 QCURVE SMOOTH",
"718 868 OFFCURVE",
"879 683 OFFCURVE",
"879 530 QCURVE SMOOTH",
"879 334 OFFCURVE",
"719 130 OFFCURVE",
"581 130 QCURVE SMOOTH",
"444 130 OFFCURVE",
"283 333 OFFCURVE",
"283 507 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 18 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
23 0 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 18 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1132;
}
);
note = uni0431;
unicode = 0431;
},
{
glyphname = "ve-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"846 0 OFFCURVE",
"1065 158 OFFCURVE",
"1065 307 QCURVE SMOOTH",
"1065 400 OFFCURVE",
"946 534 OFFCURVE",
"848 557 QCURVE",
"936 589 OFFCURVE",
"1026 710 OFFCURVE",
"1026 785 QCURVE SMOOTH",
"1026 931 OFFCURVE",
"795 1082 OFFCURVE",
"579 1082 QCURVE SMOOTH",
"157 1082 LINE",
"157 0 LINE",
"646 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"342 475 LINE",
"641 475 LINE SMOOTH",
"879 475 OFFCURVE",
"879 313 QCURVE SMOOTH",
"879 235 OFFCURVE",
"764 149 OFFCURVE",
"648 149 QCURVE SMOOTH",
"342 149 LINE"
);
},
{
closed = 1;
nodes = (
"342 932 LINE",
"595 932 LINE SMOOTH",
"841 927 OFFCURVE",
"841 623 OFFCURVE",
"581 623 QCURVE SMOOTH",
"342 623 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 1 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 23 207 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
159 23 175 23 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 23 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 23 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
47 23 63 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 23 127 23 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1170;
}
);
note = uni0432;
unicode = 0432;
},
{
glyphname = "ge-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"154 1082 LINE",
"154 0 LINE",
"340 0 LINE",
"340 929 LINE",
"839 929 LINE",
"839 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 859;
}
);
leftKerningGroup = m;
note = uni0433;
unicode = 0433;
},
{
glyphname = "de-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"46 -318 LINE",
"231 -318 LINE",
"231 0 LINE",
"986 0 LINE",
"986 -318 LINE",
"1171 -318 LINE",
"1171 151 LINE",
"1032 151 LINE",
"1032 1082 LINE",
"335 1082 LINE",
"318 650 LINE SMOOTH",
"303 370 OFFCURVE",
"195 230 QCURVE SMOOTH",
"131 151 LINE",
"47 151 LINE"
);
},
{
closed = 1;
nodes = (
"486 330 OFFCURVE",
"503 653 QCURVE SMOOTH",
"514 911 LINE",
"847 911 LINE",
"847 151 LINE",
"350 151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1236;
}
);
note = uni0434;
unicode = 0434;
},
{
glyphname = "zhe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1540 0 LINE",
"1153 559 LINE",
"1504 1082 LINE",
"1280 1082 LINE",
"999 634 LINE",
"873 634 LINE",
"873 1082 LINE",
"688 1082 LINE",
"688 634 LINE",
"561 634 LINE",
"282 1082 LINE",
"58 1082 LINE",
"408 560 LINE",
"21 0 LINE",
"255 0 LINE",
"558 470 LINE",
"688 470 LINE",
"688 0 LINE",
"873 0 LINE",
"873 470 LINE",
"1003 470 LINE",
"1306 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 16 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 16 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 16 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 16 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
19 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1568;
}
);
leftKerningGroup = x;
note = uni0436;
unicode = 0436;
},
{
glyphname = "ze-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"735 635 OFFCURVE",
"546 630 QCURVE SMOOTH",
"345 630 LINE",
"345 474 LINE",
"530 474 LINE SMOOTH",
"645 474 OFFCURVE",
"754 395 OFFCURVE",
"754 304 QCURVE SMOOTH",
"754 226 OFFCURVE",
"624 128 OFFCURVE",
"518 128 QCURVE SMOOTH",
"413 128 OFFCURVE",
"272 241 OFFCURVE",
"272 320 QCURVE",
"88 320 LINE",
"88 164 OFFCURVE",
"331 -19 OFFCURVE",
"518 -19 QCURVE SMOOTH",
"710 -19 OFFCURVE",
"940 155 OFFCURVE",
"940 304 QCURVE SMOOTH",
"940 492 OFFCURVE",
"751 556 QCURVE",
"832 592 OFFCURVE",
"920 714 OFFCURVE",
"920 787 QCURVE SMOOTH",
"920 938 OFFCURVE",
"708 1101 OFFCURVE",
"518 1101 QCURVE SMOOTH",
"341 1101 OFFCURVE",
"105 921 OFFCURVE",
"105 780 QCURVE",
"289 780 LINE",
"289 849 OFFCURVE",
"420 951 OFFCURVE",
"518 951 QCURVE SMOOTH",
"619 951 OFFCURVE",
"735 862 OFFCURVE",
"735 786 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
37 10 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
47 37 63 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 37 207 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
159 37 175 37 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
111 37 127 37 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
6 37 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 34 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 21 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1040;
}
);
note = uni0437;
unicode = 0437;
},
{
glyphname = "ii-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1082 LINE",
"156 1082 LINE",
"156 0 LINE",
"341 0 LINE",
"840 789 LINE",
"840 0 LINE",
"1025 0 LINE",
"1025 1082 LINE",
"840 1082 LINE",
"341 292 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 7 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 7 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1182;
}
);
leftKerningGroup = m;
note = uni0438;
unicode = 0438;
},
{
glyphname = "ka-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1087 0 LINE",
"623 562 LINE",
"1051 1082 LINE",
"827 1082 LINE",
"463 624 LINE",
"342 624 LINE",
"342 1082 LINE",
"156 1082 LINE",
"156 0 LINE",
"342 0 LINE",
"342 461 LINE",
"477 461 LINE",
"852 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
159 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 6 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 6 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 6 207 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
111 6 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 1 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1106;
}
);
leftKerningGroup = m;
note = uni043A;
unicode = 043A;
},
{
glyphname = "el-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"276 619 LINE SMOOTH",
"265 365 OFFCURVE",
"187 177 OFFCURVE",
"97 167 QCURVE SMOOTH",
"44 163 LINE",
"44 0 LINE",
"118 0 LINE SMOOTH",
"282 5 OFFCURVE",
"433 245 OFFCURVE",
"451 524 QCURVE SMOOTH",
"473 929 LINE",
"841 929 LINE",
"841 0 LINE",
"1027 0 LINE",
"1027 1082 LINE",
"296 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1184;
}
);
leftKerningGroup = "el-cy";
note = uni043B;
unicode = 043B;
},
{
glyphname = "em-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"157 1082 LINE",
"157 0 LINE",
"342 0 LINE",
"342 804 LINE",
"699 0 LINE",
"827 0 LINE",
"1177 787 LINE",
"1177 0 LINE",
"1362 0 LINE",
"1362 1082 LINE",
"1131 1082 LINE",
"763 245 LINE",
"397 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1519;
}
);
leftKerningGroup = m;
note = uni043C;
unicode = 043C;
},
{
glyphname = "en-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"839 1082 LINE",
"839 613 LINE",
"342 613 LINE",
"342 1082 LINE",
"156 1082 LINE",
"156 0 LINE",
"342 0 LINE",
"342 462 LINE",
"839 462 LINE",
"839 0 LINE",
"1024 0 LINE",
"1024 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
111 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 9 207 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
207 9 223 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
15 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 5 values pushed */
159 9 175 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 9 127 9 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1181;
}
);
leftKerningGroup = m;
note = uni043D;
unicode = 043D;
},
{
glyphname = "pe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"156 1082 LINE",
"156 0 LINE",
"342 0 LINE",
"342 929 LINE",
"840 929 LINE",
"840 0 LINE",
"1025 0 LINE",
"1025 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1182;
}
);
leftKerningGroup = m;
note = uni043F;
unicode = 043F;
},
{
glyphname = "te-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"40 1082 LINE",
"40 932 LINE",
"396 932 LINE",
"396 0 LINE",
"581 0 LINE",
"581 932 LINE",
"944 932 LINE",
"944 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 984;
}
);
note = uni0442;
unicode = 0442;
},
{
glyphname = "ef-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"100 261 OFFCURVE",
"309 -21 OFFCURVE",
"491 -21 QCURVE SMOOTH",
"576 -21 OFFCURVE",
"642 8 QCURVE",
"642 -416 LINE",
"827 -416 LINE",
"827 11 LINE",
"896 -21 OFFCURVE",
"993 -21 QCURVE SMOOTH",
"1176 -21 OFFCURVE",
"1385 261 OFFCURVE",
"1385 500 QCURVE SMOOTH",
"1385 792 OFFCURVE",
"1175 1102 OFFCURVE",
"991 1102 QCURVE SMOOTH",
"897 1102 OFFCURVE",
"827 1067 QCURVE",
"827 1536 LINE",
"642 1536 LINE",
"642 1073 LINE",
"578 1102 OFFCURVE",
"493 1102 QCURVE SMOOTH",
"310 1102 OFFCURVE",
"100 792 OFFCURVE",
"100 521 QCURVE SMOOTH",
"100 506 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"285 732 OFFCURVE",
"417 950 OFFCURVE",
"539 950 QCURVE SMOOTH",
"600 950 OFFCURVE",
"642 933 QCURVE",
"642 148 LINE",
"595 130 OFFCURVE",
"537 130 QCURVE SMOOTH",
"415 130 OFFCURVE",
"285 318 OFFCURVE",
"285 500 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"827 930 LINE",
"874 950 OFFCURVE",
"937 950 QCURVE SMOOTH",
"1060 950 OFFCURVE",
"1200 725 OFFCURVE",
"1200 521 QCURVE SMOOTH",
"1200 322 OFFCURVE",
"1063 130 OFFCURVE",
"939 130 QCURVE SMOOTH",
"872 130 OFFCURVE",
"827 147 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 49 50 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1485;
}
);
leftKerningGroup = c;
note = uni0444;
unicode = 0444;
},
{
glyphname = "tse-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"970 0 LINE",
"970 -321 LINE",
"1136 -321 LINE",
"1154 151 LINE",
"1025 151 LINE",
"1025 1082 LINE",
"840 1082 LINE",
"840 151 LINE",
"342 151 LINE",
"342 1082 LINE",
"156 1082 LINE",
"156 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1213;
}
);
leftKerningGroup = m;
note = uni0446;
unicode = 0446;
},
{
glyphname = "che-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"771 1082 LINE",
"771 544 LINE",
"649 512 OFFCURVE",
"521 512 QCURVE SMOOTH",
"293 512 OFFCURVE",
"288 754 QCURVE SMOOTH",
"288 1083 LINE",
"103 1083 LINE",
"103 760 LINE SMOOTH",
"105 568 OFFCURVE",
"318 360 OFFCURVE",
"521 360 QCURVE SMOOTH",
"649 360 OFFCURVE",
"771 392 QCURVE",
"771 0 LINE",
"957 0 LINE",
"957 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
12 15 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1113;
}
);
leftKerningGroup = "che-cy";
note = uni0447;
unicode = 0447;
},
{
glyphname = "sha-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"156 0 LINE",
"1504 0 LINE",
"1504 1082 LINE",
"1318 1082 LINE",
"1318 151 LINE",
"923 151 LINE",
"923 1082 LINE",
"738 1082 LINE",
"738 151 LINE",
"342 151 LINE",
"342 1082 LINE",
"156 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1656;
}
);
leftKerningGroup = m;
note = uni0448;
unicode = 0448;
},
{
glyphname = "shcha-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"145 0 LINE",
"1461 0 LINE",
"1461 -321 LINE",
"1627 -321 LINE",
"1645 151 LINE",
"1493 151 LINE",
"1493 1082 LINE",
"1307 1082 LINE",
"1307 151 LINE",
"912 151 LINE",
"912 1082 LINE",
"727 1082 LINE",
"727 151 LINE",
"331 151 LINE",
"331 1082 LINE",
"145 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1694;
}
);
leftKerningGroup = m;
note = uni0449;
unicode = 0449;
},
{
glyphname = "hardsign-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"351 930 LINE",
"351 0 LINE",
"809 0 LINE SMOOTH",
"995 0 OFFCURVE",
"1215 196 OFFCURVE",
"1215 358 QCURVE SMOOTH",
"1215 519 OFFCURVE",
"1001 707 OFFCURVE",
"817 709 QCURVE SMOOTH",
"536 709 LINE",
"536 1082 LINE",
"30 1082 LINE",
"30 930 LINE"
);
},
{
closed = 1;
nodes = (
"536 558 LINE",
"818 558 LINE SMOOTH",
"918 556 OFFCURVE",
"1029 441 OFFCURVE",
"1029 351 QCURVE SMOOTH",
"1029 258 OFFCURVE",
"915 151 OFFCURVE",
"811 151 QCURVE SMOOTH",
"536 151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 0 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1271;
}
);
note = uni044A;
unicode = 044A;
},
{
glyphname = "yeru-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"157 1082 LINE",
"157 0 LINE",
"615 0 LINE SMOOTH",
"801 0 OFFCURVE",
"1021 196 OFFCURVE",
"1021 358 QCURVE SMOOTH",
"1021 519 OFFCURVE",
"807 707 OFFCURVE",
"623 709 QCURVE SMOOTH",
"342 709 LINE",
"342 1082 LINE"
);
},
{
closed = 1;
nodes = (
"342 558 LINE",
"624 558 LINE SMOOTH",
"724 556 OFFCURVE",
"835 441 OFFCURVE",
"835 351 QCURVE SMOOTH",
"835 258 OFFCURVE",
"721 151 OFFCURVE",
"617 151 QCURVE SMOOTH",
"342 151 LINE"
);
},
{
closed = 1;
nodes = (
"1407 0 LINE",
"1407 1082 LINE",
"1221 1082 LINE",
"1221 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1590;
}
);
note = uni044B;
unicode = 044B;
},
{
glyphname = "softsign-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"157 1082 LINE",
"157 0 LINE",
"615 0 LINE SMOOTH",
"801 0 OFFCURVE",
"1021 196 OFFCURVE",
"1021 358 QCURVE SMOOTH",
"1021 519 OFFCURVE",
"807 707 OFFCURVE",
"623 709 QCURVE SMOOTH",
"342 709 LINE",
"342 1082 LINE"
);
},
{
closed = 1;
nodes = (
"342 558 LINE",
"624 558 LINE SMOOTH",
"724 556 OFFCURVE",
"835 441 OFFCURVE",
"835 351 QCURVE SMOOTH",
"835 258 OFFCURVE",
"721 151 OFFCURVE",
"617 151 QCURVE SMOOTH",
"342 151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 9 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1112;
}
);
leftKerningGroup = m;
note = uni044C;
unicode = 044C;
},
{
glyphname = "ereversed-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"639 950 OFFCURVE",
"789 773 OFFCURVE",
"803 627 QCURVE",
"399 627 LINE",
"399 475 LINE",
"805 475 LINE",
"793 314 OFFCURVE",
"639 130 OFFCURVE",
"520 130 QCURVE SMOOTH",
"418 130 OFFCURVE",
"276 269 OFFCURVE",
"276 371 QCURVE",
"100 371 LINE",
"100 204 OFFCURVE",
"340 -20 OFFCURVE",
"520 -20 QCURVE SMOOTH",
"658 -20 OFFCURVE",
"873 117 OFFCURVE",
"992 368 OFFCURVE",
"992 520 QCURVE SMOOTH",
"992 551 LINE SMOOTH",
"992 797 OFFCURVE",
"731 1102 OFFCURVE",
"520 1102 QCURVE SMOOTH",
"414 1102 OFFCURVE",
"218 1001 OFFCURVE",
"100 831 OFFCURVE",
"100 738 QCURVE",
"276 738 LINE",
"276 824 OFFCURVE",
"421 950 OFFCURVE",
"520 950 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 8 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
47 29 63 29 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 29 207 29 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
159 29 175 29 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
111 29 127 29 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
3 8 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
20 16 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1101;
}
);
note = uni044D;
unicode = 044D;
},
{
glyphname = "dje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"325 1361 LINE",
"325 1536 LINE",
"140 1536 LINE",
"140 1361 LINE",
"-24 1361 LINE",
"-24 1209 LINE",
"140 1209 LINE",
"140 0 LINE",
"325 0 LINE",
"325 771 LINE",
"363 849 OFFCURVE",
"499 945 OFFCURVE",
"589 945 QCURVE SMOOTH",
"701 945 OFFCURVE",
"806 831 OFFCURVE",
"806 711 QCURVE SMOOTH",
"806 -89 LINE SMOOTH",
"806 -181 OFFCURVE",
"734 -285 OFFCURVE",
"604 -285 OFFCURVE",
"569 -272 QCURVE",
"554 -419 LINE",
"608 -437 OFFCURVE",
"669 -437 QCURVE SMOOTH",
"821 -437 OFFCURVE",
"991 -259 OFFCURVE",
"991 -89 QCURVE SMOOTH",
"991 715 LINE SMOOTH",
"988 1102 OFFCURVE",
"645 1102 QCURVE SMOOTH",
"448 1102 OFFCURVE",
"325 951 QCURVE",
"325 1209 LINE",
"611 1209 LINE",
"611 1361 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
30 25 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 25 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1128;
}
);
note = uni0452;
unicode = 0452;
},
{
glyphname = "e-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"453 131 OFFCURVE",
"300 304 OFFCURVE",
"290 464 QCURVE",
"694 464 LINE",
"694 616 LINE",
"290 616 LINE",
"300 773 OFFCURVE",
"454 950 OFFCURVE",
"584 950 QCURVE SMOOTH",
"688 950 OFFCURVE",
"831 815 OFFCURVE",
"839 710 QCURVE",
"1015 710 LINE",
"1007 884 OFFCURVE",
"766 1102 OFFCURVE",
"584 1102 QCURVE SMOOTH",
"436 1102 OFFCURVE",
"220 968 OFFCURVE",
"103 721 OFFCURVE",
"103 562 QCURVE SMOOTH",
"103 532 LINE SMOOTH",
"103 276 OFFCURVE",
"362 -20 OFFCURVE",
"584 -20 QCURVE SMOOTH",
"694 -20 OFFCURVE",
"890 79 OFFCURVE",
"1010 247 OFFCURVE",
"1015 341 QCURVE",
"839 341 LINE",
"831 251 OFFCURVE",
"683 131 OFFCURVE",
"584 131 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
27 16 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 27 31 27 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 5 values pushed */
191 27 207 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
159 27 175 27 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
207 27 223 27 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 27 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 27 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
47 27 63 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 27 127 27 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
191 27 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
20 16 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1101;
}
);
leftKerningGroup = c;
note = uni0454;
unicode = 0454;
},
{
glyphname = "lje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"268 555 LINE SMOOTH",
"255 344 OFFCURVE",
"178 177 OFFCURVE",
"93 167 QCURVE SMOOTH",
"39 163 LINE",
"39 0 LINE",
"104 0 LINE SMOOTH",
"269 2 OFFCURVE",
"425 230 OFFCURVE",
"445 507 QCURVE SMOOTH",
"468 929 LINE",
"805 929 LINE",
"805 0 LINE",
"1276 0 LINE SMOOTH",
"1459 3 OFFCURVE",
"1670 191 OFFCURVE",
"1670 338 QCURVE SMOOTH",
"1670 486 OFFCURVE",
"1459 667 OFFCURVE",
"1277 670 QCURVE SMOOTH",
"991 670 LINE",
"991 1082 LINE",
"291 1082 LINE"
);
},
{
closed = 1;
nodes = (
"991 518 LINE",
"1271 518 LINE SMOOTH",
"1370 517 OFFCURVE",
"1484 421 OFFCURVE",
"1484 340 QCURVE SMOOTH",
"1484 254 OFFCURVE",
"1367 149 OFFCURVE",
"1266 149 QCURVE SMOOTH",
"991 149 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1737;
}
);
leftKerningGroup = "el-cy";
note = uni0459;
unicode = 0459;
},
{
glyphname = "nje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"156 1082 LINE",
"156 0 LINE",
"342 0 LINE",
"342 522 LINE",
"839 522 LINE",
"839 0 LINE",
"1297 0 LINE SMOOTH",
"1486 0 OFFCURVE",
"1703 187 OFFCURVE",
"1703 338 QCURVE SMOOTH",
"1703 488 OFFCURVE",
"1494 665 OFFCURVE",
"1314 669 QCURVE SMOOTH",
"1024 669 LINE",
"1024 1082 LINE",
"839 1082 LINE",
"839 673 LINE",
"342 673 LINE",
"342 1082 LINE"
);
},
{
closed = 1;
nodes = (
"1024 518 LINE",
"1304 518 LINE SMOOTH",
"1403 517 OFFCURVE",
"1517 421 OFFCURVE",
"1517 340 QCURVE SMOOTH",
"1517 254 OFFCURVE",
"1400 149 OFFCURVE",
"1299 149 QCURVE SMOOTH",
"1024 149 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 17 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1764;
}
);
leftKerningGroup = m;
note = uni045A;
unicode = 045A;
},
{
glyphname = "tshe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"325 1365 LINE",
"325 1536 LINE",
"140 1536 LINE",
"140 1365 LINE",
"-3 1365 LINE",
"-3 1214 LINE",
"140 1214 LINE",
"140 0 LINE",
"325 0 LINE",
"325 771 LINE",
"363 849 OFFCURVE",
"499 945 OFFCURVE",
"589 945 QCURVE SMOOTH",
"700 945 OFFCURVE",
"805 833 OFFCURVE",
"806 716 QCURVE SMOOTH",
"806 0 LINE",
"991 0 LINE",
"991 715 LINE SMOOTH",
"988 1102 OFFCURVE",
"645 1102 QCURVE SMOOTH",
"448 1102 OFFCURVE",
"325 951 QCURVE",
"325 1214 LINE",
"633 1214 LINE",
"633 1365 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
191 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
25 16 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1161;
}
);
note = uni045B;
unicode = 045B;
},
{
glyphname = "dzhe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"156 0 LINE",
"501 0 LINE",
"501 -356 LINE",
"686 -356 LINE",
"686 0 LINE",
"1025 0 LINE",
"1025 1082 LINE",
"840 1082 LINE",
"840 151 LINE",
"342 151 LINE",
"342 1082 LINE",
"156 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1182;
}
);
note = uni045F;
unicode = 045F;
},
{
glyphname = "Omega-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1461 398 LINE SMOOTH",
"1461 273 OFFCURVE",
"1339 136 OFFCURVE",
"1233 136 QCURVE SMOOTH",
"1128 136 OFFCURVE",
"1004 272 OFFCURVE",
"1004 397 QCURVE SMOOTH",
"1004 1456 LINE",
"805 1456 LINE",
"805 397 LINE SMOOTH",
"805 273 OFFCURVE",
"675 136 OFFCURVE",
"561 136 QCURVE SMOOTH",
"463 136 OFFCURVE",
"349 274 OFFCURVE",
"349 397 QCURVE SMOOTH",
"349 1456 LINE",
"156 1456 LINE",
"156 394 LINE SMOOTH",
"157 199 OFFCURVE",
"372 -20 OFFCURVE",
"561 -20 QCURVE SMOOTH",
"674 -20 OFFCURVE",
"852 67 OFFCURVE",
"904 156 QCURVE",
"953 67 OFFCURVE",
"1124 -20 OFFCURVE",
"1233 -20 QCURVE SMOOTH",
"1428 -20 OFFCURVE",
"1653 200 OFFCURVE",
"1653 398 QCURVE SMOOTH",
"1653 1456 LINE",
"1461 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 33 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1800;
}
);
leftKerningGroup = C;
note = uni0460;
unicode = 0460;
},
{
glyphname = "omega-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1268 349 LINE SMOOTH",
"1267 247 OFFCURVE",
"1166 130 OFFCURVE",
"1077 130 QCURVE SMOOTH",
"985 130 OFFCURVE",
"884 250 OFFCURVE",
"884 353 QCURVE SMOOTH",
"884 1082 LINE",
"698 1082 LINE",
"698 353 LINE SMOOTH",
"698 250 OFFCURVE",
"587 130 OFFCURVE",
"489 130 QCURVE SMOOTH",
"406 130 OFFCURVE",
"315 247 OFFCURVE",
"314 349 QCURVE SMOOTH",
"314 1082 LINE",
"129 1082 LINE",
"129 350 LINE SMOOTH",
"130 174 OFFCURVE",
"322 -21 OFFCURVE",
"489 -21 QCURVE SMOOTH",
"695 -21 OFFCURVE",
"790 127 QCURVE",
"879 -21 OFFCURVE",
"1077 -21 QCURVE SMOOTH",
"1251 -21 OFFCURVE",
"1453 177 OFFCURVE",
"1453 353 QCURVE SMOOTH",
"1453 1082 LINE",
"1268 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 21 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1579;
}
);
note = uni0461;
unicode = 0461;
},
{
glyphname = "yat-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1233 LINE",
"341 1558 LINE",
"155 1558 LINE",
"155 1233 LINE",
"-36 1233 LINE",
"-36 1082 LINE",
"155 1082 LINE",
"155 0 LINE",
"625 0 LINE SMOOTH",
"808 3 OFFCURVE",
"1020 212 OFFCURVE",
"1020 542 OFFCURVE",
"808 744 OFFCURVE",
"621 746 QCURVE SMOOTH",
"341 746 LINE",
"341 1082 LINE",
"662 1082 LINE",
"662 1233 LINE"
);
},
{
closed = 1;
nodes = (
"341 594 LINE",
"622 594 LINE SMOOTH",
"722 592 OFFCURVE",
"833 467 OFFCURVE",
"833 370 QCURVE SMOOTH",
"833 270 OFFCURVE",
"720 151 OFFCURVE",
"615 151 QCURVE SMOOTH",
"341 151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 14 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 14 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
note = uni0463;
unicode = 0463;
},
{
glyphname = "Eiotified-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"183 1456 LINE",
"183 0 LINE",
"376 0 LINE",
"376 681 LINE",
"575 681 LINE",
"575 661 LINE SMOOTH",
"575 351 OFFCURVE",
"886 -19 OFFCURVE",
"1144 -19 QCURVE SMOOTH",
"1382 -19 OFFCURVE",
"1669 232 OFFCURVE",
"1696 463 QCURVE",
"1504 463 LINE",
"1476 285 OFFCURVE",
"1307 138 OFFCURVE",
"1144 138 QCURVE SMOOTH",
"966 138 OFFCURVE",
"768 418 OFFCURVE",
"768 655 QCURVE SMOOTH",
"768 681 LINE",
"1310 681 LINE",
"1310 832 LINE",
"768 832 LINE",
"774 1058 OFFCURVE",
"981 1319 OFFCURVE",
"1161 1319 QCURVE SMOOTH",
"1312 1319 OFFCURVE",
"1479 1161 OFFCURVE",
"1504 989 QCURVE",
"1696 989 LINE",
"1672 1221 OFFCURVE",
"1391 1477 OFFCURVE",
"1161 1477 QCURVE SMOOTH",
"989 1477 OFFCURVE",
"727 1319 OFFCURVE",
"580 1025 OFFCURVE",
"575 832 QCURVE",
"376 832 LINE",
"376 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
30 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
38 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 5 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1835;
}
);
note = uni0464;
unicode = 0464;
},
{
glyphname = "eiotified-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"153 1082 LINE",
"153 0 LINE",
"339 0 LINE",
"339 464 LINE",
"531 464 LINE",
"547 242 OFFCURVE",
"801 -20 OFFCURVE",
"1010 -20 QCURVE SMOOTH",
"1120 -20 OFFCURVE",
"1316 79 OFFCURVE",
"1436 247 OFFCURVE",
"1441 341 QCURVE",
"1265 341 LINE",
"1257 251 OFFCURVE",
"1109 131 OFFCURVE",
"1010 131 QCURVE SMOOTH",
"879 131 OFFCURVE",
"726 304 OFFCURVE",
"716 464 QCURVE",
"1153 464 LINE",
"1153 615 LINE",
"716 615 LINE",
"726 773 OFFCURVE",
"878 950 OFFCURVE",
"1010 950 QCURVE SMOOTH",
"1114 950 OFFCURVE",
"1257 815 OFFCURVE",
"1265 710 QCURVE",
"1441 710 LINE",
"1433 884 OFFCURVE",
"1192 1102 OFFCURVE",
"1010 1102 QCURVE SMOOTH",
"801 1102 OFFCURVE",
"546 838 OFFCURVE",
"530 615 QCURVE",
"339 615 LINE",
"339 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
36 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 28 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 15 207 15 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 15 79 15 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
207 15 223 15 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 15 31 15 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 5 values pushed */
159 15 175 15 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 15 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
47 15 63 15 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 15 127 15 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 15 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 28 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1528;
}
);
note = uni0465;
unicode = 0465;
},
{
glyphname = "Yuslittle-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1252 0 LINE",
"736 1456 LINE",
"565 1456 LINE",
"40 0 LINE",
"237 0 LINE",
"389 438 LINE",
"547 438 LINE",
"547 0 LINE",
"735 0 LINE",
"735 438 LINE",
"905 438 LINE",
"1055 0 LINE"
);
},
{
closed = 1;
nodes = (
"650 1187 LINE",
"849 602 LINE",
"446 602 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
14 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1234;
}
);
leftKerningGroup = A;
note = uni0466;
unicode = 0466;
},
{
glyphname = "yuslittle-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1061 0 LINE",
"616 1082 LINE",
"457 1082 LINE",
"15 0 LINE",
"204 0 LINE",
"323 297 LINE",
"447 297 LINE",
"447 0 LINE",
"632 0 LINE",
"632 297 LINE",
"749 297 LINE",
"871 0 LINE"
);
},
{
closed = 1;
nodes = (
"511 764 LINE",
"535 853 LINE",
"559 764 LINE",
"687 449 LINE",
"384 449 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 2 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1094;
}
);
note = uni0467;
unicode = 0467;
},
{
glyphname = "Yuslittleiotified-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"201 1456 LINE",
"201 0 LINE",
"394 0 LINE",
"394 440 LINE",
"727 440 LINE",
"569 0 LINE",
"766 0 LINE",
"918 438 LINE",
"1076 438 LINE",
"1076 0 LINE",
"1264 0 LINE",
"1264 438 LINE",
"1434 438 LINE",
"1584 0 LINE",
"1781 0 LINE",
"1265 1456 LINE",
"1094 1456 LINE",
"785 601 LINE",
"394 601 LINE",
"394 1456 LINE"
);
},
{
closed = 1;
nodes = (
"1179 1187 LINE",
"1378 602 LINE",
"975 602 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
22 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1803;
}
);
note = uni0468;
unicode = 0468;
},
{
glyphname = "yuslittleiotified-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"188 1082 LINE",
"188 0 LINE",
"374 0 LINE",
"374 296 LINE",
"583 296 LINE",
"462 0 LINE",
"651 0 LINE",
"770 297 LINE",
"894 297 LINE",
"894 0 LINE",
"1079 0 LINE",
"1079 297 LINE",
"1196 297 LINE",
"1318 0 LINE",
"1508 0 LINE",
"1063 1082 LINE",
"904 1082 LINE",
"645 449 LINE",
"374 449 LINE",
"374 1082 LINE"
);
},
{
closed = 1;
nodes = (
"958 764 LINE",
"982 853 LINE",
"1006 764 LINE",
"1134 449 LINE",
"831 449 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 16 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
23 18 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1547;
}
);
note = uni0469;
unicode = 0469;
},
{
glyphname = "Yusbig-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"279 1456 LINE",
"671 810 LINE",
"629 810 LINE SMOOTH",
"386 810 OFFCURVE",
"150 598 OFFCURVE",
"147 382 QCURVE SMOOTH",
"147 0 LINE",
"339 0 LINE",
"339 388 LINE SMOOTH",
"343 529 OFFCURVE",
"473 652 OFFCURVE",
"631 652 QCURVE SMOOTH",
"767 652 LINE",
"780 630 LINE",
"780 0 LINE",
"973 0 LINE",
"973 617 LINE",
"994 652 LINE",
"1127 652 LINE SMOOTH",
"1281 650 OFFCURVE",
"1405 520 OFFCURVE",
"1406 376 QCURVE SMOOTH",
"1406 0 LINE",
"1599 0 LINE",
"1599 382 LINE SMOOTH",
"1596 598 OFFCURVE",
"1360 810 OFFCURVE",
"1116 810 QCURVE SMOOTH",
"1089 810 LINE",
"1481 1456 LINE"
);
},
{
closed = 1;
nodes = (
"1170 1298 LINE",
"888 810 LINE",
"872 810 LINE",
"589 1298 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
30 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 13 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1745;
}
);
note = uni046A;
unicode = 046A;
},
{
glyphname = "yusbig-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"336 177 LINE SMOOTH",
"338 326 OFFCURVE",
"455 452 OFFCURVE",
"595 452 QCURVE SMOOTH",
"657 452 LINE",
"663 443 LINE",
"663 0 LINE",
"848 0 LINE",
"848 433 LINE",
"859 452 LINE",
"912 452 LINE SMOOTH",
"1052 452 OFFCURVE",
"1167 323 OFFCURVE",
"1169 177 QCURVE SMOOTH",
"1169 0 LINE",
"1355 0 LINE",
"1355 173 LINE SMOOTH",
"1353 381 OFFCURVE",
"1156 592 OFFCURVE",
"950 603 QCURVE",
"1238 1082 LINE",
"279 1082 LINE",
"566 603 LINE",
"356 597 OFFCURVE",
"154 387 OFFCURVE",
"150 182 QCURVE SMOOTH",
"150 0 LINE",
"336 0 LINE"
);
},
{
closed = 1;
nodes = (
"945 930 LINE",
"762 604 LINE",
"754 604 LINE",
"572 930 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
28 20 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1505;
}
);
note = uni046B;
unicode = 046B;
},
{
glyphname = "Yusbigiotified-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"902 388 LINE SMOOTH",
"906 529 OFFCURVE",
"1036 652 OFFCURVE",
"1194 652 QCURVE SMOOTH",
"1329 652 LINE",
"1343 629 LINE",
"1343 0 LINE",
"1535 0 LINE",
"1535 615 LINE",
"1557 652 LINE",
"1690 652 LINE SMOOTH",
"1844 650 OFFCURVE",
"1968 520 OFFCURVE",
"1969 376 QCURVE SMOOTH",
"1969 0 LINE",
"2162 0 LINE",
"2162 382 LINE SMOOTH",
"2159 598 OFFCURVE",
"1923 810 OFFCURVE",
"1679 810 QCURVE SMOOTH",
"1652 810 LINE",
"2044 1456 LINE",
"841 1456 LINE",
"1232 812 LINE",
"375 812 LINE",
"375 1456 LINE",
"182 1456 LINE",
"182 0 LINE",
"375 0 LINE",
"375 660 LINE",
"789 660 LINE",
"710 555 OFFCURVE",
"709 376 QCURVE SMOOTH",
"709 0 LINE",
"902 0 LINE"
);
},
{
closed = 1;
nodes = (
"1733 1298 LINE",
"1451 810 LINE",
"1435 810 LINE",
"1152 1298 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
38 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2308;
}
);
note = uni046C;
unicode = 046C;
},
{
glyphname = "yusbigiotified-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"832 175 LINE SMOOTH",
"834 322 OFFCURVE",
"945 450 OFFCURVE",
"1078 452 QCURVE SMOOTH",
"1153 452 LINE",
"1159 443 LINE",
"1159 0 LINE",
"1344 0 LINE",
"1344 433 LINE",
"1355 452 LINE",
"1408 452 LINE SMOOTH",
"1548 452 OFFCURVE",
"1663 323 OFFCURVE",
"1665 177 QCURVE SMOOTH",
"1665 0 LINE",
"1851 0 LINE",
"1851 173 LINE SMOOTH",
"1849 381 OFFCURVE",
"1652 592 OFFCURVE",
"1446 603 QCURVE",
"1734 1082 LINE",
"775 1082 LINE",
"1062 604 LINE",
"341 604 LINE",
"341 1082 LINE",
"155 1082 LINE",
"155 0 LINE",
"341 0 LINE",
"341 452 LINE",
"718 452 LINE",
"648 348 OFFCURVE",
"646 175 QCURVE SMOOTH",
"646 0 LINE",
"832 0 LINE"
);
},
{
closed = 1;
nodes = (
"1441 930 LINE",
"1258 604 LINE",
"1250 604 LINE",
"1068 930 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
30 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 11 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2001;
}
);
note = uni046D;
unicode = 046D;
},
{
glyphname = "Ksi-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"730 823 OFFCURVE",
"411 823 QCURVE SMOOTH",
"277 823 LINE",
"277 671 LINE",
"430 671 LINE SMOOTH",
"752 666 OFFCURVE",
"752 402 QCURVE SMOOTH",
"752 281 OFFCURVE",
"593 133 OFFCURVE",
"459 132 QCURVE SMOOTH",
"407 132 LINE SMOOTH",
"245 131 OFFCURVE",
"80 0 OFFCURVE",
"80 -122 QCURVE SMOOTH",
"80 -221 OFFCURVE",
"221 -389 OFFCURVE",
"343 -442 QCURVE",
"417 -317 LINE",
"386 -302 LINE SMOOTH",
"256 -236 OFFCURVE",
"256 -131 QCURVE SMOOTH",
"256 -22 OFFCURVE",
"397 -19 QCURVE SMOOTH",
"449 -19 LINE SMOOTH",
"673 -19 OFFCURVE",
"938 210 OFFCURVE",
"938 406 QCURVE SMOOTH",
"938 536 OFFCURVE",
"801 709 OFFCURVE",
"671 750 QCURVE",
"786 795 OFFCURVE",
"915 959 OFFCURVE",
"915 1062 QCURVE SMOOTH",
"915 1240 OFFCURVE",
"653 1456 OFFCURVE",
"431 1456 QCURVE SMOOTH",
"132 1456 LINE",
"132 1304 LINE",
"438 1304 LINE SMOOTH",
"573 1304 OFFCURVE",
"730 1176 OFFCURVE",
"730 1066 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"486 1642 LINE",
"600 1642 LINE",
"854 1916 LINE",
"854 1926 LINE",
"694 1926 LINE",
"543 1756 LINE",
"393 1926 LINE",
"236 1926 LINE",
"236 1916 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
42 51 52 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 5 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
12 37 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 46 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 43 31 43 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
42 46 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1059;
}
);
note = uni046E;
unicode = 046E;
},
{
glyphname = "ksi-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"679 617 OFFCURVE",
"404 617 QCURVE SMOOTH",
"268 617 LINE",
"268 465 LINE",
"421 465 LINE SMOOTH",
"701 462 OFFCURVE",
"701 300 QCURVE SMOOTH",
"701 228 OFFCURVE",
"638 182 QCURVE SMOOTH",
"571 134 OFFCURVE",
"457 132 QCURVE SMOOTH",
"403 132 LINE SMOOTH",
"241 131 OFFCURVE",
"76 0 OFFCURVE",
"76 -122 QCURVE SMOOTH",
"76 -219 OFFCURVE",
"214 -387 OFFCURVE",
"338 -442 QCURVE",
"413 -317 LINE",
"382 -302 LINE SMOOTH",
"252 -236 OFFCURVE",
"252 -131 QCURVE SMOOTH",
"252 -22 OFFCURVE",
"393 -19 QCURVE SMOOTH",
"443 -19 LINE SMOOTH",
"643 -19 OFFCURVE",
"886 156 OFFCURVE",
"886 304 QCURVE SMOOTH",
"886 479 OFFCURVE",
"671 545 QCURVE",
"762 581 OFFCURVE",
"864 700 OFFCURVE",
"864 773 QCURVE SMOOTH",
"864 912 OFFCURVE",
"626 1082 OFFCURVE",
"424 1082 QCURVE SMOOTH",
"129 1082 LINE",
"129 929 LINE",
"440 929 LINE SMOOTH",
"552 927 OFFCURVE",
"679 844 OFFCURVE",
"679 777 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"405 1300 LINE",
"519 1300 LINE",
"773 1574 LINE",
"773 1584 LINE",
"613 1584 LINE",
"462 1414 LINE",
"312 1584 LINE",
"155 1584 LINE",
"155 1574 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
46 51 52 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 5 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 40 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 40 207 40 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
159 40 175 40 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
111 40 127 40 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
12 37 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 43 31 43 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
42 46 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 987;
}
);
note = uni046F;
unicode = 046F;
},
{
glyphname = "Fita-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1272 993 OFFCURVE",
"1127 1308 OFFCURVE",
"863 1476 OFFCURVE",
"688 1476 QCURVE SMOOTH",
"516 1476 OFFCURVE",
"249 1305 OFFCURVE",
"103 983 OFFCURVE",
"103 773 QCURVE SMOOTH",
"103 668 LINE SMOOTH",
"105 462 OFFCURVE",
"252 149 OFFCURVE",
"518 -20 OFFCURVE",
"690 -20 QCURVE SMOOTH",
"867 -20 OFFCURVE",
"1131 150 OFFCURVE",
"1274 468 OFFCURVE",
"1274 681 QCURVE SMOOTH",
"1274 786 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1082 643 LINE",
"1074 399 OFFCURVE",
"872 143 OFFCURVE",
"690 143 QCURVE SMOOTH",
"513 143 OFFCURVE",
"302 407 OFFCURVE",
"294 643 QCURVE"
);
},
{
closed = 1;
nodes = (
"298 1036 OFFCURVE",
"506 1311 OFFCURVE",
"688 1311 QCURVE SMOOTH",
"872 1311 OFFCURVE",
"1078 1042 OFFCURVE",
"1082 794 QCURVE",
"294 794 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 13 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 22 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
79 22 95 22 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 22 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1393;
}
);
leftKerningGroup = C;
note = uni0472;
unicode = 0472;
},
{
glyphname = "fita-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 287 OFFCURVE",
"362 -20 OFFCURVE",
"584 -20 QCURVE SMOOTH",
"728 -20 OFFCURVE",
"952 117 OFFCURVE",
"1076 371 OFFCURVE",
"1076 529 QCURVE SMOOTH",
"1075 587 LINE SMOOTH",
"1064 816 OFFCURVE",
"794 1102 OFFCURVE",
"582 1102 QCURVE SMOOTH",
"439 1102 OFFCURVE",
"214 963 OFFCURVE",
"91 710 OFFCURVE",
"91 551 QCURVE SMOOTH",
"91 538 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"887 470 LINE",
"874 317 OFFCURVE",
"713 131 OFFCURVE",
"455 131 OFFCURVE",
"291 315 OFFCURVE",
"278 470 QCURVE"
);
},
{
closed = 1;
nodes = (
"295 769 OFFCURVE",
"457 950 OFFCURVE",
"582 950 QCURVE SMOOTH",
"705 950 OFFCURVE",
"868 773 OFFCURVE",
"886 622 QCURVE",
"280 622 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 12 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 26 207 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
159 26 175 26 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 26 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 26 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
47 26 63 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
207 26 223 26 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1163;
}
);
leftKerningGroup = o;
note = uni0473;
unicode = 0473;
},
{
glyphname = "Izhitsa-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"22 1456 LINE",
"527 0 LINE",
"697 0 LINE",
"1085 1159 LINE",
"1116 1243 OFFCURVE",
"1180 1303 OFFCURVE",
"1244 1303 QCURVE",
"1245 1474 LINE",
"1199 1475 LINE SMOOTH",
"1096 1475 OFFCURVE",
"962 1355 OFFCURVE",
"911 1204 QCURVE SMOOTH",
"647 373 LINE",
"612 244 LINE",
"579 374 LINE",
"230 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 6 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1290;
}
);
leftKerningGroup = V;
note = uni0474;
unicode = 0474;
},
{
glyphname = "izhitsa-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"46 1082 LINE",
"427 0 LINE",
"568 0 LINE",
"865 844 LINE SMOOTH",
"881 889 OFFCURVE",
"941 937 OFFCURVE",
"972 937 QCURVE SMOOTH",
"1001 937 OFFCURVE",
"1014 929 QCURVE",
"1035 1077 LINE",
"1000 1101 OFFCURVE",
"929 1101 QCURVE SMOOTH",
"757 1101 OFFCURVE",
"680 859 QCURVE",
"523 316 LINE",
"498 216 LINE",
"475 316 LINE",
"235 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 5 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1027;
}
);
leftKerningGroup = v;
note = uni0475;
unicode = 0475;
},
{
glyphname = uni047A;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1274 768 LINE SMOOTH",
"1274 1161.333 OFFCURVE",
"1090.333 1418.667 OFFCURVE",
"789 1468 CURVE",
"789 1588 LINE",
"604 1588 LINE",
"604 1470 LINE",
"296 1428.667 OFFCURVE",
"103 1162.333 OFFCURVE",
"103 773 CURVE SMOOTH",
"103 677 LINE SMOOTH",
"104.333 289 OFFCURVE",
"298.667 27.333 OFFCURVE",
"604 -14 CURVE",
"604 -141 LINE",
"789 -141 LINE",
"789 -12 LINE",
"1091.667 34.667 OFFCURVE",
"1274 293 OFFCURVE",
"1274 681 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 774 LINE SMOOTH",
"294 1071.333 OFFCURVE",
"408 1260.667 OFFCURVE",
"604 1302 CURVE",
"604 1202 LINE",
"789 1202 LINE",
"789 1299 LINE",
"977 1252.333 OFFCURVE",
"1083 1073.667 OFFCURVE",
"1083 775 CURVE SMOOTH",
"1083 681 LINE SMOOTH",
"1083 379.667 OFFCURVE",
"979.667 199.333 OFFCURVE",
"789 154 CURVE",
"789 254 LINE",
"604 254 LINE",
"604 152 LINE",
"409.333 193.333 OFFCURVE",
"294 385 OFFCURVE",
"294 681 CURVE SMOOTH"
);
}
);
width = 1393;
}
);
leftKerningGroup = C;
note = uni047A;
unicode = 047A;
},
{
glyphname = uni047B;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 535 LINE SMOOTH",
"91 315 OFFCURVE",
"308 20 OFFCURVE",
"488 -11 QCURVE",
"488 -119 LINE",
"673 -119 LINE",
"673 -12 LINE",
"855 17 OFFCURVE",
"1076 313 OFFCURVE",
"1076 529 QCURVE SMOOTH",
"1076 545 LINE SMOOTH",
"1076 766 OFFCURVE",
"859 1062 OFFCURVE",
"673 1094 QCURVE",
"673 1205 LINE",
"488 1205 LINE",
"488 1093 LINE",
"303 1059 OFFCURVE",
"91 761 OFFCURVE",
"91 551 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 694 OFFCURVE",
"390 902 OFFCURVE",
"488 935 QCURVE",
"488 838 LINE",
"673 838 LINE",
"673 936 LINE",
"774 904 OFFCURVE",
"890 696 OFFCURVE",
"890 551 QCURVE SMOOTH",
"890 380 OFFCURVE",
"772 175 OFFCURVE",
"673 144 QCURVE",
"673 248 LINE",
"488 248 LINE",
"488 146 LINE",
"389 180 OFFCURVE",
"276 383 OFFCURVE",
"276 529 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
note = uni047B;
unicode = 047B;
},
{
glyphname = uni047C;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1243 1297 LINE",
"1343 1297 OFFCURVE",
"1454 1138 OFFCURVE",
"1454 1002 QCURVE SMOOTH",
"1454 432 LINE SMOOTH",
"1454 292 OFFCURVE",
"1342 136 OFFCURVE",
"1243 136 QCURVE SMOOTH",
"1128 136 OFFCURVE",
"998 275 OFFCURVE",
"998 397 QCURVE SMOOTH",
"998 825 LINE",
"805 825 LINE",
"805 397 LINE SMOOTH",
"805 273 OFFCURVE",
"675 136 OFFCURVE",
"561 136 QCURVE SMOOTH",
"463 136 OFFCURVE",
"349 291 OFFCURVE",
"349 431 QCURVE SMOOTH",
"349 1003 LINE SMOOTH",
"349 1140 OFFCURVE",
"462 1297 OFFCURVE",
"561 1297 QCURVE",
"561 1455 LINE",
"372 1455 OFFCURVE",
"156 1214 OFFCURVE",
"156 1002 QCURVE SMOOTH",
"156 416 LINE SMOOTH",
"160 211 OFFCURVE",
"376 -21 OFFCURVE",
"561 -21 QCURVE SMOOTH",
"673 -21 OFFCURVE",
"849 64 OFFCURVE",
"901 152 QCURVE",
"953 64 OFFCURVE",
"1131 -21 OFFCURVE",
"1243 -21 QCURVE SMOOTH",
"1430 -21 OFFCURVE",
"1647 219 OFFCURVE",
"1647 431 QCURVE SMOOTH",
"1647 1001 LINE SMOOTH",
"1647 1215 OFFCURVE",
"1430 1455 OFFCURVE",
"1243 1455 QCURVE"
);
},
{
closed = 1;
nodes = (
"721 1619 LINE",
"721 1634 LINE SMOOTH",
"721 1746 OFFCURVE",
"834 1746 QCURVE SMOOTH",
"858 1746 OFFCURVE",
"910 1734 OFFCURVE",
"1094 1654 OFFCURVE",
"1224 1620 OFFCURVE",
"1304 1620 QCURVE SMOOTH",
"1347 1620 LINE",
"1347 1747 LINE",
"1239 1747 OFFCURVE",
"1133 1774 OFFCURVE",
"942 1856 OFFCURVE",
"870 1873 OFFCURVE",
"830 1873 QCURVE SMOOTH",
"720 1873 OFFCURVE",
"593 1765 OFFCURVE",
"593 1655 QCURVE SMOOTH",
"593 1619 LINE"
);
},
{
closed = 1;
nodes = (
"867 1323 LINE",
"926 1355 OFFCURVE",
"1017 1472 OFFCURVE",
"1017 1522 QCURVE SMOOTH",
"1017 1624 LINE",
"860 1624 LINE",
"860 1519 LINE SMOOTH",
"857 1459 OFFCURVE",
"791 1379 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 74 75 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
10 13 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 20 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
45 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
60 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
68 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1793;
}
);
leftKerningGroup = C;
note = uni047C;
unicode = 047C;
},
{
glyphname = uni047D;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1090 940 LINE",
"1171 940 OFFCURVE",
"1264 804 OFFCURVE",
"1264 680 QCURVE SMOOTH",
"1264 391 LINE SMOOTH",
"1264 266 OFFCURVE",
"1171 130 OFFCURVE",
"1090 130 QCURVE SMOOTH",
"993 130 OFFCURVE",
"881 247 OFFCURVE",
"880 350 QCURVE SMOOTH",
"880 588 LINE",
"695 588 LINE",
"695 353 LINE SMOOTH",
"695 250 OFFCURVE",
"584 130 OFFCURVE",
"486 130 QCURVE SMOOTH",
"403 130 OFFCURVE",
"311 267 OFFCURVE",
"311 390 QCURVE SMOOTH",
"311 680 LINE SMOOTH",
"311 804 OFFCURVE",
"404 940 OFFCURVE",
"486 940 QCURVE",
"486 1092 LINE",
"318 1092 OFFCURVE",
"126 873 OFFCURVE",
"126 680 QCURVE SMOOTH",
"126 374 LINE SMOOTH",
"130 187 OFFCURVE",
"323 -21 OFFCURVE",
"486 -21 QCURVE SMOOTH",
"584 -21 OFFCURVE",
"740 53 OFFCURVE",
"787 128 QCURVE",
"882 -21 OFFCURVE",
"1090 -21 QCURVE SMOOTH",
"1258 -21 OFFCURVE",
"1450 197 OFFCURVE",
"1450 390 QCURVE SMOOTH",
"1450 679 LINE SMOOTH",
"1450 873 OFFCURVE",
"1258 1092 OFFCURVE",
"1090 1092 QCURVE"
);
},
{
closed = 1;
nodes = (
"633 1267 LINE",
"633 1282 LINE SMOOTH",
"633 1393 OFFCURVE",
"747 1393 QCURVE SMOOTH",
"771 1393 OFFCURVE",
"819 1382 OFFCURVE",
"1011 1300 OFFCURVE",
"1137 1268 OFFCURVE",
"1216 1268 QCURVE SMOOTH",
"1260 1268 LINE",
"1260 1395 LINE",
"1150 1395 OFFCURVE",
"1041 1423 OFFCURVE",
"858 1503 OFFCURVE",
"784 1521 OFFCURVE",
"743 1521 QCURVE SMOOTH",
"632 1521 OFFCURVE",
"505 1413 OFFCURVE",
"505 1303 QCURVE SMOOTH",
"505 1267 LINE"
);
},
{
closed = 1;
nodes = (
"779 961 LINE",
"838 993 OFFCURVE",
"929 1110 OFFCURVE",
"929 1160 QCURVE SMOOTH",
"929 1262 LINE",
"771 1262 LINE",
"771 1158 LINE SMOOTH",
"768 1095 OFFCURVE",
"703 1017 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 73 74 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
9 12 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 19 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
44 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
51 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
59 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1572;
}
);
leftKerningGroup = c;
note = uni047D;
unicode = 047D;
},
{
glyphname = uni047E;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1461 1456 LINE",
"1461 398 LINE SMOOTH",
"1461 273 OFFCURVE",
"1339 136 OFFCURVE",
"1233 136 QCURVE SMOOTH",
"1128 136 OFFCURVE",
"1004 272 OFFCURVE",
"1004 397 QCURVE SMOOTH",
"1004 1456 LINE",
"805 1456 LINE",
"805 397 LINE SMOOTH",
"805 273 OFFCURVE",
"675 136 OFFCURVE",
"561 136 QCURVE SMOOTH",
"463 136 OFFCURVE",
"349 274 OFFCURVE",
"349 397 QCURVE SMOOTH",
"349 1456 LINE",
"156 1456 LINE",
"156 394 LINE SMOOTH",
"157 199 OFFCURVE",
"372 -20 OFFCURVE",
"561 -20 QCURVE SMOOTH",
"674 -20 OFFCURVE",
"852 67 OFFCURVE",
"904 156 QCURVE",
"953 67 OFFCURVE",
"1124 -20 OFFCURVE",
"1233 -20 QCURVE SMOOTH",
"1428 -20 OFFCURVE",
"1653 200 OFFCURVE",
"1653 398 QCURVE SMOOTH",
"1653 1456 LINE"
);
},
{
closed = 1;
nodes = (
"817 1688 LINE",
"817 1563 LINE",
"985 1563 LINE",
"985 1688 LINE",
"1316 1688 LINE",
"1315 1795 LINE",
"503 1795 LINE",
"503 1688 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
7 10 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
34 6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1800;
}
);
leftKerningGroup = C;
note = uni047E;
unicode = 047E;
},
{
glyphname = uni047F;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1268 1082 LINE",
"1268 349 LINE SMOOTH",
"1267 247 OFFCURVE",
"1166 130 OFFCURVE",
"1077 130 QCURVE SMOOTH",
"985 130 OFFCURVE",
"884 250 OFFCURVE",
"884 353 QCURVE SMOOTH",
"884 1082 LINE",
"698 1082 LINE",
"698 353 LINE SMOOTH",
"698 250 OFFCURVE",
"587 130 OFFCURVE",
"489 130 QCURVE SMOOTH",
"406 130 OFFCURVE",
"315 247 OFFCURVE",
"314 349 QCURVE SMOOTH",
"314 1082 LINE",
"129 1082 LINE",
"129 350 LINE SMOOTH",
"130 174 OFFCURVE",
"322 -21 OFFCURVE",
"489 -21 QCURVE SMOOTH",
"695 -21 OFFCURVE",
"790 127 QCURVE",
"879 -21 OFFCURVE",
"1077 -21 QCURVE SMOOTH",
"1251 -21 OFFCURVE",
"1453 177 OFFCURVE",
"1453 353 QCURVE SMOOTH",
"1453 1082 LINE"
);
},
{
closed = 1;
nodes = (
"704 1349 LINE",
"704 1221 LINE",
"873 1221 LINE",
"873 1349 LINE",
"1206 1349 LINE",
"1203 1456 LINE",
"391 1456 LINE",
"391 1349 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
30 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
6 8 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
32 6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1579;
}
);
note = uni047F;
unicode = 047F;
},
{
glyphname = "Koppa-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"664 136 LINE SMOOTH",
"507 140 OFFCURVE",
"310 401 OFFCURVE",
"310 603 QCURVE SMOOTH",
"310 847 LINE SMOOTH",
"310 1059 OFFCURVE",
"515 1319 OFFCURVE",
"675 1319 QCURVE SMOOTH",
"836 1319 OFFCURVE",
"1017 1147 OFFCURVE",
"1019 989 QCURVE",
"1212 989 LINE",
"1210 1213 OFFCURVE",
"922 1477 OFFCURVE",
"675 1477 QCURVE SMOOTH",
"515 1477 OFFCURVE",
"259 1318 OFFCURVE",
"117 1030 OFFCURVE",
"117 853 QCURVE SMOOTH",
"117 609 LINE SMOOTH",
"117 354 OFFCURVE",
"381 12 OFFCURVE",
"597 -16 QCURVE",
"597 -380 LINE",
"788 -380 LINE",
"788 136 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1330;
}
);
leftKerningGroup = C;
note = uni0480;
unicode = 0480;
},
{
glyphname = "koppa-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"565 130 LINE SMOOTH",
"435 133 OFFCURVE",
"285 352 OFFCURVE",
"285 520 QCURVE SMOOTH",
"285 551 LINE SMOOTH",
"285 732 OFFCURVE",
"441 950 OFFCURVE",
"573 950 QCURVE SMOOTH",
"674 950 OFFCURVE",
"817 810 OFFCURVE",
"817 709 QCURVE",
"992 709 LINE",
"992 877 OFFCURVE",
"752 1102 OFFCURVE",
"573 1102 QCURVE SMOOTH",
"434 1102 OFFCURVE",
"219 964 OFFCURVE",
"100 715 OFFCURVE",
"100 562 QCURVE SMOOTH",
"100 527 LINE SMOOTH",
"100 310 OFFCURVE",
"312 16 OFFCURVE",
"489 -14 QCURVE",
"489 -382 LINE",
"674 -382 LINE",
"674 130 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1095;
}
);
leftKerningGroup = c;
note = uni0481;
unicode = 0481;
},
{
glyphname = "thousand-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1096 641 LINE",
"1168 763 LINE",
"875 934 LINE",
"1106 1342 LINE",
"941 1342 LINE",
"753 1011 LINE",
"462 1182 LINE",
"392 1057 LINE",
"682 886 LINE",
"477 521 LINE",
"184 692 LINE",
"116 569 LINE",
"405 398 LINE",
"180 0 LINE",
"348 0 LINE",
"530 321 LINE",
"821 151 LINE",
"889 274 LINE",
"600 446 LINE",
"808 811 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1277;
}
);
note = uni0482;
unicode = 0482;
},
{
glyphname = "titlocomb-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-217 1531 LINE",
"-382 1532 LINE",
"-381 1424 LINE",
"-920 1424 LINE",
"-921 1191 LINE",
"-755 1190 LINE",
"-755 1315 LINE",
"-217 1315 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0483;
unicode = 0483;
},
{
glyphname = "palatalizationcomb-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-433 1557 OFFCURVE",
"-504 1540 OFFCURVE",
"-697 1457 OFFCURVE",
"-803 1430 OFFCURVE",
"-911 1430 QCURVE",
"-911 1304 LINE",
"-851 1304 LINE SMOOTH",
"-733 1306 OFFCURVE",
"-596 1364 QCURVE SMOOTH",
"-485 1411 LINE SMOOTH",
"-440 1429 OFFCURVE",
"-398 1429 QCURVE SMOOTH",
"-284 1429 OFFCURVE",
"-284 1317 QCURVE SMOOTH",
"-284 1303 LINE",
"-156 1303 LINE",
"-156 1339 LINE SMOOTH",
"-156 1449 OFFCURVE",
"-283 1557 OFFCURVE",
"-394 1557 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0484;
unicode = 0484;
},
{
glyphname = "dasiapneumatacomb-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-428 1367 LINE",
"-487 1483 LINE",
"-487 1623 LINE",
"-666 1623 LINE",
"-666 1500 LINE",
"-505 1302 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0485;
unicode = 0485;
},
{
glyphname = "psilipneumatacomb-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-365 1623 LINE",
"-546 1623 LINE",
"-545 1483 LINE",
"-604 1367 LINE",
"-527 1302 LINE",
"-365 1500 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0486;
unicode = 0486;
},
{
glyphname = "hundredthousandssigncomb-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-647 1315 OFFCURVE",
"-596 1368 OFFCURVE",
"-550 1368 QCURVE SMOOTH",
"-502 1368 OFFCURVE",
"-451 1313 OFFCURVE",
"-451 1267 QCURVE",
"-339 1267 LINE",
"-339 1351 OFFCURVE",
"-455 1455 OFFCURVE",
"-645 1455 OFFCURVE",
"-760 1351 OFFCURVE",
"-760 1267 QCURVE",
"-647 1267 LINE"
);
},
{
closed = 1;
nodes = (
"-1396 487 LINE",
"-1396 533 OFFCURVE",
"-1345 588 OFFCURVE",
"-1253 588 OFFCURVE",
"-1200 536 OFFCURVE",
"-1200 487 QCURVE",
"-1088 487 LINE",
"-1088 571 OFFCURVE",
"-1204 675 OFFCURVE",
"-1299 675 QCURVE SMOOTH",
"-1392 675 OFFCURVE",
"-1509 572 OFFCURVE",
"-1509 487 QCURVE"
);
},
{
closed = 1;
nodes = (
"-1229 -32 LINE",
"-1229 16 OFFCURVE",
"-1178 69 OFFCURVE",
"-1133 69 QCURVE SMOOTH",
"-1087 69 OFFCURVE",
"-1034 17 OFFCURVE",
"-1034 -32 QCURVE",
"-921 -32 LINE",
"-921 53 OFFCURVE",
"-1038 156 OFFCURVE",
"-1133 156 QCURVE SMOOTH",
"-1226 156 OFFCURVE",
"-1343 53 OFFCURVE",
"-1343 -32 QCURVE"
);
},
{
closed = 1;
nodes = (
"-1219 990 LINE",
"-1219 1038 OFFCURVE",
"-1168 1091 OFFCURVE",
"-1122 1091 QCURVE SMOOTH",
"-1074 1091 OFFCURVE",
"-1023 1036 OFFCURVE",
"-1023 990 QCURVE",
"-911 990 LINE",
"-911 1074 OFFCURVE",
"-1027 1178 OFFCURVE",
"-1217 1178 OFFCURVE",
"-1333 1074 OFFCURVE",
"-1333 990 QCURVE"
);
},
{
closed = 1;
nodes = (
"-642 -316 LINE",
"-642 -270 OFFCURVE",
"-591 -215 OFFCURVE",
"-545 -215 QCURVE SMOOTH",
"-497 -215 OFFCURVE",
"-446 -270 OFFCURVE",
"-446 -316 QCURVE",
"-334 -316 LINE",
"-334 -232 OFFCURVE",
"-450 -128 OFFCURVE",
"-640 -128 OFFCURVE",
"-755 -232 OFFCURVE",
"-755 -316 QCURVE"
);
},
{
closed = 1;
nodes = (
"-66 -32 LINE",
"-66 14 OFFCURVE",
"-15 69 OFFCURVE",
"30 69 QCURVE SMOOTH",
"76 69 OFFCURVE",
"129 17 OFFCURVE",
"129 -32 QCURVE",
"241 -32 LINE",
"241 52 OFFCURVE",
"125 156 OFFCURVE",
"30 156 QCURVE SMOOTH",
"-63 156 OFFCURVE",
"-179 52 OFFCURVE",
"-179 -32 QCURVE"
);
},
{
closed = 1;
nodes = (
"-55 990 LINE",
"-55 1038 OFFCURVE",
"-4 1091 OFFCURVE",
"40 1091 QCURVE SMOOTH",
"86 1091 OFFCURVE",
"139 1039 OFFCURVE",
"139 990 QCURVE",
"252 990 LINE",
"252 1075 OFFCURVE",
"135 1178 OFFCURVE",
"40 1178 QCURVE SMOOTH",
"-53 1178 OFFCURVE",
"-169 1074 OFFCURVE",
"-169 990 QCURVE"
);
},
{
closed = 1;
nodes = (
"130 487 LINE",
"130 533 OFFCURVE",
"181 588 OFFCURVE",
"273 588 OFFCURVE",
"326 536 OFFCURVE",
"326 487 QCURVE",
"438 487 LINE",
"438 571 OFFCURVE",
"322 675 OFFCURVE",
"227 675 QCURVE SMOOTH",
"134 675 OFFCURVE",
"17 572 OFFCURVE",
"17 487 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
83 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
96 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
9 11 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
76 11 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
90 11 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
96 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
96 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
103 11 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
63 11 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0488;
unicode = 0488;
},
{
glyphname = "millionssigncomb-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-672 -413 LINE",
"-576 -413 LINE",
"-454 -74 LINE",
"-465 -60 LINE",
"-602 -60 LINE"
);
},
{
closed = 1;
nodes = (
"-1159 421 LINE",
"-1146 433 LINE",
"-1146 572 LINE",
"-1492 643 LINE",
"-1492 545 LINE"
);
},
{
closed = 1;
nodes = (
"-1228 -149 LINE",
"-908 4 LINE",
"-906 21 LINE",
"-1003 120 LINE",
"-1297 -80 LINE"
);
},
{
closed = 1;
nodes = (
"-1063 862 LINE",
"-1046 860 LINE",
"-948 958 LINE",
"-1146 1257 LINE",
"-1211 1188 LINE"
);
},
{
closed = 1;
nodes = (
"-660 1126 LINE",
"-524 1126 LINE",
"-454 1478 LINE",
"-550 1478 LINE",
"-672 1140 LINE"
);
},
{
closed = 1;
nodes = (
"-125 903 LINE",
"168 1103 LINE",
"100 1171 LINE",
"-220 1018 LINE",
"-222 1002 LINE"
);
},
{
closed = 1;
nodes = (
"15 -237 LINE",
"81 -166 LINE",
"-67 159 LINE",
"-84 161 LINE",
"-181 62 LINE"
);
},
{
closed = 1;
nodes = (
"363 421 LINE",
"363 519 LINE",
"30 643 LINE",
"17 631 LINE",
"17 492 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0489;
unicode = 0489;
},
{
glyphname = "Iishorttail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ii-cy";
},
{
name = breve;
transform = "{1, 0, 0, 1, 305, 322}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 1151, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1545;
}
);
note = uni048A;
unicode = 048A;
},
{
glyphname = "iishorttail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ii-cy";
},
{
name = breve;
transform = "{1, 0, 0, 1, 161, -20}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 897, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1261;
}
);
leftKerningGroup = m;
note = uni048B;
unicode = 048B;
},
{
glyphname = "semisoftsign-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1456 LINE",
"341 1649 LINE",
"155 1649 LINE",
"155 1456 LINE",
"-36 1456 LINE",
"-36 1304 LINE",
"155 1304 LINE",
"155 0 LINE",
"625 0 LINE SMOOTH",
"808 3 OFFCURVE",
"1020 212 OFFCURVE",
"1020 542 OFFCURVE",
"808 744 OFFCURVE",
"621 746 QCURVE SMOOTH",
"341 746 LINE",
"341 1304 LINE",
"662 1304 LINE",
"662 1456 LINE"
);
},
{
closed = 1;
nodes = (
"341 594 LINE",
"622 594 LINE SMOOTH",
"722 592 OFFCURVE",
"833 467 OFFCURVE",
"833 370 QCURVE SMOOTH",
"833 270 OFFCURVE",
"720 151 OFFCURVE",
"615 151 QCURVE SMOOTH",
"341 151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 12 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
note = uni048D;
unicode = 048D;
},
{
glyphname = "Ertick-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"873 570 OFFCURVE",
"991 625 QCURVE",
"1130 472 LINE",
"1239 575 LINE",
"1113 713 LINE",
"1216 825 OFFCURVE",
"1216 1011 QCURVE SMOOTH",
"1216 1214 OFFCURVE",
"941 1456 OFFCURVE",
"705 1456 QCURVE SMOOTH",
"168 1456 LINE",
"168 0 LINE",
"361 0 LINE",
"361 570 LINE",
"705 570 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"713 1298 LINE SMOOTH",
"858 1296 OFFCURVE",
"1023 1139 OFFCURVE",
"1023 1009 QCURVE SMOOTH",
"1023 918 OFFCURVE",
"986 853 QCURVE",
"872 979 LINE",
"762 877 LINE",
"872 756 LINE",
"803 727 OFFCURVE",
"705 727 QCURVE SMOOTH",
"361 727 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1307;
}
);
note = uni048E;
unicode = 048E;
},
{
glyphname = "ertick-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1054 808 OFFCURVE",
"827 1102 OFFCURVE",
"632 1102 QCURVE SMOOTH",
"431 1102 OFFCURVE",
"318 962 QCURVE",
"309 1082 LINE",
"140 1082 LINE",
"140 -416 LINE",
"325 -416 LINE",
"325 105 LINE",
"438 -20 OFFCURVE",
"635 -20 QCURVE SMOOTH",
"750 -20 OFFCURVE",
"839 36 QCURVE",
"949 -87 LINE",
"1059 15 LINE",
"948 140 LINE",
"1054 291 OFFCURVE",
"1054 529 QCURVE SMOOTH",
"1054 546 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"325 796 LINE",
"409 945 OFFCURVE",
"577 945 QCURVE SMOOTH",
"713 945 OFFCURVE",
"869 733 OFFCURVE",
"869 550 QCURVE SMOOTH",
"869 383 OFFCURVE",
"819 285 QCURVE",
"729 388 LINE",
"619 285 LINE",
"721 170 LINE",
"661 131 OFFCURVE",
"579 131 QCURVE SMOOTH",
"408 131 OFFCURVE",
"325 279 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 7 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 16 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 16 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1161;
}
);
note = uni048F;
unicode = 048F;
},
{
glyphname = "Zhedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Zhe-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 1633, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1954;
}
);
leftKerningGroup = X;
note = uni0496;
unicode = 0496;
},
{
glyphname = "zhedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "zhe-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 1308, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1633;
}
);
leftKerningGroup = x;
note = uni0497;
unicode = 0497;
},
{
glyphname = "Kadescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = K.ss04;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 1059, -2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1434;
}
);
note = uni049A;
unicode = 049A;
},
{
glyphname = "kadescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ka-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 864, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1208;
}
);
leftKerningGroup = m;
note = uni049B;
unicode = 049B;
},
{
glyphname = "Kaverticalstroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"685 815 LINE",
"608 815 LINE",
"608 1071 LINE",
"460 1071 LINE",
"460 815 LINE",
"356 815 LINE",
"356 1456 LINE",
"163 1456 LINE",
"163 0 LINE",
"356 0 LINE",
"356 654 LINE",
"460 654 LINE",
"460 410 LINE",
"608 410 LINE",
"608 654 LINE",
"688 654 LINE",
"1038 0 LINE",
"1279 0 LINE",
"834 766 LINE",
"1234 1456 LINE",
"1008 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1289;
}
);
note = uni049C;
unicode = 049C;
},
{
glyphname = "kaverticalstroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"631 624 LINE",
"589 624 LINE",
"589 837 LINE",
"441 837 LINE",
"441 624 LINE",
"340 624 LINE",
"340 1082 LINE",
"154 1082 LINE",
"154 0 LINE",
"340 0 LINE",
"340 461 LINE",
"441 461 LINE",
"441 267 LINE",
"589 267 LINE",
"589 461 LINE",
"639 461 LINE",
"916 0 LINE",
"1151 0 LINE",
"776 568 LINE",
"1114 1082 LINE",
"890 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
159 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 14 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 14 207 14 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
111 14 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni049D;
unicode = 049D;
},
{
glyphname = "Kabashkir-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1675 0 LINE",
"1077 751 LINE",
"1633 1456 LINE",
"1394 1456 LINE",
"886 814 LINE",
"736 814 LINE",
"736 1456 LINE",
"68 1456 LINE",
"68 1304 LINE",
"543 1304 LINE",
"543 0 LINE",
"736 0 LINE",
"736 654 LINE",
"912 654 LINE",
"1439 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 6 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 8 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 8 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
12 1 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1676;
}
);
leftKerningGroup = T;
note = uni04A0;
unicode = 04A0;
},
{
glyphname = "kabashkir-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1405 0 LINE",
"940 562 LINE",
"1369 1082 LINE",
"1144 1082 LINE",
"781 624 LINE",
"659 624 LINE",
"659 1082 LINE",
"62 1082 LINE",
"62 929 LINE",
"473 929 LINE",
"473 0 LINE",
"659 0 LINE",
"659 461 LINE",
"795 461 LINE",
"1170 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 9 207 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
111 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
12 0 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1411;
}
);
note = uni04A1;
unicode = 04A1;
},
{
glyphname = "Endescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 1160, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1535;
}
);
note = uni04A2;
unicode = 04A2;
},
{
glyphname = "endescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "en-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 897, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1241;
}
);
leftKerningGroup = m;
note = uni04A3;
unicode = 04A3;
},
{
glyphname = "Pemiddlehook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"176 1456 LINE",
"176 0 LINE",
"368 0 LINE",
"368 1298 LINE",
"1086 1298 LINE",
"1086 0 LINE",
"1279 0 LINE",
"1279 671 LINE",
"1400 671 LINE SMOOTH",
"1606 671 OFFCURVE",
"1810 459 OFFCURVE",
"1811 256 QCURVE SMOOTH",
"1811 53 OFFCURVE",
"1667 -142 OFFCURVE",
"1522 -142 QCURVE",
"1524 -289 LINE",
"1752 -289 OFFCURVE",
"1997 -8 OFFCURVE",
"1997 256 QCURVE SMOOTH",
"1997 528 OFFCURVE",
"1681 833 OFFCURVE",
"1397 833 QCURVE SMOOTH",
"1279 833 LINE",
"1279 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 22 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2097;
}
);
note = uni04A6;
unicode = 04A6;
},
{
glyphname = "pemiddlehook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"145 1082 LINE",
"145 0 LINE",
"331 0 LINE",
"331 929 LINE",
"829 929 LINE",
"829 0 LINE",
"1014 0 LINE",
"1014 483 LINE",
"1178 483 LINE SMOOTH",
"1338 483 OFFCURVE",
"1526 316 OFFCURVE",
"1526 170 QCURVE SMOOTH",
"1526 45 OFFCURVE",
"1403 -105 OFFCURVE",
"1279 -137 QCURVE",
"1327 -283 LINE",
"1480 -256 OFFCURVE",
"1689 -31 OFFCURVE",
"1709 132 QCURVE SMOOTH",
"1712 170 LINE",
"1712 385 OFFCURVE",
"1422 645 OFFCURVE",
"1174 645 QCURVE SMOOTH",
"1014 645 LINE",
"1014 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 23 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1780;
}
);
note = uni04A7;
unicode = 04A7;
},
{
glyphname = "Haabkhasian-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1321 133 OFFCURVE",
"1217 159 QCURVE",
"1319 254 OFFCURVE",
"1430 520 OFFCURVE",
"1430 678 QCURVE SMOOTH",
"1430 913 LINE SMOOTH",
"1430 1166 OFFCURVE",
"1200 1474 OFFCURVE",
"1018 1474 QCURVE SMOOTH",
"900 1474 OFFCURVE",
"711 1333 OFFCURVE",
"607 1080 OFFCURVE",
"607 926 QCURVE SMOOTH",
"607 699 LINE SMOOTH",
"607 529 OFFCURVE",
"739 252 OFFCURVE",
"860 155 QCURVE",
"804 142 OFFCURVE",
"734 142 QCURVE SMOOTH",
"543 142 OFFCURVE",
"307 439 OFFCURVE",
"307 675 QCURVE SMOOTH",
"307 841 LINE SMOOTH",
"307 1058 OFFCURVE",
"455 1312 OFFCURVE",
"573 1312 QCURVE",
"572 1477 LINE",
"440 1477 OFFCURVE",
"230 1314 OFFCURVE",
"113 1024 OFFCURVE",
"113 847 QCURVE SMOOTH",
"113 675 LINE SMOOTH",
"113 479 OFFCURVE",
"272 157 OFFCURVE",
"556 -21 OFFCURVE",
"734 -21 QCURVE SMOOTH",
"906 -21 OFFCURVE",
"1048 45 QCURVE",
"1227 -28 OFFCURVE",
"1442 -28 QCURVE",
"1442 133 LINE"
);
},
{
closed = 1;
nodes = (
"799 922 LINE SMOOTH",
"799 1100 OFFCURVE",
"921 1310 OFFCURVE",
"1018 1310 QCURVE SMOOTH",
"1117 1310 OFFCURVE",
"1238 1104 OFFCURVE",
"1238 927 QCURVE SMOOTH",
"1238 678 LINE SMOOTH",
"1238 537 OFFCURVE",
"1134 306 OFFCURVE",
"1036 234 QCURVE",
"919 308 OFFCURVE",
"799 545 OFFCURVE",
"799 697 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 55 56 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
31 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 4 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
44 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 2 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
38 44 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
51 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1518;
}
);
leftKerningGroup = C;
note = uni04A8;
unicode = 04A8;
},
{
glyphname = "haabkhasian-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1083 145 OFFCURVE",
"1004 166 QCURVE",
"1132 323 OFFCURVE",
"1132 550 QCURVE SMOOTH",
"1132 648 LINE SMOOTH",
"1132 854 OFFCURVE",
"954 1103 OFFCURVE",
"814 1103 QCURVE SMOOTH",
"671 1103 OFFCURVE",
"498 868 OFFCURVE",
"498 676 QCURVE SMOOTH",
"498 582 LINE SMOOTH",
"498 309 OFFCURVE",
"691 147 QCURVE",
"647 136 OFFCURVE",
"601 136 QCURVE SMOOTH",
"464 136 OFFCURVE",
"295 376 OFFCURVE",
"295 569 QCURVE SMOOTH",
"295 625 LINE SMOOTH",
"295 771 OFFCURVE",
"388 944 OFFCURVE",
"461 944 QCURVE",
"461 1102 LINE",
"306 1102 OFFCURVE",
"109 832 OFFCURVE",
"109 627 QCURVE SMOOTH",
"109 569 LINE SMOOTH",
"109 402 OFFCURVE",
"236 128 OFFCURVE",
"461 -21 OFFCURVE",
"601 -21 QCURVE SMOOTH",
"744 -21 OFFCURVE",
"862 45 QCURVE",
"1002 -12 OFFCURVE",
"1180 -12 QCURVE",
"1180 145 LINE"
);
},
{
closed = 1;
nodes = (
"683 683 LINE SMOOTH",
"684 805 OFFCURVE",
"754 946 OFFCURVE",
"874 946 OFFCURVE",
"947 788 OFFCURVE",
"947 658 QCURVE SMOOTH",
"947 541 LINE SMOOTH",
"944 355 OFFCURVE",
"842 240 QCURVE",
"683 356 OFFCURVE",
"683 570 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 48 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 4 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 20 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 39 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
44 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1235;
}
);
leftKerningGroup = c;
note = uni04A9;
unicode = 04A9;
},
{
glyphname = "Hadescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = X;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 983, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1304;
}
);
leftKerningGroup = X;
note = uni04B2;
unicode = 04B2;
},
{
glyphname = "hadescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = x;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 741, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1066;
}
);
leftKerningGroup = x;
note = uni04B3;
unicode = 04B3;
},
{
glyphname = "Tetse-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1493 0 LINE",
"1493 -351 LINE",
"1665 -351 LINE",
"1683 161 LINE",
"1531 161 LINE",
"1531 1456 LINE",
"1338 1456 LINE",
"1338 157 LINE",
"620 157 LINE",
"620 1304 LINE",
"1005 1304 LINE",
"1005 1455 LINE",
"620 1455 LINE",
"620 1456 LINE",
"427 1456 LINE",
"427 1455 LINE",
"52 1455 LINE",
"52 1304 LINE",
"427 1304 LINE",
"427 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1836;
}
);
leftKerningGroup = T;
note = uni04B4;
unicode = 04B4;
},
{
glyphname = "tetse-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1119 0 LINE",
"1119 -321 LINE",
"1284 -321 LINE",
"1302 151 LINE",
"1174 151 LINE",
"1174 1082 LINE",
"988 1082 LINE",
"988 151 LINE",
"490 151 LINE",
"490 931 LINE",
"739 931 LINE",
"739 1082 LINE",
"31 1082 LINE",
"31 931 LINE",
"305 931 LINE",
"305 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1372;
}
);
note = uni04B5;
unicode = 04B5;
},
{
glyphname = "Chedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Che-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 1094, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1468;
}
);
leftKerningGroup = "Che-cy";
note = uni04B6;
unicode = 04B6;
},
{
glyphname = "chedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "che-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 830, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1174;
}
);
leftKerningGroup = "che-cy";
note = uni04B7;
unicode = 04B7;
},
{
glyphname = "Cheverticalstroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"150 985 LINE SMOOTH",
"154 767 OFFCURVE",
"393 550 OFFCURVE",
"641 550 QCURVE",
"641 318 LINE",
"790 318 LINE",
"790 556 LINE",
"917 569 OFFCURVE",
"1031 603 QCURVE",
"1031 0 LINE",
"1224 0 LINE",
"1224 1456 LINE",
"1031 1456 LINE",
"1031 762 LINE",
"911 729 OFFCURVE",
"790 716 QCURVE",
"790 1018 LINE",
"641 1018 LINE",
"641 708 LINE",
"481 708 OFFCURVE",
"344 840 OFFCURVE",
"343 994 QCURVE SMOOTH",
"343 1456 LINE",
"150 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 0 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1391;
}
);
note = uni04B8;
unicode = 04B8;
},
{
glyphname = "cheverticalstroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"799 1082 LINE",
"799 544 LINE",
"730 527 OFFCURVE",
"646 517 QCURVE",
"646 795 LINE",
"496 795 LINE",
"496 515 LINE",
"321 541 OFFCURVE",
"316 752 QCURVE SMOOTH",
"316 1083 LINE",
"131 1083 LINE",
"131 760 LINE SMOOTH",
"133 579 OFFCURVE",
"320 375 OFFCURVE",
"496 362 QCURVE",
"496 229 LINE",
"646 229 LINE",
"646 364 LINE",
"729 373 OFFCURVE",
"799 392 QCURVE",
"799 0 LINE",
"985 0 LINE",
"985 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 21 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
}
);
note = uni04B9;
unicode = 04B9;
},
{
glyphname = "Shha-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"329 692 LINE",
"529 747 OFFCURVE",
"717 747 QCURVE SMOOTH",
"880 747 OFFCURVE",
"1017 613 OFFCURVE",
"1018 461 QCURVE SMOOTH",
"1018 0 LINE",
"1210 0 LINE",
"1210 466 LINE SMOOTH",
"1207 689 OFFCURVE",
"965 905 OFFCURVE",
"717 905 QCURVE SMOOTH",
"514 905 OFFCURVE",
"329 852 QCURVE",
"329 1456 LINE",
"137 1456 LINE",
"137 0 LINE",
"329 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1391;
}
);
note = uni04BA;
unicode = 04BA;
},
{
glyphname = "Cheabkhasian-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1119 -22 OFFCURVE",
"1329 31 OFFCURVE",
"1393 76 QCURVE",
"1346 219 LINE",
"1180 136 OFFCURVE",
"1001 136 QCURVE SMOOTH",
"797 136 OFFCURVE",
"575 383 OFFCURVE",
"575 603 QCURVE SMOOTH",
"575 696 LINE",
"1469 696 LINE",
"1469 804 LINE SMOOTH",
"1469 1126 OFFCURVE",
"1185 1475 OFFCURVE",
"927 1475 QCURVE SMOOTH",
"777 1475 OFFCURVE",
"524 1313 OFFCURVE",
"382 1026 OFFCURVE",
"382 846 QCURVE",
"295 866 OFFCURVE",
"215 991 OFFCURVE",
"215 1081 QCURVE",
"63 1081 LINE",
"63 919 OFFCURVE",
"229 722 OFFCURVE",
"382 703 QCURVE",
"382 612 LINE SMOOTH",
"382 315 OFFCURVE",
"715 -22 OFFCURVE",
"1001 -22 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"575 1056 OFFCURVE",
"769 1315 OFFCURVE",
"927 1315 QCURVE SMOOTH",
"1098 1315 OFFCURVE",
"1277 1086 OFFCURVE",
"1277 869 QCURVE SMOOTH",
"1277 836 LINE",
"575 836 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
23 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 15 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1583;
}
);
note = uni04BC;
unicode = 04BC;
},
{
glyphname = "cheabkhasian-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"973 -20 OFFCURVE",
"1109 189 QCURVE",
"996 277 LINE",
"885 131 OFFCURVE",
"711 131 QCURVE SMOOTH",
"573 131 OFFCURVE",
"394 328 OFFCURVE",
"390 488 QCURVE",
"1123 488 LINE",
"1123 565 LINE SMOOTH",
"1123 824 OFFCURVE",
"889 1102 OFFCURVE",
"678 1102 QCURVE SMOOTH",
"566 1102 OFFCURVE",
"366 992 OFFCURVE",
"234 791 OFFCURVE",
"214 661 QCURVE",
"113 709 OFFCURVE",
"113 856 QCURVE",
"-34 856 LINE",
"-34 722 OFFCURVE",
"85 548 OFFCURVE",
"205 519 QCURVE",
"205 269 OFFCURVE",
"481 -20 OFFCURVE",
"701 -20 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"414 787 OFFCURVE",
"566 950 OFFCURVE",
"678 950 QCURVE SMOOTH",
"794 950 OFFCURVE",
"930 795 OFFCURVE",
"938 654 QCURVE SMOOTH",
"938 640 LINE",
"396 640 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1213;
}
);
note = uni04BD;
unicode = 04BD;
},
{
glyphname = "Kahook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"632 661 LINE SMOOTH",
"831 660 OFFCURVE",
"1030 450 OFFCURVE",
"1032 248 QCURVE SMOOTH",
"1032 47 OFFCURVE",
"888 -146 OFFCURVE",
"744 -146 QCURVE",
"746 -298 LINE",
"976 -298 OFFCURVE",
"1225 -14 OFFCURVE",
"1225 250 QCURVE SMOOTH",
"1225 500 OFFCURVE",
"956 802 OFFCURVE",
"708 824 QCURVE",
"1228 1456 LINE",
"1002 1456 LINE",
"489 831 LINE",
"356 831 LINE",
"356 1456 LINE",
"163 1456 LINE",
"163 0 LINE",
"356 0 LINE",
"356 661 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1289;
}
);
note = uni04C3;
unicode = 04C3;
},
{
glyphname = "kahook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"825 1082 LINE",
"431 624 LINE",
"340 624 LINE",
"340 1082 LINE",
"154 1082 LINE",
"154 0 LINE",
"340 0 LINE",
"340 461 LINE",
"518 461 LINE SMOOTH",
"683 459 OFFCURVE",
"856 313 OFFCURVE",
"856 175 QCURVE SMOOTH",
"856 -55 OFFCURVE",
"608 -112 QCURVE",
"656 -258 LINE",
"768 -239 OFFCURVE",
"940 -115 OFFCURVE",
"1040 82 OFFCURVE",
"1040 175 QCURVE SMOOTH",
"1040 355 OFFCURVE",
"834 581 OFFCURVE",
"639 612 QCURVE",
"1049 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
159 19 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 19 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 19 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 19 207 19 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 19 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 19 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1114;
}
);
note = uni04C4;
unicode = 04C4;
},
{
glyphname = "Eltail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "El-cy";
},
{
name = comma;
transform = "{1, 0, 0, 1, 1140, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1534;
}
);
leftKerningGroup = "Lje-cy";
note = uni04C5;
unicode = 04C5;
},
{
glyphname = "eltail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "el-cy";
},
{
name = comma;
transform = "{1, 0, 0, 1, 899, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1263;
}
);
leftKerningGroup = "el-cy";
note = uni04C6;
unicode = 04C6;
},
{
glyphname = "Enhook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"177 0 LINE",
"370 0 LINE",
"370 641 LINE",
"1086 641 LINE",
"1086 -84 LINE SMOOTH",
"1086 -176 OFFCURVE",
"1014 -279 OFFCURVE",
"949 -279 QCURVE SMOOTH",
"888 -279 OFFCURVE",
"851 -265 QCURVE",
"837 -419 LINE",
"891 -437 OFFCURVE",
"951 -437 QCURVE SMOOTH",
"1107 -437 OFFCURVE",
"1278 -251 OFFCURVE",
"1278 -83 QCURVE SMOOTH",
"1278 1456 LINE",
"1086 1456 LINE",
"1086 798 LINE",
"370 798 LINE",
"370 1456 LINE",
"177 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
31 2 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
111 2 127 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 2 207 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
239 2 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 2 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
79 2 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
175 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 2 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1458;
}
);
note = uni04C7;
unicode = 04C7;
},
{
glyphname = "enhook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"145 0 LINE",
"331 0 LINE",
"331 462 LINE",
"828 462 LINE",
"828 -89 LINE SMOOTH",
"828 -181 OFFCURVE",
"756 -285 OFFCURVE",
"690 -285 QCURVE SMOOTH",
"670 -284 LINE SMOOTH",
"610 -279 OFFCURVE",
"593 -272 QCURVE",
"578 -419 LINE",
"630 -437 OFFCURVE",
"690 -437 QCURVE SMOOTH",
"842 -437 OFFCURVE",
"1013 -259 OFFCURVE",
"1013 -89 QCURVE SMOOTH",
"1013 1082 LINE",
"828 1082 LINE",
"828 613 LINE",
"331 613 LINE",
"331 1082 LINE",
"145 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
111 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 2 207 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 2 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
207 2 223 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 5 values pushed */
159 2 175 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 2 127 2 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
}
);
leftKerningGroup = m;
note = uni04C8;
unicode = 04C8;
},
{
glyphname = "Entail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = comma;
transform = "{1, 0, 0, 1, 1159, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1554;
}
);
note = uni04C9;
unicode = 04C9;
},
{
glyphname = "entail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "en-cy";
},
{
name = comma;
transform = "{1, 0, 0, 1, 896, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1260;
}
);
leftKerningGroup = m;
note = uni04CA;
unicode = 04CA;
},
{
glyphname = "Emtail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = M;
},
{
name = comma;
transform = "{1, 0, 0, 1, 1477, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1871;
}
);
note = uni04CD;
unicode = 04CD;
},
{
glyphname = "emtail-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "em-cy";
},
{
name = comma;
transform = "{1, 0, 0, 1, 1235, -67}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1598;
}
);
leftKerningGroup = m;
note = uni04CE;
unicode = 04CE;
},
{
glyphname = "Schwa-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"408 1476 OFFCURVE",
"250 1388 QCURVE SMOOTH",
"228 1375 LINE",
"275 1232 LINE",
"336 1258 LINE SMOOTH",
"475 1316 OFFCURVE",
"640 1316 QCURVE SMOOTH",
"861 1316 OFFCURVE",
"1105 1032 OFFCURVE",
"1105 774 QCURVE SMOOTH",
"1105 767 LINE",
"93 767 LINE",
"93 650 LINE SMOOTH",
"93 325 OFFCURVE",
"412 -20 OFFCURVE",
"697 -20 QCURVE SMOOTH",
"864 -20 OFFCURVE",
"1142 162 OFFCURVE",
"1298 483 OFFCURVE",
"1298 680 QCURVE SMOOTH",
"1298 764 LINE SMOOTH",
"1298 1099 OFFCURVE",
"942 1476 OFFCURVE",
"640 1476 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"286 618 LINE",
"1103 618 LINE",
"1088 399 OFFCURVE",
"866 138 OFFCURVE",
"697 138 QCURVE SMOOTH",
"497 138 OFFCURVE",
"286 366 OFFCURVE",
"286 584 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1415;
}
);
note = uni04D8;
unicode = 04D8;
},
{
glyphname = "Dzeabkhasian-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"410 701 LINE",
"551 701 LINE SMOOTH",
"709 701 OFFCURVE",
"875 559 OFFCURVE",
"875 402 QCURVE SMOOTH",
"875 282 OFFCURVE",
"712 136 OFFCURVE",
"575 136 QCURVE SMOOTH",
"452 136 OFFCURVE",
"296 290 OFFCURVE",
"296 404 QCURVE",
"104 404 LINE",
"104 274 OFFCURVE",
"222 84 OFFCURVE",
"441 -21 OFFCURVE",
"575 -21 QCURVE SMOOTH",
"799 -21 OFFCURVE",
"1068 211 OFFCURVE",
"1068 406 QCURVE SMOOTH",
"1068 604 OFFCURVE",
"835 835 OFFCURVE",
"618 849 QCURVE",
"1023 1331 LINE",
"1022 1456 LINE",
"147 1456 LINE",
"147 1298 LINE",
"797 1298 LINE",
"410 852 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
5 2 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1192;
}
);
note = uni04E0;
unicode = 04E0;
},
{
glyphname = "dzeabkhasian-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"408 325 LINE",
"568 325 LINE SMOOTH",
"879 317 OFFCURVE",
"879 27 QCURVE SMOOTH",
"879 -94 OFFCURVE",
"715 -243 OFFCURVE",
"574 -243 QCURVE SMOOTH",
"449 -243 OFFCURVE",
"291 -84 OFFCURVE",
"291 29 QCURVE",
"105 29 LINE",
"105 -102 OFFCURVE",
"227 -293 OFFCURVE",
"442 -395 OFFCURVE",
"574 -395 QCURVE SMOOTH",
"796 -395 OFFCURVE",
"1064 -164 OFFCURVE",
"1064 31 QCURVE SMOOTH",
"1064 228 OFFCURVE",
"832 453 OFFCURVE",
"620 469 QCURVE",
"1018 964 LINE",
"1017 1082 LINE",
"148 1082 LINE",
"148 929 LINE",
"780 929 LINE",
"408 476 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
5 2 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1192;
}
);
note = uni04E1;
unicode = 04E1;
},
{
glyphname = "Gestrokehook-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Gamma;
transform = "{1, 0, 0, 1, 68, 0}";
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, -85, 64}";
},
{
name = glyph00596;
transform = "{1, 0, 0, 1, 240, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1207;
}
);
note = uni04FA;
unicode = 04FA;
},
{
glyphname = "gestrokehook-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ge-cy";
transform = "{1, 0, 0, 1, 79, 0}";
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, -84, -114}";
},
{
name = glyph00596;
transform = "{1, 0, 0, 1, 225, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 939;
}
);
leftKerningGroup = m;
note = uni04FB;
unicode = 04FB;
},
{
glyphname = "Hahook-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = X;
},
{
name = glyph00596;
transform = "{1, 0, 0, 1, 935, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1326;
}
);
leftKerningGroup = X;
note = uni04FC;
unicode = 04FC;
},
{
glyphname = "hahook-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = x;
},
{
name = glyph00596;
transform = "{1, 0, 0, 1, 693, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1088;
}
);
leftKerningGroup = x;
note = uni04FD;
unicode = 04FD;
},
{
glyphname = "Komide-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"342 879 OFFCURVE",
"87 644 OFFCURVE",
"87 445 QCURVE SMOOTH",
"87 242 OFFCURVE",
"352 0 OFFCURVE",
"580 0 QCURVE SMOOTH",
"1125 0 LINE",
"1125 1456 LINE",
"931 1456 LINE",
"931 883 LINE",
"566 883 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 575 OFFCURVE",
"440 725 OFFCURVE",
"580 725 QCURVE SMOOTH",
"931 725 LINE",
"931 157 LINE",
"576 157 LINE SMOOTH",
"438 158 OFFCURVE",
"279 317 OFFCURVE",
"279 447 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1270;
}
);
note = uni0500;
unicode = 0500;
},
{
glyphname = "Komidje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1403 0 OFFCURVE",
"1632 232 OFFCURVE",
"1636 427 QCURVE SMOOTH",
"1639 537 OFFCURVE",
"1592 688 QCURVE SMOOTH",
"1570 756 LINE",
"1384 756 LINE",
"1448 589 OFFCURVE",
"1444 427 QCURVE SMOOTH",
"1441 304 OFFCURVE",
"1327 158 OFFCURVE",
"1216 156 QCURVE SMOOTH",
"1128 155 LINE",
"1128 1456 LINE",
"935 1456 LINE",
"935 883 LINE",
"573 883 LINE SMOOTH",
"346 880 OFFCURVE",
"89 643 OFFCURVE",
"89 445 QCURVE SMOOTH",
"89 244 OFFCURVE",
"354 0 OFFCURVE",
"583 0 QCURVE SMOOTH",
"1208 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"435 161 OFFCURVE",
"283 320 OFFCURVE",
"283 574 OFFCURVE",
"441 725 OFFCURVE",
"583 725 QCURVE SMOOTH",
"935 725 LINE",
"935 157 LINE",
"568 157 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
16 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1684;
}
);
leftKerningGroup = c;
note = uni0502;
unicode = 0502;
},
{
glyphname = "komidje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"100 262 OFFCURVE",
"328 -21 OFFCURVE",
"520 -21 QCURVE SMOOTH",
"739 -21 OFFCURVE",
"847 161 QCURVE",
"925 -25 OFFCURVE",
"1167 -21 QCURVE SMOOTH",
"1304 -21 OFFCURVE",
"1521 111 OFFCURVE",
"1642 360 OFFCURVE",
"1644 529 QCURVE SMOOTH",
"1646 631 OFFCURVE",
"1605 830 OFFCURVE",
"1577 932 QCURVE",
"1398 931 LINE",
"1463 715 OFFCURVE",
"1459 529 QCURVE SMOOTH",
"1455 340 OFFCURVE",
"1304 132 OFFCURVE",
"1167 130 QCURVE SMOOTH",
"1089 130 OFFCURVE",
"994 250 OFFCURVE",
"996 345 QCURVE SMOOTH",
"996 1560 LINE",
"811 1560 LINE",
"811 971 LINE",
"705 1102 OFFCURVE",
"522 1102 QCURVE SMOOTH",
"326 1102 OFFCURVE",
"100 785 OFFCURVE",
"100 521 QCURVE SMOOTH",
"100 506 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"285 722 OFFCURVE",
"433 945 OFFCURVE",
"568 945 QCURVE SMOOTH",
"729 945 OFFCURVE",
"811 811 QCURVE",
"811 345 LINE",
"816 283 LINE",
"733 136 OFFCURVE",
"566 136 QCURVE SMOOTH",
"430 136 OFFCURVE",
"285 327 OFFCURVE",
"285 500 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
26 44 45 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 3 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 3 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1764;
}
);
leftKerningGroup = c;
note = uni0503;
unicode = 0503;
},
{
glyphname = "Komizje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"568 632 OFFCURVE",
"703 488 OFFCURVE",
"703 368 QCURVE SMOOTH",
"703 304 LINE",
"718 -29 OFFCURVE",
"1041 -21 QCURVE SMOOTH",
"1240 -21 OFFCURVE",
"1486 276 OFFCURVE",
"1490 529 QCURVE SMOOTH",
"1493 657 OFFCURVE",
"1445 844 QCURVE SMOOTH",
"1422 932 LINE",
"1236 932 LINE",
"1301 716 OFFCURVE",
"1297 529 QCURVE SMOOTH",
"1293 344 OFFCURVE",
"1159 138 OFFCURVE",
"1043 136 QCURVE SMOOTH",
"978 136 OFFCURVE",
"895 227 OFFCURVE",
"895 306 QCURVE SMOOTH",
"895 386 LINE SMOOTH",
"890 646 OFFCURVE",
"671 715 QCURVE",
"908 813 OFFCURVE",
"908 1045 QCURVE SMOOTH",
"908 1246 OFFCURVE",
"656 1455 OFFCURVE",
"417 1456 QCURVE SMOOTH",
"54 1456 LINE",
"54 1298 LINE",
"406 1298 LINE SMOOTH",
"715 1298 OFFCURVE",
"715 1047 QCURVE SMOOTH",
"715 916 OFFCURVE",
"568 793 OFFCURVE",
"409 791 QCURVE SMOOTH",
"254 791 LINE",
"254 633 LINE",
"451 633 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 40 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 40 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 33 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1622;
}
);
note = uni0504;
unicode = 0504;
},
{
glyphname = "komizje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"739 477 OFFCURVE",
"557 529 QCURVE",
"745 603 OFFCURVE",
"745 760 QCURVE SMOOTH",
"745 912 OFFCURVE",
"525 1079 OFFCURVE",
"329 1082 QCURVE SMOOTH",
"49 1082 LINE",
"55 932 LINE",
"316 932 LINE SMOOTH",
"433 932 OFFCURVE",
"558 839 OFFCURVE",
"558 754 QCURVE SMOOTH",
"558 680 OFFCURVE",
"448 593 OFFCURVE",
"326 592 QCURVE SMOOTH",
"134 592 LINE",
"136 442 LINE",
"341 442 LINE SMOOTH",
"557 442 OFFCURVE",
"557 285 QCURVE SMOOTH",
"557 214 LINE",
"564 83 OFFCURVE",
"701 -29 OFFCURVE",
"836 -26 QCURVE SMOOTH",
"1020 -26 OFFCURVE",
"1251 214 OFFCURVE",
"1255 419 QCURVE SMOOTH",
"1256 476 OFFCURVE",
"1232 604 OFFCURVE",
"1187 738 QCURVE",
"1007 738 LINE",
"1073 572 OFFCURVE",
"1069 419 QCURVE SMOOTH",
"1066 282 OFFCURVE",
"948 127 OFFCURVE",
"836 125 QCURVE SMOOTH",
"741 125 OFFCURVE",
"743 213 QCURVE SMOOTH",
"743 299 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 40 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
31 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 14 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
23 40 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
37 20 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1323;
}
);
note = uni0505;
unicode = 0505;
},
{
glyphname = "Komidzje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"512 633 OFFCURVE",
"658 492 OFFCURVE",
"658 366 QCURVE SMOOTH",
"658 223 LINE SMOOTH",
"661 52 OFFCURVE",
"721 0 QCURVE",
"828 0 LINE",
"814 -110 OFFCURVE",
"733 -225 QCURVE",
"839 -297 LINE",
"916 -233 OFFCURVE",
"1013 -33 OFFCURVE",
"1013 64 QCURVE SMOOTH",
"1013 212 LINE",
"844 212 LINE",
"844 381 LINE SMOOTH",
"840 645 OFFCURVE",
"618 715 QCURVE",
"847 815 OFFCURVE",
"847 1041 QCURVE SMOOTH",
"847 1242 OFFCURVE",
"603 1452 OFFCURVE",
"371 1455 QCURVE SMOOTH",
"82 1455 LINE",
"82 1304 LINE",
"353 1304 LINE SMOOTH",
"663 1304 OFFCURVE",
"663 1043 QCURVE SMOOTH",
"663 910 OFFCURVE",
"508 785 OFFCURVE",
"344 784 QCURVE SMOOTH",
"175 784 LINE",
"175 633 LINE",
"393 633 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1097;
}
);
note = uni0506;
unicode = 0506;
},
{
glyphname = "komidzje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"646 440 OFFCURVE",
"646 260 QCURVE SMOOTH",
"646 166 LINE SMOOTH",
"648 33 OFFCURVE",
"699 0 QCURVE",
"802 0 LINE",
"789 -125 OFFCURVE",
"705 -241 QCURVE",
"810 -313 LINE",
"887 -251 OFFCURVE",
"985 -49 OFFCURVE",
"985 48 QCURVE SMOOTH",
"985 196 LINE",
"831 196 LINE",
"831 272 LINE SMOOTH",
"830 474 OFFCURVE",
"641 527 QCURVE",
"831 600 OFFCURVE",
"831 761 QCURVE SMOOTH",
"831 893 OFFCURVE",
"745 976 QCURVE SMOOTH",
"637 1079 OFFCURVE",
"416 1082 QCURVE SMOOTH",
"121 1082 LINE",
"121 932 LINE",
"400 932 LINE SMOOTH",
"645 932 OFFCURVE",
"645 754 QCURVE SMOOTH",
"645 593 OFFCURVE",
"412 591 QCURVE SMOOTH",
"193 591 LINE",
"194 440 LINE",
"428 440 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 33 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 33 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1031;
}
);
note = uni0507;
unicode = 0507;
},
{
glyphname = "Komilje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1063 165 OFFCURVE",
"1246 -21 OFFCURVE",
"1425 -21 QCURVE SMOOTH",
"1471 -19 LINE",
"1666 -1 OFFCURVE",
"1899 293 OFFCURVE",
"1902 529 QCURVE SMOOTH",
"1904 631 OFFCURVE",
"1863 830 OFFCURVE",
"1835 932 QCURVE",
"1649 931 LINE",
"1712 721 OFFCURVE",
"1710 529 QCURVE SMOOTH",
"1706 341 OFFCURVE",
"1555 136 OFFCURVE",
"1425 136 QCURVE SMOOTH",
"1346 136 OFFCURVE",
"1257 252 OFFCURVE",
"1257 348 QCURVE SMOOTH",
"1257 1456 LINE",
"394 1456 LINE",
"364 750 LINE SMOOTH",
"353 507 OFFCURVE",
"301 273 OFFCURVE",
"201 166 OFFCURVE",
"108 159 QCURVE SMOOTH",
"68 157 LINE",
"68 0 LINE",
"131 0 LINE SMOOTH",
"275 2 OFFCURVE",
"447 139 OFFCURVE",
"536 431 OFFCURVE",
"551 721 QCURVE SMOOTH",
"577 1298 LINE",
"1063 1298 LINE",
"1063 345 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 14 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1985;
}
);
leftKerningGroup = "Lje-cy";
note = uni0508;
unicode = 0508;
},
{
glyphname = "komilje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"818 163 OFFCURVE",
"997 -21 OFFCURVE",
"1171 -21 QCURVE SMOOTH",
"1291 -21 OFFCURVE",
"1481 100 OFFCURVE",
"1589 330 OFFCURVE",
"1591 484 QCURVE SMOOTH",
"1594 608 OFFCURVE",
"1546 785 QCURVE SMOOTH",
"1524 865 LINE",
"1345 865 LINE",
"1410 662 OFFCURVE",
"1406 484 QCURVE SMOOTH",
"1402 313 OFFCURVE",
"1279 130 OFFCURVE",
"1171 130 QCURVE SMOOTH",
"1092 130 OFFCURVE",
"1002 251 OFFCURVE",
"1002 347 QCURVE SMOOTH",
"1002 1082 LINE",
"315 1082 LINE",
"292 555 LINE SMOOTH",
"279 344 OFFCURVE",
"202 177 OFFCURVE",
"117 167 QCURVE SMOOTH",
"63 163 LINE",
"63 0 LINE",
"128 0 LINE SMOOTH",
"293 2 OFFCURVE",
"449 230 OFFCURVE",
"469 507 QCURVE SMOOTH",
"492 929 LINE",
"817 929 LINE",
"817 340 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
30 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 30 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1653;
}
);
note = uni0509;
unicode = 0509;
},
{
glyphname = "Kominje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1064 798 LINE",
"362 798 LINE",
"362 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"362 0 LINE",
"362 641 LINE",
"1064 641 LINE",
"1064 346 LINE",
"1072 159 OFFCURVE",
"1253 -25 OFFCURVE",
"1424 -21 QCURVE SMOOTH",
"1562 -21 OFFCURVE",
"1778 110 OFFCURVE",
"1901 361 OFFCURVE",
"1903 529 QCURVE SMOOTH",
"1905 632 OFFCURVE",
"1862 834 OFFCURVE",
"1835 932 QCURVE",
"1648 931 LINE",
"1714 712 OFFCURVE",
"1710 529 QCURVE SMOOTH",
"1706 343 OFFCURVE",
"1558 138 OFFCURVE",
"1424 136 QCURVE SMOOTH",
"1350 136 OFFCURVE",
"1257 247 OFFCURVE",
"1257 348 QCURVE SMOOTH",
"1257 1456 LINE",
"1064 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
239 28 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
95 28 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 28 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
31 28 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
111 28 127 28 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
191 28 207 28 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 28 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
79 28 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 28 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
175 28 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 28 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 28 31 28 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
63 28 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2043;
}
);
note = uni050A;
unicode = 050A;
},
{
glyphname = "kominje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"843 158 OFFCURVE",
"1022 -25 OFFCURVE",
"1189 -21 QCURVE SMOOTH",
"1376 -21 OFFCURVE",
"1606 250 OFFCURVE",
"1610 484 QCURVE SMOOTH",
"1613 605 OFFCURVE",
"1565 782 QCURVE SMOOTH",
"1542 865 LINE",
"1364 865 LINE",
"1429 656 OFFCURVE",
"1425 484 QCURVE SMOOTH",
"1421 313 OFFCURVE",
"1297 132 OFFCURVE",
"1189 130 QCURVE SMOOTH",
"1112 130 OFFCURVE",
"1020 247 OFFCURVE",
"1020 347 QCURVE SMOOTH",
"1020 1082 LINE",
"835 1082 LINE",
"835 612 LINE",
"329 612 LINE",
"329 1082 LINE",
"144 1082 LINE",
"144 0 LINE",
"329 0 LINE",
"329 461 LINE",
"835 461 LINE",
"835 345 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
27 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
111 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 7 207 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 7 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
207 7 223 7 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
15 7 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 5 values pushed */
159 7 175 7 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 7 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 7 127 7 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 25 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1697;
}
);
note = uni050B;
unicode = 050B;
},
{
glyphname = "Komisje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"836 -21 OFFCURVE",
"1058 88 OFFCURVE",
"1181 289 OFFCURVE",
"1183 425 QCURVE SMOOTH",
"1184 516 OFFCURVE",
"1165 607 QCURVE SMOOTH",
"1127 786 LINE",
"941 786 LINE",
"994 579 OFFCURVE",
"991 425 QCURVE SMOOTH",
"988 291 OFFCURVE",
"838 138 OFFCURVE",
"697 136 QCURVE SMOOTH",
"584 136 OFFCURVE",
"408 253 OFFCURVE",
"310 466 OFFCURVE",
"310 597 QCURVE SMOOTH",
"310 851 LINE SMOOTH",
"310 1061 OFFCURVE",
"525 1319 OFFCURVE",
"697 1319 QCURVE SMOOTH",
"859 1319 OFFCURVE",
"993 1251 QCURVE",
"1052 1389 LINE",
"917 1477 OFFCURVE",
"697 1477 QCURVE SMOOTH",
"532 1477 OFFCURVE",
"266 1320 OFFCURVE",
"118 1034 OFFCURVE",
"118 859 QCURVE SMOOTH",
"118 587 LINE SMOOTH",
"120 414 OFFCURVE",
"269 134 OFFCURVE",
"533 -21 OFFCURVE",
"697 -21 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 0 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1270;
}
);
leftKerningGroup = C;
note = uni050C;
unicode = 050C;
},
{
glyphname = "komisje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"452 130 OFFCURVE",
"286 349 OFFCURVE",
"286 520 QCURVE SMOOTH",
"286 551 LINE SMOOTH",
"286 730 OFFCURVE",
"441 950 OFFCURVE",
"572 950 QCURVE SMOOTH",
"710 950 OFFCURVE",
"809 892 QCURVE",
"853 1036 LINE",
"757 1102 OFFCURVE",
"572 1102 QCURVE SMOOTH",
"433 1102 OFFCURVE",
"219 962 OFFCURVE",
"101 713 OFFCURVE",
"101 562 QCURVE SMOOTH",
"101 532 LINE SMOOTH",
"101 285 OFFCURVE",
"373 -21 OFFCURVE",
"593 -21 QCURVE SMOOTH",
"766 -21 OFFCURVE",
"962 148 OFFCURVE",
"966 301 QCURVE SMOOTH",
"967 387 OFFCURVE",
"939 537 QCURVE",
"761 537 LINE",
"781 423 OFFCURVE",
"781 301 QCURVE SMOOTH",
"779 212 OFFCURVE",
"689 132 OFFCURVE",
"593 130 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 11 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1053;
}
);
leftKerningGroup = c;
note = uni050D;
unicode = 050D;
},
{
glyphname = "Komitje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"518 158 OFFCURVE",
"701 -25 OFFCURVE",
"871 -21 QCURVE SMOOTH",
"1008 -21 OFFCURVE",
"1225 111 OFFCURVE",
"1346 360 OFFCURVE",
"1348 529 QCURVE SMOOTH",
"1351 632 OFFCURVE",
"1308 834 OFFCURVE",
"1281 932 QCURVE",
"1095 931 LINE",
"1161 712 OFFCURVE",
"1153 346 OFFCURVE",
"1005 138 OFFCURVE",
"871 136 QCURVE SMOOTH",
"795 136 OFFCURVE",
"703 250 OFFCURVE",
"703 346 QCURVE SMOOTH",
"703 1298 LINE",
"1187 1298 LINE",
"1187 1456 LINE",
"35 1456 LINE",
"35 1298 LINE",
"510 1298 LINE",
"510 346 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
14 2 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1453;
}
);
note = uni050E;
unicode = 050E;
},
{
glyphname = "komitje-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"436 160 OFFCURVE",
"615 -25 OFFCURVE",
"785 -21 QCURVE SMOOTH",
"970 -21 OFFCURVE",
"1202 218 OFFCURVE",
"1206 426 QCURVE SMOOTH",
"1207 486 OFFCURVE",
"1180 626 OFFCURVE",
"1138 751 QCURVE",
"960 751 LINE",
"1024 577 OFFCURVE",
"1020 426 QCURVE SMOOTH",
"1017 289 OFFCURVE",
"898 132 OFFCURVE",
"785 130 QCURVE SMOOTH",
"708 130 OFFCURVE",
"614 246 OFFCURVE",
"614 345 QCURVE SMOOTH",
"614 932 LINE",
"977 932 LINE",
"977 1082 LINE",
"70 1082 LINE",
"70 932 LINE",
"428 932 LINE",
"428 345 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
22 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
14 21 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1312;
}
);
note = uni050F;
unicode = 050F;
},
{
glyphname = "Reversedze-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"344 535 OFFCURVE",
"525 661 OFFCURVE",
"702 663 QCURVE SMOOTH",
"898 663 LINE",
"898 821 LINE",
"702 821 LINE SMOOTH",
"539 823 OFFCURVE",
"366 948 OFFCURVE",
"366 1065 QCURVE SMOOTH",
"366 1183 OFFCURVE",
"560 1319 OFFCURVE",
"727 1319 QCURVE SMOOTH",
"873 1319 OFFCURVE",
"1066 1176 OFFCURVE",
"1066 1073 QCURVE",
"1259 1073 LINE",
"1259 1190 OFFCURVE",
"1119 1376 OFFCURVE",
"874 1477 OFFCURVE",
"727 1477 QCURVE SMOOTH",
"465 1477 OFFCURVE",
"172 1258 OFFCURVE",
"172 1062 QCURVE SMOOTH",
"172 961 OFFCURVE",
"306 795 OFFCURVE",
"426 747 QCURVE",
"150 661 OFFCURVE",
"150 406 QCURVE SMOOTH",
"150 209 OFFCURVE",
"466 -20 OFFCURVE",
"727 -20 QCURVE SMOOTH",
"884 -20 OFFCURVE",
"1138 83 OFFCURVE",
"1279 273 OFFCURVE",
"1279 404 QCURVE",
"1086 404 LINE",
"1086 288 OFFCURVE",
"882 136 OFFCURVE",
"727 136 QCURVE SMOOTH",
"551 136 OFFCURVE",
"344 282 OFFCURVE",
"344 402 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
36 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
37 11 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 37 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 37 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 38 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1380;
}
);
note = uni0510;
unicode = 0510;
},
{
glyphname = "Elhook-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "El-cy";
},
{
name = glyph00596;
transform = "{1, 0, 0, 1, 1093, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1538;
}
);
leftKerningGroup = "Lje-cy";
note = uni0512;
unicode = 0512;
},
{
glyphname = "elhook-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "el-cy";
},
{
name = glyph00596;
transform = "{1, 0, 0, 1, 852, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1266;
}
);
leftKerningGroup = "el-cy";
note = uni0513;
unicode = 0513;
},
{
glyphname = glyph00369;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"401 1156 LINE",
"490 1156 LINE",
"713 1473 LINE",
"713 1494 LINE",
"517 1494 LINE",
"401 1172 LINE"
);
},
{
closed = 1;
nodes = (
"111 1231 OFFCURVE",
"289 1136 QCURVE",
"362 1195 LINE",
"282 1280 OFFCURVE",
"279 1403 QCURVE SMOOTH",
"279 1494 LINE",
"111 1494 LINE",
"111 1418 LINE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 800;
}
);
note = glyph00369;
},
{
glyphname = enquad;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1044;
}
);
note = uni2000;
unicode = 2000;
},
{
glyphname = emquad;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2089;
}
);
note = uni2001;
unicode = 2001;
},
{
glyphname = enspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1044;
}
);
note = uni2002;
unicode = 2002;
},
{
glyphname = emspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2089;
}
);
note = uni2003;
unicode = 2003;
},
{
glyphname = threeperemspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 697;
}
);
note = uni2004;
unicode = 2004;
},
{
glyphname = fourperemspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 522;
}
);
note = uni2005;
unicode = 2005;
},
{
glyphname = sixperemspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 348;
}
);
note = uni2006;
unicode = 2006;
},
{
glyphname = figurespace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = uni2007;
unicode = 2007;
},
{
glyphname = punctuationspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 560;
}
);
note = uni2008;
unicode = 2008;
},
{
glyphname = thinspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 418;
}
);
note = uni2009;
unicode = 2009;
},
{
glyphname = thinspace.locl;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 256;
}
);
note = glyph00380;
},
{
glyphname = hairspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 209;
}
);
note = uni200A;
unicode = 200A;
},
{
glyphname = zerowidthspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
}
);
note = uni200B;
unicode = 200B;
},
{
glyphname = hyphentwo;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 564;
}
);
note = uni2010;
unicode = 2010;
},
{
glyphname = nonbreakinghyphen;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 564;
}
);
note = uni2011;
unicode = 2011;
},
{
glyphname = endash;
layers = (
{
components = (
{
name = minus;
transform = "{1.2, 0, 0, 1, -39, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1344;
}
);
leftKerningGroup = hyphen;
note = uni2013;
unicode = 2013;
},
{
glyphname = emdash;
layers = (
{
components = (
{
name = minus;
transform = "{1.6, 0, 0, 1, -124, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1599;
}
);
leftKerningGroup = hyphen;
note = uni2014;
unicode = 2014;
},
{
glyphname = underscoredbl;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"929 -254 LINE",
"13 -254 LINE",
"13 -405 LINE",
"929 -405 LINE"
);
},
{
closed = 1;
nodes = (
"929 -151 LINE",
"929 0 LINE",
"13 0 LINE",
"13 -151 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 3 values pushed */
5 2 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 933;
}
);
note = uni2017;
unicode = 2017;
},
{
glyphname = quoteleft;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"193 1491 OFFCURVE",
"96 1291 OFFCURVE",
"96 1189 QCURVE SMOOTH",
"96 1073 LINE",
"280 1073 LINE",
"280 1209 LINE SMOOTH",
"283 1356 OFFCURVE",
"376 1483 QCURVE",
"270 1555 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 9 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 409;
}
);
leftKerningGroup = quotedbl;
note = uni2018;
rightKerningGroup = quotedbl;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"229 1107 OFFCURVE",
"326 1306 OFFCURVE",
"327 1406 QCURVE SMOOTH",
"327 1536 LINE",
"144 1536 LINE",
"144 1392 LINE SMOOTH",
"141 1248 OFFCURVE",
"48 1118 QCURVE",
"153 1046 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 409;
}
);
leftKerningGroup = quotedbl;
note = uni2019;
rightKerningGroup = quotedbl;
unicode = 2019;
},
{
glyphname = quotesinglbase;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"216 -222 OFFCURVE",
"315 -20 OFFCURVE",
"315 81 QCURVE SMOOTH",
"315 181 LINE",
"130 181 LINE",
"130 63 LINE SMOOTH",
"127 -83 OFFCURVE",
"36 -210 QCURVE",
"141 -283 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 407;
}
);
leftKerningGroup = comma;
note = uni201A;
rightKerningGroup = comma;
unicode = 201A;
},
{
glyphname = quotereversed;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"79 1536 LINE",
"79 1401 LINE SMOOTH",
"81 1304 OFFCURVE",
"176 1110 OFFCURVE",
"253 1046 QCURVE",
"359 1118 LINE",
"266 1245 OFFCURVE",
"262 1389 QCURVE SMOOTH",
"262 1536 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 409;
}
);
leftKerningGroup = quotedbl;
note = uni201B;
rightKerningGroup = quotedbl;
unicode = 201B;
},
{
glyphname = quotedblleft;
layers = (
{
components = (
{
name = quoteleft;
transform = "{1, 0, 0, 1, 8, 0}";
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 724;
}
);
leftKerningGroup = quotedbl;
note = uni201C;
rightKerningGroup = quotedbl;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, 12, 0}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 319, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 731;
}
);
leftKerningGroup = quotedbl;
note = uni201D;
rightKerningGroup = quotedbl;
unicode = 201D;
},
{
glyphname = quotedblbase;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"216 -237 OFFCURVE",
"315 -26 OFFCURVE",
"315 82 QCURVE SMOOTH",
"315 246 LINE",
"130 246 LINE",
"130 61 LINE SMOOTH",
"127 -92 OFFCURVE",
"36 -229 QCURVE",
"141 -301 LINE"
);
},
{
closed = 1;
nodes = (
"437 -301 LINE",
"515 -234 OFFCURVE",
"612 -25 OFFCURVE",
"612 82 QCURVE SMOOTH",
"612 246 LINE",
"426 246 LINE",
"426 61 LINE SMOOTH",
"423 -92 OFFCURVE",
"332 -229 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 705;
}
);
leftKerningGroup = comma;
note = uni201E;
rightKerningGroup = comma;
unicode = 201E;
},
{
glyphname = dagger;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1060 1082 LINE",
"656 1082 LINE",
"656 1456 LINE",
"470 1456 LINE",
"470 1082 LINE",
"70 1082 LINE",
"70 929 LINE",
"470 929 LINE",
"470 0 LINE",
"656 0 LINE",
"656 929 LINE",
"1060 929 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
}
);
note = uni2020;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1076 151 LINE",
"670 151 LINE",
"670 929 LINE",
"1076 929 LINE",
"1076 1082 LINE",
"670 1082 LINE",
"670 1456 LINE",
"484 1456 LINE",
"484 1082 LINE",
"87 1082 LINE",
"87 929 LINE",
"484 929 LINE",
"484 151 LINE",
"87 151 LINE",
"87 0 LINE",
"484 0 LINE",
"484 -416 LINE",
"670 -416 LINE",
"670 0 LINE",
"1076 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1167;
}
);
note = uni2021;
unicode = 2021;
},
{
glyphname = bullet;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 734 LINE SMOOTH",
"138 646 OFFCURVE",
"249 535 OFFCURVE",
"342 535 QCURVE SMOOTH",
"436 535 OFFCURVE",
"546 645 OFFCURVE",
"546 732 QCURVE SMOOTH",
"546 769 LINE SMOOTH",
"546 862 OFFCURVE",
"432 971 OFFCURVE",
"341 971 QCURVE SMOOTH",
"249 971 OFFCURVE",
"138 859 OFFCURVE",
"138 772 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 690;
}
);
note = uni2022;
unicode = 2022;
},
{
glyphname = twodotenleader;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 4, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 441, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 964;
}
);
leftKerningGroup = comma;
note = uni2025;
rightKerningGroup = comma;
unicode = 2025;
},
{
glyphname = ellipsis;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 4, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 441, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 856, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1370;
}
);
leftKerningGroup = comma;
note = uni2026;
rightKerningGroup = comma;
unicode = 2026;
},
{
glyphname = hyphenationpoint;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"82 574 OFFCURVE",
"136 514 OFFCURVE",
"190 514 QCURVE SMOOTH",
"244 514 OFFCURVE",
"300 574 OFFCURVE",
"300 619 QCURVE SMOOTH",
"300 664 OFFCURVE",
"244 725 OFFCURVE",
"190 725 QCURVE SMOOTH",
"136 725 OFFCURVE",
"82 664 OFFCURVE",
"82 619 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 12 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = uni2027;
unicode = 2027;
},
{
glyphname = perthousand;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"823 285 LINE SMOOTH",
"823 146 OFFCURVE",
"993 -21 OFFCURVE",
"1123 -21 QCURVE SMOOTH",
"1274 -21 OFFCURVE",
"1350 99 QCURVE",
"1429 -21 OFFCURVE",
"1582 -21 QCURVE SMOOTH",
"1712 -21 OFFCURVE",
"1879 148 OFFCURVE",
"1879 279 QCURVE SMOOTH",
"1879 350 LINE SMOOTH",
"1879 489 OFFCURVE",
"1711 657 OFFCURVE",
"1580 657 QCURVE SMOOTH",
"1429 657 OFFCURVE",
"1350 536 QCURVE",
"1273 657 OFFCURVE",
"1121 657 QCURVE SMOOTH",
"990 657 OFFCURVE",
"823 488 OFFCURVE",
"823 357 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"68 967 OFFCURVE",
"238 800 OFFCURVE",
"368 800 QCURVE SMOOTH",
"500 800 OFFCURVE",
"665 970 OFFCURVE",
"665 1099 QCURVE SMOOTH",
"665 1171 LINE SMOOTH",
"665 1307 OFFCURVE",
"498 1477 OFFCURVE",
"366 1477 QCURVE SMOOTH",
"235 1477 OFFCURVE",
"68 1307 OFFCURVE",
"68 1176 QCURVE SMOOTH",
"68 1106 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"206 1172 LINE SMOOTH",
"206 1255 OFFCURVE",
"294 1356 OFFCURVE",
"366 1356 QCURVE SMOOTH",
"440 1356 OFFCURVE",
"526 1254 OFFCURVE",
"526 1176 QCURVE SMOOTH",
"526 1103 LINE SMOOTH",
"526 1018 OFFCURVE",
"439 920 OFFCURVE",
"368 920 QCURVE SMOOTH",
"294 920 OFFCURVE",
"206 1021 OFFCURVE",
"206 1099 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"429 110 LINE",
"1140 1248 LINE",
"1036 1314 LINE",
"325 176 LINE"
);
},
{
closed = 1;
nodes = (
"961 353 LINE SMOOTH",
"961 437 OFFCURVE",
"1050 536 OFFCURVE",
"1121 536 QCURVE SMOOTH",
"1194 536 OFFCURVE",
"1281 436 OFFCURVE",
"1281 357 QCURVE SMOOTH",
"1281 283 LINE SMOOTH",
"1281 198 OFFCURVE",
"1195 99 OFFCURVE",
"1123 99 QCURVE SMOOTH",
"1049 99 OFFCURVE",
"961 200 OFFCURVE",
"961 279 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1420 353 LINE SMOOTH",
"1420 436 OFFCURVE",
"1507 536 OFFCURVE",
"1579 536 QCURVE SMOOTH",
"1652 536 OFFCURVE",
"1739 436 OFFCURVE",
"1739 357 QCURVE SMOOTH",
"1739 283 LINE SMOOTH",
"1739 201 OFFCURVE",
"1653 99 OFFCURVE",
"1581 99 QCURVE SMOOTH",
"1508 99 OFFCURVE",
"1420 200 OFFCURVE",
"1420 279 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 82 83 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
36 18 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
38 25 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
43 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
50 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
71 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
78 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1962;
}
);
note = uni2030;
unicode = 2030;
},
{
glyphname = guilsinglleft;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"544 949 LINE",
"403 949 LINE",
"108 560 LINE",
"108 541 LINE",
"403 153 LINE",
"544 153 LINE",
"286 550 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 7 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 614;
}
);
note = uni2039;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"89 949 LINE",
"347 550 LINE",
"89 152 LINE",
"231 152 LINE",
"526 541 LINE",
"526 560 LINE",
"231 949 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
3 7 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 614;
}
);
note = uni203A;
unicode = 203A;
},
{
glyphname = fraction;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"874 1248 LINE",
"770 1314 LINE",
"59 176 LINE",
"163 110 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 931;
}
);
note = uni2044;
unicode = 2044;
},
{
glyphname = foursuperior;
layers = (
{
components = (
{
name = four.dnom;
transform = "{1, 0, 0, 1, 0, 667}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = uni2074;
unicode = 2074;
},
{
glyphname = nmod;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"122 1451 LINE",
"122 651 LINE",
"292 651 LINE",
"292 1213 LINE",
"336 1322 OFFCURVE",
"446 1322 QCURVE SMOOTH",
"587 1322 OFFCURVE",
"590 1137 QCURVE SMOOTH",
"590 651 LINE",
"760 651 LINE",
"760 1152 LINE SMOOTH",
"760 1466 OFFCURVE",
"500 1466 QCURVE SMOOTH",
"354 1466 OFFCURVE",
"280 1328 QCURVE",
"250 1451 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 13 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 864;
}
);
note = uni207F;
unicode = 207F;
},
{
glyphname = lira;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"789 595 LINE",
"450 595 LINE",
"446 731 LINE",
"789 731 LINE",
"789 856 LINE",
"441 856 LINE",
"435 1039 LINE SMOOTH",
"435 1164 OFFCURVE",
"565 1318 OFFCURVE",
"670 1318 QCURVE SMOOTH",
"781 1318 OFFCURVE",
"908 1194 OFFCURVE",
"908 1087 QCURVE",
"1099 1087 LINE",
"1099 1264 OFFCURVE",
"877 1476 OFFCURVE",
"687 1476 QCURVE SMOOTH",
"487 1476 OFFCURVE",
"242 1238 OFFCURVE",
"242 1039 QCURVE SMOOTH",
"248 856 LINE",
"91 856 LINE",
"91 731 LINE",
"253 731 LINE",
"257 595 LINE",
"91 595 LINE",
"91 470 LINE",
"261 470 LINE",
"264 401 LINE",
"264 393 LINE SMOOTH",
"262 297 OFFCURVE",
"212 166 OFFCURVE",
"172 157 QCURVE",
"95 157 LINE",
"95 0 LINE",
"1127 0 LINE",
"1128 157 LINE",
"395 157 LINE",
"457 248 OFFCURVE",
"457 402 QCURVE",
"454 470 LINE",
"789 470 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
41 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 21 31 21 47 21 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1190;
}
);
note = uni20A4;
unicode = 20A4;
},
{
glyphname = naira;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1367 1456 LINE",
"1176 1456 LINE",
"1176 940 LINE",
"777 940 LINE",
"440 1456 LINE",
"248 1456 LINE",
"248 940 LINE",
"31 940 LINE",
"31 788 LINE",
"248 788 LINE",
"248 640 LINE",
"31 640 LINE",
"31 488 LINE",
"248 488 LINE",
"248 0 LINE",
"440 0 LINE",
"440 488 LINE",
"854 488 LINE",
"1173 0 LINE",
"1367 0 LINE",
"1367 488 LINE",
"1590 488 LINE",
"1590 640 LINE",
"1367 640 LINE",
"1367 788 LINE",
"1590 788 LINE",
"1590 940 LINE",
"1367 940 LINE"
);
},
{
closed = 1;
nodes = (
"440 788 LINE",
"658 788 LINE",
"755 640 LINE",
"440 640 LINE"
);
},
{
closed = 1;
nodes = (
"440 1122 LINE",
"559 940 LINE",
"440 940 LINE"
);
},
{
closed = 1;
nodes = (
"1176 788 LINE",
"1176 640 LINE",
"972 640 LINE",
"876 788 LINE"
);
},
{
closed = 1;
nodes = (
"1176 488 LINE",
"1176 329 LINE",
"1072 488 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 12 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 20 31 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
38 23 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
39 9 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1621;
}
);
note = uni20A6;
unicode = 20A6;
},
{
glyphname = peseta;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1534 1082 LINE",
"1332 1082 LINE",
"1332 1344 LINE",
"1146 1344 LINE",
"1146 1082 LINE",
"1003 1082 LINE",
"983 1264 OFFCURVE",
"746 1456 OFFCURVE",
"544 1456 QCURVE SMOOTH",
"167 1456 LINE",
"167 0 LINE",
"352 0 LINE",
"352 565 LINE",
"553 565 LINE SMOOTH",
"752 567 OFFCURVE",
"983 756 OFFCURVE",
"1003 939 QCURVE",
"1146 939 LINE",
"1146 268 LINE SMOOTH",
"1146 130 OFFCURVE",
"1272 -20 OFFCURVE",
"1396 -20 QCURVE SMOOTH",
"1466 -20 OFFCURVE",
"1539 0 QCURVE",
"1538 150 LINE",
"1486 138 OFFCURVE",
"1451 138 QCURVE SMOOTH",
"1386 138 OFFCURVE",
"1332 203 OFFCURVE",
"1332 268 QCURVE SMOOTH",
"1332 939 LINE",
"1534 939 LINE"
);
},
{
closed = 1;
nodes = (
"352 1304 LINE",
"555 1304 LINE SMOOTH",
"687 1302 OFFCURVE",
"822 1160 OFFCURVE",
"822 1008 QCURVE SMOOTH",
"822 857 OFFCURVE",
"683 716 OFFCURVE",
"544 716 QCURVE SMOOTH",
"352 716 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
35 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
30 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
33 20 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1680;
}
);
note = uni20A7;
unicode = 20A7;
},
{
glyphname = rupee;
layers = (
{
components = (
{
name = R;
},
{
name = s;
transform = "{1, 0, 0, 1, 1109, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2166;
}
);
note = uni20A8;
unicode = 20A8;
},
{
glyphname = won;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"849 1456 LINE",
"670 1456 LINE",
"584 980 LINE",
"343 980 LINE",
"252 1456 LINE",
"60 1456 LINE",
"161 980 LINE",
"31 980 LINE",
"31 828 LINE",
"194 828 LINE",
"235 634 LINE",
"31 634 LINE",
"31 482 LINE",
"267 482 LINE",
"370 0 LINE",
"554 0 LINE",
"642 482 LINE",
"871 482 LINE",
"957 0 LINE",
"1141 0 LINE",
"1243 482 LINE",
"1484 482 LINE",
"1484 634 LINE",
"1275 634 LINE",
"1316 828 LINE",
"1484 828 LINE",
"1484 980 LINE",
"1349 980 LINE",
"1450 1456 LINE",
"1257 1456 LINE",
"1169 980 LINE",
"935 980 LINE"
);
},
{
closed = 1;
nodes = (
"556 828 LINE",
"521 634 LINE",
"409 634 LINE",
"372 828 LINE"
);
},
{
closed = 1;
nodes = (
"494 482 LINE",
"492 472 LINE",
"463 266 LINE",
"440 476 LINE",
"439 482 LINE"
);
},
{
closed = 1;
nodes = (
"706 828 LINE",
"810 828 LINE",
"844 634 LINE",
"670 634 LINE"
);
},
{
closed = 1;
nodes = (
"734 983 LINE",
"758 1160 LINE",
"782 987 LINE",
"783 980 LINE",
"733 980 LINE"
);
},
{
closed = 1;
nodes = (
"1141 828 LINE",
"1105 634 LINE",
"997 634 LINE",
"962 828 LINE"
);
},
{
closed = 1;
nodes = (
"1077 482 LINE",
"1076 476 LINE",
"1053 272 LINE",
"1026 475 LINE",
"1024 482 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
57 59 60 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
51 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 2 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
48 2 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
53 2 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
57 2 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1515;
}
);
note = uni20A9;
unicode = 20A9;
},
{
glyphname = sheqel;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"140 1082 LINE",
"140 0 LINE",
"325 0 LINE",
"325 929 LINE",
"648 929 LINE SMOOTH",
"759 928 OFFCURVE",
"860 808 OFFCURVE",
"860 681 QCURVE SMOOTH",
"860 349 LINE",
"1045 349 LINE",
"1045 698 LINE SMOOTH",
"1041 889 OFFCURVE",
"873 1082 OFFCURVE",
"698 1082 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1098 0 LINE SMOOTH",
"1271 2 OFFCURVE",
"1436 198 OFFCURVE",
"1438 392 QCURVE SMOOTH",
"1438 1082 LINE",
"1253 1082 LINE",
"1253 395 LINE SMOOTH",
"1252 269 OFFCURVE",
"1149 152 OFFCURVE",
"1036 152 QCURVE SMOOTH",
"718 152 LINE",
"718 733 LINE",
"533 733 LINE",
"533 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 17 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1579;
}
);
note = uni20AA;
unicode = 20AA;
},
{
glyphname = euro;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"849 665 LINE",
"465 665 LINE",
"465 802 LINE",
"849 802 LINE",
"849 927 LINE",
"466 927 LINE",
"472 1115 OFFCURVE",
"649 1318 OFFCURVE",
"813 1318 QCURVE SMOOTH",
"923 1318 OFFCURVE",
"1032 1283 QCURVE",
"1052 1445 LINE",
"917 1476 OFFCURVE",
"811 1476 QCURVE SMOOTH",
"568 1476 OFFCURVE",
"283 1189 OFFCURVE",
"273 927 QCURVE",
"95 927 LINE",
"95 802 LINE",
"273 802 LINE",
"273 665 LINE",
"95 665 LINE",
"95 541 LINE",
"273 541 LINE",
"279 273 OFFCURVE",
"564 -20 OFFCURVE",
"812 -20 QCURVE SMOOTH",
"932 -20 OFFCURVE",
"1052 10 QCURVE",
"1032 170 LINE",
"930 136 OFFCURVE",
"814 136 QCURVE SMOOTH",
"649 136 OFFCURVE",
"469 346 OFFCURVE",
"465 541 QCURVE",
"849 541 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
35 9 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 31 31 31 47 31 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni20AC;
unicode = 20AC;
},
{
glyphname = peso;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"760 570 LINE SMOOTH",
"1132 570 OFFCURVE",
"1239 816 QCURVE",
"1468 816 LINE",
"1468 967 LINE",
"1274 967 LINE",
"1276 1011 LINE",
"1273 1061 LINE",
"1468 1061 LINE",
"1468 1212 LINE",
"1232 1212 LINE",
"1178 1324 OFFCURVE",
"943 1456 OFFCURVE",
"766 1456 QCURVE SMOOTH",
"229 1456 LINE",
"229 1212 LINE",
"31 1212 LINE",
"31 1061 LINE",
"229 1061 LINE",
"229 967 LINE",
"31 967 LINE",
"31 816 LINE",
"229 816 LINE",
"229 0 LINE",
"421 0 LINE",
"421 570 LINE"
);
},
{
closed = 1;
nodes = (
"421 816 LINE",
"1019 816 LINE",
"938 727 OFFCURVE",
"766 727 QCURVE SMOOTH",
"421 727 LINE"
);
},
{
closed = 1;
nodes = (
"421 1061 LINE",
"1080 1061 LINE",
"1084 1009 LINE",
"1082 967 LINE",
"421 967 LINE"
);
},
{
closed = 1;
nodes = (
"421 1298 LINE",
"765 1298 LINE SMOOTH",
"923 1298 OFFCURVE",
"1007 1212 QCURVE",
"421 1212 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
36 40 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
112 36 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
0 36 16 36 32 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
112 29 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
0 29 16 29 32 29 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
112 33 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
32 33 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1498;
}
);
note = uni20B1;
unicode = 20B1;
},
{
glyphname = rupeeIndian;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1016 1456 LINE",
"91 1456 LINE",
"44 1298 LINE",
"325 1298 LINE",
"571 1290 OFFCURVE",
"619 1100 QCURVE",
"88 1100 LINE",
"42 942 LINE",
"621 942 LINE",
"600 850 OFFCURVE",
"444 743 OFFCURVE",
"319 742 QCURVE SMOOTH",
"70 742 LINE",
"71 617 LINE",
"601 0 LINE",
"828 0 LINE",
"828 12 LINE",
"335 584 LINE",
"554 584 OFFCURVE",
"800 764 OFFCURVE",
"818 942 QCURVE",
"970 942 LINE",
"1016 1100 LINE",
"815 1100 LINE",
"798 1217 OFFCURVE",
"734 1298 QCURVE",
"970 1298 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 9 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1058;
}
);
note = uni20B9;
unicode = 20B9;
},
{
glyphname = liraTurkish;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"859 771 LINE",
"859 683 LINE SMOOTH",
"859 418 OFFCURVE",
"658 146 OFFCURVE",
"468 144 QCURVE",
"468 690 LINE",
"719 805 LINE",
"719 983 LINE",
"468 868 LINE",
"468 1021 LINE",
"719 1136 LINE",
"719 1314 LINE",
"468 1199 LINE",
"468 1456 LINE",
"276 1456 LINE",
"276 1111 LINE",
"32 1000 LINE",
"32 822 LINE",
"276 933 LINE",
"276 780 LINE",
"32 669 LINE",
"32 491 LINE",
"276 602 LINE",
"276 0 LINE",
"384 -18 OFFCURVE",
"464 -18 QCURVE SMOOTH",
"639 -18 OFFCURVE",
"904 148 OFFCURVE",
"1048 461 OFFCURVE",
"1050 671 QCURVE SMOOTH",
"1050 771 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 17 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 23 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 5 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1140;
}
);
note = uni20BA;
unicode = 20BA;
},
{
glyphname = manat;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"767 1082 LINE",
"582 1082 LINE",
"582 881 LINE",
"359 847 OFFCURVE",
"96 482 OFFCURVE",
"93 197 QCURVE SMOOTH",
"93 0 LINE",
"278 0 LINE",
"278 198 LINE SMOOTH",
"280 414 OFFCURVE",
"439 681 OFFCURVE",
"582 714 QCURVE",
"582 0 LINE",
"767 0 LINE",
"767 716 LINE",
"914 684 OFFCURVE",
"1072 423 OFFCURVE",
"1074 200 QCURVE SMOOTH",
"1074 0 LINE",
"1259 0 LINE",
"1259 183 LINE SMOOTH",
"1259 477 OFFCURVE",
"998 848 OFFCURVE",
"767 881 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 10 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1352;
}
);
note = uni20BC;
unicode = 20BC;
},
{
glyphname = ruble;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"764 433 LINE",
"429 433 LINE",
"429 570 LINE",
"778 570 LINE SMOOTH",
"1020 571 OFFCURVE",
"1283 802 OFFCURVE",
"1283 1015 QCURVE SMOOTH",
"1283 1218 OFFCURVE",
"1009 1456 OFFCURVE",
"775 1456 QCURVE SMOOTH",
"238 1456 LINE",
"238 727 LINE",
"31 727 LINE",
"31 570 LINE",
"238 570 LINE",
"238 433 LINE",
"31 433 LINE",
"31 275 LINE",
"238 275 LINE",
"238 0 LINE",
"429 0 LINE",
"429 275 LINE",
"764 275 LINE"
);
},
{
closed = 1;
nodes = (
"429 1298 LINE",
"781 1298 LINE SMOOTH",
"924 1297 OFFCURVE",
"1092 1140 OFFCURVE",
"1092 1013 QCURVE SMOOTH",
"1092 873 OFFCURVE",
"930 727 OFFCURVE",
"775 727 QCURVE SMOOTH",
"429 727 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 10 31 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1359;
}
);
note = uni20BD;
unicode = 20BD;
},
{
glyphname = careof;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"542 1054 LINE",
"542 996 OFFCURVE",
"466 920 OFFCURVE",
"405 920 QCURVE SMOOTH",
"340 920 OFFCURVE",
"261 1021 OFFCURVE",
"261 1099 QCURVE SMOOTH",
"261 1172 LINE SMOOTH",
"261 1254 OFFCURVE",
"338 1356 OFFCURVE",
"403 1356 QCURVE SMOOTH",
"469 1356 OFFCURVE",
"542 1279 OFFCURVE",
"542 1221 QCURVE",
"680 1221 LINE",
"680 1332 OFFCURVE",
"524 1477 OFFCURVE",
"403 1477 QCURVE SMOOTH",
"280 1477 OFFCURVE",
"122 1306 OFFCURVE",
"122 1176 QCURVE SMOOTH",
"122 1105 LINE SMOOTH",
"122 968 OFFCURVE",
"283 800 OFFCURVE",
"405 800 QCURVE SMOOTH",
"528 800 OFFCURVE",
"680 944 OFFCURVE",
"680 1054 QCURVE"
);
},
{
closed = 1;
nodes = (
"446 110 LINE",
"1157 1248 LINE",
"1052 1314 LINE",
"341 176 LINE"
);
},
{
closed = 1;
nodes = (
"814 146 OFFCURVE",
"984 -21 OFFCURVE",
"1244 -21 OFFCURVE",
"1411 148 OFFCURVE",
"1411 279 QCURVE SMOOTH",
"1411 350 LINE SMOOTH",
"1411 489 OFFCURVE",
"1243 657 OFFCURVE",
"981 657 OFFCURVE",
"814 488 OFFCURVE",
"814 357 QCURVE SMOOTH",
"814 285 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"952 353 LINE SMOOTH",
"952 437 OFFCURVE",
"1041 536 OFFCURVE",
"1112 536 QCURVE SMOOTH",
"1185 536 OFFCURVE",
"1272 436 OFFCURVE",
"1272 357 QCURVE SMOOTH",
"1272 283 LINE SMOOTH",
"1272 198 OFFCURVE",
"1186 99 OFFCURVE",
"1114 99 QCURVE SMOOTH",
"1040 99 OFFCURVE",
"952 200 OFFCURVE",
"952 279 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 58 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
37 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
14 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 7 values pushed */
42 14 58 14 74 14 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
54 27 70 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
37 27 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
43 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
50 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
54 37 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
56 10 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1511;
}
);
note = uni2105;
unicode = 2105;
},
{
glyphname = literSign;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"716 136 LINE",
"604 136 OFFCURVE",
"497 277 OFFCURVE",
"497 431 QCURVE SMOOTH",
"497 529 LINE",
"668 636 OFFCURVE",
"874 1005 OFFCURVE",
"874 1198 QCURVE SMOOTH",
"874 1235 LINE SMOOTH",
"874 1382 OFFCURVE",
"723 1555 OFFCURVE",
"603 1555 QCURVE SMOOTH",
"470 1555 OFFCURVE",
"313 1357 OFFCURVE",
"312 1179 QCURVE SMOOTH",
"312 631 LINE",
"217 596 OFFCURVE",
"104 596 QCURVE",
"104 420 LINE",
"214 420 OFFCURVE",
"312 448 QCURVE",
"312 213 OFFCURVE",
"522 -21 OFFCURVE",
"716 -21 QCURVE"
);
},
{
closed = 1;
nodes = (
"497 1188 LINE SMOOTH",
"500 1397 OFFCURVE",
"603 1397 QCURVE SMOOTH",
"641 1397 OFFCURVE",
"689 1321 OFFCURVE",
"689 1239 QCURVE SMOOTH",
"689 1200 LINE SMOOTH",
"689 1077 OFFCURVE",
"586 832 OFFCURVE",
"497 747 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 974;
}
);
note = uni2113;
unicode = 2113;
},
{
glyphname = numero;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1956 554 LINE",
"1341 554 LINE",
"1341 412 LINE",
"1956 412 LINE"
);
},
{
closed = 1;
nodes = (
"347 0 LINE",
"347 1134 LINE",
"940 0 LINE",
"1144 0 LINE",
"1144 1456 LINE",
"961 1456 LINE",
"961 319 LINE",
"365 1456 LINE",
"162 1456 LINE",
"162 0 LINE"
);
},
{
closed = 1;
nodes = (
"1305 873 OFFCURVE",
"1491 686 OFFCURVE",
"1649 686 QCURVE SMOOTH",
"1805 686 OFFCURVE",
"1990 872 OFFCURVE",
"1990 1029 QCURVE SMOOTH",
"1990 1122 LINE SMOOTH",
"1990 1285 OFFCURVE",
"1803 1472 OFFCURVE",
"1491 1472 OFFCURVE",
"1305 1282 OFFCURVE",
"1305 1127 QCURVE SMOOTH",
"1305 1034 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1468 1125 LINE SMOOTH",
"1468 1224 OFFCURVE",
"1563 1331 OFFCURVE",
"1647 1331 QCURVE SMOOTH",
"1732 1331 OFFCURVE",
"1827 1224 OFFCURVE",
"1827 1127 QCURVE SMOOTH",
"1827 1026 LINE SMOOTH",
"1826 930 OFFCURVE",
"1733 824 OFFCURVE",
"1649 824 QCURVE SMOOTH",
"1563 824 OFFCURVE",
"1468 931 OFFCURVE",
"1468 1029 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
31 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
37 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 37 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
38 32 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2106;
}
);
note = uni2116;
unicode = 2116;
},
{
glyphname = trademark;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"990 919 LINE",
"1080 919 LINE",
"1080 1456 LINE",
"968 1456 LINE",
"824 1057 LINE",
"680 1456 LINE",
"568 1456 LINE",
"568 919 LINE",
"658 919 LINE",
"658 1312 LINE",
"798 919 LINE",
"850 919 LINE",
"990 1313 LINE"
);
},
{
closed = 1;
nodes = (
"251 1375 LINE",
"251 919 LINE",
"342 919 LINE",
"342 1375 LINE",
"489 1375 LINE",
"489 1456 LINE",
"103 1456 LINE",
"103 1375 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 21 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 9 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 1 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 1 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1281;
}
);
note = uni2122;
unicode = 2122;
},
{
glyphname = estimated;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1044 198 LINE",
"872 76 OFFCURVE",
"676 76 QCURVE SMOOTH",
"522 76 OFFCURVE",
"403 186 QCURVE",
"403 514 LINE",
"1171 514 LINE",
"1171 576 LINE SMOOTH",
"1168 720 OFFCURVE",
"1036 963 OFFCURVE",
"809 1102 OFFCURVE",
"676 1102 QCURVE SMOOTH",
"544 1102 OFFCURVE",
"296 943 OFFCURVE",
"152 684 OFFCURVE",
"152 541 QCURVE SMOOTH",
"152 394 OFFCURVE",
"287 137 OFFCURVE",
"531 -20 OFFCURVE",
"676 -20 QCURVE SMOOTH",
"863 -20 OFFCURVE",
"1046 94 QCURVE"
);
},
{
closed = 1;
nodes = (
"403 886 LINE",
"525 1008 OFFCURVE",
"676 1008 QCURVE SMOOTH",
"828 1008 OFFCURVE",
"943 895 QCURVE",
"943 609 LINE",
"403 609 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 10 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 10 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1303;
}
);
note = uni212E;
unicode = 212E;
},
{
glyphname = oneeighth;
layers = (
{
components = (
{
name = one.dnom;
transform = "{1, 0, 0, 1, -38, 646}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 230, 0}";
},
{
name = eight.dnom;
transform = "{1, 0, 0, 1, 788, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1574;
}
);
note = uni215B;
unicode = 215B;
},
{
glyphname = threeeighths;
layers = (
{
components = (
{
name = three.dnom;
transform = "{1, 0, 0, 1, 38, 660}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 421, 0}";
},
{
name = eight.dnom;
transform = "{1, 0, 0, 1, 948, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1751;
}
);
note = uni215C;
unicode = 215C;
},
{
glyphname = fiveeighths;
layers = (
{
components = (
{
name = five.dnom;
transform = "{1, 0, 0, 1, 8, 655}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 387, 0}";
},
{
name = eight.dnom;
transform = "{1, 0, 0, 1, 938, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1743;
}
);
note = uni215D;
unicode = 215D;
},
{
glyphname = seveneighths;
layers = (
{
components = (
{
name = seven.dnom;
transform = "{1, 0, 0, 1, 31, 655}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 288, 0}";
},
{
name = eight.dnom;
transform = "{1, 0, 0, 1, 862, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1642;
}
);
note = uni215E;
unicode = 215E;
},
{
glyphname = partialdiff;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"362 1022 OFFCURVE",
"106 750 OFFCURVE",
"106 530 QCURVE SMOOTH",
"106 516 LINE SMOOTH",
"106 270 OFFCURVE",
"370 -21 OFFCURVE",
"588 -21 QCURVE SMOOTH",
"732 -21 OFFCURVE",
"954 144 OFFCURVE",
"1074 442 OFFCURVE",
"1074 630 QCURVE SMOOTH",
"1074 680 LINE SMOOTH",
"1074 1082 OFFCURVE",
"787 1516 OFFCURVE",
"524 1516 QCURVE SMOOTH",
"373 1516 OFFCURVE",
"257 1468 QCURVE SMOOTH",
"208 1447 LINE",
"224 1296 LINE",
"379 1355 OFFCURVE",
"508 1355 QCURVE SMOOTH",
"604 1355 OFFCURVE",
"770 1234 OFFCURVE",
"875 1017 OFFCURVE",
"889 877 QCURVE",
"831 945 OFFCURVE",
"665 1022 OFFCURVE",
"572 1022 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"291 523 LINE SMOOTH",
"291 683 OFFCURVE",
"450 870 OFFCURVE",
"590 870 QCURVE SMOOTH",
"697 870 OFFCURVE",
"857 764 OFFCURVE",
"885 674 QCURVE SMOOTH",
"889 659 LINE",
"889 598 LINE SMOOTH",
"889 379 OFFCURVE",
"730 130 OFFCURVE",
"588 130 QCURVE SMOOTH",
"450 130 OFFCURVE",
"291 337 OFFCURVE",
"291 507 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
3 0 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1167;
}
);
note = uni2202;
unicode = 2202;
},
{
glyphname = product;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1253 1456 LINE",
"169 1456 LINE",
"169 -213 LINE",
"354 -213 LINE",
"354 1304 LINE",
"1068 1304 LINE",
"1068 -213 LINE",
"1253 -213 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1422;
}
);
note = uni220F;
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"875 602 LINE",
"293 1304 LINE",
"1118 1304 LINE",
"1118 1456 LINE",
"69 1456 LINE",
"69 1312 LINE",
"678 590 LINE",
"69 -126 LINE",
"69 -269 LINE",
"1195 -269 LINE",
"1195 -117 LINE",
"294 -117 LINE",
"875 577 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1199;
}
);
note = uni2211;
unicode = 2211;
},
{
glyphname = minus;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1003 802 LINE",
"168 802 LINE",
"168 651 LINE",
"1003 651 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1170;
}
);
note = uni2212;
unicode = 2212;
},
{
glyphname = radical;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"378 782 LINE",
"63 782 LINE",
"63 628 LINE",
"248 628 LINE",
"493 0 LINE",
"634 0 LINE",
"1176 1456 LINE",
"987 1456 LINE",
"560 284 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1221;
}
);
note = uni221A;
unicode = 221A;
},
{
glyphname = infinity;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1995 540 LINE SMOOTH",
"1995 783 OFFCURVE",
"1717 1102 OFFCURVE",
"1511 1102 QCURVE SMOOTH",
"1365 1102 OFFCURVE",
"1126 917 OFFCURVE",
"1046 740 QCURVE",
"965 919 OFFCURVE",
"728 1102 OFFCURVE",
"583 1102 QCURVE SMOOTH",
"447 1102 OFFCURVE",
"224 956 OFFCURVE",
"98 700 OFFCURVE",
"98 553 QCURVE SMOOTH",
"98 529 LINE SMOOTH",
"98 378 OFFCURVE",
"226 122 OFFCURVE",
"448 -21 OFFCURVE",
"585 -21 QCURVE SMOOTH",
"729 -21 OFFCURVE",
"965 161 OFFCURVE",
"1046 340 QCURVE",
"1126 163 OFFCURVE",
"1364 -21 OFFCURVE",
"1509 -21 QCURVE SMOOTH",
"1646 -21 OFFCURVE",
"1869 124 OFFCURVE",
"1995 380 OFFCURVE",
"1995 527 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"283 545 LINE SMOOTH",
"283 730 OFFCURVE",
"449 950 OFFCURVE",
"583 950 QCURVE SMOOTH",
"663 950 OFFCURVE",
"809 853 OFFCURVE",
"923 661 OFFCURVE",
"947 562 QCURVE",
"947 520 LINE",
"936 481 LINE SMOOTH",
"884 318 OFFCURVE",
"699 130 OFFCURVE",
"585 130 QCURVE SMOOTH",
"449 130 OFFCURVE",
"283 350 OFFCURVE",
"283 527 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1146 562 LINE",
"1155 593 LINE SMOOTH",
"1208 761 OFFCURVE",
"1396 950 OFFCURVE",
"1511 950 QCURVE SMOOTH",
"1644 950 OFFCURVE",
"1810 727 OFFCURVE",
"1810 553 QCURVE SMOOTH",
"1810 536 LINE SMOOTH",
"1810 352 OFFCURVE",
"1645 130 OFFCURVE",
"1509 130 QCURVE SMOOTH",
"1429 130 OFFCURVE",
"1285 226 OFFCURVE",
"1168 423 OFFCURVE",
"1146 520 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 61 62 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
7 25 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 25 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2106;
}
);
note = uni221E;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"357 1186 LINE SMOOTH",
"357 1405 OFFCURVE",
"539 1405 QCURVE SMOOTH",
"593 1405 OFFCURVE",
"630 1394 QCURVE",
"654 1536 LINE",
"570 1557 OFFCURVE",
"510 1557 QCURVE SMOOTH",
"349 1557 OFFCURVE",
"172 1367 OFFCURVE",
"172 1197 QCURVE SMOOTH",
"172 -108 LINE SMOOTH",
"172 -285 OFFCURVE",
"17 -285 QCURVE SMOOTH",
"-16 -285 OFFCURVE",
"-62 -272 QCURVE",
"-80 -417 LINE",
"-22 -437 OFFCURVE",
"35 -437 QCURVE SMOOTH",
"193 -437 OFFCURVE",
"357 -269 OFFCURVE",
"357 -107 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 524;
}
);
note = uni222B;
unicode = 222B;
},
{
glyphname = approxequal;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"102 712 LINE",
"150 772 OFFCURVE",
"281 840 OFFCURVE",
"347 840 QCURVE SMOOTH",
"426 842 OFFCURVE",
"494 811 QCURVE",
"655 728 LINE SMOOTH",
"721 697 OFFCURVE",
"799 697 QCURVE SMOOTH",
"932 697 OFFCURVE",
"1035 806 QCURVE",
"1035 996 LINE",
"933 868 OFFCURVE",
"799 868 QCURVE SMOOTH",
"721 868 OFFCURVE",
"655 899 QCURVE SMOOTH",
"503 977 LINE SMOOTH",
"429 1012 OFFCURVE",
"347 1010 QCURVE SMOOTH",
"281 1010 OFFCURVE",
"150 952 OFFCURVE",
"102 901 QCURVE"
);
},
{
closed = 1;
nodes = (
"149 354 OFFCURVE",
"280 422 OFFCURVE",
"346 422 QCURVE SMOOTH",
"428 424 OFFCURVE",
"502 389 QCURVE SMOOTH",
"654 311 LINE SMOOTH",
"720 280 OFFCURVE",
"798 280 QCURVE SMOOTH",
"931 280 OFFCURVE",
"1034 389 QCURVE",
"1033 578 LINE",
"931 450 OFFCURVE",
"798 450 QCURVE SMOOTH",
"718 450 OFFCURVE",
"650 483 QCURVE SMOOTH",
"501 560 LINE SMOOTH",
"427 595 OFFCURVE",
"345 593 QCURVE SMOOTH",
"279 593 OFFCURVE",
"149 534 OFFCURVE",
"101 483 QCURVE",
"101 294 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 44 45 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 13 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 35 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1154;
}
);
note = uni2248;
unicode = 2248;
},
{
glyphname = notequal;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"986 559 LINE",
"549 559 LINE",
"697 814 LINE",
"986 814 LINE",
"986 975 LINE",
"791 975 LINE",
"910 1178 LINE",
"815 1237 LINE",
"662 975 LINE",
"152 975 LINE",
"152 814 LINE",
"568 814 LINE",
"419 559 LINE",
"152 559 LINE",
"152 399 LINE",
"326 399 LINE",
"218 214 LINE",
"313 155 LINE",
"455 399 LINE",
"986 399 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1124;
}
);
note = uni2260;
unicode = 2260;
},
{
glyphname = lessequal;
layers = (
{
components = (
{
name = less;
transform = "{1, 0, 0, 0.9, 0, 97}";
},
{
name = minus;
transform = "{1, 0, 0, 1, -106, -649}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1041;
}
);
note = uni2264;
unicode = 2264;
},
{
glyphname = greaterequal;
layers = (
{
components = (
{
name = greater;
transform = "{1, 0, 0, 0.9, 0, 115}";
},
{
name = minus;
transform = "{1, 0, 0, 1, -35, -650}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1071;
}
);
note = uni2265;
unicode = 2265;
},
{
glyphname = lozenge;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"43 727 LINE",
"447 0 LINE",
"588 0 LINE",
"988 727 LINE",
"584 1456 LINE",
"444 1456 LINE"
);
},
{
closed = 1;
nodes = (
"513 1254 LINE",
"798 727 LINE",
"518 201 LINE",
"234 727 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 0 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 0 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1032;
}
);
note = uni25CA;
unicode = 25CA;
},
{
glyphname = uniEE01;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 37, 178}";
},
{
name = period;
transform = "{1, 0, 0, 1, 37, 1060}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 588;
}
);
note = uniEE01;
unicode = EE01;
},
{
glyphname = uniEE02;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"251 1082 LINE",
"110 1082 LINE",
"110 633 LINE",
"251 633 LINE"
);
},
{
closed = 1;
nodes = (
"563 633 LINE",
"563 1082 LINE",
"422 1082 LINE",
"422 633 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 655;
}
);
note = uniEE02;
unicode = EE02;
},
{
glyphname = uniF6C3;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"264 -107 OFFCURVE",
"343 72 OFFCURVE",
"343 163 QCURVE SMOOTH",
"343 239 LINE",
"166 239 LINE",
"166 147 LINE SMOOTH",
"164 20 OFFCURVE",
"92 -89 QCURVE",
"197 -161 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
64 4 80 4 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 515;
}
);
note = uniF6C3;
unicode = F6C3;
},
{
glyphname = f_f;
layers = (
{
components = (
{
name = f;
},
{
name = f;
transform = "{1, 0, 0, 1, 556, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
}
);
note = glyph00443;
},
{
glyphname = fi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"388 0 LINE",
"388 939 LINE",
"609 939 LINE",
"609 1082 LINE",
"388 1082 LINE",
"388 1176 LINE SMOOTH",
"388 1283 OFFCURVE",
"493 1390 OFFCURVE",
"612 1390 QCURVE SMOOTH",
"725 1390 OFFCURVE",
"850 1340 QCURVE",
"881 1496 LINE",
"710 1557 OFFCURVE",
"598 1557 QCURVE SMOOTH",
"409 1557 OFFCURVE",
"202 1355 OFFCURVE",
"202 1174 QCURVE SMOOTH",
"202 1082 LINE",
"31 1082 LINE",
"31 939 LINE",
"202 939 LINE",
"202 0 LINE"
);
},
{
closed = 1;
nodes = (
"973 0 LINE",
"973 1082 LINE",
"787 1082 LINE",
"787 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1134;
}
);
note = uniFB01;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"816 0 LINE",
"1001 0 LINE",
"1001 1496 LINE",
"702 1557 OFFCURVE",
"601 1557 QCURVE SMOOTH",
"424 1557 OFFCURVE",
"232 1373 OFFCURVE",
"231 1200 QCURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE",
"416 0 LINE",
"416 939 LINE",
"647 939 LINE",
"647 1082 LINE",
"416 1082 LINE",
"416 1189 LINE SMOOTH",
"416 1399 OFFCURVE",
"616 1399 QCURVE SMOOTH",
"692 1399 OFFCURVE",
"816 1379 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1163;
}
);
note = uniFB02;
unicode = FB02;
},
{
glyphname = f_f_i;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 939 LINE",
"816 939 LINE",
"816 0 LINE",
"1001 0 LINE",
"1001 939 LINE",
"1223 939 LINE",
"1223 1082 LINE",
"1001 1082 LINE",
"1001 1176 LINE SMOOTH",
"1001 1284 OFFCURVE",
"1106 1390 OFFCURVE",
"1225 1390 QCURVE SMOOTH",
"1339 1390 OFFCURVE",
"1464 1340 QCURVE",
"1495 1496 LINE",
"1324 1557 OFFCURVE",
"1212 1557 QCURVE SMOOTH",
"1023 1557 OFFCURVE",
"816 1355 OFFCURVE",
"816 1174 QCURVE SMOOTH",
"816 1082 LINE",
"416 1082 LINE",
"416 1196 LINE SMOOTH",
"416 1294 OFFCURVE",
"514 1399 OFFCURVE",
"604 1399 QCURVE SMOOTH",
"657 1399 OFFCURVE",
"704 1390 QCURVE",
"714 1540 LINE",
"651 1557 OFFCURVE",
"587 1557 QCURVE SMOOTH",
"417 1557 OFFCURVE",
"231 1367 OFFCURVE",
"231 1193 QCURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE"
);
},
{
closed = 1;
nodes = (
"1586 0 LINE",
"1586 1082 LINE",
"1401 1082 LINE",
"1401 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
42 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
41 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1748;
}
);
note = uniFB03;
unicode = FB03;
},
{
glyphname = f_f_l;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 939 LINE",
"816 939 LINE",
"816 0 LINE",
"1001 0 LINE",
"1001 939 LINE",
"1232 939 LINE",
"1232 1082 LINE",
"1001 1082 LINE",
"1001 1189 LINE SMOOTH",
"1001 1399 OFFCURVE",
"1201 1399 QCURVE SMOOTH",
"1277 1399 OFFCURVE",
"1401 1379 QCURVE",
"1401 0 LINE",
"1586 0 LINE",
"1586 1496 LINE",
"1287 1557 OFFCURVE",
"1186 1557 QCURVE SMOOTH",
"1009 1557 OFFCURVE",
"817 1373 OFFCURVE",
"816 1200 QCURVE SMOOTH",
"816 1082 LINE",
"416 1082 LINE",
"416 1196 LINE SMOOTH",
"416 1294 OFFCURVE",
"514 1399 OFFCURVE",
"604 1399 QCURVE SMOOTH",
"657 1399 OFFCURVE",
"704 1390 QCURVE",
"714 1540 LINE",
"651 1557 OFFCURVE",
"587 1557 QCURVE SMOOTH",
"417 1557 OFFCURVE",
"231 1367 OFFCURVE",
"231 1193 QCURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
40 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1748;
}
);
note = uniFB04;
unicode = FB04;
},
{
glyphname = longs_t;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1174 1082 LINE",
"972 1082 LINE",
"972 1456 LINE",
"882 1500 OFFCURVE",
"663 1557 OFFCURVE",
"570 1557 QCURVE SMOOTH",
"410 1557 OFFCURVE",
"231 1367 OFFCURVE",
"231 1194 QCURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE",
"416 0 LINE",
"416 1184 LINE SMOOTH",
"416 1405 OFFCURVE",
"599 1405 QCURVE SMOOTH",
"623 1404 LINE SMOOTH",
"725 1397 OFFCURVE",
"786 1369 QCURVE",
"786 1082 LINE",
"589 1082 LINE",
"589 939 LINE",
"786 939 LINE",
"786 268 LINE SMOOTH",
"786 130 OFFCURVE",
"912 -20 OFFCURVE",
"1036 -20 QCURVE SMOOTH",
"1106 -20 OFFCURVE",
"1179 0 QCURVE",
"1178 150 LINE",
"1126 138 OFFCURVE",
"1091 138 QCURVE SMOOTH",
"1026 138 OFFCURVE",
"972 203 OFFCURVE",
"972 268 QCURVE SMOOTH",
"972 939 LINE",
"1174 939 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1262;
}
);
note = glyph00448;
},
{
glyphname = s_t;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1615 1082 LINE",
"1413 1082 LINE",
"1413 1159 LINE SMOOTH",
"1413 1354 OFFCURVE",
"1212 1553 OFFCURVE",
"1027 1553 QCURVE SMOOTH",
"872 1553 OFFCURVE",
"670 1388 OFFCURVE",
"670 1264 QCURVE SMOOTH",
"670 1182 OFFCURVE",
"714 1072 QCURVE",
"628 1102 OFFCURVE",
"532 1102 QCURVE SMOOTH",
"357 1102 OFFCURVE",
"132 918 OFFCURVE",
"132 785 QCURVE SMOOTH",
"132 705 OFFCURVE",
"211 589 OFFCURVE",
"376 505 OFFCURVE",
"657 445 OFFCURVE",
"770 362 OFFCURVE",
"770 287 QCURVE SMOOTH",
"770 216 OFFCURVE",
"643 131 OFFCURVE",
"538 131 QCURVE SMOOTH",
"424 131 OFFCURVE",
"285 240 OFFCURVE",
"280 333 QCURVE",
"95 333 LINE",
"95 237 OFFCURVE",
"208 72 OFFCURVE",
"408 -20 OFFCURVE",
"538 -20 QCURVE SMOOTH",
"723 -20 OFFCURVE",
"955 155 OFFCURVE",
"955 300 QCURVE SMOOTH",
"955 387 OFFCURVE",
"872 508 OFFCURVE",
"700 594 OFFCURVE",
"423 656 OFFCURVE",
"317 724 OFFCURVE",
"317 791 QCURVE SMOOTH",
"317 862 OFFCURVE",
"431 950 OFFCURVE",
"532 950 QCURVE SMOOTH",
"630 950 OFFCURVE",
"759 840 OFFCURVE",
"759 764 QCURVE",
"945 764 LINE",
"945 840 OFFCURVE",
"915 964 OFFCURVE",
"878 1076 OFFCURVE",
"847 1181 OFFCURVE",
"847 1240 QCURVE SMOOTH",
"847 1310 OFFCURVE",
"939 1398 OFFCURVE",
"1027 1398 QCURVE SMOOTH",
"1125 1398 OFFCURVE",
"1227 1281 OFFCURVE",
"1227 1167 QCURVE SMOOTH",
"1227 1082 LINE",
"1039 1082 LINE",
"1039 939 LINE",
"1227 939 LINE",
"1227 297 LINE SMOOTH",
"1227 146 OFFCURVE",
"1359 -20 OFFCURVE",
"1477 -20 QCURVE SMOOTH",
"1543 -20 OFFCURVE",
"1620 0 QCURVE",
"1619 150 LINE",
"1567 138 OFFCURVE",
"1532 138 QCURVE SMOOTH",
"1413 138 OFFCURVE",
"1413 297 QCURVE SMOOTH",
"1413 939 LINE",
"1615 939 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
22 77 78 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
71 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
75 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
64 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
44 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 64 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
64 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
58 44 64 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
49 44 64 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
52 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1691;
}
);
leftKerningGroup = s;
note = glyph00449;
},
{
glyphname = zeroWidthNoBreakSpace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
}
);
note = uniFEFF;
unicode = FEFF;
},
{
glyphname = objectReplacementCharacter;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"825 585 LINE SMOOTH",
"823 679 OFFCURVE",
"695 799 OFFCURVE",
"594 799 QCURVE SMOOTH",
"490 799 OFFCURVE",
"364 675 OFFCURVE",
"364 580 QCURVE SMOOTH",
"364 463 LINE SMOOTH",
"366 369 OFFCURVE",
"494 249 OFFCURVE",
"596 249 QCURVE SMOOTH",
"696 249 OFFCURVE",
"825 370 OFFCURVE",
"825 468 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"400 -398 LINE",
"400 -285 LINE",
"204 -285 LINE",
"204 -83 LINE",
"91 -83 LINE",
"91 -398 LINE"
);
},
{
closed = 1;
nodes = (
"204 41 LINE",
"204 290 LINE",
"91 290 LINE",
"91 41 LINE"
);
},
{
closed = 1;
nodes = (
"204 416 LINE",
"204 668 LINE",
"91 668 LINE",
"91 416 LINE"
);
},
{
closed = 1;
nodes = (
"204 794 LINE",
"204 1044 LINE",
"91 1044 LINE",
"91 794 LINE"
);
},
{
closed = 1;
nodes = (
"204 1169 LINE",
"204 1338 LINE",
"400 1338 LINE",
"400 1454 LINE",
"91 1454 LINE",
"91 1169 LINE"
);
},
{
closed = 1;
nodes = (
"456 580 LINE SMOOTH",
"456 649 OFFCURVE",
"530 727 OFFCURVE",
"594 727 QCURVE SMOOTH",
"659 727 OFFCURVE",
"733 649 OFFCURVE",
"733 580 QCURVE SMOOTH",
"733 468 LINE SMOOTH",
"733 399 OFFCURVE",
"660 321 OFFCURVE",
"596 321 QCURVE SMOOTH",
"530 321 OFFCURVE",
"456 399 OFFCURVE",
"456 468 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 -398 LINE",
"799 -285 LINE",
"523 -285 LINE",
"523 -398 LINE"
);
},
{
closed = 1;
nodes = (
"799 1338 LINE",
"799 1454 LINE",
"523 1454 LINE",
"523 1338 LINE"
);
},
{
closed = 1;
nodes = (
"1102 252 LINE SMOOTH",
"1310 252 OFFCURVE",
"1310 407 QCURVE SMOOTH",
"1310 452 OFFCURVE",
"1258 522 OFFCURVE",
"1208 535 QCURVE",
"1292 567 OFFCURVE",
"1292 651 QCURVE SMOOTH",
"1292 728 OFFCURVE",
"1178 801 OFFCURVE",
"1080 801 QCURVE SMOOTH",
"892 801 LINE",
"892 252 LINE"
);
},
{
closed = 1;
nodes = (
"1199 -398 LINE",
"1199 -285 LINE",
"922 -285 LINE",
"922 -398 LINE"
);
},
{
closed = 1;
nodes = (
"1199 1338 LINE",
"1199 1454 LINE",
"922 1454 LINE",
"922 1338 LINE"
);
},
{
closed = 1;
nodes = (
"987 496 LINE",
"1118 496 LINE SMOOTH",
"1216 492 OFFCURVE",
"1216 410 QCURVE SMOOTH",
"1216 327 OFFCURVE",
"1113 327 QCURVE SMOOTH",
"987 327 LINE"
);
},
{
closed = 1;
nodes = (
"987 717 LINE",
"1080 717 LINE SMOOTH",
"1140 717 OFFCURVE",
"1198 687 OFFCURVE",
"1198 646 QCURVE SMOOTH",
"1198 566 OFFCURVE",
"1080 566 QCURVE SMOOTH",
"987 566 LINE"
);
},
{
closed = 1;
nodes = (
"1599 -398 LINE",
"1599 -285 LINE",
"1321 -285 LINE",
"1321 -398 LINE"
);
},
{
closed = 1;
nodes = (
"1599 1338 LINE",
"1599 1454 LINE",
"1321 1454 LINE",
"1321 1338 LINE"
);
},
{
closed = 1;
nodes = (
"1395 335 OFFCURVE",
"1504 254 OFFCURVE",
"1592 254 QCURVE SMOOTH",
"1674 254 OFFCURVE",
"1779 347 OFFCURVE",
"1779 425 QCURVE SMOOTH",
"1779 803 LINE",
"1687 803 LINE",
"1687 425 LINE SMOOTH",
"1687 381 OFFCURVE",
"1633 327 OFFCURVE",
"1592 327 QCURVE SMOOTH",
"1488 327 OFFCURVE",
"1488 418 QCURVE",
"1395 418 LINE"
);
},
{
closed = 1;
nodes = (
"2030 -398 LINE",
"2030 -83 LINE",
"1919 -83 LINE",
"1919 -285 LINE",
"1720 -285 LINE",
"1720 -398 LINE"
);
},
{
closed = 1;
nodes = (
"1919 1338 LINE",
"1919 1169 LINE",
"2030 1169 LINE",
"2030 1454 LINE",
"1720 1454 LINE",
"1720 1338 LINE"
);
},
{
closed = 1;
nodes = (
"2030 41 LINE",
"2030 290 LINE",
"1919 290 LINE",
"1919 41 LINE"
);
},
{
closed = 1;
nodes = (
"2030 416 LINE",
"2030 668 LINE",
"1919 668 LINE",
"1919 416 LINE"
);
},
{
closed = 1;
nodes = (
"2030 794 LINE",
"2030 1044 LINE",
"1919 1044 LINE",
"1919 794 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 143 144 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
74 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
80 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
91 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
97 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
103 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
109 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
112 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
119 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
123 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
127 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
132 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
136 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
140 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
70 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
126 73 3 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
122 123 3 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
130 119 3 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
127 58 3 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 3 values pushed */
10 61 70 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
80 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
111 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 80 111 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
52 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
61 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
60 10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
61 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
107 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
103 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
108 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
104 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
100 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
63 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
96 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
92 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
74 10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
90 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
98 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
78 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
81 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
118 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
119 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
132 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
122 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
133 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
123 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
136 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
126 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
137 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
127 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
140 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
130 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
141 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2099;
}
);
note = uniFFFC;
unicode = FFFC;
},
{
glyphname = replacementCharacter;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"92 643 LINE",
"1048 -332 LINE",
"2007 643 LINE",
"1048 1618 LINE"
);
},
{
closed = 1;
nodes = (
"743 930 OFFCURVE",
"903 1069 OFFCURVE",
"1047 1069 QCURVE SMOOTH",
"1196 1069 OFFCURVE",
"1363 918 OFFCURVE",
"1363 790 QCURVE SMOOTH",
"1363 716 OFFCURVE",
"1271 581 OFFCURVE",
"1197 542 QCURVE",
"1161 518 OFFCURVE",
"1131 460 OFFCURVE",
"1131 402 QCURVE",
"929 402 LINE",
"929 478 OFFCURVE",
"976 570 OFFCURVE",
"1067 635 QCURVE SMOOTH",
"1160 695 OFFCURVE",
"1160 790 QCURVE SMOOTH",
"1160 842 OFFCURVE",
"1104 906 OFFCURVE",
"1047 906 QCURVE SMOOTH",
"1004 906 OFFCURVE",
"946 854 OFFCURVE",
"944 803 QCURVE",
"741 803 LINE"
);
},
{
closed = 1;
nodes = (
"929 311 LINE",
"1131 311 LINE",
"1131 141 LINE",
"929 141 LINE"
);
},
{
closed = 1;
nodes = (
"1058 2159 LINE",
"1058 2163 LINE",
"1054 2163 LINE",
"1054 2159 LINE"
);
},
{
closed = 1;
nodes = (
"1060 -555 LINE",
"1060 -551 LINE",
"1056 -551 LINE",
"1056 -555 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 17 16 4 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 4 values pushed */
4 17 28 4 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 4 values pushed */
10 17 23 4 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
28 30 3 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
13 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 30 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2101;
}
);
note = uniFFFD;
unicode = FFFD;
},
{
glyphname = two.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"683 128 LINE",
"284 128 LINE",
"460 273 LINE",
"544 352 LINE SMOOTH",
"651 459 OFFCURVE",
"651 563 QCURVE SMOOTH",
"651 673 OFFCURVE",
"497 800 OFFCURVE",
"233 800 OFFCURVE",
"66 652 OFFCURVE",
"66 538 QCURVE",
"223 538 LINE",
"223 595 OFFCURVE",
"294 671 OFFCURVE",
"369 671 QCURVE SMOOTH",
"429 671 OFFCURVE",
"493 610 OFFCURVE",
"493 561 QCURVE SMOOTH",
"493 492 OFFCURVE",
"384 390 QCURVE SMOOTH",
"84 108 LINE",
"84 0 LINE",
"683 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 21 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 14 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00453;
},
{
glyphname = one.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"495 789 LINE",
"477 789 LINE",
"122 672 LINE",
"122 544 LINE",
"338 601 LINE",
"338 0 LINE",
"495 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 5 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00454;
},
{
glyphname = zero.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"669 471 LINE SMOOTH",
"667 628 OFFCURVE",
"515 800 OFFCURVE",
"374 800 QCURVE SMOOTH",
"235 800 OFFCURVE",
"80 626 OFFCURVE",
"80 463 QCURVE SMOOTH",
"80 321 LINE SMOOTH",
"81 161 OFFCURVE",
"237 -11 OFFCURVE",
"376 -11 QCURVE SMOOTH",
"517 -11 OFFCURVE",
"669 163 OFFCURVE",
"669 325 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"237 490 LINE SMOOTH",
"241 670 OFFCURVE",
"374 670 QCURVE SMOOTH",
"512 670 OFFCURVE",
"512 478 QCURVE SMOOTH",
"512 298 LINE SMOOTH",
"508 117 OFFCURVE",
"376 117 QCURVE SMOOTH",
"237 117 OFFCURVE",
"237 311 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00455;
},
{
glyphname = nine.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"712 153 OFFCURVE",
"308 146 QCURVE SMOOTH",
"273 146 LINE",
"273 -6 LINE",
"314 -6 LINE SMOOTH",
"614 -1 OFFCURVE",
"922 319 OFFCURVE",
"922 638 QCURVE SMOOTH",
"922 701 LINE SMOOTH",
"922 927 OFFCURVE",
"698 1181 OFFCURVE",
"500 1181 QCURVE SMOOTH",
"314 1181 OFFCURVE",
"85 953 OFFCURVE",
"85 773 QCURVE SMOOTH",
"85 597 OFFCURVE",
"289 382 OFFCURVE",
"463 382 QCURVE SMOOTH",
"634 382 OFFCURVE",
"735 492 QCURVE"
);
},
{
closed = 1;
nodes = (
"269 885 OFFCURVE",
"396 1028 OFFCURVE",
"500 1028 QCURVE SMOOTH",
"605 1028 OFFCURVE",
"737 870 OFFCURVE",
"737 738 QCURVE SMOOTH",
"737 672 LINE",
"707 608 OFFCURVE",
"576 529 OFFCURVE",
"497 529 QCURVE SMOOTH",
"393 529 OFFCURVE",
"269 668 OFFCURVE",
"269 777 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 16 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00456;
},
{
glyphname = eight.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"912 1006 OFFCURVE",
"694 1181 OFFCURVE",
"340 1181 OFFCURVE",
"126 1006 OFFCURVE",
"126 858 QCURVE SMOOTH",
"126 772 OFFCURVE",
"222 638 OFFCURVE",
"307 600 QCURVE",
"209 561 OFFCURVE",
"96 415 OFFCURVE",
"96 316 QCURVE SMOOTH",
"96 163 OFFCURVE",
"329 -16 OFFCURVE",
"709 -16 OFFCURVE",
"941 165 OFFCURVE",
"941 316 QCURVE SMOOTH",
"941 414 OFFCURVE",
"826 561 OFFCURVE",
"728 599 QCURVE",
"813 637 OFFCURVE",
"912 772 OFFCURVE",
"912 858 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 414 OFFCURVE",
"410 522 OFFCURVE",
"517 522 QCURVE SMOOTH",
"625 522 OFFCURVE",
"756 412 OFFCURVE",
"756 326 QCURVE SMOOTH",
"756 238 OFFCURVE",
"628 135 OFFCURVE",
"519 135 QCURVE SMOOTH",
"409 135 OFFCURVE",
"282 235 OFFCURVE",
"282 326 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313 932 OFFCURVE",
"423 1029 OFFCURVE",
"517 1029 QCURVE SMOOTH",
"610 1029 OFFCURVE",
"726 929 OFFCURVE",
"726 851 QCURVE SMOOTH",
"726 772 OFFCURVE",
"614 673 OFFCURVE",
"424 673 OFFCURVE",
"313 771 OFFCURVE",
"313 851 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
223 42 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
31 42 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 42 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 25 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00457;
},
{
glyphname = seven.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"960 1165 LINE",
"66 1165 LINE",
"66 1012 LINE",
"764 1012 LINE",
"229 0 LINE",
"424 0 LINE",
"960 1060 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00458;
},
{
glyphname = six.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"750 1171 LINE SMOOTH",
"434 1171 OFFCURVE",
"114 841 OFFCURVE",
"114 522 QCURVE SMOOTH",
"114 447 LINE SMOOTH",
"114 235 OFFCURVE",
"348 -16 OFFCURVE",
"542 -16 QCURVE SMOOTH",
"732 -16 OFFCURVE",
"955 206 OFFCURVE",
"955 382 QCURVE SMOOTH",
"955 556 OFFCURVE",
"754 771 OFFCURVE",
"580 771 QCURVE SMOOTH",
"502 771 OFFCURVE",
"352 708 OFFCURVE",
"300 651 QCURVE",
"314 828 OFFCURVE",
"538 1012 OFFCURVE",
"738 1015 QCURVE SMOOTH",
"768 1015 LINE",
"768 1171 LINE"
);
},
{
closed = 1;
nodes = (
"299 478 LINE",
"331 542 OFFCURVE",
"462 619 OFFCURVE",
"542 619 QCURVE SMOOTH",
"649 619 OFFCURVE",
"772 485 OFFCURVE",
"772 269 OFFCURVE",
"646 136 OFFCURVE",
"436 136 OFFCURVE",
"299 300 OFFCURVE",
"299 438 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 33 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
5 8 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1038;
}
);
note = glyph00459;
},
{
glyphname = five.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"312 542 LINE",
"353 569 LINE SMOOTH",
"419 611 OFFCURVE",
"524 611 QCURVE SMOOTH",
"639 611 OFFCURVE",
"779 484 OFFCURVE",
"779 378 QCURVE SMOOTH",
"779 265 OFFCURVE",
"658 135 OFFCURVE",
"546 135 QCURVE SMOOTH",
"448 135 OFFCURVE",
"320 221 OFFCURVE",
"306 312 QCURVE",
"128 312 LINE",
"141 161 OFFCURVE",
"375 -16 OFFCURVE",
"546 -16 QCURVE SMOOTH",
"742 -16 OFFCURVE",
"965 194 OFFCURVE",
"965 372 QCURVE SMOOTH",
"965 552 OFFCURVE",
"750 762 OFFCURVE",
"566 762 QCURVE SMOOTH",
"451 762 OFFCURVE",
"352 714 QCURVE",
"389 1003 LINE",
"913 1003 LINE",
"913 1165 LINE",
"233 1165 LINE",
"164 579 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
26 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 1 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00460;
},
{
glyphname = four.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"821 1165 LINE",
"626 1165 LINE",
"48 377 LINE",
"51 262 LINE",
"635 262 LINE",
"635 0 LINE",
"821 0 LINE",
"821 262 LINE",
"996 262 LINE",
"996 413 LINE",
"821 413 LINE"
);
},
{
closed = 1;
nodes = (
"609 874 LINE",
"635 921 LINE",
"635 413 LINE",
"246 413 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00461;
},
{
glyphname = three.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"352 519 LINE",
"465 519 LINE SMOOTH",
"741 519 OFFCURVE",
"741 324 QCURVE SMOOTH",
"741 233 OFFCURVE",
"614 135 OFFCURVE",
"502 135 QCURVE SMOOTH",
"394 135 OFFCURVE",
"263 234 OFFCURVE",
"263 313 QCURVE",
"78 313 LINE",
"78 163 OFFCURVE",
"312 -16 OFFCURVE",
"501 -16 QCURVE SMOOTH",
"694 -16 OFFCURVE",
"927 170 OFFCURVE",
"927 324 QCURVE SMOOTH",
"927 533 OFFCURVE",
"714 597 QCURVE",
"805 634 OFFCURVE",
"906 771 OFFCURVE",
"906 850 QCURVE SMOOTH",
"906 1006 OFFCURVE",
"688 1181 OFFCURVE",
"500 1181 QCURVE SMOOTH",
"321 1181 OFFCURVE",
"91 1001 OFFCURVE",
"91 861 QCURVE",
"276 861 LINE",
"276 938 OFFCURVE",
"403 1029 OFFCURVE",
"501 1029 QCURVE SMOOTH",
"613 1029 OFFCURVE",
"721 933 OFFCURVE",
"721 850 QCURVE SMOOTH",
"721 766 OFFCURVE",
"592 667 OFFCURVE",
"474 667 QCURVE SMOOTH",
"352 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 14 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
175 1 191 1 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
223 1 239 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
31 1 47 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 1 127 1 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 37 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00462;
},
{
glyphname = two.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"970 151 LINE",
"332 151 LINE",
"660 430 LINE",
"815 591 OFFCURVE",
"914 765 OFFCURVE",
"914 846 QCURVE SMOOTH",
"914 995 OFFCURVE",
"700 1181 OFFCURVE",
"518 1181 QCURVE SMOOTH",
"323 1181 OFFCURVE",
"78 975 OFFCURVE",
"78 810 QCURVE",
"264 810 LINE",
"264 917 OFFCURVE",
"397 1029 OFFCURVE",
"518 1029 QCURVE SMOOTH",
"612 1029 OFFCURVE",
"728 924 OFFCURVE",
"728 842 QCURVE SMOOTH",
"728 777 OFFCURVE",
"635 638 OFFCURVE",
"532 544 QCURVE",
"105 131 LINE",
"105 0 LINE",
"970 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
22 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00463;
},
{
glyphname = one.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"669 1168 LINE",
"643 1168 LINE",
"152 1003 LINE",
"152 844 LINE",
"483 943 LINE",
"483 0 LINE",
"669 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00464;
},
{
glyphname = zero.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"939 684 LINE SMOOTH",
"936 923 OFFCURVE",
"721 1181 OFFCURVE",
"518 1181 QCURVE SMOOTH",
"316 1181 OFFCURVE",
"99 920 OFFCURVE",
"99 671 QCURVE SMOOTH",
"99 489 LINE SMOOTH",
"101 245 OFFCURVE",
"319 -16 OFFCURVE",
"520 -16 QCURVE SMOOTH",
"723 -16 OFFCURVE",
"939 249 OFFCURVE",
"939 497 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"284 695 LINE SMOOTH",
"284 1028 OFFCURVE",
"518 1028 QCURVE SMOOTH",
"753 1028 OFFCURVE",
"753 699 QCURVE SMOOTH",
"753 474 LINE SMOOTH",
"753 135 OFFCURVE",
"520 135 QCURVE SMOOTH",
"406 135 OFFCURVE",
"284 303 OFFCURVE",
"284 470 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00465;
},
{
glyphname = Z.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"968 1044 LINE",
"968 1165 LINE",
"80 1165 LINE",
"80 1012 LINE",
"735 1012 LINE",
"71 124 LINE",
"71 0 LINE",
"992 0 LINE",
"992 151 LINE",
"303 151 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1059;
}
);
note = glyph00466;
},
{
glyphname = Y.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"221 1165 LINE",
"13 1165 LINE",
"437 418 LINE",
"437 0 LINE",
"622 0 LINE",
"622 407 LINE",
"1052 1165 LINE",
"844 1165 LINE",
"532 586 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1067;
}
);
leftKerningGroup = Y.c2sc;
note = glyph00467;
},
{
glyphname = X.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"266 1165 LINE",
"47 1165 LINE",
"444 587 LINE",
"38 0 LINE",
"258 0 LINE",
"554 443 LINE",
"853 0 LINE",
"1073 0 LINE",
"664 587 LINE",
"1059 1165 LINE",
"839 1165 LINE",
"552 730 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1108;
}
);
leftKerningGroup = X.c2sc;
note = glyph00468;
},
{
glyphname = W.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"232 1165 LINE",
"49 1165 LINE",
"346 0 LINE",
"519 0 LINE",
"787 917 LINE",
"788 922 LINE",
"789 917 LINE",
"1049 0 LINE",
"1223 0 LINE",
"1521 1165 LINE",
"1337 1165 LINE",
"1139 296 LINE",
"1127 216 LINE",
"1114 275 LINE",
"870 1165 LINE",
"705 1165 LINE",
"457 278 LINE",
"442 214 LINE",
"431 294 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1557;
}
);
leftKerningGroup = W.c2sc;
note = glyph00469;
},
{
glyphname = V.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"219 1165 LINE",
"20 1165 LINE",
"477 0 LINE",
"650 0 LINE",
"1107 1165 LINE",
"909 1165 LINE",
"589 290 LINE",
"563 198 LINE",
"538 292 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
note = glyph00470;
},
{
glyphname = U.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"849 1165 LINE",
"849 385 LINE SMOOTH",
"849 262 OFFCURVE",
"706 135 OFFCURVE",
"575 135 QCURVE SMOOTH",
"442 135 OFFCURVE",
"299 264 OFFCURVE",
"299 385 QCURVE SMOOTH",
"299 1165 LINE",
"116 1165 LINE",
"116 377 LINE SMOOTH",
"119 195 OFFCURVE",
"365 -16 OFFCURVE",
"575 -16 QCURVE SMOOTH",
"784 -16 OFFCURVE",
"1034 203 OFFCURVE",
"1034 385 QCURVE SMOOTH",
"1034 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1148;
}
);
leftKerningGroup = U.c2sc;
note = glyph00471;
},
{
glyphname = T.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1021 1165 LINE",
"40 1165 LINE",
"40 1012 LINE",
"437 1012 LINE",
"437 0 LINE",
"622 0 LINE",
"622 1012 LINE",
"1021 1012 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1062;
}
);
leftKerningGroup = T.c2sc;
note = glyph00472;
rightKerningGroup = T.c2sc;
},
{
glyphname = S.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"803 224 OFFCURVE",
"673 133 OFFCURVE",
"547 133 QCURVE SMOOTH",
"407 133 OFFCURVE",
"253 247 OFFCURVE",
"253 349 QCURVE",
"67 349 LINE",
"67 187 OFFCURVE",
"340 -16 OFFCURVE",
"547 -16 QCURVE SMOOTH",
"746 -16 OFFCURVE",
"989 153 OFFCURVE",
"989 300 QCURVE SMOOTH",
"989 391 OFFCURVE",
"903 527 OFFCURVE",
"727 628 OFFCURVE",
"415 708 OFFCURVE",
"292 796 OFFCURVE",
"292 861 QCURVE SMOOTH",
"292 941 OFFCURVE",
"426 1030 OFFCURVE",
"539 1030 QCURVE SMOOTH",
"660 1030 OFFCURVE",
"801 923 OFFCURVE",
"801 825 QCURVE",
"986 825 LINE",
"986 981 OFFCURVE",
"737 1181 OFFCURVE",
"541 1181 QCURVE SMOOTH",
"350 1181 OFFCURVE",
"107 1003 OFFCURVE",
"107 860 QCURVE SMOOTH",
"107 681 OFFCURVE",
"302 583 QCURVE SMOOTH",
"388 540 OFFCURVE",
"682 466 OFFCURVE",
"803 378 OFFCURVE",
"803 298 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
}
);
leftKerningGroup = S.c2sc;
note = glyph00473;
},
{
glyphname = R.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"863 0 LINE",
"1061 0 LINE",
"1061 10 LINE",
"773 492 LINE",
"1008 581 OFFCURVE",
"1008 809 QCURVE SMOOTH",
"1008 979 OFFCURVE",
"777 1165 OFFCURVE",
"564 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 449 LINE",
"602 449 LINE"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"563 1012 LINE SMOOTH",
"689 1012 OFFCURVE",
"823 902 OFFCURVE",
"823 802 QCURVE SMOOTH",
"823 709 OFFCURVE",
"686 600 OFFCURVE",
"569 600 QCURVE SMOOTH",
"323 600 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1098;
}
);
note = glyph00474;
},
{
glyphname = Q.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1109 611 LINE SMOOTH",
"1109 874 OFFCURVE",
"832 1181 OFFCURVE",
"598 1181 QCURVE SMOOTH",
"448 1181 OFFCURVE",
"216 1043 OFFCURVE",
"89 784 OFFCURVE",
"89 615 QCURVE SMOOTH",
"89 553 LINE SMOOTH",
"89 289 OFFCURVE",
"372 -16 OFFCURVE",
"600 -16 QCURVE SMOOTH",
"670 -16 OFFCURVE",
"724 -3 QCURVE",
"987 -202 LINE",
"1111 -91 LINE",
"895 69 LINE",
"997 139 OFFCURVE",
"1109 382 OFFCURVE",
"1109 548 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274 633 LINE SMOOTH",
"278 818 OFFCURVE",
"450 1025 OFFCURVE",
"598 1025 QCURVE SMOOTH",
"754 1025 OFFCURVE",
"926 815 OFFCURVE",
"926 617 QCURVE SMOOTH",
"926 548 LINE SMOOTH",
"926 349 OFFCURVE",
"756 138 OFFCURVE",
"600 138 QCURVE SMOOTH",
"448 138 OFFCURVE",
"274 354 OFFCURVE",
"274 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = Q.c2sc;
note = glyph00475;
},
{
glyphname = P.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"603 438 LINE SMOOTH",
"817 438 OFFCURVE",
"1051 628 OFFCURVE",
"1051 798 QCURVE SMOOTH",
"1051 966 OFFCURVE",
"809 1165 OFFCURVE",
"605 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 438 LINE"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"610 1012 LINE SMOOTH",
"729 1011 OFFCURVE",
"865 892 OFFCURVE",
"865 796 QCURVE SMOOTH",
"865 696 OFFCURVE",
"729 590 OFFCURVE",
"605 590 QCURVE SMOOTH",
"323 590 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1116;
}
);
note = glyph00476;
},
{
glyphname = O.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1114 622 LINE SMOOTH",
"1112 877 OFFCURVE",
"837 1181 OFFCURVE",
"604 1181 QCURVE SMOOTH",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 553 LINE SMOOTH",
"96 290 OFFCURVE",
"377 -16 OFFCURVE",
"606 -16 QCURVE SMOOTH",
"838 -16 OFFCURVE",
"1114 287 OFFCURVE",
"1114 548 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE SMOOTH",
"759 1025 OFFCURVE",
"931 815 OFFCURVE",
"931 617 QCURVE SMOOTH",
"931 548 LINE SMOOTH",
"931 349 OFFCURVE",
"762 138 OFFCURVE",
"606 138 QCURVE SMOOTH",
"455 138 OFFCURVE",
"279 353 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = Q.c2sc;
note = glyph00477;
rightKerningGroup = O.c2sc;
},
{
glyphname = N.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 1165 LINE",
"928 1165 LINE",
"928 288 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 876 LINE",
"928 0 LINE",
"1112 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00478;
},
{
glyphname = M.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 1165 LINE",
"138 0 LINE",
"322 0 LINE",
"322 401 LINE",
"303 930 LINE",
"700 0 LINE",
"836 0 LINE",
"1234 934 LINE",
"1215 401 LINE",
"1215 0 LINE",
"1399 0 LINE",
"1399 1165 LINE",
"1158 1165 LINE",
"769 254 LINE",
"378 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1538;
}
);
note = glyph00479;
},
{
glyphname = L.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"907 0 LINE",
"907 151 LINE",
"323 151 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 948;
}
);
note = glyph00480;
rightKerningGroup = L.c2sc;
},
{
glyphname = K.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"886 0 LINE",
"1111 0 LINE",
"598 646 LINE",
"1077 1165 LINE",
"850 1165 LINE",
"453 754 LINE",
"323 610 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 377 LINE",
"470 519 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 2 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1108;
}
);
note = glyph00481;
rightKerningGroup = K.c2sc;
},
{
glyphname = J.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"658 339 LINE SMOOTH",
"658 244 OFFCURVE",
"548 135 OFFCURVE",
"456 135 QCURVE SMOOTH",
"342 135 OFFCURVE",
"229 237 OFFCURVE",
"229 331 QCURVE",
"43 331 LINE",
"43 167 OFFCURVE",
"262 -16 OFFCURVE",
"456 -16 QCURVE SMOOTH",
"633 -16 OFFCURVE",
"845 181 OFFCURVE",
"845 338 QCURVE SMOOTH",
"845 1165 LINE",
"658 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 975;
}
);
note = glyph00482;
},
{
glyphname = I.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"337 1165 LINE",
"151 1165 LINE",
"151 0 LINE",
"337 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 488;
}
);
note = glyph00483;
},
{
glyphname = H.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 1165 LINE",
"927 1165 LINE",
"927 650 LINE",
"323 650 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 498 LINE",
"927 498 LINE",
"927 0 LINE",
"1112 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
163 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00484;
},
{
glyphname = G.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1077 591 LINE",
"612 591 LINE",
"612 447 LINE",
"893 447 LINE",
"893 209 LINE",
"812 135 OFFCURVE",
"630 135 QCURVE SMOOTH",
"470 135 OFFCURVE",
"285 350 OFFCURVE",
"285 540 QCURVE SMOOTH",
"285 624 LINE SMOOTH",
"285 823 OFFCURVE",
"451 1029 OFFCURVE",
"610 1029 QCURVE SMOOTH",
"855 1029 OFFCURVE",
"893 812 QCURVE",
"1077 812 LINE",
"1050 993 OFFCURVE",
"808 1181 OFFCURVE",
"608 1181 QCURVE SMOOTH",
"366 1181 OFFCURVE",
"99 886 OFFCURVE",
"99 624 QCURVE SMOOTH",
"99 534 LINE SMOOTH",
"101 282 OFFCURVE",
"389 -16 OFFCURVE",
"627 -16 QCURVE SMOOTH",
"778 -16 OFFCURVE",
"1011 67 OFFCURVE",
"1077 150 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
13 29 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1196;
}
);
leftKerningGroup = Q.c2sc;
note = glyph00485;
},
{
glyphname = F.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"843 652 LINE",
"323 652 LINE",
"323 1012 LINE",
"923 1012 LINE",
"923 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 499 LINE",
"843 499 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 971;
}
);
note = glyph00486;
},
{
glyphname = dollar.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"803 224 OFFCURVE",
"673 133 OFFCURVE",
"547 133 QCURVE SMOOTH",
"407 133 OFFCURVE",
"253 247 OFFCURVE",
"253 349 QCURVE",
"67 349 LINE",
"67 201 OFFCURVE",
"290 7 OFFCURVE",
"476 -12 QCURVE",
"476 -237 LINE",
"625 -237 LINE",
"625 -12 LINE",
"794 4 OFFCURVE",
"989 170 OFFCURVE",
"989 300 QCURVE SMOOTH",
"989 391 OFFCURVE",
"903 527 OFFCURVE",
"727 628 OFFCURVE",
"415 708 OFFCURVE",
"292 796 OFFCURVE",
"292 861 QCURVE SMOOTH",
"292 941 OFFCURVE",
"426 1030 OFFCURVE",
"539 1030 QCURVE SMOOTH",
"660 1030 OFFCURVE",
"801 923 OFFCURVE",
"801 825 QCURVE",
"986 825 LINE",
"986 961 OFFCURVE",
"788 1155 OFFCURVE",
"625 1176 QCURVE",
"625 1395 LINE",
"476 1395 LINE",
"476 1178 LINE",
"310 1162 OFFCURVE",
"107 990 OFFCURVE",
"107 860 QCURVE SMOOTH",
"107 681 OFFCURVE",
"302 583 QCURVE SMOOTH",
"388 540 OFFCURVE",
"682 466 OFFCURVE",
"803 378 OFFCURVE",
"803 298 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
}
);
note = glyph00487;
},
{
glyphname = sterling.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"797 621 LINE",
"393 621 LINE",
"389 744 LINE SMOOTH",
"385 882 OFFCURVE",
"489 1025 OFFCURVE",
"582 1025 QCURVE SMOOTH",
"678 1025 OFFCURVE",
"782 906 OFFCURVE",
"782 794 QCURVE",
"967 794 LINE",
"967 977 OFFCURVE",
"765 1181 OFFCURVE",
"582 1181 QCURVE SMOOTH",
"401 1181 OFFCURVE",
"198 945 OFFCURVE",
"204 744 QCURVE SMOOTH",
"208 621 LINE",
"48 621 LINE",
"48 500 LINE",
"212 500 LINE",
"213 466 LINE",
"212 396 LINE SMOOTH",
"203 175 OFFCURVE",
"124 152 QCURVE",
"114 152 LINE",
"114 0 LINE",
"1006 0 LINE",
"1007 152 LINE",
"347 152 LINE",
"403 263 OFFCURVE",
"398 466 QCURVE SMOOTH",
"397 500 LINE",
"797 500 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 7 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
14 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1075;
}
);
note = glyph00488;
},
{
glyphname = yen.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"212 1165 LINE",
"13 1165 LINE",
"313 537 LINE",
"94 537 LINE",
"94 416 LINE",
"368 416 LINE",
"368 341 LINE",
"94 341 LINE",
"94 221 LINE",
"368 221 LINE",
"368 0 LINE",
"553 0 LINE",
"553 221 LINE",
"827 221 LINE",
"827 341 LINE",
"553 341 LINE",
"553 409 LINE",
"556 416 LINE",
"827 416 LINE",
"827 537 LINE",
"614 537 LINE",
"914 1165 LINE",
"718 1165 LINE",
"465 589 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 12 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 1 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 929;
}
);
note = glyph00489;
},
{
glyphname = Gamma.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"901 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 1012 LINE",
"901 1012 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 943;
}
);
note = glyph00490;
},
{
glyphname = Delta.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"650 1165 LINE",
"477 1165 LINE",
"20 0 LINE",
"1107 0 LINE"
);
},
{
closed = 1;
nodes = (
"538 872 LINE",
"563 966 LINE",
"589 874 LINE",
"853 152 LINE",
"274 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
leftKerningGroup = Delta.c2sc;
note = glyph00491;
rightKerningGroup = Delta.c2sc;
},
{
glyphname = Theta.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"853 658 LINE",
"372 658 LINE",
"372 505 LINE",
"853 505 LINE"
);
},
{
closed = 1;
nodes = (
"96 290 OFFCURVE",
"377 -16 OFFCURVE",
"606 -16 QCURVE SMOOTH",
"838 -16 OFFCURVE",
"1114 287 OFFCURVE",
"1114 548 QCURVE SMOOTH",
"1114 622 LINE SMOOTH",
"1112 877 OFFCURVE",
"837 1181 OFFCURVE",
"604 1181 QCURVE SMOOTH",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 553 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE SMOOTH",
"759 1025 OFFCURVE",
"931 815 OFFCURVE",
"931 617 QCURVE SMOOTH",
"931 548 LINE SMOOTH",
"931 349 OFFCURVE",
"762 138 OFFCURVE",
"606 138 QCURVE SMOOTH",
"455 138 OFFCURVE",
"279 353 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 7 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 5 values pushed */
96 2 112 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
96 2 112 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = Q.c2sc;
note = glyph00492;
rightKerningGroup = O.c2sc;
},
{
glyphname = Lambda.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"538 872 LINE",
"563 966 LINE",
"589 874 LINE",
"909 0 LINE",
"1107 0 LINE",
"650 1165 LINE",
"477 1165 LINE",
"20 0 LINE",
"219 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
leftKerningGroup = Delta.c2sc;
note = glyph00493;
rightKerningGroup = Delta.c2sc;
},
{
glyphname = Xi.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"843 152 LINE",
"62 152 LINE",
"62 0 LINE",
"843 0 LINE"
);
},
{
closed = 1;
nodes = (
"843 1012 LINE",
"843 1165 LINE",
"62 1165 LINE",
"62 1012 LINE"
);
},
{
closed = 1;
nodes = (
"776 531 LINE",
"776 683 LINE",
"127 683 LINE",
"127 531 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 12 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 10 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 905;
}
);
note = glyph00494;
},
{
glyphname = Pi.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1092 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 1012 LINE",
"906 1012 LINE",
"906 0 LINE",
"1092 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 8 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
}
);
note = glyph00495;
},
{
glyphname = Sigma.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"623 595 LINE",
"293 1012 LINE",
"918 1012 LINE",
"918 1165 LINE",
"63 1165 LINE",
"63 1021 LINE",
"400 583 LINE",
"63 144 LINE",
"63 0 LINE",
"968 0 LINE",
"968 153 LINE",
"293 153 LINE",
"623 570 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1007;
}
);
note = glyph00496;
},
{
glyphname = Phi.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"784 1165 LINE",
"599 1165 LINE",
"599 1047 LINE",
"368 1034 OFFCURVE",
"96 782 OFFCURVE",
"96 578 QCURVE SMOOTH",
"96 376 OFFCURVE",
"365 123 OFFCURVE",
"599 110 QCURVE",
"599 0 LINE",
"784 0 LINE",
"784 110 LINE",
"1011 123 OFFCURVE",
"1286 375 OFFCURVE",
"1286 580 QCURVE SMOOTH",
"1286 783 OFFCURVE",
"1014 1033 OFFCURVE",
"784 1046 QCURVE"
);
},
{
closed = 1;
nodes = (
"280 732 OFFCURVE",
"445 882 OFFCURVE",
"599 891 QCURVE",
"599 265 LINE",
"280 282 OFFCURVE",
"280 578 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"784 891 LINE",
"936 882 OFFCURVE",
"1102 733 OFFCURVE",
"1102 580 QCURVE SMOOTH",
"1102 425 OFFCURVE",
"936 275 OFFCURVE",
"784 265 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 16 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
9 8 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1383;
}
);
note = glyph00497;
},
{
glyphname = Psi.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"744 1165 LINE",
"558 1165 LINE",
"558 441 LINE",
"282 486 OFFCURVE",
"282 856 QCURVE SMOOTH",
"282 1165 LINE",
"96 1165 LINE",
"96 834 LINE SMOOTH",
"101 592 OFFCURVE",
"341 307 OFFCURVE",
"558 287 QCURVE",
"558 0 LINE",
"744 0 LINE",
"744 289 LINE",
"961 313 OFFCURVE",
"1203 599 OFFCURVE",
"1206 842 QCURVE SMOOTH",
"1206 1165 LINE",
"1021 1165 LINE",
"1021 857 LINE SMOOTH",
"1021 494 OFFCURVE",
"744 443 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1303;
}
);
note = glyph00498;
},
{
glyphname = Ohm.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"699 0 LINE",
"1150 0 LINE",
"1150 151 LINE",
"969 151 LINE",
"1147 307 OFFCURVE",
"1147 616 QCURVE SMOOTH",
"1147 644 LINE SMOOTH",
"1147 889 OFFCURVE",
"863 1181 OFFCURVE",
"631 1181 QCURVE SMOOTH",
"400 1181 OFFCURVE",
"117 890 OFFCURVE",
"117 652 QCURVE SMOOTH",
"117 622 LINE SMOOTH",
"117 308 OFFCURVE",
"296 151 QCURVE",
"121 151 LINE",
"121 0 LINE",
"571 0 LINE",
"571 157 LINE",
"444 189 OFFCURVE",
"303 412 OFFCURVE",
"303 616 QCURVE SMOOTH",
"303 649 LINE SMOOTH",
"303 832 OFFCURVE",
"475 1025 OFFCURVE",
"631 1025 QCURVE SMOOTH",
"788 1025 OFFCURVE",
"962 833 OFFCURVE",
"962 654 QCURVE SMOOTH",
"962 616 LINE SMOOTH",
"962 411 OFFCURVE",
"835 188 OFFCURVE",
"699 157 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1266;
}
);
note = glyph00499;
},
{
glyphname = lira.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"389 744 LINE SMOOTH",
"385 882 OFFCURVE",
"489 1025 OFFCURVE",
"582 1025 QCURVE SMOOTH",
"678 1025 OFFCURVE",
"782 906 OFFCURVE",
"782 794 QCURVE",
"967 794 LINE",
"967 977 OFFCURVE",
"765 1181 OFFCURVE",
"582 1181 QCURVE SMOOTH",
"401 1181 OFFCURVE",
"198 945 OFFCURVE",
"204 744 QCURVE SMOOTH",
"206 680 LINE",
"48 680 LINE",
"48 559 LINE",
"210 559 LINE",
"213 466 LINE",
"213 450 LINE",
"48 450 LINE",
"48 329 LINE",
"207 329 LINE",
"187 170 OFFCURVE",
"124 152 QCURVE",
"114 152 LINE",
"114 0 LINE",
"1006 0 LINE",
"1007 152 LINE",
"347 152 LINE",
"383 223 OFFCURVE",
"393 329 QCURVE",
"797 329 LINE",
"797 450 LINE",
"398 450 LINE",
"398 466 LINE",
"395 559 LINE",
"797 559 LINE",
"797 680 LINE",
"391 680 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
29 40 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 29 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 6 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
15 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
79 6 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
31 1 47 1 63 1 79 1 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
2 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
33 1 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1075;
}
);
note = glyph00539;
},
{
glyphname = euro.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"815 527 LINE",
"403 527 LINE",
"403 636 LINE",
"815 636 LINE",
"815 757 LINE",
"407 757 LINE",
"439 1029 OFFCURVE",
"695 1029 QCURVE SMOOTH",
"816 1029 OFFCURVE",
"905 1001 QCURVE",
"926 1150 LINE",
"791 1181 OFFCURVE",
"695 1181 QCURVE SMOOTH",
"488 1181 OFFCURVE",
"243 961 OFFCURVE",
"221 757 QCURVE",
"66 757 LINE",
"66 636 LINE",
"217 636 LINE",
"217 527 LINE",
"66 527 LINE",
"66 406 LINE",
"221 406 LINE",
"241 202 OFFCURVE",
"486 -16 OFFCURVE",
"697 -16 QCURVE SMOOTH",
"808 -16 OFFCURVE",
"926 14 QCURVE",
"899 163 LINE",
"795 135 OFFCURVE",
"697 135 QCURVE SMOOTH",
"439 135 OFFCURVE",
"407 406 QCURVE",
"815 406 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 21 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 33 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
16 33 32 33 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
31 18 47 18 63 18 79 18 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 18 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
15 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 995;
}
);
note = glyph00540;
},
{
glyphname = numero.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1902 331 LINE",
"1345 331 LINE",
"1345 189 LINE",
"1902 189 LINE"
);
},
{
closed = 1;
nodes = (
"323 0 LINE",
"323 876 LINE",
"928 0 LINE",
"1112 0 LINE",
"1112 1165 LINE",
"928 1165 LINE",
"928 288 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1280 611 OFFCURVE",
"1471 428 OFFCURVE",
"1624 428 QCURVE SMOOTH",
"1775 428 OFFCURVE",
"1965 610 OFFCURVE",
"1965 762 QCURVE SMOOTH",
"1965 842 LINE SMOOTH",
"1965 997 OFFCURVE",
"1776 1181 OFFCURVE",
"1468 1181 OFFCURVE",
"1280 995 OFFCURVE",
"1280 846 QCURVE SMOOTH",
"1280 767 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1443 843 LINE SMOOTH",
"1443 937 OFFCURVE",
"1540 1040 OFFCURVE",
"1622 1040 QCURVE SMOOTH",
"1705 1040 OFFCURVE",
"1802 936 OFFCURVE",
"1802 846 QCURVE SMOOTH",
"1802 764 LINE SMOOTH",
"1802 672 OFFCURVE",
"1708 567 OFFCURVE",
"1624 567 QCURVE SMOOTH",
"1537 567 OFFCURVE",
"1443 673 OFFCURVE",
"1443 762 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
31 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
37 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 2 16 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 39 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
38 32 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2082;
}
);
note = glyph00541;
},
{
glyphname = ruble.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"676 332 LINE",
"418 332 LINE",
"418 421 LINE",
"709 421 LINE SMOOTH",
"899 425 OFFCURVE",
"1126 628 OFFCURVE",
"1126 793 QCURVE SMOOTH",
"1126 961 OFFCURVE",
"892 1165 OFFCURVE",
"695 1165 QCURVE SMOOTH",
"232 1165 LINE",
"232 573 LINE",
"40 573 LINE",
"40 421 LINE",
"232 421 LINE",
"232 332 LINE",
"40 332 LINE",
"40 180 LINE",
"232 180 LINE",
"232 0 LINE",
"418 0 LINE",
"418 180 LINE",
"676 180 LINE"
);
},
{
closed = 1;
nodes = (
"418 1013 LINE",
"696 1013 LINE SMOOTH",
"808 1013 OFFCURVE",
"940 891 OFFCURVE",
"940 791 QCURVE SMOOTH",
"940 693 OFFCURVE",
"809 573 OFFCURVE",
"695 573 QCURVE SMOOTH",
"418 573 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
15 11 31 11 47 11 63 11 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 11 207 11 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1195;
}
);
note = glyph00542;
},
{
glyphname = three.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"265 343 LINE",
"353 343 LINE SMOOTH",
"509 341 OFFCURVE",
"509 228 QCURVE SMOOTH",
"509 177 OFFCURVE",
"436 117 OFFCURVE",
"366 117 QCURVE SMOOTH",
"299 117 OFFCURVE",
"220 177 OFFCURVE",
"220 222 QCURVE",
"62 222 LINE",
"62 115 OFFCURVE",
"228 -11 OFFCURVE",
"360 -11 QCURVE SMOOTH",
"496 -11 OFFCURVE",
"666 114 OFFCURVE",
"666 220 QCURVE SMOOTH",
"666 363 OFFCURVE",
"517 404 QCURVE",
"583 429 OFFCURVE",
"653 520 OFFCURVE",
"653 575 QCURVE SMOOTH",
"653 679 OFFCURVE",
"497 800 OFFCURVE",
"360 800 QCURVE SMOOTH",
"236 800 OFFCURVE",
"73 677 OFFCURVE",
"73 579 QCURVE",
"230 579 LINE",
"230 620 OFFCURVE",
"305 671 OFFCURVE",
"362 671 QCURVE SMOOTH",
"432 671 OFFCURVE",
"495 613 OFFCURVE",
"495 568 QCURVE SMOOTH",
"495 520 OFFCURVE",
"423 459 OFFCURVE",
"349 459 QCURVE SMOOTH",
"265 459 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00543;
},
{
glyphname = four.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"592 789 LINE",
"431 789 LINE",
"54 271 LINE",
"60 169 LINE",
"435 169 LINE",
"435 0 LINE",
"592 0 LINE",
"592 169 LINE",
"699 169 LINE",
"699 299 LINE",
"592 299 LINE"
);
},
{
closed = 1;
nodes = (
"418 560 LINE",
"435 588 LINE",
"435 299 LINE",
"212 299 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 11 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00544;
},
{
glyphname = five.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"238 356 LINE",
"297 399 OFFCURVE",
"370 399 QCURVE SMOOTH",
"444 399 OFFCURVE",
"522 322 OFFCURVE",
"522 260 QCURVE SMOOTH",
"522 192 OFFCURVE",
"450 117 OFFCURVE",
"385 117 QCURVE SMOOTH",
"256 117 OFFCURVE",
"246 216 QCURVE",
"91 216 LINE",
"97 115 OFFCURVE",
"264 -11 OFFCURVE",
"385 -11 QCURVE SMOOTH",
"519 -11 OFFCURVE",
"679 134 OFFCURVE",
"679 258 QCURVE SMOOTH",
"679 379 OFFCURVE",
"536 516 OFFCURVE",
"408 516 QCURVE SMOOTH",
"334 516 OFFCURVE",
"269 487 QCURVE",
"291 657 LINE",
"640 657 LINE",
"640 789 LINE",
"162 789 LINE",
"112 387 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00545;
},
{
glyphname = six.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"513 798 LINE SMOOTH",
"308 793 OFFCURVE",
"86 565 OFFCURVE",
"86 357 QCURVE SMOOTH",
"86 306 LINE SMOOTH",
"86 155 OFFCURVE",
"253 -11 OFFCURVE",
"392 -11 QCURVE SMOOTH",
"524 -11 OFFCURVE",
"683 143 OFFCURVE",
"683 259 QCURVE SMOOTH",
"683 378 OFFCURVE",
"548 523 OFFCURVE",
"430 523 QCURVE SMOOTH",
"316 523 OFFCURVE",
"244 446 QCURVE",
"267 665 OFFCURVE",
"535 667 QCURVE SMOOTH",
"552 667 LINE",
"552 798 LINE"
);
},
{
closed = 1;
nodes = (
"242 320 LINE",
"259 352 OFFCURVE",
"336 396 OFFCURVE",
"387 396 QCURVE SMOOTH",
"456 396 OFFCURVE",
"527 320 OFFCURVE",
"527 196 OFFCURVE",
"449 117 OFFCURVE",
"388 117 QCURVE SMOOTH",
"325 117 OFFCURVE",
"242 202 OFFCURVE",
"242 286 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00546;
},
{
glyphname = seven.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"677 789 LINE",
"58 789 LINE",
"58 659 LINE",
"511 659 LINE",
"162 0 LINE",
"328 0 LINE",
"677 699 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00547;
},
{
glyphname = eight.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"651 682 OFFCURVE",
"500 800 OFFCURVE",
"374 800 QCURVE SMOOTH",
"249 800 OFFCURVE",
"98 682 OFFCURVE",
"98 579 QCURVE SMOOTH",
"98 461 OFFCURVE",
"217 406 QCURVE",
"153 379 OFFCURVE",
"79 282 OFFCURVE",
"79 216 QCURVE SMOOTH",
"79 110 OFFCURVE",
"239 -11 OFFCURVE",
"511 -11 OFFCURVE",
"671 110 OFFCURVE",
"671 216 QCURVE SMOOTH",
"671 347 OFFCURVE",
"532 406 QCURVE",
"651 461 OFFCURVE",
"651 579 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"236 280 OFFCURVE",
"311 338 OFFCURVE",
"374 338 QCURVE SMOOTH",
"436 338 OFFCURVE",
"514 280 OFFCURVE",
"514 228 QCURVE SMOOTH",
"514 175 OFFCURVE",
"438 117 OFFCURVE",
"312 117 OFFCURVE",
"236 175 OFFCURVE",
"236 228 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"256 618 OFFCURVE",
"319 671 OFFCURVE",
"374 671 QCURVE SMOOTH",
"430 671 OFFCURVE",
"494 616 OFFCURVE",
"494 524 OFFCURVE",
"431 468 OFFCURVE",
"319 468 OFFCURVE",
"256 524 OFFCURVE",
"256 570 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
36 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
223 36 239 36 255 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 7 values pushed */
15 36 31 36 47 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 36 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 36 31 36 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
23 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 36 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 23 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00548;
},
{
glyphname = nine.dnom;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"491 218 OFFCURVE",
"359 120 OFFCURVE",
"209 120 QCURVE",
"209 -7 LINE",
"264 -6 LINE SMOOTH",
"661 14 OFFCURVE",
"661 426 QCURVE SMOOTH",
"661 487 LINE SMOOTH",
"658 635 OFFCURVE",
"502 800 OFFCURVE",
"365 800 QCURVE SMOOTH",
"236 800 OFFCURVE",
"73 640 OFFCURVE",
"73 519 QCURVE SMOOTH",
"73 393 OFFCURVE",
"214 255 OFFCURVE",
"332 255 QCURVE SMOOTH",
"433 255 OFFCURVE",
"502 320 QCURVE"
);
},
{
closed = 1;
nodes = (
"230 586 OFFCURVE",
"306 670 OFFCURVE",
"365 670 QCURVE SMOOTH",
"425 670 OFFCURVE",
"504 590 OFFCURVE",
"504 507 QCURVE SMOOTH",
"504 447 LINE",
"462 376 OFFCURVE",
"368 376 QCURVE SMOOTH",
"304 376 OFFCURVE",
"230 454 OFFCURVE",
"230 519 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00549;
},
{
glyphname = glyph00550;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"779 802 LINE",
"143 802 LINE",
"143 651 LINE",
"779 651 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 918;
}
);
note = glyph00550;
},
{
glyphname = glyph00551;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"288 1466 LINE",
"402 1466 LINE",
"622 1650 LINE",
"433 1650 LINE"
);
},
{
closed = 1;
nodes = (
"158 1182 OFFCURVE",
"258 1088 OFFCURVE",
"330 1088 QCURVE SMOOTH",
"400 1088 OFFCURVE",
"497 1180 OFFCURVE",
"497 1251 QCURVE SMOOTH",
"497 1324 OFFCURVE",
"398 1418 OFFCURVE",
"330 1418 QCURVE SMOOTH",
"258 1418 OFFCURVE",
"158 1321 OFFCURVE",
"158 1251 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"243 1287 OFFCURVE",
"293 1339 OFFCURVE",
"330 1339 QCURVE SMOOTH",
"365 1339 OFFCURVE",
"413 1289 OFFCURVE",
"413 1251 QCURVE SMOOTH",
"413 1215 OFFCURVE",
"365 1166 OFFCURVE",
"330 1166 QCURVE SMOOTH",
"294 1166 OFFCURVE",
"243 1216 OFFCURVE",
"243 1251 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
63 7 79 7 95 7 111 7 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
63 2 79 2 95 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 17 values pushed */
15 0 31 0 47 0 63 0 79 0 95 0 111 0 127 0 8 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
}
);
note = glyph00551;
},
{
glyphname = E.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"855 678 LINE",
"323 678 LINE",
"323 1012 LINE",
"936 1012 LINE",
"936 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"942 0 LINE",
"942 151 LINE",
"323 151 LINE",
"323 526 LINE",
"855 526 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
223 11 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
31 11 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 998;
}
);
note = glyph00552;
},
{
glyphname = g.ss01;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1039 1082 LINE",
"672 1082 LINE",
"601 1102 OFFCURVE",
"521 1102 QCURVE SMOOTH",
"334 1102 OFFCURVE",
"93 900 OFFCURVE",
"93 743 QCURVE SMOOTH",
"93 732 LINE SMOOTH",
"93 535 OFFCURVE",
"267 429 QCURVE",
"152 347 OFFCURVE",
"152 223 QCURVE SMOOTH",
"152 149 OFFCURVE",
"208 102 QCURVE",
"124 60 OFFCURVE",
"30 -78 OFFCURVE",
"30 -161 QCURVE SMOOTH",
"30 -283 OFFCURVE",
"285 -438 OFFCURVE",
"494 -438 QCURVE SMOOTH",
"645 -438 OFFCURVE",
"889 -342 OFFCURVE",
"1030 -181 OFFCURVE",
"1030 -97 QCURVE SMOOTH",
"1030 46 OFFCURVE",
"824 195 OFFCURVE",
"624 196 QCURVE SMOOTH",
"441 196 LINE SMOOTH",
"319 198 OFFCURVE",
"319 278 QCURVE SMOOTH",
"319 342 OFFCURVE",
"371 384 QCURVE",
"444 363 OFFCURVE",
"523 363 QCURVE SMOOTH",
"643 363 OFFCURVE",
"838 457 OFFCURVE",
"949 623 OFFCURVE",
"949 721 QCURVE SMOOTH",
"949 746 LINE SMOOTH",
"948 851 OFFCURVE",
"890 935 QCURVE",
"1041 935 LINE"
);
},
{
closed = 1;
nodes = (
"215 -69 OFFCURVE",
"275 24 OFFCURVE",
"331 50 QCURVE",
"394 44 LINE",
"633 44 LINE SMOOTH",
"741 42 OFFCURVE",
"845 -23 OFFCURVE",
"845 -97 QCURVE SMOOTH",
"845 -173 OFFCURVE",
"640 -287 OFFCURVE",
"494 -287 QCURVE SMOOTH",
"363 -287 OFFCURVE",
"215 -198 OFFCURVE",
"215 -124 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 740 LINE SMOOTH",
"278 830 OFFCURVE",
"416 950 OFFCURVE",
"626 950 OFFCURVE",
"764 830 OFFCURVE",
"764 743 QCURVE SMOOTH",
"764 725 LINE SMOOTH",
"764 637 OFFCURVE",
"626 515 OFFCURVE",
"523 515 QCURVE SMOOTH",
"418 515 OFFCURVE",
"278 638 OFFCURVE",
"278 721 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
38 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 22 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
14 8 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
144 14 160 14 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
55 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
28 55 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
32 8 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
48 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
59 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
66 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1082;
}
);
note = glyph00553;
},
{
glyphname = alpha.ss02;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"936 0 LINE",
"1112 0 LINE",
"999 540 LINE",
"1105 1082 LINE",
"929 1082 LINE",
"895 845 LINE",
"787 1102 OFFCURVE",
"522 1102 QCURVE SMOOTH",
"326 1102 OFFCURVE",
"100 785 OFFCURVE",
"100 521 QCURVE SMOOTH",
"100 506 LINE SMOOTH",
"100 262 OFFCURVE",
"328 -21 OFFCURVE",
"520 -21 QCURVE SMOOTH",
"790 -21 OFFCURVE",
"898 241 QCURVE"
);
},
{
closed = 1;
nodes = (
"285 723 OFFCURVE",
"434 950 OFFCURVE",
"568 950 QCURVE SMOOTH",
"675 950 OFFCURVE",
"821 747 OFFCURVE",
"849 557 QCURVE",
"849 521 LINE",
"777 130 OFFCURVE",
"566 130 QCURVE SMOOTH",
"431 130 OFFCURVE",
"285 325 OFFCURVE",
"285 500 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 9 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1219;
}
);
note = glyph00554;
},
{
glyphname = R.ss03;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"724 628 LINE SMOOTH",
"851 628 OFFCURVE",
"991 485 OFFCURVE",
"991 365 QCURVE SMOOTH",
"991 226 LINE SMOOTH",
"994 54 OFFCURVE",
"1053 0 QCURVE",
"1251 0 LINE",
"1251 24 LINE",
"1186 85 OFFCURVE",
"1184 226 QCURVE SMOOTH",
"1184 382 LINE SMOOTH",
"1179 644 OFFCURVE",
"957 713 QCURVE",
"1194 812 OFFCURVE",
"1194 1041 QCURVE SMOOTH",
"1194 1245 OFFCURVE",
"943 1455 OFFCURVE",
"703 1455 QCURVE SMOOTH",
"177 1455 LINE",
"177 0 LINE",
"370 0 LINE",
"370 628 LINE"
);
},
{
closed = 1;
nodes = (
"370 1297 LINE",
"697 1297 LINE SMOOTH",
"1002 1297 OFFCURVE",
"1002 1041 QCURVE SMOOTH",
"1002 909 OFFCURVE",
"845 785 OFFCURVE",
"683 785 QCURVE SMOOTH",
"370 785 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 23 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1356;
}
);
note = glyph00555;
},
{
glyphname = K.ss04;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1074 0 LINE",
"1309 0 LINE",
"712 750 LINE",
"1268 1456 LINE",
"1029 1456 LINE",
"520 814 LINE",
"370 814 LINE",
"370 1456 LINE",
"178 1456 LINE",
"178 0 LINE",
"370 0 LINE",
"370 654 LINE",
"547 654 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 5 values pushed */
99 6 115 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
51 6 67 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
147 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 1 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1316;
}
);
note = glyph00556;
},
{
glyphname = k.ss04;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"825 0 LINE",
"1044 0 LINE",
"614 589 LINE",
"992 1082 LINE",
"773 1082 LINE",
"458 654 LINE",
"332 654 LINE",
"332 1536 LINE",
"146 1536 LINE",
"146 0 LINE",
"332 0 LINE",
"332 501 LINE",
"460 501 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1043;
}
);
note = glyph00557;
},
{
glyphname = K.ss05;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1037 0 LINE",
"1274 0 LINE",
"573 747 LINE",
"1234 1456 LINE",
"993 1456 LINE",
"382 809 LINE",
"370 809 LINE",
"370 1456 LINE",
"178 1456 LINE",
"178 0 LINE",
"370 0 LINE",
"370 693 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1341;
}
);
note = glyph00558;
},
{
glyphname = k.ss05;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"781 0 LINE",
"1009 0 LINE",
"498 583 LINE",
"967 1082 LINE",
"727 1082 LINE",
"333 653 LINE",
"332 653 LINE",
"332 1560 LINE",
"146 1560 LINE",
"146 0 LINE",
"332 0 LINE",
"332 499 LINE",
"336 499 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
note = glyph00559;
},
{
glyphname = D.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"481 0 LINE SMOOTH",
"744 0 OFFCURVE",
"1055 298 OFFCURVE",
"1055 550 QCURVE SMOOTH",
"1055 627 LINE SMOOTH",
"1052 786 OFFCURVE",
"912 1032 OFFCURVE",
"661 1165 OFFCURVE",
"499 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"499 1012 LINE SMOOTH",
"682 1012 OFFCURVE",
"871 807 OFFCURVE",
"871 615 QCURVE SMOOTH",
"871 551 LINE SMOOTH",
"871 359 OFFCURVE",
"673 151 OFFCURVE",
"487 151 QCURVE SMOOTH",
"323 151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1152;
}
);
note = glyph00560;
rightKerningGroup = O.c2sc;
},
{
glyphname = C.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"887 377 LINE",
"867 246 OFFCURVE",
"726 135 OFFCURVE",
"591 135 QCURVE SMOOTH",
"440 135 OFFCURVE",
"281 342 OFFCURVE",
"281 531 QCURVE SMOOTH",
"281 637 LINE SMOOTH",
"282 826 OFFCURVE",
"449 1029 OFFCURVE",
"602 1029 QCURVE SMOOTH",
"728 1029 OFFCURVE",
"869 913 OFFCURVE",
"887 783 QCURVE",
"1072 783 LINE",
"1053 970 OFFCURVE",
"806 1181 OFFCURVE",
"602 1181 QCURVE SMOOTH",
"450 1181 OFFCURVE",
"219 1045 OFFCURVE",
"96 796 OFFCURVE",
"96 632 QCURVE SMOOTH",
"96 538 LINE SMOOTH",
"96 279 OFFCURVE",
"367 -16 OFFCURVE",
"591 -16 QCURVE SMOOTH",
"800 -16 OFFCURVE",
"1052 190 OFFCURVE",
"1072 377 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1148;
}
);
leftKerningGroup = Q.c2sc;
note = glyph00561;
},
{
glyphname = B.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"588 0 LINE SMOOTH",
"789 1 OFFCURVE",
"1007 175 OFFCURVE",
"1007 333 QCURVE SMOOTH",
"1007 434 OFFCURVE",
"891 583 OFFCURVE",
"792 607 QCURVE",
"880 640 OFFCURVE",
"975 766 OFFCURVE",
"975 847 QCURVE SMOOTH",
"975 1002 OFFCURVE",
"753 1165 OFFCURVE",
"544 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"323 530 LINE",
"587 530 LINE SMOOTH",
"822 530 OFFCURVE",
"822 334 QCURVE SMOOTH",
"822 249 OFFCURVE",
"700 151 OFFCURVE",
"585 151 QCURVE SMOOTH",
"323 151 LINE"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"560 1012 LINE SMOOTH",
"789 1007 OFFCURVE",
"789 839 QCURVE SMOOTH",
"789 756 OFFCURVE",
"665 671 OFFCURVE",
"557 671 QCURVE SMOOTH",
"323 671 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 23 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
31 23 47 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
223 23 239 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1104;
}
);
note = glyph00562;
},
{
glyphname = A.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"948 0 LINE",
"1136 0 LINE",
"664 1165 LINE",
"498 1165 LINE",
"19 0 LINE",
"208 0 LINE",
"318 279 LINE",
"838 279 LINE"
);
},
{
closed = 1;
nodes = (
"580 939 LINE",
"779 430 LINE",
"378 430 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1157;
}
);
leftKerningGroup = Delta.c2sc;
note = glyph00563;
rightKerningGroup = Delta.c2sc;
},
{
glyphname = glyph00564;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"243 1546 OFFCURVE",
"159 1373 OFFCURVE",
"159 1296 QCURVE SMOOTH",
"159 1166 LINE",
"344 1166 LINE",
"344 1302 LINE SMOOTH",
"347 1413 OFFCURVE",
"406 1512 QCURVE",
"299 1595 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 509;
}
);
note = glyph00564;
},
{
glyphname = glyph00565;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"583 1456 LINE",
"583 1403 OFFCURVE",
"504 1340 OFFCURVE",
"433 1340 QCURVE SMOOTH",
"360 1340 OFFCURVE",
"281 1401 OFFCURVE",
"281 1456 QCURVE",
"129 1456 LINE",
"129 1361 OFFCURVE",
"297 1247 OFFCURVE",
"433 1247 QCURVE SMOOTH",
"568 1247 OFFCURVE",
"736 1361 OFFCURVE",
"736 1456 QCURVE"
);
},
{
closed = 1;
nodes = (
"402 1476 LINE",
"503 1476 LINE",
"391 1674 LINE",
"237 1674 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 13 values pushed */
15 7 31 7 47 7 63 7 79 7 95 7 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 15 values pushed */
15 15 31 15 47 15 63 15 79 15 95 15 111 15 7 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 932;
}
);
note = glyph00565;
},
{
glyphname = glyph00566;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-391 1429 LINE",
"-391 1391 OFFCURVE",
"-439 1340 OFFCURVE",
"-474 1340 QCURVE SMOOTH",
"-518 1340 OFFCURVE",
"-647 1415 OFFCURVE",
"-694 1415 QCURVE SMOOTH",
"-764 1415 OFFCURVE",
"-860 1308 OFFCURVE",
"-860 1233 QCURVE",
"-776 1212 LINE",
"-776 1250 OFFCURVE",
"-729 1301 OFFCURVE",
"-694 1301 QCURVE SMOOTH",
"-674 1301 OFFCURVE",
"-640 1292 OFFCURVE",
"-527 1226 OFFCURVE",
"-474 1226 QCURVE SMOOTH",
"-404 1226 OFFCURVE",
"-308 1331 OFFCURVE",
"-308 1405 QCURVE"
);
},
{
closed = 1;
nodes = (
"-543 1458 LINE",
"-361 1683 LINE",
"-532 1683 LINE",
"-663 1458 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
112 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
15 7 31 7 47 7 63 7 79 7 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 25 values pushed */
63 23 79 23 95 23 111 23 127 23 143 23 159 23 175 23 191 23 207 23 223 23 239 23 12 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
15 21 31 21 47 21 63 21 79 21 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = glyph00566;
},
{
glyphname = glyph00567;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"110 1249 LINE",
"308 1249 LINE",
"478 1408 LINE",
"647 1249 LINE",
"844 1249 LINE",
"554 1512 LINE",
"402 1512 LINE"
);
},
{
closed = 1;
nodes = (
"911 1426 LINE",
"1112 1685 LINE",
"912 1685 LINE",
"770 1426 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 0 31 0 47 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
4 3 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 7 31 7 47 7 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1007;
}
);
note = glyph00567;
},
{
glyphname = glyph00568;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"547 1493 LINE",
"395 1493 LINE",
"105 1231 LINE",
"301 1231 LINE",
"471 1389 LINE",
"641 1231 LINE",
"838 1231 LINE"
);
},
{
closed = 1;
nodes = (
"38 1408 LINE",
"178 1408 LINE",
"37 1666 LINE",
"-162 1666 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 6 31 6 47 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
2 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 10 31 10 47 10 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1011;
}
);
note = glyph00568;
},
{
glyphname = glyph00569;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"565 1514 LINE",
"377 1514 LINE",
"105 1252 LINE",
"274 1252 LINE",
"471 1438 LINE",
"668 1252 LINE",
"838 1252 LINE"
);
},
{
closed = 1;
nodes = (
"878 1651 OFFCURVE",
"878 1584 QCURVE SMOOTH",
"878 1551 OFFCURVE",
"819 1525 OFFCURVE",
"754 1521 QCURVE",
"755 1390 LINE",
"869 1390 LINE",
"870 1450 LINE",
"930 1457 OFFCURVE",
"1004 1523 OFFCURVE",
"1004 1582 QCURVE SMOOTH",
"1004 1655 OFFCURVE",
"870 1743 OFFCURVE",
"742 1743 QCURVE",
"737 1651 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 5 31 5 47 5 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
4 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
NPUSHB[ ]	/* 13 values pushed */
15 7 31 7 47 7 63 7 79 7 95 7 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 13 values pushed */
15 14 31 14 47 14 63 14 79 14 95 14 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 7 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
20 14 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1038;
}
);
note = glyph00569;
},
{
glyphname = glyph00570;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"537 1496 LINE",
"406 1496 LINE",
"105 1252 LINE",
"274 1252 LINE",
"471 1410 LINE",
"668 1252 LINE",
"838 1252 LINE"
);
},
{
closed = 1;
nodes = (
"284 1565 LINE",
"284 1594 OFFCURVE",
"338 1640 OFFCURVE",
"367 1640 QCURVE SMOOTH",
"407 1640 OFFCURVE",
"517 1569 OFFCURVE",
"571 1569 QCURVE SMOOTH",
"636 1569 OFFCURVE",
"732 1663 OFFCURVE",
"732 1725 QCURVE",
"654 1748 LINE",
"654 1720 OFFCURVE",
"602 1675 OFFCURVE",
"571 1675 QCURVE SMOOTH",
"533 1675 OFFCURVE",
"409 1745 OFFCURVE",
"367 1745 QCURVE SMOOTH",
"303 1745 OFFCURVE",
"207 1647 OFFCURVE",
"207 1584 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
15 6 31 6 47 6 63 6 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
4 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 6 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
63 10 79 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 13 values pushed */
15 13 31 13 47 13 63 13 79 13 95 13 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1012;
}
);
note = glyph00570;
},
{
glyphname = glyph00572;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"583 1456 LINE",
"583 1403 OFFCURVE",
"504 1340 OFFCURVE",
"433 1340 QCURVE SMOOTH",
"360 1340 OFFCURVE",
"281 1401 OFFCURVE",
"281 1456 QCURVE",
"129 1456 LINE",
"129 1361 OFFCURVE",
"297 1247 OFFCURVE",
"433 1247 QCURVE SMOOTH",
"568 1247 OFFCURVE",
"736 1361 OFFCURVE",
"736 1456 QCURVE"
);
},
{
closed = 1;
nodes = (
"476 1476 LINE",
"640 1674 LINE",
"487 1674 LINE",
"374 1476 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 13 values pushed */
15 7 31 7 47 7 63 7 79 7 95 7 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 15 values pushed */
15 15 31 15 47 15 63 15 79 15 95 15 111 15 7 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 927;
}
);
note = glyph00572;
},
{
glyphname = glyph00573;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"567 1456 LINE",
"567 1402 OFFCURVE",
"491 1341 OFFCURVE",
"422 1341 QCURVE SMOOTH",
"349 1341 OFFCURVE",
"275 1403 OFFCURVE",
"275 1456 QCURVE",
"129 1456 LINE",
"129 1363 OFFCURVE",
"290 1248 OFFCURVE",
"422 1248 QCURVE SMOOTH",
"553 1248 OFFCURVE",
"714 1362 OFFCURVE",
"714 1456 QCURVE"
);
},
{
closed = 1;
nodes = (
"505 1713 OFFCURVE",
"505 1654 QCURVE SMOOTH",
"505 1625 OFFCURVE",
"439 1601 OFFCURVE",
"365 1597 QCURVE",
"366 1473 LINE",
"494 1473 LINE",
"495 1535 LINE",
"563 1542 OFFCURVE",
"644 1601 OFFCURVE",
"644 1651 QCURVE SMOOTH",
"644 1717 OFFCURVE",
"496 1795 OFFCURVE",
"352 1795 QCURVE",
"345 1713 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 13 values pushed */
15 7 31 7 47 7 63 7 79 7 95 7 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 15 values pushed */
15 21 31 21 47 21 63 21 79 21 95 21 111 21 7 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 20 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
27 14 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 926;
}
);
note = glyph00573;
},
{
glyphname = zero.numr;
layers = (
{
components = (
{
name = zero.dnom;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = glyph00574;
},
{
glyphname = four.numr;
layers = (
{
components = (
{
name = four.dnom;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = glyph00575;
},
{
glyphname = five.numr;
layers = (
{
components = (
{
name = five.dnom;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = glyph00576;
},
{
glyphname = six.numr;
layers = (
{
components = (
{
name = six.dnom;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = glyph00577;
},
{
glyphname = seven.numr;
layers = (
{
components = (
{
name = seven.dnom;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = glyph00578;
},
{
glyphname = eight.numr;
layers = (
{
components = (
{
name = eight.dnom;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = glyph00579;
},
{
glyphname = nine.numr;
layers = (
{
components = (
{
name = nine.dnom;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
}
);
note = glyph00580;
},
{
glyphname = C.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1116 462 LINE",
"1090 293 OFFCURVE",
"914 136 OFFCURVE",
"753 136 QCURVE SMOOTH",
"628 136 OFFCURVE",
"428 280 OFFCURVE",
"318 536 OFFCURVE",
"318 697 QCURVE SMOOTH",
"318 752 LINE SMOOTH",
"318 1010 OFFCURVE",
"552 1319 OFFCURVE",
"744 1319 QCURVE SMOOTH",
"901 1319 OFFCURVE",
"1092 1151 OFFCURVE",
"1116 988 QCURVE",
"1309 988 LINE",
"1284 1215 OFFCURVE",
"981 1477 OFFCURVE",
"744 1477 QCURVE SMOOTH",
"566 1477 OFFCURVE",
"283 1298 OFFCURVE",
"126 968 OFFCURVE",
"126 757 QCURVE SMOOTH",
"126 689 LINE SMOOTH",
"127 486 OFFCURVE",
"289 159 OFFCURVE",
"576 -21 OFFCURVE",
"753 -21 QCURVE SMOOTH",
"991 -21 OFFCURVE",
"1284 239 OFFCURVE",
"1308 462 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1409;
}
);
leftKerningGroup = C;
note = glyph00581;
rightKerningGroup = C;
},
{
glyphname = G.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1310 723 LINE",
"783 723 LINE",
"783 568 LINE",
"1119 568 LINE",
"1119 242 LINE",
"1077 194 OFFCURVE",
"896 136 OFFCURVE",
"782 136 QCURVE SMOOTH",
"649 136 OFFCURVE",
"438 276 OFFCURVE",
"318 542 OFFCURVE",
"318 714 QCURVE SMOOTH",
"319 784 LINE SMOOTH",
"329 1026 OFFCURVE",
"565 1318 OFFCURVE",
"746 1318 QCURVE SMOOTH",
"902 1318 OFFCURVE",
"1088 1178 OFFCURVE",
"1118 1029 QCURVE",
"1310 1029 LINE",
"1276 1247 OFFCURVE",
"987 1476 OFFCURVE",
"746 1476 QCURVE SMOOTH",
"565 1476 OFFCURVE",
"281 1294 OFFCURVE",
"126 960 OFFCURVE",
"126 741 QCURVE SMOOTH",
"126 696 LINE SMOOTH",
"129 486 OFFCURVE",
"297 159 OFFCURVE",
"595 -21 OFFCURVE",
"782 -21 QCURVE SMOOTH",
"958 -21 OFFCURVE",
"1243 93 OFFCURVE",
"1310 190 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
63 34 79 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 34 31 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1454;
}
);
leftKerningGroup = C;
note = glyph00582;
},
{
glyphname = D.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"603 0 LINE SMOOTH",
"806 2 OFFCURVE",
"1124 179 OFFCURVE",
"1297 498 OFFCURVE",
"1297 706 QCURVE SMOOTH",
"1297 768 LINE SMOOTH",
"1293 968 OFFCURVE",
"1116 1284 OFFCURVE",
"804 1456 OFFCURVE",
"611 1456 QCURVE SMOOTH",
"178 1456 LINE",
"178 0 LINE"
);
},
{
closed = 1;
nodes = (
"370 1298 LINE",
"605 1298 LINE SMOOTH",
"837 1298 OFFCURVE",
"1102 1002 OFFCURVE",
"1102 750 QCURVE SMOOTH",
"1102 714 LINE SMOOTH",
"1102 455 OFFCURVE",
"827 157 OFFCURVE",
"593 157 QCURVE SMOOTH",
"370 157 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1427;
}
);
note = glyph00583;
rightKerningGroup = D;
},
{
glyphname = O.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1375 756 LINE SMOOTH",
"1374 960 OFFCURVE",
"1211 1292 OFFCURVE",
"923 1477 OFFCURVE",
"750 1477 QCURVE SMOOTH",
"579 1477 OFFCURVE",
"290 1289 OFFCURVE",
"126 954 OFFCURVE",
"126 749 QCURVE SMOOTH",
"126 694 LINE SMOOTH",
"128 494 OFFCURVE",
"294 164 OFFCURVE",
"581 -21 OFFCURVE",
"752 -21 QCURVE SMOOTH",
"927 -21 OFFCURVE",
"1213 164 OFFCURVE",
"1375 500 OFFCURVE",
"1375 706 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 759 LINE SMOOTH",
"318 915 OFFCURVE",
"432 1169 OFFCURVE",
"630 1312 OFFCURVE",
"750 1312 QCURVE SMOOTH",
"875 1312 OFFCURVE",
"1074 1169 OFFCURVE",
"1184 913 OFFCURVE",
"1184 751 QCURVE SMOOTH",
"1184 712 LINE SMOOTH",
"1184 457 OFFCURVE",
"945 142 OFFCURVE",
"752 142 QCURVE SMOOTH",
"631 142 OFFCURVE",
"430 288 OFFCURVE",
"317 546 OFFCURVE",
"317 706 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1504;
}
);
leftKerningGroup = C;
note = glyph00584;
rightKerningGroup = D;
},
{
glyphname = Q.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1375 748 LINE SMOOTH",
"1375 954 OFFCURVE",
"1213 1290 OFFCURVE",
"924 1477 OFFCURVE",
"750 1477 QCURVE SMOOTH",
"578 1477 OFFCURVE",
"288 1287 OFFCURVE",
"126 951 OFFCURVE",
"126 747 QCURVE SMOOTH",
"126 689 LINE SMOOTH",
"129 491 OFFCURVE",
"293 165 OFFCURVE",
"581 -21 OFFCURVE",
"752 -21 QCURVE SMOOTH",
"812 -21 OFFCURVE",
"869 -9 QCURVE",
"1177 -252 LINE",
"1308 -131 LINE",
"1058 64 LINE",
"1206 154 OFFCURVE",
"1375 494 OFFCURVE",
"1375 706 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 757 LINE SMOOTH",
"318 913 OFFCURVE",
"431 1168 OFFCURVE",
"630 1312 OFFCURVE",
"750 1312 QCURVE SMOOTH",
"875 1312 OFFCURVE",
"1074 1169 OFFCURVE",
"1184 912 OFFCURVE",
"1184 749 QCURVE SMOOTH",
"1184 712 LINE SMOOTH",
"1184 457 OFFCURVE",
"945 142 OFFCURVE",
"752 142 QCURVE SMOOTH",
"631 142 OFFCURVE",
"430 288 OFFCURVE",
"317 546 OFFCURVE",
"317 706 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1507;
}
);
leftKerningGroup = C;
note = glyph00585;
},
{
glyphname = glyph00586;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"713 1165 LINE",
"682 1165 LINE",
"160 963 LINE",
"160 795 LINE",
"528 934 LINE",
"528 0 LINE",
"713 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 981;
}
);
note = glyph00586;
},
{
glyphname = glyph00587;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1056 151 LINE",
"424 151 LINE",
"802 491 LINE SMOOTH",
"999 671 OFFCURVE",
"999 848 QCURVE SMOOTH",
"999 1000 OFFCURVE",
"774 1184 OFFCURVE",
"587 1184 QCURVE SMOOTH",
"461 1184 OFFCURVE",
"251 1076 OFFCURVE",
"131 885 OFFCURVE",
"131 773 QCURVE",
"316 773 LINE",
"316 890 OFFCURVE",
"465 1032 OFFCURVE",
"587 1032 QCURVE SMOOTH",
"689 1032 OFFCURVE",
"814 924 OFFCURVE",
"814 840 QCURVE",
"811 787 LINE",
"801 703 OFFCURVE",
"676 588 QCURVE SMOOTH",
"167 131 LINE",
"167 0 LINE",
"1056 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
22 23 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 17 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1154;
}
);
note = glyph00587;
},
{
glyphname = glyph00588;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"367 611 LINE",
"367 508 LINE",
"427 508 LINE SMOOTH",
"619 508 OFFCURVE",
"804 343 OFFCURVE",
"804 172 QCURVE SMOOTH",
"804 7 OFFCURVE",
"589 -195 OFFCURVE",
"409 -195 QCURVE SMOOTH",
"232 -195 OFFCURVE",
"67 -107 QCURVE",
"15 -246 LINE",
"225 -349 OFFCURVE",
"427 -349 QCURVE SMOOTH",
"682 -349 OFFCURVE",
"990 -55 OFFCURVE",
"990 194 QCURVE SMOOTH",
"990 373 OFFCURVE",
"764 619 OFFCURVE",
"586 643 QCURVE",
"970 1047 LINE",
"970 1165 LINE",
"88 1165 LINE",
"88 1012 LINE",
"740 1012 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
5 11 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
24 23 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1112;
}
);
note = glyph00588;
},
{
glyphname = glyph00589;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"987 1165 LINE",
"788 1165 LINE",
"62 108 LINE",
"62 -1 LINE",
"801 -1 LINE",
"801 -330 LINE",
"987 -330 LINE",
"987 -1 LINE",
"1184 -1 LINE",
"1184 150 LINE",
"987 150 LINE"
);
},
{
closed = 1;
nodes = (
"773 861 LINE",
"801 914 LINE",
"801 150 LINE",
"279 150 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
13 9 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1231;
}
);
note = glyph00589;
},
{
glyphname = glyph00590;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"287 355 LINE",
"321 438 OFFCURVE",
"438 496 OFFCURVE",
"544 496 QCURVE SMOOTH",
"679 496 OFFCURVE",
"844 314 OFFCURVE",
"844 171 QCURVE SMOOTH",
"844 7 OFFCURVE",
"653 -200 OFFCURVE",
"500 -200 QCURVE SMOOTH",
"289 -200 OFFCURVE",
"159 -99 QCURVE",
"101 -238 LINE",
"276 -352 OFFCURVE",
"500 -352 QCURVE SMOOTH",
"741 -352 OFFCURVE",
"1029 -66 OFFCURVE",
"1029 173 QCURVE SMOOTH",
"1029 398 OFFCURVE",
"788 665 OFFCURVE",
"588 663 QCURVE SMOOTH",
"439 661 OFFCURVE",
"328 597 QCURVE",
"382 993 LINE",
"1024 993 LINE",
"1024 1164 LINE",
"236 1164 LINE",
"134 372 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1131;
}
);
note = glyph00590;
},
{
glyphname = glyph00591;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1010 1165 LINE",
"74 1165 LINE",
"74 1013 LINE",
"815 1013 LINE",
"216 -330 LINE",
"402 -330 LINE",
"1010 1059 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1070;
}
);
note = glyph00591;
},
{
glyphname = glyph00592;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"572 1454 LINE",
"572 1400 OFFCURVE",
"498 1336 OFFCURVE",
"427 1336 QCURVE SMOOTH",
"355 1336 OFFCURVE",
"281 1400 OFFCURVE",
"281 1454 QCURVE",
"131 1454 LINE",
"131 1359 OFFCURVE",
"292 1241 OFFCURVE",
"427 1241 QCURVE SMOOTH",
"561 1241 OFFCURVE",
"722 1359 OFFCURVE",
"722 1454 QCURVE"
);
},
{
closed = 1;
nodes = (
"244 1527 LINE",
"244 1565 OFFCURVE",
"292 1616 OFFCURVE",
"326 1616 QCURVE SMOOTH",
"370 1616 OFFCURVE",
"489 1541 OFFCURVE",
"547 1541 QCURVE SMOOTH",
"617 1541 OFFCURVE",
"713 1646 OFFCURVE",
"713 1720 QCURVE",
"630 1744 LINE",
"630 1706 OFFCURVE",
"582 1655 OFFCURVE",
"547 1655 QCURVE SMOOTH",
"503 1655 OFFCURVE",
"374 1730 OFFCURVE",
"326 1730 QCURVE SMOOTH",
"257 1730 OFFCURVE",
"161 1623 OFFCURVE",
"161 1548 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 13 values pushed */
15 7 31 7 47 7 63 7 79 7 95 7 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
15 20 31 20 47 20 63 20 79 20 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 932;
}
);
note = glyph00592;
},
{
glyphname = glyph00593;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"289 153 LINE",
"103 153 LINE",
"103 -359 LINE",
"289 -359 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 401;
}
);
note = glyph00593;
},
{
glyphname = OE.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1645 151 LINE",
"1025 151 LINE",
"1025 526 LINE",
"1557 526 LINE",
"1557 678 LINE",
"1025 678 LINE",
"1025 1012 LINE",
"1638 1012 LINE",
"1638 1165 LINE",
"951 1165 LINE",
"604 1181 LINE",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 553 LINE SMOOTH",
"96 290 OFFCURVE",
"377 -16 OFFCURVE",
"606 -16 QCURVE",
"976 0 LINE",
"1645 0 LINE"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE",
"840 1016 LINE",
"840 145 LINE",
"606 138 LINE SMOOTH",
"455 138 OFFCURVE",
"279 353 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
223 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1700;
}
);
note = glyph00594;
},
{
glyphname = glyph00595;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"380 -191 OFFCURVE",
"258 -141 QCURVE",
"220 -283 LINE",
"338 -343 OFFCURVE",
"497 -343 QCURVE SMOOTH",
"672 -343 OFFCURVE",
"941 -169 OFFCURVE",
"1087 157 OFFCURVE",
"1087 377 QCURVE SMOOTH",
"1087 627 LINE SMOOTH",
"1085 893 OFFCURVE",
"824 1185 OFFCURVE",
"589 1185 QCURVE SMOOTH",
"457 1185 OFFCURVE",
"247 1059 OFFCURVE",
"130 823 OFFCURVE",
"130 667 QCURVE SMOOTH",
"130 441 OFFCURVE",
"385 165 OFFCURVE",
"595 165 QCURVE SMOOTH",
"778 165 OFFCURVE",
"897 270 QCURVE",
"876 53 OFFCURVE",
"656 -191 OFFCURVE",
"479 -191 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"316 838 OFFCURVE",
"468 1033 OFFCURVE",
"595 1033 QCURVE SMOOTH",
"741 1033 OFFCURVE",
"902 836 OFFCURVE",
"902 639 QCURVE SMOOTH",
"902 491 LINE",
"868 409 OFFCURVE",
"709 317 OFFCURVE",
"604 317 QCURVE SMOOTH",
"479 317 OFFCURVE",
"316 518 OFFCURVE",
"316 667 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 20 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
3 5 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1209;
}
);
note = glyph00595;
},
{
glyphname = glyph00596;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"174 152 LINE",
"174 -81 LINE SMOOTH",
"174 -275 OFFCURVE",
"37 -275 QCURVE SMOOTH",
"-30 -275 OFFCURVE",
"-60 -262 QCURVE",
"-74 -419 LINE",
"-22 -437 OFFCURVE",
"37 -437 QCURVE SMOOTH",
"188 -437 OFFCURVE",
"358 -261 OFFCURVE",
"359 -93 QCURVE SMOOTH",
"359 152 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 508;
}
);
note = glyph00596;
},
{
glyphname = three.onum;
layers = (
{
components = (
{
name = glyph00588;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00597;
},
{
glyphname = five.onum;
layers = (
{
components = (
{
name = glyph00590;
transform = "{1, 0, 0, 1, 14, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00598;
},
{
glyphname = four.onum;
layers = (
{
components = (
{
name = glyph00589;
transform = "{1, 0, 0, 1, -27, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00599;
},
{
glyphname = two.onum;
layers = (
{
components = (
{
name = glyph00587;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00600;
},
{
glyphname = seven.onum;
layers = (
{
components = (
{
name = glyph00591;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00601;
},
{
glyphname = zero.onum;
layers = (
{
components = (
{
name = glyph00613;
transform = "{1, 0, 0, 1, -65, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00602;
},
{
glyphname = six.onum;
layers = (
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, -6, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00603;
},
{
glyphname = nine.onum;
layers = (
{
components = (
{
name = glyph00595;
transform = "{1, 0, 0, 1, -35, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00604;
},
{
glyphname = eight.onum;
layers = (
{
components = (
{
name = eight;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00605;
},
{
glyphname = one.onum;
layers = (
{
components = (
{
name = glyph00586;
transform = "{1, 0, 0, 1, 84, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00606;
},
{
glyphname = j.ccmp0;
layers = (
{
components = (
{
name = jdotless;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 518;
}
);
note = glyph00607;
},
{
glyphname = i.ccmp0;
layers = (
{
components = (
{
name = idotless;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 507;
}
);
note = glyph00609;
},
{
glyphname = iogonek.ccmp0;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1082 LINE",
"155 1082 LINE",
"155 13.533 LINE",
"51.204 -54.86 OFFCURVE",
"-6 -139.932 OFFCURVE",
"-6 -233 CURVE SMOOTH",
"-6 -347.667 OFFCURVE",
"67.333 -423 OFFCURVE",
"186 -423 CURVE SMOOTH",
"246 -423 OFFCURVE",
"299.333 -408.333 OFFCURVE",
"346 -379 CURVE",
"333 -258 LINE",
"298.333 -275.333 OFFCURVE",
"265 -284 OFFCURVE",
"233 -284 CURVE SMOOTH",
"181 -284 OFFCURVE",
"155 -260 OFFCURVE",
"155 -212 CURVE SMOOTH",
"155 -154.667 OFFCURVE",
"192.667 -95.667 OFFCURVE",
"268 -35 CURVE SMOOTH",
"313.111 0 LINE",
"341 0 LINE"
);
}
);
width = 507;
}
);
note = glyph00610;
},
{
glyphname = germandbls.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"398 29 LINE",
"502 -20 OFFCURVE",
"621 -20 QCURVE SMOOTH",
"802 -20 OFFCURVE",
"1017 184 OFFCURVE",
"1017 356 QCURVE SMOOTH",
"1017 490 OFFCURVE",
"835 653 OFFCURVE",
"666 668 QCURVE",
"940 998 LINE",
"839 1096 OFFCURVE",
"644 1181 OFFCURVE",
"537 1181 QCURVE SMOOTH",
"336 1181 OFFCURVE",
"139 967 OFFCURVE",
"138 757 QCURVE SMOOTH",
"138 0 LINE",
"322 0 LINE",
"322 762 LINE SMOOTH",
"326 1029 OFFCURVE",
"537 1029 QCURVE SMOOTH",
"636 1029 OFFCURVE",
"714 967 QCURVE",
"477 672 LINE",
"477 535 LINE",
"561 535 LINE SMOOTH",
"696 535 OFFCURVE",
"832 450 OFFCURVE",
"832 352 QCURVE SMOOTH",
"832 253 OFFCURVE",
"718 130 OFFCURVE",
"621 130 QCURVE SMOOTH",
"533 130 OFFCURVE",
"451 181 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
31 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 31 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
31 25 47 25 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1104;
}
);
note = glyph00612;
},
{
glyphname = glyph00613;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1161 592 LINE SMOOTH",
"1160 869 OFFCURVE",
"879 1185 OFFCURVE",
"401 1185 OFFCURVE",
"120 867 OFFCURVE",
"120 591 QCURVE SMOOTH",
"120 571 LINE SMOOTH",
"121 295 OFFCURVE",
"403 -21 OFFCURVE",
"881 -21 OFFCURVE",
"1161 294 OFFCURVE",
"1161 572 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"305 612 LINE SMOOTH",
"307 809 OFFCURVE",
"485 1033 OFFCURVE",
"640 1033 QCURVE SMOOTH",
"797 1033 OFFCURVE",
"975 807 OFFCURVE",
"975 605 QCURVE SMOOTH",
"975 553 LINE SMOOTH",
"973 351 OFFCURVE",
"796 130 OFFCURVE",
"642 130 QCURVE SMOOTH",
"487 130 OFFCURVE",
"305 359 OFFCURVE",
"305 560 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1280;
}
);
note = glyph00613;
},
{
glyphname = seven.pnum;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"978 1456 LINE",
"59 1456 LINE",
"59 1304 LINE",
"790 1304 LINE",
"214 0 LINE",
"400 0 LINE",
"978 1352 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
}
);
note = glyph00614;
},
{
glyphname = b.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1076 544 LINE SMOOTH",
"1076 801 OFFCURVE",
"835 1102 OFFCURVE",
"634 1102 QCURVE SMOOTH",
"437 1102 OFFCURVE",
"325 963 QCURVE",
"325 1536 LINE",
"140 1536 LINE",
"140 0 LINE",
"300 0 LINE",
"315 129 LINE",
"427 -20 OFFCURVE",
"636 -20 QCURVE SMOOTH",
"764 -20 OFFCURVE",
"965 119 OFFCURVE",
"1076 371 OFFCURVE",
"1076 530 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"325 775 LINE",
"405 945 OFFCURVE",
"588 945 QCURVE SMOOTH",
"728 945 OFFCURVE",
"891 731 OFFCURVE",
"891 551 QCURVE SMOOTH",
"891 352 OFFCURVE",
"728 136 OFFCURVE",
"590 136 QCURVE SMOOTH",
"410 136 OFFCURVE",
"325 307 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 13 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 13 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
note = glyph00615;
},
{
glyphname = c.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"435 131 OFFCURVE",
"278 332 OFFCURVE",
"278 520 QCURVE SMOOTH",
"278 553 LINE SMOOTH",
"278 744 OFFCURVE",
"433 950 OFFCURVE",
"576 950 QCURVE SMOOTH",
"680 950 OFFCURVE",
"823 815 OFFCURVE",
"831 710 QCURVE",
"1007 710 LINE",
"999 884 OFFCURVE",
"758 1102 OFFCURVE",
"576 1102 QCURVE SMOOTH",
"429 1102 OFFCURVE",
"210 968 OFFCURVE",
"92 719 OFFCURVE",
"92 562 QCURVE SMOOTH",
"92 530 LINE SMOOTH",
"92 278 OFFCURVE",
"353 -20 OFFCURVE",
"576 -20 QCURVE SMOOTH",
"686 -20 OFFCURVE",
"882 79 OFFCURVE",
"1002 247 OFFCURVE",
"1007 341 QCURVE",
"831 341 LINE",
"823 251 OFFCURVE",
"675 131 OFFCURVE",
"576 131 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1074;
}
);
note = glyph00616;
},
{
glyphname = d.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 523 LINE SMOOTH",
"92 371 OFFCURVE",
"209 120 OFFCURVE",
"412 -20 OFFCURVE",
"536 -20 QCURVE SMOOTH",
"738 -20 OFFCURVE",
"849 120 QCURVE",
"863 0 LINE",
"1024 0 LINE",
"1024 1536 LINE",
"839 1536 LINE",
"839 972 LINE",
"728 1102 OFFCURVE",
"538 1102 QCURVE SMOOTH",
"410 1102 OFFCURVE",
"204 961 OFFCURVE",
"91 709 OFFCURVE",
"91 550 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 731 OFFCURVE",
"443 945 OFFCURVE",
"584 945 QCURVE SMOOTH",
"756 945 OFFCURVE",
"839 792 QCURVE",
"839 295 LINE",
"757 136 OFFCURVE",
"582 136 QCURVE SMOOTH",
"444 136 OFFCURVE",
"276 352 OFFCURVE",
"276 529 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
26 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 4 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 4 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1171;
}
);
note = glyph00617;
},
{
glyphname = g.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 536 LINE SMOOTH",
"91 292 OFFCURVE",
"341 -20 OFFCURVE",
"535 -20 QCURVE SMOOTH",
"728 -20 OFFCURVE",
"839 109 QCURVE",
"839 69 LINE SMOOTH",
"839 -99 OFFCURVE",
"701 -275 OFFCURVE",
"552 -275 QCURVE SMOOTH",
"473 -275 OFFCURVE",
"314 -225 OFFCURVE",
"251 -183 QCURVE",
"196 -321 LINE",
"268 -371 OFFCURVE",
"468 -426 OFFCURVE",
"554 -426 QCURVE SMOOTH",
"778 -426 OFFCURVE",
"1022 -167 OFFCURVE",
"1024 72 QCURVE SMOOTH",
"1024 1082 LINE",
"867 1082 LINE",
"852 954 LINE",
"741 1102 OFFCURVE",
"537 1102 QCURVE SMOOTH",
"339 1102 OFFCURVE",
"91 796 OFFCURVE",
"91 550 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 730 OFFCURVE",
"441 945 OFFCURVE",
"583 945 QCURVE SMOOTH",
"756 945 OFFCURVE",
"839 788 QCURVE",
"839 297 LINE",
"756 136 OFFCURVE",
"581 136 QCURVE SMOOTH",
"442 136 OFFCURVE",
"276 353 OFFCURVE",
"276 529 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
31 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 3 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
}
);
note = glyph00618;
},
{
glyphname = o.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"90 519 LINE SMOOTH",
"92 365 OFFCURVE",
"221 116 OFFCURVE",
"448 -20 OFFCURVE",
"591 -20 QCURVE SMOOTH",
"737 -20 OFFCURVE",
"966 120 OFFCURVE",
"1092 372 OFFCURVE",
"1092 529 QCURVE SMOOTH",
"1092 543 LINE SMOOTH",
"1092 794 OFFCURVE",
"810 1102 OFFCURVE",
"589 1102 QCURVE SMOOTH",
"445 1102 OFFCURVE",
"218 962 OFFCURVE",
"90 707 OFFCURVE",
"90 551 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275 728 OFFCURVE",
"450 950 OFFCURVE",
"589 950 QCURVE SMOOTH",
"730 950 OFFCURVE",
"907 726 OFFCURVE",
"907 551 QCURVE SMOOTH",
"907 355 OFFCURVE",
"733 131 OFFCURVE",
"591 131 QCURVE SMOOTH",
"450 131 OFFCURVE",
"275 353 OFFCURVE",
"275 529 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1182;
}
);
note = glyph00619;
},
{
glyphname = p.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1073 589 LINE SMOOTH",
"1063 823 OFFCURVE",
"825 1102 OFFCURVE",
"632 1102 QCURVE SMOOTH",
"430 1102 OFFCURVE",
"314 957 QCURVE",
"299 1082 LINE",
"140 1082 LINE",
"140 -416 LINE",
"325 -416 LINE",
"325 105 LINE",
"438 -20 OFFCURVE",
"635 -20 QCURVE SMOOTH",
"764 -20 OFFCURVE",
"964 119 OFFCURVE",
"1074 371 OFFCURVE",
"1074 529 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"325 796 LINE",
"409 945 OFFCURVE",
"577 945 QCURVE SMOOTH",
"720 945 OFFCURVE",
"889 726 OFFCURVE",
"889 550 QCURVE SMOOTH",
"889 354 OFFCURVE",
"719 131 OFFCURVE",
"579 131 QCURVE SMOOTH",
"408 131 OFFCURVE",
"325 279 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
25 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 13 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 13 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1165;
}
);
note = glyph00620;
},
{
glyphname = q.ss06;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 535 LINE SMOOTH",
"91 289 OFFCURVE",
"341 -20 OFFCURVE",
"540 -20 QCURVE SMOOTH",
"726 -20 OFFCURVE",
"838 100 QCURVE",
"838 -416 LINE",
"1023 -416 LINE",
"1023 1082 LINE",
"863 1082 LINE",
"849 968 LINE",
"738 1102 OFFCURVE",
"542 1102 QCURVE SMOOTH",
"338 1102 OFFCURVE",
"91 794 OFFCURVE",
"91 549 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 727 OFFCURVE",
"446 950 OFFCURVE",
"588 950 QCURVE SMOOTH",
"750 950 OFFCURVE",
"838 807 QCURVE",
"838 278 LINE",
"752 131 OFFCURVE",
"586 131 QCURVE SMOOTH",
"446 131 OFFCURVE",
"276 354 OFFCURVE",
"276 528 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1180;
}
);
note = glyph00621;
},
{
glyphname = e.ss07;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"840 -20 OFFCURVE",
"971 94 QCURVE",
"914 221 LINE",
"794 131 OFFCURVE",
"634 131 QCURVE SMOOTH",
"481 131 OFFCURVE",
"287 331 OFFCURVE",
"279 488 QCURVE",
"1011 488 LINE",
"1011 604 LINE SMOOTH",
"1011 844 OFFCURVE",
"779 1102 OFFCURVE",
"566 1102 QCURVE SMOOTH",
"438 1102 OFFCURVE",
"217 964 OFFCURVE",
"93 719 OFFCURVE",
"93 564 QCURVE SMOOTH",
"94 486 LINE SMOOTH",
"105 259 OFFCURVE",
"396 -20 OFFCURVE",
"625 -20 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"299 790 OFFCURVE",
"451 950 OFFCURVE",
"566 950 QCURVE SMOOTH",
"689 950 OFFCURVE",
"826 796 OFFCURVE",
"826 665 QCURVE SMOOTH",
"826 640 LINE",
"282 640 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 25 207 25 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
}
);
note = glyph00622;
},
{
glyphname = g.ss07;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"96 536 LINE SMOOTH",
"96 286 OFFCURVE",
"331 -20 OFFCURVE",
"521 -20 QCURVE SMOOTH",
"713 -20 OFFCURVE",
"824 108 QCURVE",
"824 50 LINE SMOOTH",
"824 -108 OFFCURVE",
"687 -275 OFFCURVE",
"538 -275 QCURVE SMOOTH",
"395 -275 OFFCURVE",
"273 -202 QCURVE",
"218 -340 LINE",
"283 -381 OFFCURVE",
"458 -426 OFFCURVE",
"540 -426 QCURVE SMOOTH",
"765 -426 OFFCURVE",
"1010 -171 OFFCURVE",
"1010 63 QCURVE SMOOTH",
"1010 1082 LINE",
"853 1082 LINE",
"837 955 LINE",
"725 1102 OFFCURVE",
"523 1102 QCURVE SMOOTH",
"328 1102 OFFCURVE",
"96 799 OFFCURVE",
"96 549 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 737 OFFCURVE",
"432 945 OFFCURVE",
"569 945 QCURVE SMOOTH",
"739 945 OFFCURVE",
"824 790 QCURVE",
"824 296 LINE",
"742 136 OFFCURVE",
"567 136 QCURVE SMOOTH",
"431 136 OFFCURVE",
"282 347 OFFCURVE",
"282 528 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
35 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
note = glyph00623;
},
{
glyphname = one.pnum;
layers = (
{
components = (
{
name = one;
transform = "{1, 0, 0, 1, -83, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 889;
}
);
note = glyph00624;
},
{
glyphname = ampersand.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"714 -16 OFFCURVE",
"865 97 QCURVE",
"959 0 LINE",
"1169 0 LINE",
"970 210 LINE",
"1097 376 OFFCURVE",
"1097 600 QCURVE",
"929 600 LINE",
"929 443 OFFCURVE",
"860 327 QCURVE",
"592 612 LINE",
"665 664 LINE SMOOTH",
"820 775 OFFCURVE",
"820 919 QCURVE SMOOTH",
"820 1031 OFFCURVE",
"643 1181 OFFCURVE",
"509 1181 QCURVE SMOOTH",
"365 1181 OFFCURVE",
"192 1033 OFFCURVE",
"192 918 QCURVE SMOOTH",
"192 810 OFFCURVE",
"285 706 QCURVE SMOOTH",
"360 627 LINE",
"285 573 LINE SMOOTH",
"181 498 OFFCURVE",
"103 364 OFFCURVE",
"103 278 QCURVE SMOOTH",
"103 149 OFFCURVE",
"317 -16 OFFCURVE",
"488 -16 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"287 387 OFFCURVE",
"363 446 QCURVE SMOOTH",
"463 519 LINE",
"756 212 LINE",
"650 137 OFFCURVE",
"505 137 QCURVE SMOOTH",
"394 137 OFFCURVE",
"287 230 OFFCURVE",
"287 303 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"373 956 OFFCURVE",
"445 1026 OFFCURVE",
"501 1026 QCURVE SMOOTH",
"567 1026 OFFCURVE",
"639 957 OFFCURVE",
"639 905 QCURVE SMOOTH",
"639 828 OFFCURVE",
"556 768 QCURVE SMOOTH",
"490 720 LINE",
"436 777 LINE SMOOTH",
"373 847 OFFCURVE",
"373 905 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
44 51 52 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
42 13 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
33 13 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 42 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 33 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 30 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
28 0 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 20 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
32 30 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
48 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1238;
}
);
note = glyph00625;
},
{
glyphname = Lslash.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"589 782 LINE",
"323 697 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 639 LINE",
"0 595 LINE",
"0 470 LINE",
"138 514 LINE",
"138 0 LINE",
"907 0 LINE",
"907 151 LINE",
"323 151 LINE",
"323 572 LINE",
"589 657 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 948;
}
);
note = glyph00626;
},
{
glyphname = AE.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1416 683 LINE",
"952 683 LINE",
"940 1015 LINE",
"1480 1015 LINE",
"1480 1165 LINE",
"671 1165 LINE",
"9 0 LINE",
"207 0 LINE",
"370 301 LINE",
"780 301 LINE",
"791 0 LINE",
"1521 0 LINE",
"1521 149 LINE",
"971 149 LINE",
"957 533 LINE",
"1416 533 LINE"
);
},
{
closed = 1;
nodes = (
"756 1014 LINE",
"775 452 LINE",
"451 452 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1593;
}
);
note = glyph00627;
},
{
glyphname = Thorn.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"323 0 LINE",
"323 236 LINE",
"503 236 LINE SMOOTH",
"717 236 OFFCURVE",
"951 426 OFFCURVE",
"951 595 QCURVE SMOOTH",
"951 761 OFFCURVE",
"716 958 OFFCURVE",
"520 962 QCURVE SMOOTH",
"323 962 LINE",
"323 1165 LINE",
"138 1165 LINE"
);
},
{
closed = 1;
nodes = (
"323 810 LINE",
"510 810 LINE SMOOTH",
"629 809 OFFCURVE",
"765 690 OFFCURVE",
"765 594 QCURVE SMOOTH",
"765 496 OFFCURVE",
"633 388 OFFCURVE",
"505 388 QCURVE SMOOTH",
"323 388 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1016;
}
);
note = glyph00628;
},
{
glyphname = Oslash.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1106 1206 LINE",
"957 1206 LINE",
"888 1103 LINE",
"765 1181 OFFCURVE",
"604 1181 QCURVE SMOOTH",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 552 LINE SMOOTH",
"96 287 OFFCURVE",
"239 133 QCURVE",
"112 -57 LINE",
"261 -57 LINE",
"336 55 LINE",
"452 -16 OFFCURVE",
"606 -16 QCURVE SMOOTH",
"838 -16 OFFCURVE",
"1114 287 OFFCURVE",
"1114 548 QCURVE SMOOTH",
"1114 610 LINE SMOOTH",
"1114 867 OFFCURVE",
"982 1020 QCURVE"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE SMOOTH",
"718 1025 OFFCURVE",
"797 966 QCURVE",
"340 284 LINE",
"279 389 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 866 LINE",
"931 768 OFFCURVE",
"931 617 QCURVE SMOOTH",
"931 548 LINE SMOOTH",
"931 349 OFFCURVE",
"762 138 OFFCURVE",
"606 138 QCURVE SMOOTH",
"500 138 OFFCURVE",
"426 190 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 40 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
24 17 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 17 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 17 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
34 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
note = glyph00629;
},
{
glyphname = Hbar.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1203 998 LINE",
"1112 998 LINE",
"1112 1165 LINE",
"927 1165 LINE",
"927 998 LINE",
"323 998 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 998 LINE",
"48 998 LINE",
"48 847 LINE",
"138 847 LINE",
"138 0 LINE",
"323 0 LINE",
"323 498 LINE",
"927 498 LINE",
"927 0 LINE",
"1112 0 LINE",
"1112 847 LINE",
"1203 847 LINE"
);
},
{
closed = 1;
nodes = (
"323 847 LINE",
"927 847 LINE",
"927 650 LINE",
"323 650 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 19 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00630;
},
{
glyphname = Eng.c2sc;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"942 -437 OFFCURVE",
"1112 -258 OFFCURVE",
"1112 -89 QCURVE SMOOTH",
"1112 1165 LINE",
"928 1165 LINE",
"928 288 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 876 LINE",
"927 1 LINE",
"927 -80 LINE SMOOTH",
"927 -275 OFFCURVE",
"791 -275 QCURVE SMOOTH",
"727 -275 OFFCURVE",
"692 -262 QCURVE",
"679 -419 LINE",
"731 -437 OFFCURVE",
"791 -437 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 12 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 10 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00631;
},
{
glyphname = nbspace;
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 507;
}
);
note = uni00A0;
unicode = 00A0;
},
{
glyphname = softhyphen;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 565;
}
);
leftKerningGroup = hyphen;
note = uni00AD;
unicode = 00AD;
},
{
glyphname = Dcroat;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"798 2 OFFCURVE",
"1093 168 OFFCURVE",
"1252 478 OFFCURVE",
"1252 684 QCURVE SMOOTH",
"1252 777 LINE SMOOTH",
"1251 978 OFFCURVE",
"1092 1288 OFFCURVE",
"800 1456 OFFCURVE",
"610 1456 QCURVE SMOOTH",
"199 1456 LINE",
"199 817 LINE",
"7 817 LINE",
"7 666 LINE",
"199 666 LINE",
"199 0 LINE",
"602 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"391 666 LINE",
"643 666 LINE",
"643 817 LINE",
"391 817 LINE",
"391 1298 LINE",
"615 1298 LINE SMOOTH",
"829 1296 OFFCURVE",
"1062 1021 OFFCURVE",
"1062 773 QCURVE SMOOTH",
"1062 680 LINE SMOOTH",
"1061 431 OFFCURVE",
"814 157 OFFCURVE",
"592 157 QCURVE SMOOTH",
"391 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 4 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 4 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 4 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1373;
}
);
note = uni0110;
unicode = 0110;
},
{
glyphname = Eth;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"798 2 OFFCURVE",
"1093 168 OFFCURVE",
"1252 478 OFFCURVE",
"1252 684 QCURVE SMOOTH",
"1252 777 LINE SMOOTH",
"1251 978 OFFCURVE",
"1092 1288 OFFCURVE",
"800 1456 OFFCURVE",
"610 1456 QCURVE SMOOTH",
"199 1456 LINE",
"199 817 LINE",
"7 817 LINE",
"7 666 LINE",
"199 666 LINE",
"199 0 LINE",
"602 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"391 666 LINE",
"643 666 LINE",
"643 817 LINE",
"391 817 LINE",
"391 1298 LINE",
"615 1298 LINE SMOOTH",
"829 1296 OFFCURVE",
"1062 1021 OFFCURVE",
"1062 773 QCURVE SMOOTH",
"1062 680 LINE SMOOTH",
"1061 431 OFFCURVE",
"814 157 OFFCURVE",
"592 157 QCURVE SMOOTH",
"391 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 4 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 4 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 4 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1373;
}
);
note = uni00D0;
unicode = 00D0;
},
{
glyphname = hbar;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"355 1385 LINE",
"355 1536 LINE",
"170 1536 LINE",
"170 1385 LINE",
"-30 1385 LINE",
"-30 1234 LINE",
"170 1234 LINE",
"170 0 LINE",
"355 0 LINE",
"355 771 LINE",
"393 849 OFFCURVE",
"529 945 OFFCURVE",
"619 945 QCURVE SMOOTH",
"730 945 OFFCURVE",
"835 833 OFFCURVE",
"836 716 QCURVE SMOOTH",
"836 0 LINE",
"1021 0 LINE",
"1021 715 LINE SMOOTH",
"1018 1102 OFFCURVE",
"675 1102 QCURVE SMOOTH",
"478 1102 OFFCURVE",
"355 951 QCURVE",
"355 1234 LINE",
"606 1234 LINE",
"606 1385 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
47 23 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 23 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
21 16 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1158;
}
);
note = uni0127;
unicode = 0127;
},
{
glyphname = Tbar;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"707 974 LINE",
"707 1298 LINE",
"1175 1298 LINE",
"1175 1456 LINE",
"49 1456 LINE",
"49 1298 LINE",
"516 1298 LINE",
"516 974 LINE",
"302 974 LINE",
"302 823 LINE",
"516 823 LINE",
"516 0 LINE",
"707 0 LINE",
"707 823 LINE",
"938 823 LINE",
"938 974 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 10 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1222;
}
);
note = uni0166;
unicode = 0166;
},
{
glyphname = tbar;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"206 1082 LINE",
"9 1082 LINE",
"9 939 LINE",
"206 939 LINE",
"206 753 LINE",
"-12 753 LINE",
"-12 602 LINE",
"206 602 LINE",
"206 268 LINE SMOOTH",
"206 130 OFFCURVE",
"332 -20 OFFCURVE",
"456 -20 QCURVE SMOOTH",
"525 -20 OFFCURVE",
"598 0 QCURVE",
"598 150 LINE",
"542 138 OFFCURVE",
"510 138 QCURVE SMOOTH",
"445 138 OFFCURVE",
"391 203 OFFCURVE",
"391 268 QCURVE SMOOTH",
"391 602 LINE",
"624 602 LINE",
"624 753 LINE",
"391 753 LINE",
"391 939 LINE",
"593 939 LINE",
"593 1082 LINE",
"391 1082 LINE",
"391 1344 LINE",
"206 1344 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 5 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 669;
}
);
note = uni0167;
unicode = 0167;
},
{
glyphname = Agrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 304, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni00C0;
unicode = 00C0;
},
{
glyphname = Aacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 447, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni00C1;
unicode = 00C1;
},
{
glyphname = Acircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 201, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni00C2;
unicode = 00C2;
},
{
glyphname = Atilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 197, 314}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni00C3;
unicode = 00C3;
},
{
glyphname = Adieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 249, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni00C4;
unicode = 00C4;
},
{
glyphname = Aring;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 336, 321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni00C5;
unicode = 00C5;
},
{
glyphname = Aringacute;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 0 LINE",
"1309 0 LINE",
"771.301 1405.547 LINE",
"814.848 1434.02 OFFCURVE",
"843 1482.478 OFFCURVE",
"843 1541 CURVE SMOOTH",
"843 1638.333 OFFCURVE",
"766.667 1708 OFFCURVE",
"676 1708 CURVE SMOOTH",
"580 1708 OFFCURVE",
"504 1634.333 OFFCURVE",
"504 1541 CURVE SMOOTH",
"504 1488.55 OFFCURVE",
"528.702 1442.925 OFFCURVE",
"567.729 1413.391 CURVE",
"28 0 LINE",
"226 0 LINE",
"363 380 LINE",
"973 380 LINE"
);
},
{
closed = 1;
nodes = (
"668 1219 LINE",
"916 538 LINE",
"421 538 LINE"
);
},
{
closed = 1;
nodes = (
"589 1589 OFFCURVE",
"626.667 1629 OFFCURVE",
"676 1629 CURVE SMOOTH",
"722.667 1629 OFFCURVE",
"759 1591.667 OFFCURVE",
"759 1541 CURVE SMOOTH",
"759 1493 OFFCURVE",
"722.667 1456 OFFCURVE",
"676 1456 CURVE SMOOTH",
"628 1456 OFFCURVE",
"589 1494.333 OFFCURVE",
"589 1541 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"748 1756 LINE",
"968 1940 LINE",
"779 1940 LINE",
"634 1756 LINE"
);
}
);
width = 1336;
}
);
leftKerningGroup = A;
note = uni01FA;
unicode = 01FA;
},
{
glyphname = Ccedilla;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 466, -9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1333;
}
);
leftKerningGroup = C;
note = uni00C7;
rightKerningGroup = C;
unicode = 00C7;
},
{
glyphname = Egrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 251, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni00C8;
unicode = 00C8;
},
{
glyphname = Eacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 394, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni00C9;
unicode = 00C9;
},
{
glyphname = Ecircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 148, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni00CA;
unicode = 00CA;
},
{
glyphname = Edieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 196, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni00CB;
unicode = 00CB;
},
{
glyphname = Igrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -89, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni00CC;
unicode = 00CC;
},
{
glyphname = Iacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 53, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni00CD;
unicode = 00CD;
},
{
glyphname = Icircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -192, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni00CE;
unicode = 00CE;
},
{
glyphname = Idieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -144, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni00CF;
unicode = 00CF;
},
{
glyphname = Ntilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 251, 314}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni00D1;
unicode = 00D1;
},
{
glyphname = Ograve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 338, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni00D2;
unicode = 00D2;
},
{
glyphname = Oacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 481, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni00D3;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 235, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni00D4;
unicode = 00D4;
},
{
glyphname = Otilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 231, 316}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni00D5;
unicode = 00D5;
},
{
glyphname = Odieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 283, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni00D6;
unicode = 00D6;
},
{
glyphname = Ugrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 299, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni00D9;
unicode = 00D9;
},
{
glyphname = Uacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 442, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni00DA;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 196, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni00DB;
unicode = 00DB;
},
{
glyphname = Udieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 244, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni00DC;
unicode = 00DC;
},
{
glyphname = Yacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 392, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni00DD;
unicode = 00DD;
},
{
glyphname = agrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 213, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni00E0;
unicode = 00E0;
},
{
glyphname = aacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni00E1;
unicode = 00E1;
},
{
glyphname = acircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni00E2;
unicode = 00E2;
},
{
glyphname = atilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 106, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni00E3;
unicode = 00E3;
},
{
glyphname = adieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni00E4;
unicode = 00E4;
},
{
glyphname = aring;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 245, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni00E5;
unicode = 00E5;
},
{
glyphname = aringacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00551;
transform = "{1, 0, 0, 1, 255, -19}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni01FB;
unicode = 01FB;
},
{
glyphname = ccedilla;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 319, -9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1072;
}
);
leftKerningGroup = c;
note = uni00E7;
rightKerningGroup = c;
unicode = 00E7;
},
{
glyphname = egrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 197, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni00E8;
unicode = 00E8;
},
{
glyphname = eacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni00E9;
unicode = 00E9;
},
{
glyphname = ecircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni00EA;
unicode = 00EA;
},
{
glyphname = edieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 142, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni00EB;
unicode = 00EB;
},
{
glyphname = igrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = grave;
transform = "{1, 0, 0, 1, -115, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni00EC;
unicode = 00EC;
},
{
glyphname = iacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acute;
transform = "{1, 0, 0, 1, 27, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni00ED;
unicode = 00ED;
},
{
glyphname = icircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -218, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni00EE;
unicode = 00EE;
},
{
glyphname = idieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -170, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni00EF;
unicode = 00EF;
},
{
glyphname = ntilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 97, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = m;
note = uni00F1;
rightKerningGroup = h;
unicode = 00F1;
},
{
glyphname = ograve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni00F2;
unicode = 00F2;
},
{
glyphname = oacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 350, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni00F3;
unicode = 00F3;
},
{
glyphname = ocircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni00F4;
unicode = 00F4;
},
{
glyphname = otilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 100, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni00F5;
unicode = 00F5;
},
{
glyphname = odieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 152, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni00F6;
unicode = 00F6;
},
{
glyphname = ugrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 199, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni00F9;
unicode = 00F9;
},
{
glyphname = uacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 342, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni00FA;
unicode = 00FA;
},
{
glyphname = ucircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 96, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni00FB;
unicode = 00FB;
},
{
glyphname = udieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 144, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni00FC;
unicode = 00FC;
},
{
glyphname = yacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 283, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni00FD;
unicode = 00FD;
},
{
glyphname = ydieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni00FF;
unicode = 00FF;
},
{
glyphname = Amacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macron;
transform = "{1, 0, 0, 1, 199, 318}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni0100;
unicode = 0100;
},
{
glyphname = amacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macron;
transform = "{1, 0, 0, 1, 108, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni0101;
unicode = 0101;
},
{
glyphname = Abreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 244, 311}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni0102;
unicode = 0102;
},
{
glyphname = abreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 153, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni0103;
unicode = 0103;
},
{
glyphname = Aogonek;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"28 0 LINE",
"226 0 LINE",
"363 380 LINE",
"973 380 LINE",
"1108 9 LINE",
"939 -99 OFFCURVE",
"939 -243 QCURVE SMOOTH",
"939 -329 OFFCURVE",
"1042 -433 OFFCURVE",
"1131 -433 QCURVE SMOOTH",
"1221 -433 OFFCURVE",
"1291 -389 QCURVE",
"1278 -268 LINE",
"1226 -294 OFFCURVE",
"1178 -294 QCURVE SMOOTH",
"1100 -294 OFFCURVE",
"1100 -222 QCURVE SMOOTH",
"1100 -136 OFFCURVE",
"1213 -45 QCURVE SMOOTH",
"1271 0 LINE",
"1309 0 LINE",
"752 1456 LINE",
"584 1456 LINE"
);
},
{
closed = 1;
nodes = (
"668 1219 LINE",
"916 538 LINE",
"421 538 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
7 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
23 20 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 22 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1336;
}
);
leftKerningGroup = A;
note = uni0104;
unicode = 0104;
},
{
glyphname = aogonek;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"637 -99 OFFCURVE",
"637 -243 QCURVE SMOOTH",
"637 -329 OFFCURVE",
"740 -433 OFFCURVE",
"829 -433 QCURVE SMOOTH",
"919 -433 OFFCURVE",
"989 -389 QCURVE",
"976 -268 LINE",
"924 -294 OFFCURVE",
"876 -294 QCURVE SMOOTH",
"798 -294 OFFCURVE",
"798 -222 QCURVE SMOOTH",
"798 -136 OFFCURVE",
"911 -45 QCURVE SMOOTH",
"969 0 LINE",
"1002 0 LINE",
"1002 16 LINE",
"964 104 OFFCURVE",
"964 253 QCURVE SMOOTH",
"964 751 LINE SMOOTH",
"960 915 OFFCURVE",
"748 1102 OFFCURVE",
"561 1102 QCURVE SMOOTH",
"443 1102 OFFCURVE",
"246 1014 OFFCURVE",
"131 863 OFFCURVE",
"131 782 QCURVE",
"317 782 LINE",
"317 853 OFFCURVE",
"451 953 OFFCURVE",
"550 953 QCURVE SMOOTH",
"663 953 OFFCURVE",
"779 838 OFFCURVE",
"779 741 QCURVE SMOOTH",
"779 656 LINE",
"599 656 LINE SMOOTH",
"366 656 OFFCURVE",
"109 469 OFFCURVE",
"109 300 QCURVE SMOOTH",
"109 161 OFFCURVE",
"314 -20 OFFCURVE",
"474 -20 QCURVE SMOOTH",
"653 -20 OFFCURVE",
"782 114 QCURVE",
"789 45 OFFCURVE",
"804 7 QCURVE"
);
},
{
closed = 1;
nodes = (
"294 525 OFFCURVE",
"634 525 QCURVE SMOOTH",
"779 525 LINE",
"779 303 LINE",
"744 231 OFFCURVE",
"588 141 OFFCURVE",
"501 141 QCURVE SMOOTH",
"410 141 OFFCURVE",
"294 239 OFFCURVE",
"294 326 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
30 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
41 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 4 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
46 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
51 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1114;
}
);
leftKerningGroup = a;
note = uni0105;
unicode = 0105;
},
{
glyphname = Cacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acute;
transform = "{1, 0, 0, 1, 454, 343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1333;
}
);
leftKerningGroup = C;
note = uni0106;
rightKerningGroup = C;
unicode = 0106;
},
{
glyphname = cacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acute;
transform = "{1, 0, 0, 1, 307, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1072;
}
);
leftKerningGroup = c;
note = uni0107;
rightKerningGroup = c;
unicode = 0107;
},
{
glyphname = Ccircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 208, 343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1333;
}
);
leftKerningGroup = C;
note = uni0108;
rightKerningGroup = C;
unicode = 0108;
},
{
glyphname = ccircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1072;
}
);
leftKerningGroup = c;
note = uni0109;
rightKerningGroup = c;
unicode = 0109;
},
{
glyphname = Cdotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 429, 343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1333;
}
);
leftKerningGroup = C;
note = uni010A;
rightKerningGroup = C;
unicode = 010A;
},
{
glyphname = cdotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 282, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1072;
}
);
leftKerningGroup = c;
note = uni010B;
rightKerningGroup = c;
unicode = 010B;
},
{
glyphname = Ccaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caron;
transform = "{1, 0, 0, 1, 229, 344}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1333;
}
);
leftKerningGroup = C;
note = uni010C;
rightKerningGroup = C;
unicode = 010C;
},
{
glyphname = ccaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 82, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1072;
}
);
leftKerningGroup = c;
note = uni010D;
rightKerningGroup = c;
unicode = 010D;
},
{
glyphname = Dcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caron;
transform = "{1, 0, 0, 1, 158, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1343;
}
);
note = uni010E;
unicode = 010E;
},
{
glyphname = dcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 980, 1299}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1305;
}
);
leftKerningGroup = c;
note = uni010F;
unicode = 010F;
},
{
glyphname = Emacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 146, 330}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0112;
unicode = 0112;
},
{
glyphname = emacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, 92, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni0113;
unicode = 0113;
},
{
glyphname = Ebreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = breve;
transform = "{1, 0, 0, 1, 191, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0114;
unicode = 0114;
},
{
glyphname = ebreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = breve;
transform = "{1, 0, 0, 1, 137, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni0115;
unicode = 0115;
},
{
glyphname = Edotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 369, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0116;
unicode = 0116;
},
{
glyphname = edotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 315, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni0117;
unicode = 0117;
},
{
glyphname = Eogonek;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"361 830 LINE",
"361 1298 LINE",
"1084 1298 LINE",
"1084 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"844 0 LINE",
"689 -105 OFFCURVE",
"689 -243 QCURVE SMOOTH",
"689 -329 OFFCURVE",
"792 -433 OFFCURVE",
"881 -433 QCURVE SMOOTH",
"971 -433 OFFCURVE",
"1041 -389 QCURVE",
"1028 -268 LINE",
"976 -294 OFFCURVE",
"928 -294 QCURVE SMOOTH",
"850 -294 OFFCURVE",
"850 -222 QCURVE SMOOTH",
"850 -136 OFFCURVE",
"963 -45 QCURVE SMOOTH",
"1021 0 LINE",
"1094 0 LINE",
"1094 157 LINE",
"361 157 LINE",
"361 673 LINE",
"992 673 LINE",
"992 830 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
}
);
note = uni0118;
unicode = 0118;
},
{
glyphname = eogonek;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"833 211 OFFCURVE",
"697 131 OFFCURVE",
"599 131 QCURVE SMOOTH",
"461 131 OFFCURVE",
"282 328 OFFCURVE",
"278 488 QCURVE",
"1011 488 LINE",
"1011 565 LINE SMOOTH",
"1011 824 OFFCURVE",
"777 1102 OFFCURVE",
"566 1102 QCURVE SMOOTH",
"437 1102 OFFCURVE",
"216 959 OFFCURVE",
"93 706 OFFCURVE",
"93 545 QCURVE SMOOTH",
"93 512 LINE SMOOTH",
"93 273 OFFCURVE",
"360 -16 OFFCURVE",
"578 -20 QCURVE",
"480 -110 OFFCURVE",
"480 -218 QCURVE SMOOTH",
"480 -304 OFFCURVE",
"583 -408 OFFCURVE",
"672 -408 QCURVE SMOOTH",
"762 -408 OFFCURVE",
"832 -364 QCURVE",
"819 -243 LINE",
"767 -269 OFFCURVE",
"719 -269 QCURVE SMOOTH",
"641 -269 OFFCURVE",
"641 -197 QCURVE SMOOTH",
"641 -111 OFFCURVE",
"754 -20 QCURVE SMOOTH",
"812 25 LINE",
"811 25 LINE",
"926 79 OFFCURVE",
"997 189 QCURVE",
"884 277 LINE"
);
},
{
closed = 1;
nodes = (
"302 787 OFFCURVE",
"454 950 OFFCURVE",
"566 950 QCURVE SMOOTH",
"682 950 OFFCURVE",
"818 795 OFFCURVE",
"826 654 QCURVE SMOOTH",
"826 640 LINE",
"284 640 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
42 18 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 42 207 42 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
37 18 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
}
);
leftKerningGroup = c;
note = uni0119;
unicode = 0119;
},
{
glyphname = Ecaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caron;
transform = "{1, 0, 0, 1, 169, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni011A;
unicode = 011A;
},
{
glyphname = ecaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, 115, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni011B;
unicode = 011B;
},
{
glyphname = Gcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 200, 343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1395;
}
);
leftKerningGroup = C;
note = uni011C;
unicode = 011C;
},
{
glyphname = gcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
leftKerningGroup = c;
note = uni011D;
unicode = 011D;
},
{
glyphname = Gbreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = breve;
transform = "{1, 0, 0, 1, 243, 344}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1395;
}
);
leftKerningGroup = C;
note = uni011E;
unicode = 011E;
},
{
glyphname = gbreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = breve;
transform = "{1, 0, 0, 1, 128, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
leftKerningGroup = c;
note = uni011F;
unicode = 011F;
},
{
glyphname = Gdotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 421, 343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1395;
}
);
leftKerningGroup = C;
note = uni0120;
unicode = 0120;
},
{
glyphname = gdotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 306, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
leftKerningGroup = c;
note = uni0121;
unicode = 0121;
},
{
glyphname = Gcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 474, -361}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1395;
}
);
leftKerningGroup = C;
note = uni0122;
unicode = 0122;
},
{
glyphname = gcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = glyph00564;
transform = "{1, 0, 0, 1, 299, 88}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
leftKerningGroup = c;
note = uni0123;
unicode = 0123;
},
{
glyphname = Hcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 241, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni0124;
unicode = 0124;
},
{
glyphname = hcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 29, 321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
note = uni0125;
rightKerningGroup = h;
unicode = 0125;
},
{
glyphname = Itilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -196, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni0128;
unicode = 0128;
},
{
glyphname = itilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -222, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni0129;
unicode = 0129;
},
{
glyphname = Imacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macron;
transform = "{1, 0, 0, 1, -194, 330}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni012A;
unicode = 012A;
},
{
glyphname = imacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macron;
transform = "{1, 0, 0, 1, -220, 6}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni012B;
unicode = 012B;
},
{
glyphname = Ibreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = breve;
transform = "{1, 0, 0, 1, -149, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni012C;
unicode = 012C;
},
{
glyphname = ibreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = breve;
transform = "{1, 0, 0, 1, -175, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni012D;
unicode = 012D;
},
{
glyphname = Iogonek;
lastChange = "2020-11-28 03:39:32 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"375 1456 LINE",
"183 1456 LINE",
"183 11.209 LINE",
"80.47 -56.956 OFFCURVE",
"24 -141.531 OFFCURVE",
"24 -234 CURVE SMOOTH",
"24 -348.667 OFFCURVE",
"97.333 -424 OFFCURVE",
"216 -424 CURVE SMOOTH",
"276 -424 OFFCURVE",
"329.333 -409.333 OFFCURVE",
"376 -380 CURVE",
"363 -259 LINE",
"328.333 -276.333 OFFCURVE",
"295 -285 OFFCURVE",
"263 -285 CURVE SMOOTH",
"211 -285 OFFCURVE",
"185 -261 OFFCURVE",
"185 -213 CURVE SMOOTH",
"185 -155.667 OFFCURVE",
"222.667 -96.667 OFFCURVE",
"298 -36 CURVE SMOOTH",
"344.4 0 LINE",
"375 0 LINE"
);
}
);
width = 557;
}
);
note = uni012E;
unicode = 012E;
},
{
glyphname = iogonek;
lastChange = "2020-11-28 03:39:01 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1082 LINE",
"156 1082 LINE",
"156 3.533 LINE",
"52.204 -64.86 OFFCURVE",
"-5 -149.932 OFFCURVE",
"-5 -243 CURVE SMOOTH",
"-5 -357.667 OFFCURVE",
"68.333 -433 OFFCURVE",
"187 -433 CURVE SMOOTH",
"247 -433 OFFCURVE",
"300.333 -418.333 OFFCURVE",
"347 -389 CURVE",
"334 -268 LINE",
"299.333 -285.333 OFFCURVE",
"266 -294 OFFCURVE",
"234 -294 CURVE SMOOTH",
"182 -294 OFFCURVE",
"156 -270 OFFCURVE",
"156 -222 CURVE SMOOTH",
"156 -164.667 OFFCURVE",
"193.667 -105.667 OFFCURVE",
"269 -45 CURVE SMOOTH",
"327 0 LINE",
"341 0 LINE"
);
},
{
closed = 1;
nodes = (
"141 1309 OFFCURVE",
"178 1264 OFFCURVE",
"250 1264 CURVE SMOOTH",
"322 1264 OFFCURVE",
"360 1309 OFFCURVE",
"360 1369 CURVE SMOOTH",
"360 1429 OFFCURVE",
"322 1476 OFFCURVE",
"250 1476 CURVE SMOOTH",
"178 1476 OFFCURVE",
"141 1429 OFFCURVE",
"141 1369 CURVE SMOOTH"
);
}
);
width = 497;
}
);
note = uni012F;
unicode = 012F;
},
{
glyphname = Idotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 28, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni0130;
unicode = 0130;
},
{
glyphname = IJ;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 557, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1687;
}
);
note = uni0132;
unicode = 0132;
},
{
glyphname = ij;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 986;
}
);
note = uni0133;
unicode = 0133;
},
{
glyphname = Jcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 380, 309}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = J;
note = uni0134;
unicode = 0134;
},
{
glyphname = jcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -205, -40}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 515;
}
);
note = uni0135;
unicode = 0135;
},
{
glyphname = Kcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 404, -263}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1284;
}
);
note = uni0136;
unicode = 0136;
},
{
glyphname = kcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 273, -282}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1038;
}
);
note = uni0137;
unicode = 0137;
},
{
glyphname = Lacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acute;
transform = "{1, 0, 0, 1, 38, 305}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1102;
}
);
note = uni0139;
unicode = 0139;
},
{
glyphname = lacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acute;
transform = "{1, 0, 0, 1, 24, 406}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 497;
}
);
note = uni013A;
unicode = 013A;
},
{
glyphname = Lcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 364, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1102;
}
);
note = uni013B;
unicode = 013B;
},
{
glyphname = lcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, -5, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 497;
}
);
note = uni013C;
unicode = 013C;
},
{
glyphname = Lcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 469, 1218}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1102;
}
);
note = uni013D;
unicode = 013D;
},
{
glyphname = lcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 342, 1299}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 647;
}
);
note = uni013E;
unicode = 013E;
},
{
glyphname = Ldot;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 444, -571}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1102;
}
);
note = uni013F;
unicode = 013F;
},
{
glyphname = ldot;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 312, -586}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 717;
}
);
note = uni0140;
unicode = 0140;
},
{
glyphname = Nacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acute;
transform = "{1, 0, 0, 1, 501, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni0143;
unicode = 0143;
},
{
glyphname = nacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acute;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = m;
note = uni0144;
rightKerningGroup = h;
unicode = 0144;
},
{
glyphname = Ncommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 464, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni0145;
unicode = 0145;
},
{
glyphname = ncommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 307, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = m;
note = uni0146;
rightKerningGroup = h;
unicode = 0146;
},
{
glyphname = Ncaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caron;
transform = "{1, 0, 0, 1, 276, 311}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni0147;
unicode = 0147;
},
{
glyphname = ncaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, 122, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = m;
note = uni0148;
rightKerningGroup = h;
unicode = 0148;
},
{
glyphname = napostrophe;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, -160, 1301}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = m;
note = uni0149;
rightKerningGroup = h;
unicode = 0149;
},
{
glyphname = Omacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 233, 320}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni014C;
unicode = 014C;
},
{
glyphname = omacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, 102, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni014D;
unicode = 014D;
},
{
glyphname = Obreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = breve;
transform = "{1, 0, 0, 1, 278, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni014E;
unicode = 014E;
},
{
glyphname = obreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = breve;
transform = "{1, 0, 0, 1, 147, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni014F;
unicode = 014F;
},
{
glyphname = Ohungarumlaut;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 363, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni0150;
unicode = 0150;
},
{
glyphname = ohungarumlaut;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 232, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni0151;
unicode = 0151;
},
{
glyphname = Racute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acute;
transform = "{1, 0, 0, 1, 384, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1261;
}
);
note = uni0154;
unicode = 0154;
},
{
glyphname = racute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acute;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 693;
}
);
note = uni0155;
unicode = 0155;
},
{
glyphname = Rcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 355, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1261;
}
);
note = uni0156;
unicode = 0156;
},
{
glyphname = rcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, -9, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 693;
}
);
note = uni0157;
unicode = 0157;
},
{
glyphname = Rcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caron;
transform = "{1, 0, 0, 1, 159, 311}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1261;
}
);
note = uni0158;
unicode = 0158;
},
{
glyphname = rcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, -42, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 693;
}
);
note = uni0159;
unicode = 0159;
},
{
glyphname = Sacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acute;
transform = "{1, 0, 0, 1, 397, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
leftKerningGroup = S;
note = uni015A;
unicode = 015A;
},
{
glyphname = sacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acute;
transform = "{1, 0, 0, 1, 337, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s;
note = uni015B;
unicode = 015B;
},
{
glyphname = Scircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 151, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
leftKerningGroup = S;
note = uni015C;
unicode = 015C;
},
{
glyphname = scircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s;
note = uni015D;
unicode = 015D;
},
{
glyphname = Scedilla;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
leftKerningGroup = S;
note = uni015E;
unicode = 015E;
},
{
glyphname = scedilla;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 349, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s;
note = uni015F;
unicode = 015F;
},
{
glyphname = Scommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 373, -352}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
leftKerningGroup = S;
note = uni0218;
unicode = 0218;
},
{
glyphname = scommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 307, -361}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s;
note = uni0219;
unicode = 0219;
},
{
glyphname = Scaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 172, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
leftKerningGroup = S;
note = uni0160;
unicode = 0160;
},
{
glyphname = scaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 112, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s;
note = uni0161;
unicode = 0161;
},
{
glyphname = Tcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 358, -352}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftKerningGroup = T;
note = uni021A;
unicode = 021A;
},
{
glyphname = tcommaaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 197, -352}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 669;
}
);
note = uni021B;
unicode = 021B;
},
{
glyphname = Tcedilla;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 400, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftKerningGroup = T;
note = uni0162;
unicode = 0162;
},
{
glyphname = tcedilla;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 239, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 669;
}
);
note = uni0163;
unicode = 0163;
},
{
glyphname = Tcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = caron;
transform = "{1, 0, 0, 1, 161, 311}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftKerningGroup = T;
note = uni0164;
unicode = 0164;
},
{
glyphname = tcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 405, 1418}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 709;
}
);
note = uni0165;
unicode = 0165;
},
{
glyphname = Utilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 192, 314}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni0168;
unicode = 0168;
},
{
glyphname = utilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 92, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni0169;
unicode = 0169;
},
{
glyphname = Umacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 194, 318}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni016A;
unicode = 016A;
},
{
glyphname = umacron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, 94, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni016B;
unicode = 016B;
},
{
glyphname = Ubreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = breve;
transform = "{1, 0, 0, 1, 239, 311}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni016C;
unicode = 016C;
},
{
glyphname = ubreve;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = breve;
transform = "{1, 0, 0, 1, 139, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni016D;
unicode = 016D;
},
{
glyphname = Uring;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ring;
transform = "{1, 0, 0, 1, 331, 321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni016E;
unicode = 016E;
},
{
glyphname = uring;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ring;
transform = "{1, 0, 0, 1, 231, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni016F;
unicode = 016F;
},
{
glyphname = Uhungarumlaut;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 324, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni0170;
unicode = 0170;
},
{
glyphname = uhungarumlaut;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 224, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni0171;
unicode = 0171;
},
{
glyphname = Uogonek;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1001 469 LINE SMOOTH",
"1001 311 OFFCURVE",
"828 137 OFFCURVE",
"665 137 QCURVE SMOOTH",
"504 137 OFFCURVE",
"330 312 OFFCURVE",
"330 470 QCURVE SMOOTH",
"330 1456 LINE",
"140 1456 LINE",
"140 464 LINE SMOOTH",
"142 238 OFFCURVE",
"426 -20 OFFCURVE",
"665 -20 QCURVE SMOOTH",
"687 -19 LINE",
"608 -102 OFFCURVE",
"608 -199 QCURVE SMOOTH",
"608 -285 OFFCURVE",
"711 -389 OFFCURVE",
"800 -389 QCURVE SMOOTH",
"890 -389 OFFCURVE",
"960 -345 QCURVE",
"947 -224 LINE",
"895 -250 OFFCURVE",
"847 -250 QCURVE SMOOTH",
"769 -250 OFFCURVE",
"769 -178 QCURVE SMOOTH",
"769 -82 OFFCURVE",
"924 32 QCURVE",
"1055 91 OFFCURVE",
"1193 317 OFFCURVE",
"1194 465 QCURVE SMOOTH",
"1194 1456 LINE",
"1001 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
4 19 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1328;
}
);
leftKerningGroup = U;
note = uni0172;
unicode = 0172;
},
{
glyphname = uogonek;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"988 1082 LINE",
"803 1082 LINE",
"803 295 LINE",
"733 137 OFFCURVE",
"521 137 QCURVE SMOOTH",
"321 137 OFFCURVE",
"321 383 QCURVE SMOOTH",
"321 1082 LINE",
"136 1082 LINE",
"136 378 LINE SMOOTH",
"137 181 OFFCURVE",
"318 -20 OFFCURVE",
"491 -20 QCURVE SMOOTH",
"700 -20 OFFCURVE",
"808 107 QCURVE",
"812 6 LINE",
"646 -100 OFFCURVE",
"646 -243 QCURVE SMOOTH",
"646 -329 OFFCURVE",
"749 -433 OFFCURVE",
"838 -433 QCURVE SMOOTH",
"928 -433 OFFCURVE",
"998 -389 QCURVE",
"985 -268 LINE",
"933 -294 OFFCURVE",
"885 -294 QCURVE SMOOTH",
"807 -294 OFFCURVE",
"807 -222 QCURVE SMOOTH",
"807 -136 OFFCURVE",
"920 -45 QCURVE SMOOTH",
"978 0 LINE",
"988 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
31 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 18 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
}
);
leftKerningGroup = u;
note = uni0173;
unicode = 0173;
},
{
glyphname = Wcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 453, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1817;
}
);
leftKerningGroup = W;
note = uni0174;
unicode = 0174;
},
{
glyphname = wcircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 292, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
}
);
note = uni0175;
unicode = 0175;
},
{
glyphname = Ycircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 146, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni0176;
unicode = 0176;
},
{
glyphname = ycircumflex;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 37, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni0177;
unicode = 0177;
},
{
glyphname = Ydieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 194, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni0178;
unicode = 0178;
},
{
glyphname = Zacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 391, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1226;
}
);
leftKerningGroup = Z;
note = uni0179;
unicode = 0179;
},
{
glyphname = zacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 289, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1015;
}
);
leftKerningGroup = z;
note = uni017A;
unicode = 017A;
},
{
glyphname = Zdotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 366, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1226;
}
);
leftKerningGroup = Z;
note = uni017B;
unicode = 017B;
},
{
glyphname = zdotaccent;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 264, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1015;
}
);
leftKerningGroup = z;
note = uni017C;
unicode = 017C;
},
{
glyphname = Zcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 166, 311}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1226;
}
);
leftKerningGroup = Z;
note = uni017D;
unicode = 017D;
},
{
glyphname = zcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 64, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1015;
}
);
leftKerningGroup = z;
note = uni017E;
unicode = 017E;
},
{
glyphname = AEacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = AE;
},
{
name = acute;
transform = "{1, 0, 0, 1, 713, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1914;
}
);
note = uni01FC;
unicode = 01FC;
},
{
glyphname = aeacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ae;
},
{
name = acute;
transform = "{1, 0, 0, 1, 634, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1729;
}
);
note = uni01FD;
unicode = 01FD;
},
{
glyphname = Oslashacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Oslash;
},
{
name = acute;
transform = "{1, 0, 0, 1, 489, 384}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni01FE;
unicode = 01FE;
},
{
glyphname = oslashacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = oslash;
},
{
name = acute;
transform = "{1, 0, 0, 1, 311, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1160;
}
);
note = uni01FF;
unicode = 01FF;
},
{
glyphname = Idotaccent.c2sc;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -5, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00867;
},
{
glyphname = Alphatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 4, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni0386;
unicode = 0386;
},
{
glyphname = Epsilontonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tonos;
transform = "{1, 0, 0, 1, -398, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0388;
unicode = 0388;
},
{
glyphname = Etatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = tonos;
transform = "{1, 0, 0, 1, -384, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni0389;
unicode = 0389;
},
{
glyphname = Iotatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tonos;
transform = "{1, 0, 0, 1, -378, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni038A;
unicode = 038A;
},
{
glyphname = Omicrontonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -209, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1428;
}
);
leftKerningGroup = C;
note = uni038C;
unicode = 038C;
},
{
glyphname = Upsilontonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -419, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1330;
}
);
leftKerningGroup = Y;
note = uni038E;
unicode = 038E;
},
{
glyphname = Omegatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Omega;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -206, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1382;
}
);
note = uni038F;
unicode = 038F;
},
{
glyphname = iotadieresistonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = iota;
},
{
name = dieresistonos;
transform = "{1, 0, 0, 1, -214, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 663;
}
);
note = uni0390;
unicode = 0390;
},
{
glyphname = Alpha;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni0391;
unicode = 0391;
},
{
glyphname = Beta;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = B;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1275;
}
);
note = uni0392;
unicode = 0392;
},
{
glyphname = Epsilon;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0395;
unicode = 0395;
},
{
glyphname = Zeta;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Z;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1226;
}
);
leftKerningGroup = Z;
note = uni0396;
unicode = 0396;
},
{
glyphname = Eta;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = H;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni0397;
unicode = 0397;
},
{
glyphname = Iota;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni0399;
unicode = 0399;
},
{
glyphname = Kappa;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = K;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1284;
}
);
note = uni039A;
unicode = 039A;
},
{
glyphname = Mu;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = M;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
note = uni039C;
unicode = 039C;
},
{
glyphname = Nu;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = N;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni039D;
unicode = 039D;
},
{
glyphname = Omicron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni039F;
unicode = 039F;
},
{
glyphname = Rho;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
note = uni03A1;
unicode = 03A1;
},
{
glyphname = Tau;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = T;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
note = uni03A4;
unicode = 03A4;
},
{
glyphname = Upsilon;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni03A5;
unicode = 03A5;
},
{
glyphname = Chi;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = X;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1284;
}
);
leftKerningGroup = X;
note = uni03A7;
unicode = 03A7;
},
{
glyphname = Iotadieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -144, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni03AA;
unicode = 03AA;
},
{
glyphname = Upsilondieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 194, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni03AB;
unicode = 03AB;
},
{
glyphname = alphatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = alpha;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 373, -5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = c;
note = uni03AC;
unicode = 03AC;
},
{
glyphname = epsilontonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = epsilon;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 299, -6}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1104;
}
);
note = uni03AD;
unicode = 03AD;
},
{
glyphname = etatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = eta;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 326, -5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1160;
}
);
leftKerningGroup = m;
note = uni03AE;
rightKerningGroup = h;
unicode = 03AE;
},
{
glyphname = iotatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = iota;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 42, -26}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 663;
}
);
note = uni03AF;
unicode = 03AF;
},
{
glyphname = upsilondieresistonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = upsilon;
},
{
name = dieresistonos;
transform = "{1, 0, 0, 1, 33, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1117;
}
);
leftKerningGroup = u;
note = uni03B0;
unicode = 03B0;
},
{
glyphname = kappa;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = kgreenlandic;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1139;
}
);
note = uni03BA;
unicode = 03BA;
},
{
glyphname = omicron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni03BF;
unicode = 03BF;
},
{
glyphname = mu;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = micro;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1160;
}
);
note = uni03BC;
unicode = 03BC;
},
{
glyphname = nu;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = v;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 992;
}
);
leftKerningGroup = v;
note = uni03BD;
unicode = 03BD;
},
{
glyphname = chi;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"158 1097 OFFCURVE",
"90 1082 QCURVE",
"91 934 LINE",
"159 939 LINE",
"266 939 OFFCURVE",
"339 756 QCURVE",
"507 369 LINE",
"120 -415 LINE",
"316 -415 LINE",
"597 162 LINE",
"759 -208 LINE SMOOTH",
"821 -342 OFFCURVE",
"941 -436 OFFCURVE",
"1032 -436 QCURVE SMOOTH",
"1069 -436 OFFCURVE",
"1093 -421 QCURVE",
"1140 -263 LINE",
"1068 -268 LINE",
"1042 -268 LINE SMOOTH",
"974 -265 OFFCURVE",
"913 -137 QCURVE",
"695 361 LINE",
"1047 1082 LINE",
"860 1082 LINE",
"605 566 LINE",
"456 905 LINE SMOOTH",
"368 1097 OFFCURVE",
"194 1097 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 4 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
18 19 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 18 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
}
);
note = uni03C7;
unicode = 03C7;
},
{
glyphname = iotadieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = iota;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -128, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 663;
}
);
note = uni03CA;
unicode = 03CA;
},
{
glyphname = upsilondieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = upsilon;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 119, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1117;
}
);
leftKerningGroup = u;
note = uni03CB;
unicode = 03CB;
},
{
glyphname = omicrontonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 323, -5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni03CC;
unicode = 03CC;
},
{
glyphname = upsilontonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = upsilon;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 290, -26}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1117;
}
);
leftKerningGroup = u;
note = uni03CD;
unicode = 03CD;
},
{
glyphname = omegatonos;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = omega;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 595, -29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1687;
}
);
note = uni03CE;
unicode = 03CE;
},
{
glyphname = "Io-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 196, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0401;
unicode = 0401;
},
{
glyphname = "Gje-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Gamma;
},
{
name = acute;
transform = "{1, 0, 0, 1, 400, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1139;
}
);
note = uni0403;
unicode = 0403;
},
{
glyphname = "Dze-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"795 592 OFFCURVE",
"945 475 OFFCURVE",
"945 261 OFFCURVE",
"783 137 OFFCURVE",
"631 137 QCURVE SMOOTH",
"468 137 OFFCURVE",
"273 290 OFFCURVE",
"273 422 QCURVE",
"80 422 LINE",
"80 295 OFFCURVE",
"221 95 OFFCURVE",
"481 -20 OFFCURVE",
"631 -20 QCURVE SMOOTH",
"862 -20 OFFCURVE",
"1138 193 OFFCURVE",
"1138 370 QCURVE SMOOTH",
"1138 481 OFFCURVE",
"1039 645 OFFCURVE",
"834 768 OFFCURVE",
"471 870 OFFCURVE",
"320 993 OFFCURVE",
"320 1082 QCURVE SMOOTH",
"320 1193 OFFCURVE",
"479 1318 OFFCURVE",
"621 1318 QCURVE SMOOTH",
"774 1318 OFFCURVE",
"942 1167 OFFCURVE",
"942 1035 QCURVE",
"1135 1035 LINE",
"1135 1156 OFFCURVE",
"1006 1360 OFFCURVE",
"771 1476 OFFCURVE",
"621 1476 QCURVE SMOOTH",
"401 1476 OFFCURVE",
"126 1251 OFFCURVE",
"126 1079 QCURVE SMOOTH",
"126 927 OFFCURVE",
"351 720 OFFCURVE",
"598 649 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
38 26 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1215;
}
);
note = uni0405;
unicode = 0405;
},
{
glyphname = "I-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni0406;
unicode = 0406;
},
{
glyphname = "Yi-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -144, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni0407;
unicode = 0407;
},
{
glyphname = "Je-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = J;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = J;
note = uni0408;
unicode = 0408;
},
{
glyphname = "Ka-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = K.ss04;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1316;
}
);
note = uni041A;
unicode = 041A;
},
{
glyphname = "Kje-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = acute;
transform = "{1, 0, 0, 1, 379, 304}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1284;
}
);
note = uni040C;
unicode = 040C;
},
{
glyphname = "Ushort-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "U-cy";
},
{
name = breve;
transform = "{1, 0, 0, 1, 218, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1287;
}
);
leftKerningGroup = "U-cy";
note = uni040E;
unicode = 040E;
},
{
glyphname = "A-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni0410;
unicode = 0410;
},
{
glyphname = "Ve-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = B;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1275;
}
);
note = uni0412;
unicode = 0412;
},
{
glyphname = "Ge-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Gamma;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1139;
}
);
note = uni0413;
unicode = 0413;
},
{
glyphname = "Ie-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0415;
unicode = 0415;
},
{
glyphname = "Iishort-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ii-cy";
},
{
name = breve;
transform = "{1, 0, 0, 1, 305, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni0419;
unicode = 0419;
},
{
glyphname = "Em-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = M;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
note = uni041C;
unicode = 041C;
},
{
glyphname = "En-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = H;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni041D;
unicode = 041D;
},
{
glyphname = "O-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni041E;
unicode = 041E;
},
{
glyphname = "Pe-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Pi;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1461;
}
);
note = uni041F;
unicode = 041F;
},
{
glyphname = "Er-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
note = uni0420;
unicode = 0420;
},
{
glyphname = "Es-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = C;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1333;
}
);
leftKerningGroup = C;
note = uni0421;
rightKerningGroup = C;
unicode = 0421;
},
{
glyphname = "Te-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = T;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftKerningGroup = T;
note = uni0422;
unicode = 0422;
},
{
glyphname = "Ha-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = X;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1284;
}
);
leftKerningGroup = X;
note = uni0425;
unicode = 0425;
},
{
glyphname = "a-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni0430;
unicode = 0430;
},
{
glyphname = "ie-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni0435;
unicode = 0435;
},
{
glyphname = "iishort-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ii-cy";
},
{
name = breve;
transform = "{1, 0, 0, 1, 162, -19}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1182;
}
);
leftKerningGroup = m;
note = uni0439;
unicode = 0439;
},
{
glyphname = "o-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni043E;
unicode = 043E;
},
{
glyphname = "er-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = p;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
leftKerningGroup = m;
note = uni0440;
unicode = 0440;
},
{
glyphname = "es-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"431 131 OFFCURVE",
"277 333 OFFCURVE",
"277 520 QCURVE SMOOTH",
"277 555 LINE SMOOTH",
"277 747 OFFCURVE",
"432 950 OFFCURVE",
"573 950 QCURVE SMOOTH",
"678 950 OFFCURVE",
"821 815 OFFCURVE",
"829 710 QCURVE",
"1004 710 LINE",
"996 884 OFFCURVE",
"755 1102 OFFCURVE",
"573 1102 QCURVE SMOOTH",
"425 1102 OFFCURVE",
"208 966 OFFCURVE",
"92 720 OFFCURVE",
"92 562 QCURVE SMOOTH",
"92 531 LINE SMOOTH",
"92 275 OFFCURVE",
"353 -20 OFFCURVE",
"574 -20 QCURVE SMOOTH",
"684 -20 OFFCURVE",
"881 80 OFFCURVE",
"999 248 OFFCURVE",
"1004 341 QCURVE",
"829 341 LINE",
"821 251 OFFCURVE",
"673 131 OFFCURVE",
"574 131 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1072;
}
);
leftKerningGroup = c;
note = uni0441;
rightKerningGroup = c;
unicode = 0441;
},
{
glyphname = "u-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni0443;
unicode = 0443;
},
{
glyphname = "ha-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = x;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1015;
}
);
leftKerningGroup = x;
note = uni0445;
unicode = 0445;
},
{
glyphname = "io-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 142, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni0451;
unicode = 0451;
},
{
glyphname = "gje-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ge-cy";
},
{
name = acute;
transform = "{1, 0, 0, 1, 205, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 859;
}
);
leftKerningGroup = m;
note = uni0453;
unicode = 0453;
},
{
glyphname = "dze-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s;
note = uni0455;
unicode = 0455;
},
{
glyphname = "i-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = i;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 497;
}
);
note = uni0456;
unicode = 0456;
},
{
glyphname = "yi-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -170, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni0457;
unicode = 0457;
},
{
glyphname = "je-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = j;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 489;
}
);
note = uni0458;
unicode = 0458;
},
{
glyphname = "kje-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ka-cy";
},
{
name = acute;
transform = "{1, 0, 0, 1, 315, -21}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1106;
}
);
leftKerningGroup = m;
note = uni045C;
unicode = 045C;
},
{
glyphname = "ushort-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = breve;
transform = "{1, 0, 0, 1, 80, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni045E;
unicode = 045E;
},
{
glyphname = Wgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = grave;
transform = "{1, 0, 0, 1, 556, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1817;
}
);
leftKerningGroup = W;
note = uni1E80;
unicode = 1E80;
},
{
glyphname = wgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
}
);
note = uni1E81;
unicode = 1E81;
},
{
glyphname = Wacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acute;
transform = "{1, 0, 0, 1, 699, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1817;
}
);
leftKerningGroup = W;
note = uni1E82;
unicode = 1E82;
},
{
glyphname = wacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 538, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
}
);
note = uni1E83;
unicode = 1E83;
},
{
glyphname = Wdieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 501, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1817;
}
);
leftKerningGroup = W;
note = uni1E84;
unicode = 1E84;
},
{
glyphname = wdieresis;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
}
);
note = uni1E85;
unicode = 1E85;
},
{
glyphname = Ygrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 249, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni1EF2;
unicode = 1EF2;
},
{
glyphname = ygrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 140, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni1EF3;
unicode = 1EF3;
},
{
glyphname = minute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = quotesingle;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 357;
}
);
leftKerningGroup = quotedbl;
note = uni2032;
unicode = 2032;
},
{
glyphname = second;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = quotedbl;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 655;
}
);
leftKerningGroup = quotedbl;
note = uni2033;
unicode = 2033;
},
{
glyphname = exclamdouble;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = exclam;
},
{
name = exclam;
transform = "{1, 0, 0, 1, 527, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1054;
}
);
note = uni203C;
unicode = 203C;
},
{
glyphname = jcaron;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = caron;
transform = "{1, 0, 0, 1, -184, -39}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 515;
}
);
note = uni01F0;
unicode = 01F0;
},
{
glyphname = apostrophemod;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = quoteright;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 409;
}
);
leftKerningGroup = quotedbl;
note = uni02BC;
unicode = 02BC;
},
{
glyphname = Macute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = M;
},
{
name = acute;
transform = "{1, 0, 0, 1, 665, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
note = uni1E3E;
unicode = 1E3E;
},
{
glyphname = macute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = m;
},
{
name = acute;
transform = "{1, 0, 0, 1, 685, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1795;
}
);
leftKerningGroup = m;
note = uni1E3F;
rightKerningGroup = h;
unicode = 1E3F;
},
{
glyphname = Aringbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = lowringmod;
transform = "{1, 0, 0, 1, 383, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1E00;
unicode = 1E00;
},
{
glyphname = aringbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = lowringmod;
transform = "{1, 0, 0, 1, 199, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1E01;
unicode = 1E01;
},
{
glyphname = "Iegrave-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 251, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni0400;
unicode = 0400;
},
{
glyphname = "Iigrave-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ii-cy";
},
{
name = grave;
transform = "{1, 0, 0, 1, 365, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni040D;
unicode = 040D;
},
{
glyphname = "iegrave-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 197, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni0450;
unicode = 0450;
},
{
glyphname = "iigrave-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ii-cy";
},
{
name = grave;
transform = "{1, 0, 0, 1, 222, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1182;
}
);
leftKerningGroup = m;
note = uni045D;
unicode = 045D;
},
{
glyphname = "Psi-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Psi;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1417;
}
);
note = uni0470;
unicode = 0470;
},
{
glyphname = "psi-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = psi;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1434;
}
);
note = uni0471;
unicode = 0471;
},
{
glyphname = "Izhitsadblgrave-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Izhitsa-cy";
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1081, 250}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1290;
}
);
leftKerningGroup = V;
note = uni0476;
unicode = 0476;
},
{
glyphname = "izhitsadblgrave-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "izhitsa-cy";
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 980, -45}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1027;
}
);
leftKerningGroup = v;
note = uni0477;
unicode = 0477;
},
{
glyphname = "uk-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = y;
transform = "{1, 0, 0, 1, 1168, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2137;
}
);
leftKerningGroup = c;
note = uni0479;
unicode = 0479;
},
{
glyphname = "Uk-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = y;
transform = "{1, 0, 0, 1, 1408, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2377;
}
);
leftKerningGroup = C;
note = uni0478;
unicode = 0478;
},
{
glyphname = "Zedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ze-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 412, -72}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
note = uni0498;
unicode = 0498;
},
{
glyphname = "zedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ze-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 323, -71}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1040;
}
);
note = uni0499;
unicode = 0499;
},
{
glyphname = "Esdescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 485, -72}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1333;
}
);
leftKerningGroup = C;
note = uni04AA;
rightKerningGroup = C;
unicode = 04AA;
},
{
glyphname = "esdescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 338, -72}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1072;
}
);
leftKerningGroup = c;
note = uni04AB;
rightKerningGroup = c;
unicode = 04AB;
},
{
glyphname = "Ustraight-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni04AE;
unicode = 04AE;
},
{
glyphname = "ustraight-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = gamma;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1026;
}
);
leftKerningGroup = v;
note = uni04AF;
unicode = 04AF;
},
{
glyphname = "Palochka-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni04C0;
unicode = 04C0;
},
{
glyphname = "Zhebreve-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Zhe-cy";
},
{
name = breve;
transform = "{1, 0, 0, 1, 504, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1859;
}
);
leftKerningGroup = X;
note = uni04C1;
unicode = 04C1;
},
{
glyphname = "zhebreve-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "zhe-cy";
},
{
name = breve;
transform = "{1, 0, 0, 1, 351, -19}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1568;
}
);
leftKerningGroup = x;
note = uni04C2;
unicode = 04C2;
},
{
glyphname = "palochka-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni04CF;
unicode = 04CF;
},
{
glyphname = "Abreve-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 244, 311}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni04D0;
unicode = 04D0;
},
{
glyphname = "abreve-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 153, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni04D1;
unicode = 04D1;
},
{
glyphname = "Adieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 249, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni04D2;
unicode = 04D2;
},
{
glyphname = "adieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni04D3;
unicode = 04D3;
},
{
glyphname = "Aie-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = AE;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1914;
}
);
note = uni04D4;
unicode = 04D4;
},
{
glyphname = "aie-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ae;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1729;
}
);
note = uni04D5;
unicode = 04D5;
},
{
glyphname = "Iebreve-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = breve;
transform = "{1, 0, 0, 1, 191, 323}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni04D6;
unicode = 04D6;
},
{
glyphname = "iebreve-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = breve;
transform = "{1, 0, 0, 1, 137, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni04D7;
unicode = 04D7;
},
{
glyphname = "Schwadieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Schwa-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 211, 276}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1415;
}
);
note = uni04DA;
unicode = 04DA;
},
{
glyphname = "schwa-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = schwa;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1079;
}
);
leftKerningGroup = c;
note = uni04D9;
unicode = 04D9;
},
{
glyphname = "schwadieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = schwa;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 135, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1079;
}
);
leftKerningGroup = c;
note = uni04DB;
unicode = 04DB;
},
{
glyphname = "Zhedieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Zhe-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 509, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1859;
}
);
leftKerningGroup = X;
note = uni04DC;
unicode = 04DC;
},
{
glyphname = "zhedieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "zhe-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 356, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1568;
}
);
leftKerningGroup = x;
note = uni04DD;
unicode = 04DD;
},
{
glyphname = "Zedieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ze-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 183, 343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
note = uni04DE;
unicode = 04DE;
},
{
glyphname = "zedieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ze-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1040;
}
);
note = uni04DF;
unicode = 04DF;
},
{
glyphname = "Imacron-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ii-cy";
},
{
name = macron;
transform = "{1, 0, 0, 1, 260, 330}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni04E2;
unicode = 04E2;
},
{
glyphname = "imacron-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ii-cy";
},
{
name = macron;
transform = "{1, 0, 0, 1, 117, -12}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1182;
}
);
leftKerningGroup = m;
note = uni04E3;
unicode = 04E3;
},
{
glyphname = "Idieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ii-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 310, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = uni04E4;
unicode = 04E4;
},
{
glyphname = "idieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ii-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 167, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1182;
}
);
leftKerningGroup = m;
note = uni04E5;
unicode = 04E5;
},
{
glyphname = "Odieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 283, 312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni04E6;
unicode = 04E6;
},
{
glyphname = "odieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 152, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni04E7;
unicode = 04E7;
},
{
glyphname = "Obarred-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Fita-cy";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1393;
}
);
leftKerningGroup = C;
note = uni04E8;
unicode = 04E8;
},
{
glyphname = "obarred-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "fita-cy";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1163;
}
);
leftKerningGroup = c;
note = uni04E9;
unicode = 04E9;
},
{
glyphname = "Obarreddieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Fita-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 295, 317}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1393;
}
);
leftKerningGroup = C;
note = uni04EA;
unicode = 04EA;
},
{
glyphname = "obarreddieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "fita-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 136, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1163;
}
);
leftKerningGroup = o;
note = uni04EB;
unicode = 04EB;
},
{
glyphname = "Edieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Ereversed-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 269, 344}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1380;
}
);
note = uni04EC;
unicode = 04EC;
},
{
glyphname = "edieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ereversed-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1101;
}
);
note = uni04ED;
unicode = 04ED;
},
{
glyphname = "Umacron-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "U-cy";
},
{
name = macron;
transform = "{1, 0, 0, 1, 173, 330}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1287;
}
);
leftKerningGroup = "U-cy";
note = uni04EE;
unicode = 04EE;
},
{
glyphname = "umacron-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = macron;
transform = "{1, 0, 0, 1, 35, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni04EF;
unicode = 04EF;
},
{
glyphname = "Udieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "U-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 223, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1287;
}
);
leftKerningGroup = "U-cy";
note = uni04F0;
unicode = 04F0;
},
{
glyphname = "udieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni04F1;
unicode = 04F1;
},
{
glyphname = "Uhungarumlaut-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "U-cy";
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 303, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1287;
}
);
leftKerningGroup = "U-cy";
note = uni04F2;
unicode = 04F2;
},
{
glyphname = "uhungarumlaut-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 165, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni04F3;
unicode = 04F3;
},
{
glyphname = "Chedieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Che-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 265, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1402;
}
);
leftKerningGroup = "Che-cy";
note = uni04F4;
unicode = 04F4;
},
{
glyphname = "chedieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "che-cy";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 100, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1113;
}
);
leftKerningGroup = "che-cy";
note = uni04F5;
unicode = 04F5;
},
{
glyphname = "Yerudieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Softsign-cy";
transform = "{1, 0, 0, 1, 15, 0}";
},
{
name = I;
transform = "{1, 0, 0, 1, 1209, 0}";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 467, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1771;
}
);
note = uni04F8;
unicode = 04F8;
},
{
glyphname = "yerudieresis-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "softsign-cy";
},
{
name = idotless;
transform = "{1, 0, 0, 1, 1066, 0}";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 365, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1590;
}
);
leftKerningGroup = m;
note = uni04F9;
unicode = 04F9;
},
{
glyphname = "komide-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1155;
}
);
leftKerningGroup = c;
note = uni0501;
unicode = 0501;
},
{
glyphname = Adotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1282, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EA0;
unicode = 1EA0;
},
{
glyphname = adotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1098, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EA1;
unicode = 1EA1;
},
{
glyphname = Ahookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1262, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EA2;
unicode = 1EA2;
},
{
glyphname = ahookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1171, 16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EA3;
unicode = 1EA3;
},
{
glyphname = Acircumflexacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00567;
transform = "{1, 0, 0, 1, 195, 302}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EA4;
unicode = 1EA4;
},
{
glyphname = acircumflexacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00567;
transform = "{1, 0, 0, 1, 104, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EA5;
unicode = 1EA5;
},
{
glyphname = Acircumflexgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00568;
transform = "{1, 0, 0, 1, 199, 317}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EA6;
unicode = 1EA6;
},
{
glyphname = acircumflexgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00568;
transform = "{1, 0, 0, 1, 108, 7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EA7;
unicode = 1EA7;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00569;
transform = "{1, 0, 0, 1, 200, 283}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EA8;
unicode = 1EA8;
},
{
glyphname = acircumflexhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00569;
transform = "{1, 0, 0, 1, 109, -26}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EA9;
unicode = 1EA9;
},
{
glyphname = Acircumflextilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00570;
transform = "{1, 0, 0, 1, 199, 262}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EAA;
unicode = 1EAA;
},
{
glyphname = acircumflextilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00570;
transform = "{1, 0, 0, 1, 108, -47}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EAB;
unicode = 1EAB;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 201, 310}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1282, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EAC;
unicode = 1EAC;
},
{
glyphname = acircumflexdotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1098, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EAD;
unicode = 1EAD;
},
{
glyphname = Abreveacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00572;
transform = "{1, 0, 0, 1, 234, 301}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EAE;
unicode = 1EAE;
},
{
glyphname = abreveacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00572;
transform = "{1, 0, 0, 1, 143, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EAF;
unicode = 1EAF;
},
{
glyphname = Abrevegrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00565;
transform = "{1, 0, 0, 1, 234, 301}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EB0;
unicode = 1EB0;
},
{
glyphname = abrevegrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00565;
transform = "{1, 0, 0, 1, 143, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EB1;
unicode = 1EB1;
},
{
glyphname = Abrevehookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00573;
transform = "{1, 0, 0, 1, 238, 317}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EB2;
unicode = 1EB2;
},
{
glyphname = abrevehookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00573;
transform = "{1, 0, 0, 1, 147, 7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EB3;
unicode = 1EB3;
},
{
glyphname = Abrevetilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = glyph00592;
transform = "{1, 0, 0, 1, 238, 325}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EB4;
unicode = 1EB4;
},
{
glyphname = abrevetilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = glyph00592;
transform = "{1, 0, 0, 1, 147, 15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EB5;
unicode = 1EB5;
},
{
glyphname = Abrevedotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 244, 311}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1282, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = uni1EB6;
unicode = 1EB6;
},
{
glyphname = abrevedotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 153, 1}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1098, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = uni1EB7;
unicode = 1EB7;
},
{
glyphname = Edotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1216, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EB8;
unicode = 1EB8;
},
{
glyphname = edotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1164, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EB9;
unicode = 1EB9;
},
{
glyphname = Ehookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1209, 338}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EBA;
unicode = 1EBA;
},
{
glyphname = ehookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1155, 16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EBB;
unicode = 1EBB;
},
{
glyphname = Etilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 144, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EBC;
unicode = 1EBC;
},
{
glyphname = etilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 90, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EBD;
unicode = 1EBD;
},
{
glyphname = Ecircumflexacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = glyph00567;
transform = "{1, 0, 0, 1, 142, 314}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EBE;
unicode = 1EBE;
},
{
glyphname = ecircumflexacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = glyph00567;
transform = "{1, 0, 0, 1, 88, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EBF;
unicode = 1EBF;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = glyph00568;
transform = "{1, 0, 0, 1, 146, 329}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EC0;
unicode = 1EC0;
},
{
glyphname = ecircumflexgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = glyph00568;
transform = "{1, 0, 0, 1, 92, 7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EC1;
unicode = 1EC1;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = glyph00569;
transform = "{1, 0, 0, 1, 147, 295}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EC2;
unicode = 1EC2;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = glyph00569;
transform = "{1, 0, 0, 1, 93, -26}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EC3;
unicode = 1EC3;
},
{
glyphname = Ecircumflextilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = glyph00570;
transform = "{1, 0, 0, 1, 146, 274}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EC4;
unicode = 1EC4;
},
{
glyphname = ecircumflextilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = glyph00570;
transform = "{1, 0, 0, 1, 92, -47}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EC5;
unicode = 1EC5;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 148, 322}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1216, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = uni1EC6;
unicode = 1EC6;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 94, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1164, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = uni1EC7;
unicode = 1EC7;
},
{
glyphname = Ihookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 868, 338}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni1EC8;
unicode = 1EC8;
},
{
glyphname = ihookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 842, 14}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = uni1EC9;
unicode = 1EC9;
},
{
glyphname = Idotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 875, 9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = uni1ECA;
unicode = 1ECA;
},
{
glyphname = idotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 845, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 497;
}
);
note = uni1ECB;
unicode = 1ECB;
},
{
glyphname = Odotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1304, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni1ECC;
unicode = 1ECC;
},
{
glyphname = odotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1181, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni1ECD;
unicode = 1ECD;
},
{
glyphname = Ohookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1296, 328}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni1ECE;
unicode = 1ECE;
},
{
glyphname = ohookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1165, 16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni1ECF;
unicode = 1ECF;
},
{
glyphname = Ocircumflexacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = glyph00567;
transform = "{1, 0, 0, 1, 229, 304}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni1ED0;
unicode = 1ED0;
},
{
glyphname = ocircumflexacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = glyph00567;
transform = "{1, 0, 0, 1, 98, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni1ED1;
unicode = 1ED1;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = glyph00568;
transform = "{1, 0, 0, 1, 233, 319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni1ED2;
unicode = 1ED2;
},
{
glyphname = ocircumflexgrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = glyph00568;
transform = "{1, 0, 0, 1, 102, 7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni1ED3;
unicode = 1ED3;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = glyph00569;
transform = "{1, 0, 0, 1, 234, 285}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni1ED4;
unicode = 1ED4;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = glyph00569;
transform = "{1, 0, 0, 1, 103, -26}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni1ED5;
unicode = 1ED5;
},
{
glyphname = Ocircumflextilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = glyph00570;
transform = "{1, 0, 0, 1, 233, 264}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni1ED6;
unicode = 1ED6;
},
{
glyphname = ocircumflextilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = glyph00570;
transform = "{1, 0, 0, 1, 102, -47}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni1ED7;
unicode = 1ED7;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 235, 312}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1304, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = uni1ED8;
unicode = 1ED8;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1181, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = uni1ED9;
unicode = 1ED9;
},
{
glyphname = Ohornacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 477, 305}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1406;
}
);
leftKerningGroup = C;
note = uni1EDA;
unicode = 1EDA;
},
{
glyphname = ohornacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1170;
}
);
leftKerningGroup = c;
note = uni1EDB;
unicode = 1EDB;
},
{
glyphname = Ohorngrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, 334, 305}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1406;
}
);
leftKerningGroup = C;
note = uni1EDC;
unicode = 1EDC;
},
{
glyphname = ohorngrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, 214, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1170;
}
);
leftKerningGroup = c;
note = uni1EDD;
unicode = 1EDD;
},
{
glyphname = Ohornhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1292, 321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1406;
}
);
leftKerningGroup = C;
note = uni1EDE;
unicode = 1EDE;
},
{
glyphname = ohornhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1172, 16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1170;
}
);
leftKerningGroup = c;
note = uni1EDF;
unicode = 1EDF;
},
{
glyphname = Ohorntilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 227, 309}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1406;
}
);
leftKerningGroup = C;
note = uni1EE0;
unicode = 1EE0;
},
{
glyphname = ohorntilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 107, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1170;
}
);
leftKerningGroup = o;
note = uni1EE1;
unicode = 1EE1;
},
{
glyphname = Ohorndotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1289, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1406;
}
);
leftKerningGroup = C;
note = uni1EE2;
unicode = 1EE2;
},
{
glyphname = ohorndotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1179, -9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1170;
}
);
leftKerningGroup = c;
note = uni1EE3;
unicode = 1EE3;
},
{
glyphname = Udotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1262, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni1EE4;
unicode = 1EE4;
},
{
glyphname = udotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1105, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni1EE5;
unicode = 1EE5;
},
{
glyphname = Uhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1257, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = uni1EE6;
unicode = 1EE6;
},
{
glyphname = uhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1157, 16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = uni1EE7;
unicode = 1EE7;
},
{
glyphname = Uhornacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 468, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1424;
}
);
note = uni1EE8;
unicode = 1EE8;
},
{
glyphname = uhornacute;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 355, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
}
);
leftKerningGroup = u;
note = uni1EE9;
unicode = 1EE9;
},
{
glyphname = Uhorngrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, 325, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1424;
}
);
note = uni1EEA;
unicode = 1EEA;
},
{
glyphname = uhorngrave;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, 212, -20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
}
);
leftKerningGroup = u;
note = uni1EEB;
unicode = 1EEB;
},
{
glyphname = Uhornhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1283, 338}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1424;
}
);
note = uni1EEC;
unicode = 1EEC;
},
{
glyphname = uhornhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1170, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
}
);
leftKerningGroup = u;
note = uni1EED;
unicode = 1EED;
},
{
glyphname = Uhorntilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 218, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1424;
}
);
note = uni1EEE;
unicode = 1EEE;
},
{
glyphname = uhorntilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 105, -16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
}
);
leftKerningGroup = u;
note = uni1EEF;
unicode = 1EEF;
},
{
glyphname = Uhorndotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1289, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1424;
}
);
note = uni1EF0;
unicode = 1EF0;
},
{
glyphname = uhorndotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1159, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
}
);
leftKerningGroup = u;
note = uni1EF1;
unicode = 1EF1;
},
{
glyphname = Ydotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1211, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni1EF4;
unicode = 1EF4;
},
{
glyphname = ydotbelow;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1308, -157}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni1EF5;
unicode = 1EF5;
},
{
glyphname = Yhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1207, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni1EF6;
unicode = 1EF6;
},
{
glyphname = yhookabove;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1098, 16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni1EF7;
unicode = 1EF7;
},
{
glyphname = Ytilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 142, 314}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
leftKerningGroup = Y;
note = uni1EF8;
unicode = 1EF8;
},
{
glyphname = ytilde;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 33, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 969;
}
);
leftKerningGroup = v;
note = uni1EF9;
unicode = 1EF9;
},
{
glyphname = dong;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, 417, 583}";
},
{
name = underscore;
transform = "{1, 0, 0, 1, 159, -156}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1185;
}
);
note = uni20AB;
unicode = 20AB;
},
{
glyphname = "Tedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 575, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftKerningGroup = T;
note = uni04AC;
unicode = 04AC;
},
{
glyphname = "tedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "te-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 454, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 984;
}
);
note = uni04AD;
unicode = 04AD;
},
{
glyphname = "Chekhakassian-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Che-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 766, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1402;
}
);
leftKerningGroup = "Che-cy";
note = uni04CB;
unicode = 04CB;
},
{
glyphname = "chekhakassian-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "che-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 501, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1113;
}
);
leftKerningGroup = "che-cy";
note = uni04CC;
unicode = 04CC;
},
{
glyphname = "Gedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Gamma;
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 239, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1139;
}
);
note = uni04F6;
unicode = 04F6;
},
{
glyphname = "gedescender-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ge-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 213, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 859;
}
);
leftKerningGroup = m;
note = uni04F7;
unicode = 04F7;
},
{
glyphname = "Chedescenderabkhasian-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "Cheabkhasian-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 774, -68}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1583;
}
);
note = uni04BE;
unicode = 04BE;
},
{
glyphname = "chedescenderabkhasian-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "cheabkhasian-cy";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 513, -64}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1213;
}
);
note = uni04BF;
unicode = 04BF;
},
{
glyphname = "shha-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = h;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
note = uni04BB;
rightKerningGroup = h;
unicode = 04BB;
},
{
glyphname = "Semisoftsign-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"355 1255 LINE",
"355 1456 LINE",
"163 1456 LINE",
"163 1255 LINE",
"-44 1255 LINE",
"-44 1104 LINE",
"163 1104 LINE",
"163 0 LINE",
"720 0 LINE SMOOTH",
"943 4 OFFCURVE",
"1201 238 OFFCURVE",
"1201 435 QCURVE SMOOTH",
"1201 631 OFFCURVE",
"945 859 OFFCURVE",
"717 862 QCURVE SMOOTH",
"355 862 LINE",
"355 1104 LINE",
"592 1104 LINE",
"592 1255 LINE"
);
},
{
closed = 1;
nodes = (
"355 704 LINE",
"714 704 LINE SMOOTH",
"855 702 OFFCURVE",
"1008 560 OFFCURVE",
"1008 437 QCURVE SMOOTH",
"1008 309 OFFCURVE",
"849 157 OFFCURVE",
"706 157 QCURVE SMOOTH",
"355 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 10 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
14 15 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1285;
}
);
note = uni048C;
unicode = 048C;
},
{
glyphname = "Yat-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"355 1255 LINE",
"355 1456 LINE",
"163 1456 LINE",
"163 1255 LINE",
"-44 1255 LINE",
"-44 1104 LINE",
"163 1104 LINE",
"163 0 LINE",
"720 0 LINE SMOOTH",
"943 4 OFFCURVE",
"1201 238 OFFCURVE",
"1201 435 QCURVE SMOOTH",
"1201 631 OFFCURVE",
"945 859 OFFCURVE",
"717 862 QCURVE SMOOTH",
"355 862 LINE",
"355 1104 LINE",
"592 1104 LINE",
"592 1255 LINE"
);
},
{
closed = 1;
nodes = (
"355 704 LINE",
"714 704 LINE SMOOTH",
"855 702 OFFCURVE",
"1008 560 OFFCURVE",
"1008 437 QCURVE SMOOTH",
"1008 309 OFFCURVE",
"849 157 OFFCURVE",
"706 157 QCURVE SMOOTH",
"355 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 10 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 2 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1285;
}
);
note = uni0462;
unicode = 0462;
},
{
glyphname = "Kastroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1329 0 LINE",
"732 750 LINE",
"1288 1456 LINE",
"1049 1456 LINE",
"540 814 LINE",
"390 814 LINE",
"390 1079 LINE",
"627 1079 LINE",
"627 1230 LINE",
"390 1230 LINE",
"390 1456 LINE",
"198 1456 LINE",
"198 1230 LINE",
"-9 1230 LINE",
"-9 1079 LINE",
"198 1079 LINE",
"198 0 LINE",
"390 0 LINE",
"390 654 LINE",
"567 654 LINE",
"1094 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
14 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 14 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
18 1 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1336;
}
);
note = uni049E;
unicode = 049E;
},
{
glyphname = "kastroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1064 0 LINE",
"634 589 LINE",
"1012 1082 LINE",
"793 1082 LINE",
"478 654 LINE",
"352 654 LINE",
"352 1217 LINE",
"571 1217 LINE",
"571 1368 LINE",
"352 1368 LINE",
"352 1536 LINE",
"166 1536 LINE",
"166 1368 LINE",
"-65 1368 LINE",
"-65 1217 LINE",
"166 1217 LINE",
"166 0 LINE",
"352 0 LINE",
"352 501 LINE",
"480 501 LINE",
"845 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
14 16 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 8 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
18 1 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1063;
}
);
note = uni049F;
unicode = 049F;
},
{
glyphname = "Ustraightstroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"780 672 LINE",
"1211 1456 LINE",
"993 1456 LINE",
"613 725 LINE",
"235 1456 LINE",
"15 1456 LINE",
"446 672 LINE",
"298 672 LINE",
"298 521 LINE",
"517 521 LINE",
"517 0 LINE",
"709 0 LINE",
"709 521 LINE",
"934 521 LINE",
"934 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
10 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
}
);
leftKerningGroup = Y;
note = uni04B0;
unicode = 04B0;
},
{
glyphname = "ustraightstroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"642 140 LINE",
"991 1082 LINE",
"802 1082 LINE",
"522 276 LINE",
"235 1082 LINE",
"46 1082 LINE",
"397 140 LINE",
"206 140 LINE",
"206 -11 LINE",
"426 -11 LINE",
"426 -416 LINE",
"612 -416 LINE",
"612 -11 LINE",
"842 -11 LINE",
"842 140 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 11 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1026;
}
);
note = uni04B1;
unicode = 04B1;
},
{
glyphname = "Hastroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"814 821 LINE",
"1219 1456 LINE",
"993 1456 LINE",
"644 898 LINE",
"293 1456 LINE",
"68 1456 LINE",
"473 821 LINE",
"328 821 LINE",
"328 670 LINE",
"488 670 LINE",
"57 0 LINE",
"284 0 LINE",
"644 568 LINE",
"1002 0 LINE",
"1230 0 LINE",
"800 670 LINE",
"964 670 LINE",
"964 821 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 11 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 11 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
13 11 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
}
);
note = uni04FE;
unicode = 04FE;
},
{
glyphname = "hastroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"661 632 LINE",
"959 1082 LINE",
"743 1082 LINE",
"503 687 LINE",
"266 1082 LINE",
"52 1082 LINE",
"350 632 LINE",
"192 632 LINE",
"192 481 LINE",
"362 481 LINE",
"41 0 LINE",
"256 0 LINE",
"506 405 LINE",
"756 0 LINE",
"970 0 LINE",
"649 481 LINE",
"828 481 LINE",
"828 632 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 14 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 14 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
13 14 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
}
);
note = uni04FF;
unicode = 04FF;
},
{
glyphname = "reversedze-cy";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = epsilon;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1104;
}
);
note = uni0511;
unicode = 0511;
},
{
glyphname = franc;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = F;
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, -125, -385}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1132;
}
);
note = uni20A3;
unicode = 20A3;
},
{
glyphname = horizontalbar;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = minus;
transform = "{1.6, 0, 0, 1, -124, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1599;
}
);
leftKerningGroup = hyphen;
note = uni2015;
unicode = 2015;
},
{
glyphname = two.pnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = two;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1150;
}
);
note = glyph01165;
},
{
glyphname = three.pnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = three;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1150;
}
);
note = glyph01166;
},
{
glyphname = four.pnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = four;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1150;
}
);
note = glyph01167;
},
{
glyphname = five.pnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = five;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1150;
}
);
note = glyph01168;
},
{
glyphname = nine.pnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = nine;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1170;
}
);
note = glyph01171;
},
{
glyphname = zero.pnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = zero;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1190;
}
);
note = glyph01172;
},
{
glyphname = UpsilonhookSymbol_acutecomb;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = UpsilonhookSymbol;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -481, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1190;
}
);
note = glyph01189;
},
{
glyphname = Omicrondasiaoxia;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
transform = "{1, 0, 0, 1, 70, 0}";
},
{
name = glyph00369;
transform = "{1, 0, 0, 1, -573, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1478;
}
);
note = uni1F4D;
unicode = 1F4D;
},
{
glyphname = Aogonek.locl;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 380, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
note = glyph01287;
},
{
glyphname = aogonek.locl;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 196, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
note = glyph01288;
},
{
glyphname = Eogonek.locl;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 314, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = glyph01289;
},
{
glyphname = eogonek.locl;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 262, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
note = glyph01290;
},
{
glyphname = glyph01291;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 286, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
note = glyph01291;
},
{
glyphname = glyph01292;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 231, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph01292;
},
{
glyphname = oo.base;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"91 538 LINE SMOOTH",
"91 202 OFFCURVE",
"291 -20 OFFCURVE",
"584 -20 CURVE SMOOTH",
"779 -20 OFFCURVE",
"935 78 OFFCURVE",
"1016 246 CURVE SMOOTH",
"1056 329 OFFCURVE",
"1076 424 OFFCURVE",
"1076 529 CURVE SMOOTH",
"1076 542 LINE SMOOTH",
"1076 881 OFFCURVE",
"877 1102 OFFCURVE",
"582 1102 CURVE SMOOTH",
"391 1102 OFFCURVE",
"237 1006 OFFCURVE",
"154 837 CURVE SMOOTH",
"112 752 OFFCURVE",
"91 657 OFFCURVE",
"91 551 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"277 800 OFFCURVE",
"399 950 OFFCURVE",
"582 950 CURVE SMOOTH",
"769 950 OFFCURVE",
"891 788 OFFCURVE",
"891 551 CURVE SMOOTH",
"891 286 OFFCURVE",
"772 131 OFFCURVE",
"584 131 CURVE SMOOTH",
"397 131 OFFCURVE",
"277 289 OFFCURVE",
"277 529 CURVE SMOOTH"
);
}
);
width = 1168;
}
);
userData = {
lsb = 91;
rsb = 92;
};
},
{
glyphname = i.ccmp5;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 507;
}
);
note = glyph00609;
},
{
glyphname = idotbelow.ccmp5;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 845, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = glyph01293;
},
{
glyphname = iogonek.ccmp5;
lastChange = "2020-11-28 03:40:43 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 1082 LINE",
"155 1082 LINE",
"155 13.533 LINE",
"51.204 -54.86 OFFCURVE",
"-6 -139.932 OFFCURVE",
"-6 -233 CURVE SMOOTH",
"-6 -347.667 OFFCURVE",
"67.333 -423 OFFCURVE",
"186 -423 CURVE SMOOTH",
"246 -423 OFFCURVE",
"299.333 -408.333 OFFCURVE",
"346 -379 CURVE",
"333 -258 LINE",
"298.333 -275.333 OFFCURVE",
"265 -284 OFFCURVE",
"233 -284 CURVE SMOOTH",
"181 -284 OFFCURVE",
"155 -260 OFFCURVE",
"155 -212 CURVE SMOOTH",
"155 -154.667 OFFCURVE",
"192.667 -95.667 OFFCURVE",
"268 -35 CURVE SMOOTH",
"313.111 0 LINE",
"341 0 LINE"
);
}
);
width = 507;
}
);
note = glyph00610;
},
{
glyphname = j.ccmp5;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = jdotless;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 518;
}
);
note = glyph00607;
},
{
glyphname = aa.part;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"118 163 LINE",
"344.204 163 LINE",
"204 43 LINE SMOOTH",
"189 31 OFFCURVE",
"171 9 OFFCURVE",
"158 -22 CURVE SMOOTH",
"142 -60 OFFCURVE",
"136 -105 OFFCURVE",
"136 -107 CURVE SMOOTH",
"136 -352 LINE",
"278 -352 LINE",
"278 -100 LINE SMOOTH",
"278 -97 OFFCURVE",
"273 -83 OFFCURVE",
"279 -76 CURVE SMOOTH",
"582 239 LINE",
"433 239 LINE",
"431.832 238 LINE",
"278 238 LINE",
"278 397 LINE",
"118 397 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = a.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1136 0 LINE",
"664 1165 LINE",
"498 1165 LINE",
"19 0 LINE",
"208 0 LINE",
"318 279 LINE",
"838 279 LINE",
"948 0 LINE"
);
},
{
closed = 1;
nodes = (
"580 939 LINE",
"779 430 LINE",
"378 430 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00563;
},
{
glyphname = aacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 356, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00819;
},
{
glyphname = abreve.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 153, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00846;
},
{
glyphname = acircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 110, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00820;
},
{
glyphname = adieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 158, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00822;
},
{
glyphname = agrave.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, 213, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00818;
},
{
glyphname = amacron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 108, 38}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00845;
},
{
glyphname = aogonek.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"19 0 LINE",
"208 0 LINE",
"318 279 LINE",
"838 279 LINE",
"942 13 LINE",
"766 -95 OFFCURVE",
"766 -243 QCURVE SMOOTH",
"766 -329 OFFCURVE",
"869 -433 OFFCURVE",
"958 -433 QCURVE SMOOTH",
"1048 -433 OFFCURVE",
"1118 -389 QCURVE",
"1105 -268 LINE",
"1053 -294 OFFCURVE",
"1005 -294 QCURVE SMOOTH",
"927 -294 OFFCURVE",
"927 -222 QCURVE SMOOTH",
"927 -136 OFFCURVE",
"1040 -45 QCURVE SMOOTH",
"1098 0 LINE",
"1136 0 LINE",
"664 1165 LINE",
"498 1165 LINE"
);
},
{
closed = 1;
nodes = (
"580 939 LINE",
"779 430 LINE",
"378 430 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
7 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
23 20 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 0 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00847;
},
{
glyphname = aring.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = ring;
transform = "{1, 0, 0, 1, 245, 41}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00823;
},
{
glyphname = aringacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = glyph00551;
transform = "{1, 0, 0, 1, 255, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00824;
},
{
glyphname = atilde.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 106, 34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph00821;
},
{
glyphname = ae.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"952 683 LINE",
"940 1015 LINE",
"1480 1015 LINE",
"1480 1165 LINE",
"671 1165 LINE",
"9 0 LINE",
"207 0 LINE",
"370 301 LINE",
"780 301 LINE",
"791 0 LINE",
"1521 0 LINE",
"1521 149 LINE",
"971 149 LINE",
"957 533 LINE",
"1416 533 LINE",
"1416 683 LINE"
);
},
{
closed = 1;
nodes = (
"756 1014 LINE",
"775 452 LINE",
"451 452 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1593;
}
);
note = glyph00627;
},
{
glyphname = aeacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = ae.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 670, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1593;
}
);
note = glyph01280;
},
{
glyphname = b.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"789 1 OFFCURVE",
"1007 175 OFFCURVE",
"1007 333 QCURVE SMOOTH",
"1007 434 OFFCURVE",
"891 583 OFFCURVE",
"792 607 QCURVE",
"880 640 OFFCURVE",
"975 766 OFFCURVE",
"975 847 QCURVE SMOOTH",
"975 1002 OFFCURVE",
"753 1165 OFFCURVE",
"544 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE",
"588 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"323 530 LINE",
"587 530 LINE SMOOTH",
"822 530 OFFCURVE",
"822 334 QCURVE SMOOTH",
"822 249 OFFCURVE",
"700 151 OFFCURVE",
"585 151 QCURVE SMOOTH",
"323 151 LINE"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"560 1012 LINE SMOOTH",
"789 1007 OFFCURVE",
"789 839 QCURVE SMOOTH",
"789 756 OFFCURVE",
"665 671 OFFCURVE",
"557 671 QCURVE SMOOTH",
"323 671 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 23 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
31 23 47 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
223 23 239 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1104;
}
);
note = glyph00562;
},
{
glyphname = c.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"867 246 OFFCURVE",
"726 135 OFFCURVE",
"591 135 QCURVE SMOOTH",
"440 135 OFFCURVE",
"281 342 OFFCURVE",
"281 531 QCURVE SMOOTH",
"281 637 LINE SMOOTH",
"282 826 OFFCURVE",
"449 1029 OFFCURVE",
"602 1029 QCURVE SMOOTH",
"728 1029 OFFCURVE",
"869 913 OFFCURVE",
"887 783 QCURVE",
"1072 783 LINE",
"1053 970 OFFCURVE",
"806 1181 OFFCURVE",
"602 1181 QCURVE SMOOTH",
"450 1181 OFFCURVE",
"219 1045 OFFCURVE",
"96 796 OFFCURVE",
"96 632 QCURVE SMOOTH",
"96 538 LINE SMOOTH",
"96 279 OFFCURVE",
"367 -16 OFFCURVE",
"591 -16 QCURVE SMOOTH",
"800 -16 OFFCURVE",
"1052 190 OFFCURVE",
"1072 377 QCURVE",
"887 377 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph00561;
},
{
glyphname = cacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 361, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph00848;
},
{
glyphname = ccaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 136, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph00851;
},
{
glyphname = ccedilla.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c.smcp;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 372, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph00825;
},
{
glyphname = ccircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 115, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph00849;
},
{
glyphname = cdotaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 336, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph00850;
},
{
glyphname = d.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"744 0 OFFCURVE",
"1055 298 OFFCURVE",
"1055 550 QCURVE SMOOTH",
"1055 627 LINE SMOOTH",
"1052 786 OFFCURVE",
"912 1032 OFFCURVE",
"661 1165 OFFCURVE",
"499 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE",
"481 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"499 1012 LINE SMOOTH",
"682 1012 OFFCURVE",
"871 807 OFFCURVE",
"871 615 QCURVE SMOOTH",
"871 551 LINE SMOOTH",
"871 359 OFFCURVE",
"673 151 OFFCURVE",
"487 151 QCURVE SMOOTH",
"323 151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1152;
}
);
note = glyph00560;
},
{
glyphname = eth.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d.smcp;
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, -209, -136}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
}
);
note = glyph00816;
},
{
glyphname = dcaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 49, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
}
);
note = glyph00852;
},
{
glyphname = dcroat.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d.smcp;
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, -209, -136}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
}
);
note = glyph00815;
},
{
glyphname = e.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 678 LINE",
"323 1012 LINE",
"936 1012 LINE",
"936 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"942 0 LINE",
"942 151 LINE",
"323 151 LINE",
"323 526 LINE",
"855 526 LINE",
"855 678 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
223 11 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
31 11 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 998;
}
);
note = glyph00552;
},
{
glyphname = eacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 311, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00827;
},
{
glyphname = ebreve.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 108, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00854;
},
{
glyphname = ecaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 86, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00857;
},
{
glyphname = ecircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 65, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00828;
},
{
glyphname = edieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 113, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00829;
},
{
glyphname = edotaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 286, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00855;
},
{
glyphname = egrave.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, 168, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00826;
},
{
glyphname = emacron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 63, 38}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph00853;
},
{
glyphname = eogonek.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 678 LINE",
"323 1012 LINE",
"936 1012 LINE",
"936 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"704 0 LINE",
"549 -105 OFFCURVE",
"549 -243 QCURVE SMOOTH",
"549 -329 OFFCURVE",
"652 -433 OFFCURVE",
"741 -433 QCURVE SMOOTH",
"831 -433 OFFCURVE",
"901 -389 QCURVE",
"888 -268 LINE",
"836 -294 OFFCURVE",
"788 -294 QCURVE SMOOTH",
"710 -294 OFFCURVE",
"710 -222 QCURVE SMOOTH",
"710 -136 OFFCURVE",
"823 -45 QCURVE SMOOTH",
"881 0 LINE",
"942 0 LINE",
"942 151 LINE",
"323 151 LINE",
"323 526 LINE",
"855 526 LINE",
"855 678 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 27 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
223 27 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 998;
}
);
note = glyph00856;
},
{
glyphname = f.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 652 LINE",
"323 1012 LINE",
"923 1012 LINE",
"923 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 499 LINE",
"843 499 LINE",
"843 652 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 971;
}
);
note = glyph00486;
},
{
glyphname = g.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"612 591 LINE",
"612 447 LINE",
"893 447 LINE",
"893 209 LINE",
"812 135 OFFCURVE",
"630 135 QCURVE SMOOTH",
"470 135 OFFCURVE",
"285 350 OFFCURVE",
"285 540 QCURVE SMOOTH",
"285 624 LINE SMOOTH",
"285 823 OFFCURVE",
"451 1029 OFFCURVE",
"610 1029 QCURVE SMOOTH",
"855 1029 OFFCURVE",
"893 812 QCURVE",
"1077 812 LINE",
"1050 993 OFFCURVE",
"808 1181 OFFCURVE",
"608 1181 QCURVE SMOOTH",
"366 1181 OFFCURVE",
"99 886 OFFCURVE",
"99 624 QCURVE SMOOTH",
"99 534 LINE SMOOTH",
"101 282 OFFCURVE",
"389 -16 OFFCURVE",
"627 -16 QCURVE SMOOTH",
"778 -16 OFFCURVE",
"1011 67 OFFCURVE",
"1077 150 QCURVE",
"1077 591 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
13 29 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1196;
}
);
leftKerningGroup = q.smcp;
note = glyph00485;
},
{
glyphname = gbreve.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 156, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1196;
}
);
leftKerningGroup = q.smcp;
note = glyph00859;
},
{
glyphname = gcircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 113, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1196;
}
);
leftKerningGroup = q.smcp;
note = glyph00858;
},
{
glyphname = gcommaaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 335, -355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1196;
}
);
leftKerningGroup = q.smcp;
note = glyph00861;
},
{
glyphname = gdotaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 334, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1196;
}
);
leftKerningGroup = q.smcp;
note = glyph00860;
},
{
glyphname = h.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"927 1165 LINE",
"927 650 LINE",
"323 650 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 498 LINE",
"927 498 LINE",
"927 0 LINE",
"1112 0 LINE",
"1112 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
163 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00484;
},
{
glyphname = hbar.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 998 LINE",
"1112 1165 LINE",
"927 1165 LINE",
"927 998 LINE",
"323 998 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 998 LINE",
"48 998 LINE",
"48 847 LINE",
"138 847 LINE",
"138 0 LINE",
"323 0 LINE",
"323 498 LINE",
"927 498 LINE",
"927 0 LINE",
"1112 0 LINE",
"1112 847 LINE",
"1203 847 LINE",
"1203 998 LINE"
);
},
{
closed = 1;
nodes = (
"323 847 LINE",
"927 847 LINE",
"927 650 LINE",
"323 650 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 19 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00630;
},
{
glyphname = hcircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = h.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 144, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph00862;
},
{
glyphname = idotless.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"151 1165 LINE",
"151 0 LINE",
"337 0 LINE",
"337 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 488;
}
);
note = glyph00483;
},
{
glyphname = iacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 19, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00831;
},
{
glyphname = ibreve.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, -183, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00865;
},
{
glyphname = icircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -226, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00832;
},
{
glyphname = idieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -178, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00833;
},
{
glyphname = igrave.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, -123, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00830;
},
{
glyphname = ij.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = j.smcp;
transform = "{1, 0, 0, 1, 488, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1463;
}
);
note = glyph01279;
},
{
glyphname = imacron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, -228, 38}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00864;
},
{
glyphname = iogonek.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, -44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00866;
},
{
glyphname = itilde.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -230, 34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph00863;
},
{
glyphname = j.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"658 244 OFFCURVE",
"548 135 OFFCURVE",
"456 135 QCURVE SMOOTH",
"342 135 OFFCURVE",
"229 237 OFFCURVE",
"229 331 QCURVE",
"43 331 LINE",
"43 167 OFFCURVE",
"262 -16 OFFCURVE",
"456 -16 QCURVE SMOOTH",
"633 -16 OFFCURVE",
"845 181 OFFCURVE",
"845 338 QCURVE SMOOTH",
"845 1165 LINE",
"658 1165 LINE",
"658 339 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 975;
}
);
note = glyph00482;
},
{
glyphname = jcircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = j.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 263, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 975;
}
);
note = glyph00868;
},
{
glyphname = k.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1111 0 LINE",
"598 646 LINE",
"1077 1165 LINE",
"850 1165 LINE",
"453 754 LINE",
"323 610 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 377 LINE",
"470 519 LINE",
"886 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 2 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1108;
}
);
note = glyph00481;
rightKerningGroup = k.smcp;
},
{
glyphname = kcommaaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = k.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 276, -346}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1108;
}
);
note = glyph00869;
rightKerningGroup = k.smcp;
},
{
glyphname = l.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 1165 LINE",
"138 0 LINE",
"907 0 LINE",
"907 151 LINE",
"323 151 LINE",
"323 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 948;
}
);
note = glyph00480;
},
{
glyphname = lacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 7, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 948;
}
);
note = glyph00870;
},
{
glyphname = lcaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 382, 927}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 948;
}
);
note = glyph00872;
},
{
glyphname = lcommaaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 272, -344}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 948;
}
);
note = glyph00871;
},
{
glyphname = ldot.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 358, -713}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 948;
}
);
note = glyph00873;
},
{
glyphname = lslash.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 697 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 639 LINE",
"0 595 LINE",
"0 470 LINE",
"138 514 LINE",
"138 0 LINE",
"907 0 LINE",
"907 151 LINE",
"323 151 LINE",
"323 572 LINE",
"589 657 LINE",
"589 782 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 948;
}
);
note = glyph00626;
},
{
glyphname = m.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"322 0 LINE",
"322 401 LINE",
"303 930 LINE",
"700 0 LINE",
"836 0 LINE",
"1234 934 LINE",
"1215 401 LINE",
"1215 0 LINE",
"1399 0 LINE",
"1399 1165 LINE",
"1158 1165 LINE",
"769 254 LINE",
"378 1165 LINE",
"138 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1538;
}
);
note = glyph00479;
},
{
glyphname = n.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"928 1165 LINE",
"928 288 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 876 LINE",
"928 0 LINE",
"1112 0 LINE",
"1112 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00478;
},
{
glyphname = nacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 399, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph00874;
},
{
glyphname = ncaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 174, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph00876;
},
{
glyphname = ncommaaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 364, -348}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph00875;
},
{
glyphname = ntilde.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 149, 34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph00834;
},
{
glyphname = eng.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"942 -437 OFFCURVE",
"1112 -258 OFFCURVE",
"1112 -89 QCURVE SMOOTH",
"1112 1165 LINE",
"928 1165 LINE",
"928 288 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 876 LINE",
"927 1 LINE",
"927 -80 LINE SMOOTH",
"927 -275 OFFCURVE",
"791 -275 QCURVE SMOOTH",
"727 -275 OFFCURVE",
"692 -262 QCURVE",
"679 -419 LINE",
"731 -437 OFFCURVE",
"791 -437 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 12 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 10 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph00631;
},
{
glyphname = o.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 877 OFFCURVE",
"837 1181 OFFCURVE",
"604 1181 QCURVE SMOOTH",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 553 LINE SMOOTH",
"96 290 OFFCURVE",
"377 -16 OFFCURVE",
"606 -16 QCURVE SMOOTH",
"838 -16 OFFCURVE",
"1114 287 OFFCURVE",
"1114 548 QCURVE SMOOTH",
"1114 622 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE SMOOTH",
"759 1025 OFFCURVE",
"931 815 OFFCURVE",
"931 617 QCURVE SMOOTH",
"931 548 LINE SMOOTH",
"931 349 OFFCURVE",
"762 138 OFFCURVE",
"606 138 QCURVE SMOOTH",
"455 138 OFFCURVE",
"279 353 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00477;
},
{
glyphname = oacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 381, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00836;
},
{
glyphname = obreve.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 178, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00878;
},
{
glyphname = ocircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 135, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00837;
},
{
glyphname = odieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 183, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00839;
},
{
glyphname = ograve.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, 238, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00835;
},
{
glyphname = ohungarumlaut.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 263, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00879;
},
{
glyphname = omacron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 133, 38}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00877;
},
{
glyphname = oslash.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"957 1206 LINE",
"888 1103 LINE",
"765 1181 OFFCURVE",
"604 1181 QCURVE SMOOTH",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 552 LINE SMOOTH",
"96 287 OFFCURVE",
"239 133 QCURVE",
"112 -57 LINE",
"261 -57 LINE",
"336 55 LINE",
"452 -16 OFFCURVE",
"606 -16 QCURVE SMOOTH",
"838 -16 OFFCURVE",
"1114 287 OFFCURVE",
"1114 548 QCURVE SMOOTH",
"1114 610 LINE SMOOTH",
"1114 867 OFFCURVE",
"982 1020 QCURVE",
"1106 1206 LINE"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE SMOOTH",
"718 1025 OFFCURVE",
"797 966 QCURVE",
"340 284 LINE",
"279 389 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 866 LINE",
"931 768 OFFCURVE",
"931 617 QCURVE SMOOTH",
"931 548 LINE SMOOTH",
"931 349 OFFCURVE",
"762 138 OFFCURVE",
"606 138 QCURVE SMOOTH",
"500 138 OFFCURVE",
"426 190 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 40 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
24 17 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 17 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 17 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
34 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
note = glyph00629;
},
{
glyphname = oslashacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = oslash.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 381, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
note = glyph01281;
},
{
glyphname = otilde.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 131, 34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00838;
},
{
glyphname = oe.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1025 151 LINE",
"1025 526 LINE",
"1557 526 LINE",
"1557 678 LINE",
"1025 678 LINE",
"1025 1012 LINE",
"1638 1012 LINE",
"1638 1165 LINE",
"951 1165 LINE",
"604 1181 LINE",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 553 LINE SMOOTH",
"96 290 OFFCURVE",
"377 -16 OFFCURVE",
"606 -16 QCURVE",
"976 0 LINE",
"1645 0 LINE",
"1645 151 LINE"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE",
"840 1016 LINE",
"840 145 LINE",
"606 138 LINE SMOOTH",
"455 138 OFFCURVE",
"279 353 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
223 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1700;
}
);
note = glyph00594;
},
{
glyphname = p.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"817 438 OFFCURVE",
"1051 628 OFFCURVE",
"1051 798 QCURVE SMOOTH",
"1051 966 OFFCURVE",
"809 1165 OFFCURVE",
"605 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 438 LINE",
"603 438 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"610 1012 LINE SMOOTH",
"729 1011 OFFCURVE",
"865 892 OFFCURVE",
"865 796 QCURVE SMOOTH",
"865 696 OFFCURVE",
"729 590 OFFCURVE",
"605 590 QCURVE SMOOTH",
"323 590 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1116;
}
);
note = glyph00476;
},
{
glyphname = thorn.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 0 LINE",
"323 236 LINE",
"503 236 LINE SMOOTH",
"717 236 OFFCURVE",
"951 426 OFFCURVE",
"951 595 QCURVE SMOOTH",
"951 761 OFFCURVE",
"716 958 OFFCURVE",
"520 962 QCURVE SMOOTH",
"323 962 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"323 810 LINE",
"510 810 LINE SMOOTH",
"629 809 OFFCURVE",
"765 690 OFFCURVE",
"765 594 QCURVE SMOOTH",
"765 496 OFFCURVE",
"633 388 OFFCURVE",
"505 388 QCURVE SMOOTH",
"323 388 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1016;
}
);
note = glyph00628;
},
{
glyphname = q.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1109 874 OFFCURVE",
"832 1181 OFFCURVE",
"598 1181 QCURVE SMOOTH",
"448 1181 OFFCURVE",
"216 1043 OFFCURVE",
"89 784 OFFCURVE",
"89 615 QCURVE SMOOTH",
"89 553 LINE SMOOTH",
"89 289 OFFCURVE",
"372 -16 OFFCURVE",
"600 -16 QCURVE SMOOTH",
"670 -16 OFFCURVE",
"724 -3 QCURVE",
"987 -202 LINE",
"1111 -91 LINE",
"895 69 LINE",
"997 139 OFFCURVE",
"1109 382 OFFCURVE",
"1109 548 QCURVE SMOOTH",
"1109 611 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274 633 LINE SMOOTH",
"278 818 OFFCURVE",
"450 1025 OFFCURVE",
"598 1025 QCURVE SMOOTH",
"754 1025 OFFCURVE",
"926 815 OFFCURVE",
"926 617 QCURVE SMOOTH",
"926 548 LINE SMOOTH",
"926 349 OFFCURVE",
"756 138 OFFCURVE",
"600 138 QCURVE SMOOTH",
"448 138 OFFCURVE",
"274 354 OFFCURVE",
"274 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00475;
},
{
glyphname = r.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1061 0 LINE",
"1061 10 LINE",
"773 492 LINE",
"1008 581 OFFCURVE",
"1008 809 QCURVE SMOOTH",
"1008 979 OFFCURVE",
"777 1165 OFFCURVE",
"564 1165 QCURVE SMOOTH",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 449 LINE",
"602 449 LINE",
"863 0 LINE"
);
},
{
closed = 1;
nodes = (
"323 1012 LINE",
"563 1012 LINE SMOOTH",
"689 1012 OFFCURVE",
"823 902 OFFCURVE",
"823 802 QCURVE SMOOTH",
"823 709 OFFCURVE",
"686 600 OFFCURVE",
"569 600 QCURVE SMOOTH",
"323 600 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1098;
}
);
note = glyph00474;
},
{
glyphname = racute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 295, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
}
);
note = glyph00880;
},
{
glyphname = rcaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 70, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
}
);
note = glyph00882;
},
{
glyphname = rcommaaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 269, -344}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
}
);
note = glyph00881;
},
{
glyphname = s.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"803 224 OFFCURVE",
"673 133 OFFCURVE",
"547 133 QCURVE SMOOTH",
"407 133 OFFCURVE",
"253 247 OFFCURVE",
"253 349 QCURVE",
"67 349 LINE",
"67 187 OFFCURVE",
"340 -16 OFFCURVE",
"547 -16 QCURVE SMOOTH",
"746 -16 OFFCURVE",
"989 153 OFFCURVE",
"989 300 QCURVE SMOOTH",
"989 391 OFFCURVE",
"903 527 OFFCURVE",
"727 628 OFFCURVE",
"415 708 OFFCURVE",
"292 796 OFFCURVE",
"292 861 QCURVE SMOOTH",
"292 941 OFFCURVE",
"426 1030 OFFCURVE",
"539 1030 QCURVE SMOOTH",
"660 1030 OFFCURVE",
"801 923 OFFCURVE",
"801 825 QCURVE",
"986 825 LINE",
"986 981 OFFCURVE",
"737 1181 OFFCURVE",
"541 1181 QCURVE SMOOTH",
"350 1181 OFFCURVE",
"107 1003 OFFCURVE",
"107 860 QCURVE SMOOTH",
"107 681 OFFCURVE",
"302 583 QCURVE SMOOTH",
"388 540 OFFCURVE",
"682 466 OFFCURVE",
"803 378 OFFCURVE",
"803 298 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
}
);
leftKerningGroup = s.smcp;
note = glyph00473;
},
{
glyphname = sacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 318, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s.smcp;
note = glyph00883;
},
{
glyphname = scaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 93, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s.smcp;
note = glyph00886;
},
{
glyphname = scedilla.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s.smcp;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 339, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s.smcp;
note = glyph00885;
},
{
glyphname = scircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 72, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s.smcp;
note = glyph00884;
},
{
glyphname = scommaaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 297, -352}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
note = glyph01282;
},
{
glyphname = t.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"40 1165 LINE",
"40 1012 LINE",
"437 1012 LINE",
"437 0 LINE",
"622 0 LINE",
"622 1012 LINE",
"1021 1012 LINE",
"1021 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1062;
}
);
leftKerningGroup = t.smcp;
note = glyph00472;
rightKerningGroup = t.smcp;
},
{
glyphname = tbar.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t.smcp;
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, 69, -32}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1062;
}
);
note = glyph00817;
rightKerningGroup = t.smcp;
},
{
glyphname = tcaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 80, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1062;
}
);
leftKerningGroup = t.smcp;
note = glyph00888;
rightKerningGroup = t.smcp;
},
{
glyphname = tcedilla.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t.smcp;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 318, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1062;
}
);
note = glyph00889;
},
{
glyphname = tcommaaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t.smcp;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 276, -350}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1062;
}
);
note = glyph00887;
},
{
glyphname = u.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"849 385 LINE SMOOTH",
"849 262 OFFCURVE",
"706 135 OFFCURVE",
"575 135 QCURVE SMOOTH",
"442 135 OFFCURVE",
"299 264 OFFCURVE",
"299 385 QCURVE SMOOTH",
"299 1165 LINE",
"116 1165 LINE",
"116 377 LINE SMOOTH",
"119 195 OFFCURVE",
"365 -16 OFFCURVE",
"575 -16 QCURVE SMOOTH",
"784 -16 OFFCURVE",
"1034 203 OFFCURVE",
"1034 385 QCURVE SMOOTH",
"1034 1165 LINE",
"849 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00471;
},
{
glyphname = uacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 350, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00841;
},
{
glyphname = ubreve.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 147, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00892;
},
{
glyphname = ucircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 104, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00842;
},
{
glyphname = udieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 152, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00843;
},
{
glyphname = ugrave.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00840;
},
{
glyphname = uhungarumlaut.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 232, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00894;
},
{
glyphname = umacron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 102, 38}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00891;
},
{
glyphname = uogonek.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"849 385 LINE SMOOTH",
"849 262 OFFCURVE",
"706 135 OFFCURVE",
"575 135 QCURVE SMOOTH",
"442 135 OFFCURVE",
"299 264 OFFCURVE",
"299 385 QCURVE SMOOTH",
"299 1165 LINE",
"116 1165 LINE",
"116 374 LINE SMOOTH",
"120 190 OFFCURVE",
"369 -16 OFFCURVE",
"574 -16 QCURVE",
"484 -102 OFFCURVE",
"484 -206 QCURVE SMOOTH",
"484 -292 OFFCURVE",
"587 -396 OFFCURVE",
"676 -396 QCURVE SMOOTH",
"766 -396 OFFCURVE",
"836 -352 QCURVE",
"823 -231 LINE",
"771 -257 OFFCURVE",
"723 -257 QCURVE SMOOTH",
"645 -257 OFFCURVE",
"645 -185 QCURVE SMOOTH",
"645 -103 OFFCURVE",
"753 -12 QCURVE SMOOTH",
"803 28 LINE",
"914 76 OFFCURVE",
"1034 262 OFFCURVE",
"1034 384 QCURVE SMOOTH",
"1034 1165 LINE",
"849 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
5 19 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00895;
},
{
glyphname = uring.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = ring;
transform = "{1, 0, 0, 1, 239, 41}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00893;
},
{
glyphname = utilde.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 100, 34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = u.smcp;
note = glyph00890;
},
{
glyphname = v.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"20 1165 LINE",
"477 0 LINE",
"650 0 LINE",
"1107 1165 LINE",
"909 1165 LINE",
"589 290 LINE",
"563 198 LINE",
"538 292 LINE",
"219 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
note = glyph00470;
},
{
glyphname = w.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"49 1165 LINE",
"346 0 LINE",
"519 0 LINE",
"787 917 LINE",
"788 922 LINE",
"789 917 LINE",
"1049 0 LINE",
"1223 0 LINE",
"1521 1165 LINE",
"1337 1165 LINE",
"1139 296 LINE",
"1127 216 LINE",
"1114 275 LINE",
"870 1165 LINE",
"705 1165 LINE",
"457 278 LINE",
"442 214 LINE",
"431 294 LINE",
"232 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1557;
}
);
leftKerningGroup = w.smcp;
note = glyph00469;
},
{
glyphname = wacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 561, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1557;
}
);
note = glyph01284;
},
{
glyphname = wcircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 315, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1557;
}
);
leftKerningGroup = w.smcp;
note = glyph00896;
},
{
glyphname = wdieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 363, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1557;
}
);
note = glyph01285;
},
{
glyphname = wgrave.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, 418, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1557;
}
);
note = glyph01283;
},
{
glyphname = x.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"47 1165 LINE",
"444 587 LINE",
"38 0 LINE",
"258 0 LINE",
"554 443 LINE",
"853 0 LINE",
"1073 0 LINE",
"664 587 LINE",
"1059 1165 LINE",
"839 1165 LINE",
"552 730 LINE",
"266 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1108;
}
);
leftKerningGroup = x.smcp;
note = glyph00468;
},
{
glyphname = y.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"13 1165 LINE",
"437 418 LINE",
"437 0 LINE",
"622 0 LINE",
"622 407 LINE",
"1052 1165 LINE",
"844 1165 LINE",
"532 586 LINE",
"221 1165 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1067;
}
);
leftKerningGroup = y.smcp;
note = glyph00467;
},
{
glyphname = yacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 307, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1067;
}
);
leftKerningGroup = y.smcp;
note = glyph00844;
},
{
glyphname = ycircumflex.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 61, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1067;
}
);
leftKerningGroup = y.smcp;
note = glyph00897;
},
{
glyphname = ydieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 109, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1067;
}
);
leftKerningGroup = y.smcp;
note = glyph00898;
},
{
glyphname = ygrave.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, 164, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1067;
}
);
note = glyph01286;
},
{
glyphname = z.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"968 1165 LINE",
"80 1165 LINE",
"80 1012 LINE",
"735 1012 LINE",
"71 124 LINE",
"71 0 LINE",
"992 0 LINE",
"992 151 LINE",
"303 151 LINE",
"968 1044 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1059;
}
);
note = glyph00466;
},
{
glyphname = zacute.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 307, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1059;
}
);
note = glyph00899;
},
{
glyphname = zcaron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 82, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1059;
}
);
note = glyph00901;
},
{
glyphname = zdotaccent.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 282, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1059;
}
);
note = glyph00900;
},
{
glyphname = "Geupturn-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"874 1792 LINE",
"874 1456 LINE",
"162 1456 LINE",
"162 0 LINE",
"354 0 LINE",
"354 1298 LINE",
"1056 1298 LINE",
"1056 1304 LINE",
"1059 1304 LINE",
"1059 1792 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1123;
}
);
note = uni0490;
unicode = 0490;
},
{
glyphname = "Gestroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"370 835 LINE",
"370 1298 LINE",
"1072 1298 LINE",
"1072 1456 LINE",
"177 1456 LINE",
"177 835 LINE",
"3 835 LINE",
"3 684 LINE",
"177 684 LINE",
"177 0 LINE",
"370 0 LINE",
"370 684 LINE",
"639 684 LINE",
"639 835 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
122 13 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1139;
}
);
note = uni0492;
unicode = 0492;
},
{
glyphname = "Gemiddlehook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"177 1456 LINE",
"177 0 LINE",
"370 0 LINE",
"370 671 LINE",
"551 671 LINE SMOOTH",
"757 671 OFFCURVE",
"961 459 OFFCURVE",
"962 256 QCURVE SMOOTH",
"962 53 OFFCURVE",
"818 -142 OFFCURVE",
"673 -142 QCURVE",
"675 -289 LINE",
"903 -289 OFFCURVE",
"1148 -8 OFFCURVE",
"1148 256 QCURVE SMOOTH",
"1148 528 OFFCURVE",
"832 833 OFFCURVE",
"548 833 QCURVE SMOOTH",
"370 833 LINE",
"370 1298 LINE",
"1072 1298 LINE",
"1072 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 20 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1243;
}
);
note = uni0494;
unicode = 0494;
},
{
glyphname = "Yu-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1754 986 OFFCURVE",
"1610 1307 OFFCURVE",
"1343 1476 OFFCURVE",
"1168 1476 QCURVE SMOOTH",
"996 1476 OFFCURVE",
"730 1305 OFFCURVE",
"586 994 OFFCURVE",
"583 788 QCURVE",
"375 788 LINE",
"375 1456 LINE",
"183 1456 LINE",
"183 0 LINE",
"375 0 LINE",
"375 637 LINE",
"584 637 LINE",
"592 438 OFFCURVE",
"741 140 OFFCURVE",
"1004 -20 OFFCURVE",
"1170 -20 QCURVE SMOOTH",
"1346 -20 OFFCURVE",
"1610 148 OFFCURVE",
"1754 467 OFFCURVE",
"1754 681 QCURVE SMOOTH",
"1754 773 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"774 788 LINE SMOOTH",
"777 1034 OFFCURVE",
"986 1311 OFFCURVE",
"1168 1311 QCURVE SMOOTH",
"1355 1311 OFFCURVE",
"1563 1034 OFFCURVE",
"1563 775 QCURVE SMOOTH",
"1563 667 LINE SMOOTH",
"1560 414 OFFCURVE",
"1356 143 OFFCURVE",
"1170 143 QCURVE SMOOTH",
"985 143 OFFCURVE",
"774 430 OFFCURVE",
"774 681 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 10 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
79 15 95 15 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
143 15 159 15 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 15 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
207 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 15 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
207 15 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1831;
}
);
note = uni042E;
unicode = 042E;
},
{
glyphname = "Ya-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1124 1456 LINE",
"661 1456 LINE SMOOTH",
"418 1456 OFFCURVE",
"145 1225 OFFCURVE",
"145 1017 QCURVE SMOOTH",
"145 731 OFFCURVE",
"427 620 QCURVE",
"89 0 LINE",
"294 0 LINE",
"595 567 LINE",
"931 567 LINE",
"931 0 LINE",
"1124 0 LINE"
);
},
{
closed = 1;
nodes = (
"337 1150 OFFCURVE",
"502 1298 OFFCURVE",
"658 1298 QCURVE SMOOTH",
"931 1298 LINE",
"931 724 LINE",
"649 724 LINE SMOOTH",
"502 725 OFFCURVE",
"337 885 OFFCURVE",
"337 1017 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 10 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1304;
}
);
note = uni042F;
unicode = 042F;
},
{
glyphname = "EnGe-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"168 1456 LINE",
"168 0 LINE",
"361 0 LINE",
"361 673 LINE",
"1095 673 LINE",
"1095 0 LINE",
"1287 0 LINE",
"1287 1304 LINE",
"1924 1304 LINE",
"1924 1456 LINE",
"1095 1456 LINE",
"1095 830 LINE",
"361 830 LINE",
"361 1456 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
47 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1999;
}
);
note = uni04A4;
unicode = 04A4;
},
{
glyphname = "geupturn-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"649 1398 LINE",
"649 1082 LINE",
"145 1082 LINE",
"145 0 LINE",
"331 0 LINE",
"331 929 LINE",
"834 929 LINE",
"834 1398 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 912;
}
);
note = uni0491;
unicode = 0491;
},
{
glyphname = "gestroke-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"340 630 LINE",
"340 929 LINE",
"839 929 LINE",
"839 1082 LINE",
"154 1082 LINE",
"154 630 LINE",
"-4 630 LINE",
"-4 479 LINE",
"154 479 LINE",
"154 0 LINE",
"340 0 LINE",
"340 479 LINE",
"632 479 LINE",
"632 630 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 859;
}
);
note = uni0493;
unicode = 0493;
},
{
glyphname = "gemiddlehook-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"145 1082 LINE",
"145 0 LINE",
"331 0 LINE",
"331 483 LINE",
"443 483 LINE SMOOTH",
"595 483 OFFCURVE",
"773 315 OFFCURVE",
"773 170 QCURVE SMOOTH",
"773 49 OFFCURVE",
"653 -104 OFFCURVE",
"525 -137 QCURVE",
"573 -283 LINE",
"690 -262 OFFCURVE",
"860 -128 OFFCURVE",
"958 72 OFFCURVE",
"958 170 QCURVE SMOOTH",
"958 385 OFFCURVE",
"678 645 OFFCURVE",
"439 645 QCURVE SMOOTH",
"331 645 LINE",
"331 929 LINE",
"830 929 LINE",
"830 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 21 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1029;
}
);
note = uni0495;
unicode = 0495;
},
{
glyphname = "yu-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"157 1082 LINE",
"157 0 LINE",
"342 0 LINE",
"342 471 LINE",
"601 471 LINE",
"617 253 OFFCURVE",
"883 -20 OFFCURVE",
"1092 -20 QCURVE SMOOTH",
"1236 -20 OFFCURVE",
"1460 117 OFFCURVE",
"1584 371 OFFCURVE",
"1584 529 QCURVE SMOOTH",
"1583 587 LINE SMOOTH",
"1572 816 OFFCURVE",
"1302 1102 OFFCURVE",
"1090 1102 QCURVE SMOOTH",
"888 1102 OFFCURVE",
"623 839 OFFCURVE",
"602 623 QCURVE",
"342 623 LINE",
"342 1082 LINE"
);
},
{
closed = 1;
nodes = (
"784 732 OFFCURVE",
"952 950 OFFCURVE",
"1090 950 QCURVE SMOOTH",
"1230 950 OFFCURVE",
"1398 728 OFFCURVE",
"1398 551 QCURVE SMOOTH",
"1398 353 OFFCURVE",
"1233 131 OFFCURVE",
"951 131 OFFCURVE",
"784 349 OFFCURVE",
"784 529 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 17 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 0 207 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
159 0 175 0 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
47 0 63 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 7 values pushed */
95 0 111 0 127 0 3 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1671;
}
);
leftKerningGroup = m;
note = uni044E;
unicode = 044E;
},
{
glyphname = "ya-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"326 1081 OFFCURVE",
"104 900 OFFCURVE",
"104 752 QCURVE SMOOTH",
"104 646 OFFCURVE",
"215 487 OFFCURVE",
"319 449 QCURVE",
"47 0 LINE",
"247 0 LINE",
"502 421 LINE",
"781 421 LINE",
"781 0 LINE",
"967 0 LINE",
"967 1082 LINE",
"512 1082 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"290 831 OFFCURVE",
"412 932 OFFCURVE",
"515 932 QCURVE SMOOTH",
"781 932 LINE",
"781 573 LINE",
"487 573 LINE SMOOTH",
"398 574 OFFCURVE",
"290 671 OFFCURVE",
"290 750 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 3 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1124;
}
);
note = uni044F;
unicode = 044F;
},
{
glyphname = "enge-cy";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"145 1082 LINE",
"145 0 LINE",
"331 0 LINE",
"331 462 LINE",
"828 462 LINE",
"828 0 LINE",
"1013 0 LINE",
"1013 929 LINE",
"1385 929 LINE",
"1385 1082 LINE",
"828 1082 LINE",
"828 613 LINE",
"331 613 LINE",
"331 1082 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
111 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 1 207 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 1 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
207 1 223 1 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 5 values pushed */
159 1 175 1 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
255 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
111 1 127 1 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
}
);
leftKerningGroup = m;
note = uni04A5;
unicode = 04A5;
},
{
glyphname = "i-cy.ccmp5";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 507;
}
);
note = glyph00611;
},
{
glyphname = "je-cy.ccmp5";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = jdotless;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 516;
}
);
note = glyph00608;
},
{
glyphname = "a-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph01258;
},
{
glyphname = "be-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 1165 LINE",
"138 0 LINE",
"607 0 LINE SMOOTH",
"804 2 OFFCURVE",
"1032 202 OFFCURVE",
"1032 366 QCURVE SMOOTH",
"1032 531 OFFCURVE",
"802 727 OFFCURVE",
"596 727 QCURVE SMOOTH",
"323 727 LINE",
"323 1015 LINE",
"917 1015 LINE",
"917 1165 LINE"
);
},
{
closed = 1;
nodes = (
"323 575 LINE",
"612 575 LINE SMOOTH",
"722 572 OFFCURVE",
"847 459 OFFCURVE",
"847 368 QCURVE SMOOTH",
"847 271 OFFCURVE",
"715 152 OFFCURVE",
"600 152 QCURVE SMOOTH",
"323 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 11 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1113;
}
);
note = glyph00506;
},
{
glyphname = "ve-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = b.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1104;
}
);
note = glyph01259;
},
{
glyphname = "ge-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = gamma.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 943;
}
);
note = glyph01260;
},
{
glyphname = "gje-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = gamma.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 308, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 943;
}
);
note = glyph01251;
},
{
glyphname = "geupturn-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 1012 LINE",
"901 1012 LINE",
"901 1476 LINE",
"716 1476 LINE",
"716 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 8 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 943;
}
);
note = glyph00571;
},
{
glyphname = "gestroke-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"421 660 LINE",
"421 1012 LINE",
"999 1012 LINE",
"999 1165 LINE",
"236 1165 LINE",
"236 660 LINE",
"11 660 LINE",
"11 509 LINE",
"236 509 LINE",
"236 0 LINE",
"421 0 LINE",
"421 509 LINE",
"647 509 LINE",
"647 660 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1041;
}
);
note = glyph00524;
},
{
glyphname = "de-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"46 -339 LINE",
"232 -339 LINE",
"232 0 LINE",
"1070 0 LINE",
"1070 -340 LINE",
"1255 -340 LINE",
"1255 152 LINE",
"1112 152 LINE",
"1112 1165 LINE",
"337 1165 LINE",
"323 756 LINE SMOOTH",
"316 540 OFFCURVE",
"245 287 OFFCURVE",
"174 201 QCURVE SMOOTH",
"133 152 LINE",
"47 152 LINE"
);
},
{
closed = 1;
nodes = (
"486 341 OFFCURVE",
"503 700 QCURVE SMOOTH",
"515 1012 LINE",
"927 1012 LINE",
"927 152 LINE",
"349 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1316;
}
);
note = glyph00507;
},
{
glyphname = "ie-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph01261;
},
{
glyphname = "io-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 113, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph01250;
},
{
glyphname = "zhe-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1515 0 LINE",
"1123 602 LINE",
"1479 1165 LINE",
"1255 1165 LINE",
"955 656 LINE",
"866 656 LINE",
"866 1165 LINE",
"680 1165 LINE",
"680 656 LINE",
"591 656 LINE",
"291 1165 LINE",
"67 1165 LINE",
"421 593 LINE",
"31 0 LINE",
"265 0 LINE",
"580 502 LINE",
"680 502 LINE",
"680 0 LINE",
"866 0 LINE",
"866 502 LINE",
"965 502 LINE",
"1281 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 9 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 16 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 16 112 16 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
19 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1547;
}
);
leftKerningGroup = x.smcp;
note = glyph00508;
},
{
glyphname = "ze-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"776 677 OFFCURVE",
"537 672 QCURVE SMOOTH",
"381 672 LINE",
"381 520 LINE",
"538 520 LINE SMOOTH",
"795 515 OFFCURVE",
"795 322 QCURVE SMOOTH",
"795 234 OFFCURVE",
"649 138 OFFCURVE",
"513 138 QCURVE SMOOTH",
"392 138 OFFCURVE",
"261 234 OFFCURVE",
"256 320 QCURVE",
"71 320 LINE",
"71 163 OFFCURVE",
"192 74 QCURVE SMOOTH",
"253 28 OFFCURVE",
"422 -16 OFFCURVE",
"513 -16 QCURVE SMOOTH",
"726 -16 OFFCURVE",
"980 164 OFFCURVE",
"980 322 QCURVE SMOOTH",
"980 413 OFFCURVE",
"867 559 OFFCURVE",
"749 595 QCURVE",
"852 636 OFFCURVE",
"962 777 OFFCURVE",
"962 863 QCURVE SMOOTH",
"962 1013 OFFCURVE",
"724 1181 OFFCURVE",
"513 1181 QCURVE SMOOTH",
"325 1181 OFFCURVE",
"88 1000 OFFCURVE",
"88 858 QCURVE",
"274 858 LINE",
"274 937 OFFCURVE",
"403 1025 OFFCURVE",
"513 1025 QCURVE SMOOTH",
"638 1025 OFFCURVE",
"776 932 OFFCURVE",
"776 848 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
36 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 10 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
39 10 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
31 39 47 39 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
191 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
223 39 239 39 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 36 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
28 22 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1087;
}
);
note = glyph00509;
},
{
glyphname = "ii-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"936 884 LINE",
"936 0 LINE",
"1121 0 LINE",
"1121 1165 LINE",
"936 1165 LINE",
"323 281 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1260;
}
);
note = glyph00510;
},
{
glyphname = "iishort-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ii-cy.smcp";
},
{
name = breve;
transform = "{1, 0, 0, 1, 201, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1260;
}
);
note = glyph01262;
},
{
glyphname = "ka-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1068 0 LINE",
"577 594 LINE",
"1036 1165 LINE",
"813 1165 LINE",
"424 656 LINE",
"324 656 LINE",
"324 1165 LINE",
"139 1165 LINE",
"139 0 LINE",
"324 0 LINE",
"324 502 LINE",
"430 502 LINE",
"829 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 6 112 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 1 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1102;
}
);
note = glyph00511;
rightKerningGroup = k.smcp;
},
{
glyphname = "kje-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = k.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 293, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1108;
}
);
note = glyph01256;
rightKerningGroup = k.smcp;
},
{
glyphname = "el-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"271 559 LINE SMOOTH",
"258 333 OFFCURVE",
"178 175 OFFCURVE",
"84 168 QCURVE SMOOTH",
"43 165 LINE",
"39 0 LINE",
"107 0 LINE SMOOTH",
"283 5 OFFCURVE",
"447 288 OFFCURVE",
"460 630 QCURVE SMOOTH",
"475 1012 LINE",
"893 1012 LINE",
"893 0 LINE",
"1078 0 LINE",
"1078 1165 LINE",
"296 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1217;
}
);
note = glyph00512;
},
{
glyphname = "em-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = m.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1538;
}
);
note = glyph01263;
},
{
glyphname = "en-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = h.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph01264;
},
{
glyphname = "o-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph01265;
},
{
glyphname = "pe-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = pi.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1230;
}
);
note = glyph01266;
},
{
glyphname = "er-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = p.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1116;
}
);
note = glyph01267;
},
{
glyphname = "es-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = c.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph01268;
},
{
glyphname = "te-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1062;
}
);
leftKerningGroup = t.smcp;
note = glyph01269;
rightKerningGroup = t.smcp;
},
{
glyphname = "u-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"34 1165 LINE",
"444 238 LINE",
"412 179 OFFCURVE",
"339 130 OFFCURVE",
"290 130 QCURVE SMOOTH",
"198 135 LINE",
"192 -12 LINE",
"212 -20 OFFCURVE",
"292 -20 QCURVE SMOOTH",
"330 -19 LINE SMOOTH",
"500 -8 OFFCURVE",
"580 137 QCURVE SMOOTH",
"617 210 LINE",
"1035 1165 LINE",
"822 1165 LINE",
"546 440 LINE",
"501 560 LINE",
"248 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1055;
}
);
note = glyph00513;
},
{
glyphname = "ushort-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "u-cy.smcp";
},
{
name = breve;
transform = "{1, 0, 0, 1, 103, 31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1055;
}
);
note = glyph01257;
},
{
glyphname = "ef-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = phi.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1383;
}
);
note = glyph01278;
},
{
glyphname = "ha-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = x.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1108;
}
);
leftKerningGroup = x.smcp;
note = glyph01270;
},
{
glyphname = "che-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"806 1165 LINE",
"806 604 LINE",
"656 554 OFFCURVE",
"499 554 QCURVE SMOOTH",
"372 554 OFFCURVE",
"246 675 OFFCURVE",
"246 810 QCURVE SMOOTH",
"246 1165 LINE",
"61 1165 LINE",
"61 797 LINE SMOOTH",
"65 604 OFFCURVE",
"287 402 OFFCURVE",
"499 402 QCURVE SMOOTH",
"662 402 OFFCURVE",
"806 450 QCURVE",
"806 0 LINE",
"991 0 LINE",
"991 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
}
);
note = glyph00515;
},
{
glyphname = "tse-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"906 1165 LINE",
"906 152 LINE",
"323 152 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"1082 0 LINE",
"1082 -340 LINE",
"1247 -340 LINE",
"1265 152 LINE",
"1092 152 LINE",
"1092 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 12 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1320;
}
);
note = glyph00514;
},
{
glyphname = "sha-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1293 1165 LINE",
"1293 152 LINE",
"901 152 LINE",
"901 1165 LINE",
"715 1165 LINE",
"715 152 LINE",
"323 152 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"1478 0 LINE",
"1478 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 12 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1617;
}
);
note = glyph00516;
},
{
glyphname = "shcha-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1293 1165 LINE",
"1293 152 LINE",
"901 152 LINE",
"901 1165 LINE",
"715 1165 LINE",
"715 152 LINE",
"323 152 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"1469 0 LINE",
"1469 -340 LINE",
"1635 -340 LINE",
"1653 152 LINE",
"1479 152 LINE",
"1479 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1708;
}
);
note = glyph00517;
},
{
glyphname = "dzhe-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"906 1165 LINE",
"906 152 LINE",
"323 152 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"523 0 LINE",
"523 -357 LINE",
"708 -357 LINE",
"708 0 LINE",
"1091 0 LINE",
"1091 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 12 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1229;
}
);
note = glyph00505;
},
{
glyphname = "softsign-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1032 531 OFFCURVE",
"802 727 OFFCURVE",
"596 727 QCURVE SMOOTH",
"323 727 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"607 0 LINE SMOOTH",
"804 2 OFFCURVE",
"1032 202 OFFCURVE",
"1032 366 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"323 575 LINE",
"612 575 LINE SMOOTH",
"722 572 OFFCURVE",
"847 459 OFFCURVE",
"847 368 QCURVE SMOOTH",
"847 271 OFFCURVE",
"715 152 OFFCURVE",
"600 152 QCURVE SMOOTH",
"323 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1102;
}
);
note = glyph00520;
},
{
glyphname = "yeru-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "softsign-cy.smcp";
},
{
name = idotless.smcp;
transform = "{1, 0, 0, 1, 1046, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1521;
}
);
note = glyph00519;
},
{
glyphname = "hardsign-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1238 476 OFFCURVE",
"1134 639 OFFCURVE",
"940 727 OFFCURVE",
"808 727 QCURVE SMOOTH",
"530 727 LINE",
"530 1165 LINE",
"8 1165 LINE",
"8 1012 LINE",
"344 1012 LINE",
"344 0 LINE",
"814 0 LINE SMOOTH",
"1010 2 OFFCURVE",
"1238 202 OFFCURVE",
"1238 366 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"530 575 LINE",
"807 575 LINE SMOOTH",
"922 575 OFFCURVE",
"1053 463 OFFCURVE",
"1053 368 QCURVE SMOOTH",
"1053 269 OFFCURVE",
"921 152 OFFCURVE",
"807 152 QCURVE SMOOTH",
"530 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 7 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1309;
}
);
note = glyph00518;
},
{
glyphname = "lje-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1787 530 OFFCURVE",
"1563 723 OFFCURVE",
"1370 727 QCURVE SMOOTH",
"1078 727 LINE",
"1078 1165 LINE",
"296 1165 LINE",
"276 625 LINE SMOOTH",
"266 360 OFFCURVE",
"185 170 OFFCURVE",
"89 166 QCURVE SMOOTH",
"43 165 LINE",
"39 0 LINE",
"98 0 LINE SMOOTH",
"221 1 OFFCURVE",
"372 118 OFFCURVE",
"449 364 OFFCURVE",
"460 601 QCURVE SMOOTH",
"475 1012 LINE",
"893 1012 LINE",
"893 0 LINE",
"1362 0 LINE SMOOTH",
"1557 2 OFFCURVE",
"1787 201 OFFCURVE",
"1787 366 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1078 575 LINE",
"1355 575 LINE SMOOTH",
"1470 575 OFFCURVE",
"1601 463 OFFCURVE",
"1601 368 QCURVE SMOOTH",
"1601 269 OFFCURVE",
"1469 152 OFFCURVE",
"1355 152 QCURVE SMOOTH",
"1078 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 33 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 18 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1857;
}
);
note = glyph00502;
},
{
glyphname = "nje-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 498 LINE",
"907 498 LINE",
"907 0 LINE",
"1376 0 LINE SMOOTH",
"1571 2 OFFCURVE",
"1801 201 OFFCURVE",
"1801 366 QCURVE SMOOTH",
"1801 530 OFFCURVE",
"1577 723 OFFCURVE",
"1384 727 QCURVE SMOOTH",
"1092 727 LINE",
"1092 1165 LINE",
"907 1165 LINE",
"907 650 LINE",
"323 650 LINE",
"323 1165 LINE"
);
},
{
closed = 1;
nodes = (
"1092 575 LINE",
"1381 575 LINE SMOOTH",
"1491 572 OFFCURVE",
"1616 459 OFFCURVE",
"1616 368 QCURVE SMOOTH",
"1616 271 OFFCURVE",
"1484 152 OFFCURVE",
"1369 152 QCURVE SMOOTH",
"1092 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 2 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
4 2 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1871;
}
);
note = glyph00503;
},
{
glyphname = "dze-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
note = glyph01252;
},
{
glyphname = "e-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"867 246 OFFCURVE",
"726 135 OFFCURVE",
"591 135 QCURVE SMOOTH",
"446 135 OFFCURVE",
"285 329 OFFCURVE",
"281 507 QCURVE",
"728 507 LINE",
"728 659 LINE",
"281 659 LINE",
"287 834 OFFCURVE",
"449 1029 OFFCURVE",
"602 1029 QCURVE SMOOTH",
"728 1029 OFFCURVE",
"869 913 OFFCURVE",
"887 783 QCURVE",
"1072 783 LINE",
"1053 970 OFFCURVE",
"806 1181 OFFCURVE",
"602 1181 QCURVE SMOOTH",
"450 1181 OFFCURVE",
"219 1045 OFFCURVE",
"96 796 OFFCURVE",
"96 632 QCURVE SMOOTH",
"96 538 LINE SMOOTH",
"96 279 OFFCURVE",
"367 -16 OFFCURVE",
"591 -16 QCURVE SMOOTH",
"800 -16 OFFCURVE",
"1052 190 OFFCURVE",
"1072 377 QCURVE",
"887 377 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 22 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 22 112 22 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
48 22 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
96 22 112 22 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph00501;
},
{
glyphname = "ereversed-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"95 190 OFFCURVE",
"349 -16 OFFCURVE",
"556 -16 QCURVE SMOOTH",
"705 -16 OFFCURVE",
"931 119 OFFCURVE",
"1051 368 OFFCURVE",
"1051 531 QCURVE SMOOTH",
"1051 648 LINE SMOOTH",
"1046 892 OFFCURVE",
"773 1181 OFFCURVE",
"545 1181 QCURVE SMOOTH",
"341 1181 OFFCURVE",
"94 970 OFFCURVE",
"75 783 QCURVE",
"260 783 LINE",
"278 913 OFFCURVE",
"419 1029 OFFCURVE",
"545 1029 QCURVE SMOOTH",
"697 1029 OFFCURVE",
"860 834 OFFCURVE",
"865 659 QCURVE",
"419 659 LINE",
"419 507 LINE",
"866 507 LINE",
"859 322 OFFCURVE",
"697 135 OFFCURVE",
"556 135 QCURVE SMOOTH",
"421 135 OFFCURVE",
"280 246 OFFCURVE",
"260 377 QCURVE",
"75 377 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 19 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 9 112 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
48 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
96 9 112 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 19 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1147;
}
);
note = glyph00521;
},
{
glyphname = "i-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph01253;
},
{
glyphname = "yi-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -178, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph01254;
},
{
glyphname = "je-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = j.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 975;
}
);
note = glyph01255;
},
{
glyphname = "tshe-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"581 0 LINE",
"581 562 LINE",
"731 612 OFFCURVE",
"888 612 QCURVE SMOOTH",
"1015 612 OFFCURVE",
"1140 491 OFFCURVE",
"1140 356 QCURVE SMOOTH",
"1140 0 LINE",
"1326 0 LINE",
"1326 369 LINE SMOOTH",
"1322 562 OFFCURVE",
"1100 764 OFFCURVE",
"888 764 QCURVE SMOOTH",
"728 764 OFFCURVE",
"581 715 QCURVE",
"581 1012 LINE",
"945 1012 LINE",
"945 1165 LINE",
"40 1165 LINE",
"40 1012 LINE",
"395 1012 LINE",
"395 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 2 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1396;
}
);
leftKerningGroup = t.smcp;
note = glyph00504;
},
{
glyphname = "yu-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1555 877 OFFCURVE",
"1280 1181 OFFCURVE",
"1047 1181 QCURVE SMOOTH",
"829 1181 OFFCURVE",
"553 903 OFFCURVE",
"539 662 QCURVE",
"323 662 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 510 LINE",
"539 510 LINE",
"551 268 OFFCURVE",
"828 -16 OFFCURVE",
"1049 -16 QCURVE SMOOTH",
"1281 -16 OFFCURVE",
"1557 287 OFFCURVE",
"1557 548 QCURVE SMOOTH",
"1557 622 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"722 614 LINE SMOOTH",
"722 811 OFFCURVE",
"897 1025 OFFCURVE",
"1047 1025 QCURVE SMOOTH",
"1202 1025 OFFCURVE",
"1374 815 OFFCURVE",
"1374 617 QCURVE SMOOTH",
"1374 548 LINE SMOOTH",
"1374 349 OFFCURVE",
"1205 138 OFFCURVE",
"1049 138 QCURVE SMOOTH",
"898 138 OFFCURVE",
"722 353 OFFCURVE",
"722 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 5 values pushed */
96 13 112 13 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
160 13 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 13 112 13 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1654;
}
);
note = glyph00522;
},
{
glyphname = "ya-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"531 479 LINE",
"835 479 LINE",
"835 0 LINE",
"1020 0 LINE",
"1020 1165 LINE",
"555 1165 LINE SMOOTH",
"355 1163 OFFCURVE",
"135 985 OFFCURVE",
"135 824 QCURVE SMOOTH",
"135 720 OFFCURVE",
"248 563 OFFCURVE",
"370 525 QCURVE",
"80 0 LINE",
"276 0 LINE"
);
},
{
closed = 1;
nodes = (
"322 1012 OFFCURVE",
"562 1012 QCURVE SMOOTH",
"835 1012 LINE",
"835 632 LINE",
"552 632 LINE SMOOTH",
"322 636 OFFCURVE",
"322 816 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 7 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 11 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1159;
}
);
note = glyph00523;
},
{
glyphname = "dje-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"579 0 LINE",
"579 562 LINE",
"729 612 OFFCURVE",
"886 612 QCURVE SMOOTH",
"1014 612 OFFCURVE",
"1139 491 OFFCURVE",
"1139 360 QCURVE SMOOTH",
"1139 240 OFFCURVE",
"1012 131 OFFCURVE",
"871 131 QCURVE",
"871 -20 LINE",
"1095 -20 OFFCURVE",
"1324 170 OFFCURVE",
"1324 360 QCURVE SMOOTH",
"1324 556 OFFCURVE",
"1098 764 OFFCURVE",
"886 764 QCURVE SMOOTH",
"730 764 OFFCURVE",
"579 715 QCURVE",
"579 1012 LINE",
"943 1012 LINE",
"943 1165 LINE",
"38 1165 LINE",
"38 1012 LINE",
"394 1012 LINE",
"394 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
22 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 2 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1394;
}
);
leftKerningGroup = t.smcp;
note = glyph00500;
},
{
glyphname = "zhedescender-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1255 1165 LINE",
"955 656 LINE",
"866 656 LINE",
"866 1165 LINE",
"680 1165 LINE",
"680 656 LINE",
"591 656 LINE",
"291 1165 LINE",
"67 1165 LINE",
"421 593 LINE",
"31 0 LINE",
"265 0 LINE",
"580 502 LINE",
"680 502 LINE",
"680 0 LINE",
"866 0 LINE",
"866 502 LINE",
"965 502 LINE",
"1281 0 LINE",
"1403 0 LINE",
"1403 -340 LINE",
"1570 -340 LINE",
"1570 150 LINE",
"1417 150 LINE",
"1123 602 LINE",
"1479 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 10 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 23 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 23 112 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 23 112 23 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 7 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 23 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1607;
}
);
leftKerningGroup = x.smcp;
note = glyph00525;
},
{
glyphname = "zedescender-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"776 677 OFFCURVE",
"537 672 QCURVE SMOOTH",
"381 672 LINE",
"381 520 LINE",
"538 520 LINE SMOOTH",
"795 515 OFFCURVE",
"795 322 QCURVE SMOOTH",
"795 234 OFFCURVE",
"649 138 OFFCURVE",
"513 138 QCURVE SMOOTH",
"392 138 OFFCURVE",
"261 234 OFFCURVE",
"256 320 QCURVE",
"71 320 LINE",
"71 184 OFFCURVE",
"253 11 OFFCURVE",
"416 -9 QCURVE",
"416 -432 LINE",
"602 -432 LINE",
"602 -11 LINE",
"777 7 OFFCURVE",
"980 182 OFFCURVE",
"980 322 QCURVE SMOOTH",
"980 413 OFFCURVE",
"867 559 OFFCURVE",
"749 595 QCURVE",
"852 636 OFFCURVE",
"962 777 OFFCURVE",
"962 863 QCURVE SMOOTH",
"962 1013 OFFCURVE",
"724 1181 OFFCURVE",
"513 1181 QCURVE SMOOTH",
"325 1181 OFFCURVE",
"88 1000 OFFCURVE",
"88 858 QCURVE",
"274 858 LINE",
"274 937 OFFCURVE",
"403 1025 OFFCURVE",
"513 1025 QCURVE SMOOTH",
"638 1025 OFFCURVE",
"776 932 OFFCURVE",
"776 848 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 10 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
39 25 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
240 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 39 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
160 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 39 112 39 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
48 39 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
96 39 112 39 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
29 25 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1087;
}
);
note = glyph01271;
},
{
glyphname = "kadescender-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"813 1165 LINE",
"424 656 LINE",
"324 656 LINE",
"324 1165 LINE",
"139 1165 LINE",
"139 0 LINE",
"324 0 LINE",
"324 502 LINE",
"430 502 LINE",
"829 0 LINE",
"934 0 LINE",
"934 -340 LINE",
"1102 -340 LINE",
"1102 150 LINE",
"944 150 LINE",
"577 594 LINE",
"1036 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 9 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 5 values pushed */
96 13 112 13 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
160 13 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 13 112 13 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1145;
}
);
note = glyph00526;
rightKerningGroup = k.smcp;
},
{
glyphname = "kaverticalstroke-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"139 1165 LINE",
"139 0 LINE",
"324 0 LINE",
"324 502 LINE",
"404 502 LINE",
"404 296 LINE",
"552 296 LINE",
"552 502 LINE",
"617 502 LINE",
"1016 0 LINE",
"1255 0 LINE",
"764 594 LINE",
"1224 1165 LINE",
"1000 1165 LINE",
"612 656 LINE",
"552 656 LINE",
"552 884 LINE",
"404 884 LINE",
"404 656 LINE",
"324 656 LINE",
"324 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 17 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 0 112 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 0 112 0 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1289;
}
);
note = glyph00527;
rightKerningGroup = k.smcp;
},
{
glyphname = "kabashkir-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1301 0 LINE",
"810 594 LINE",
"1270 1165 LINE",
"1046 1165 LINE",
"657 656 LINE",
"558 656 LINE",
"558 1165 LINE",
"35 1165 LINE",
"35 1013 LINE",
"372 1013 LINE",
"372 0 LINE",
"558 0 LINE",
"558 502 LINE",
"663 502 LINE",
"1062 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 2 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 8 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 8 112 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 8 112 8 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
12 1 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1335;
}
);
leftKerningGroup = t.smcp;
note = glyph00528;
rightKerningGroup = k.smcp;
},
{
glyphname = "endescender-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 153 LINE",
"1112 1165 LINE",
"927 1165 LINE",
"927 650 LINE",
"323 650 LINE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 498 LINE",
"927 498 LINE",
"927 0 LINE",
"1088 0 LINE",
"1088 -359 LINE",
"1274 -359 LINE",
"1274 153 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 11 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1251;
}
);
note = glyph01272;
},
{
glyphname = "haabkhasian-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1253 137 OFFCURVE",
"1159 155 QCURVE",
"1341 333 OFFCURVE",
"1341 627 QCURVE SMOOTH",
"1341 683 LINE SMOOTH",
"1341 924 OFFCURVE",
"1136 1181 OFFCURVE",
"952 1181 QCURVE SMOOTH",
"771 1181 OFFCURVE",
"564 921 OFFCURVE",
"564 686 QCURVE SMOOTH",
"564 647 LINE SMOOTH",
"565 322 OFFCURVE",
"792 144 QCURVE",
"742 136 OFFCURVE",
"688 136 QCURVE SMOOTH",
"489 136 OFFCURVE",
"281 365 OFFCURVE",
"281 597 QCURVE SMOOTH",
"281 630 LINE SMOOTH",
"281 830 OFFCURVE",
"425 1025 OFFCURVE",
"551 1025 QCURVE",
"550 1183 LINE",
"340 1183 OFFCURVE",
"96 887 OFFCURVE",
"96 628 QCURVE SMOOTH",
"96 602 LINE SMOOTH",
"96 304 OFFCURVE",
"410 -21 OFFCURVE",
"688 -21 QCURVE SMOOTH",
"851 -21 OFFCURVE",
"988 39 QCURVE",
"1154 -20 OFFCURVE",
"1371 -20 QCURVE",
"1371 137 LINE"
);
},
{
closed = 1;
nodes = (
"749 706 LINE SMOOTH",
"754 1023 OFFCURVE",
"952 1023 QCURVE SMOOTH",
"1058 1023 OFFCURVE",
"1156 860 OFFCURVE",
"1156 688 QCURVE SMOOTH",
"1156 632 LINE SMOOTH",
"1156 346 OFFCURVE",
"974 217 QCURVE",
"749 338 OFFCURVE",
"749 646 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 47 48 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 4 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 19 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
33 2 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
44 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1474;
}
);
leftKerningGroup = q.smcp;
note = glyph00529;
},
{
glyphname = "esdescender-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"867 246 OFFCURVE",
"726 135 OFFCURVE",
"591 135 QCURVE SMOOTH",
"440 135 OFFCURVE",
"281 342 OFFCURVE",
"281 531 QCURVE SMOOTH",
"281 637 LINE SMOOTH",
"282 826 OFFCURVE",
"449 1029 OFFCURVE",
"602 1029 QCURVE SMOOTH",
"728 1029 OFFCURVE",
"869 913 OFFCURVE",
"887 783 QCURVE",
"1072 783 LINE",
"1053 970 OFFCURVE",
"806 1181 OFFCURVE",
"602 1181 QCURVE SMOOTH",
"450 1181 OFFCURVE",
"219 1045 OFFCURVE",
"96 796 OFFCURVE",
"96 632 QCURVE SMOOTH",
"96 535 LINE SMOOTH",
"96 308 OFFCURVE",
"311 22 OFFCURVE",
"494 -8 QCURVE",
"494 -426 LINE",
"680 -426 LINE",
"680 -10 LINE",
"849 10 OFFCURVE",
"1052 209 OFFCURVE",
"1072 377 QCURVE",
"887 377 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1148;
}
);
leftKerningGroup = q.smcp;
note = glyph01273;
},
{
glyphname = "ustraight-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1067;
}
);
leftKerningGroup = y.smcp;
note = glyph01274;
},
{
glyphname = "ustraightstroke-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
},
{
name = glyph00550;
transform = "{1, 0, 0, 1, 68, -290}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1119;
}
);
leftKerningGroup = y.smcp;
note = glyph00530;
},
{
glyphname = "hadescender-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"47 1165 LINE",
"444 587 LINE",
"38 0 LINE",
"258 0 LINE",
"554 443 LINE",
"853 0 LINE",
"969 0 LINE",
"969 -340 LINE",
"1137 -340 LINE",
"1137 150 LINE",
"969 150 LINE",
"969 149 LINE",
"664 587 LINE",
"1059 1165 LINE",
"839 1165 LINE",
"552 730 LINE",
"266 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 12 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 11 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
14 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1192;
}
);
leftKerningGroup = x.smcp;
note = glyph00531;
},
{
glyphname = "tetse-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1162 1165 LINE",
"1162 152 LINE",
"580 152 LINE",
"580 1012 LINE",
"943 1012 LINE",
"943 1165 LINE",
"38 1165 LINE",
"38 1012 LINE",
"395 1012 LINE",
"395 0 LINE",
"1339 0 LINE",
"1339 -340 LINE",
"1504 -340 LINE",
"1522 152 LINE",
"1348 152 LINE",
"1348 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1633;
}
);
leftKerningGroup = t.smcp;
note = glyph00532;
},
{
glyphname = "cheverticalstroke-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"806 1165 LINE",
"806 604 LINE",
"705 570 OFFCURVE",
"602 559 QCURVE",
"602 796 LINE",
"453 796 LINE",
"453 556 LINE",
"349 567 OFFCURVE",
"246 687 OFFCURVE",
"246 810 QCURVE SMOOTH",
"246 1165 LINE",
"61 1165 LINE",
"61 800 LINE SMOOTH",
"64 614 OFFCURVE",
"265 413 OFFCURVE",
"453 403 QCURVE",
"453 208 LINE",
"602 208 LINE",
"602 406 LINE",
"707 417 OFFCURVE",
"806 450 QCURVE",
"806 0 LINE",
"991 0 LINE",
"991 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 11 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
}
);
note = glyph00533;
},
{
glyphname = "shha-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"323 0 LINE",
"323 561 LINE",
"478 612 OFFCURVE",
"630 612 QCURVE SMOOTH",
"757 612 OFFCURVE",
"883 491 OFFCURVE",
"883 356 QCURVE SMOOTH",
"883 0 LINE",
"1068 0 LINE",
"1068 369 LINE SMOOTH",
"1064 562 OFFCURVE",
"842 764 OFFCURVE",
"630 764 QCURVE SMOOTH",
"477 764 OFFCURVE",
"323 715 QCURVE",
"323 1165 LINE",
"138 1165 LINE",
"138 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
}
);
note = glyph00534;
},
{
glyphname = "cheabkhasian-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1017 -16 OFFCURVE",
"1201 31 OFFCURVE",
"1261 71 QCURVE",
"1204 217 LINE",
"1124 177 OFFCURVE",
"989 146 OFFCURVE",
"913 146 QCURVE SMOOTH",
"730 146 OFFCURVE",
"537 338 OFFCURVE",
"537 515 QCURVE",
"1387 515 LINE",
"1387 645 LINE SMOOTH",
"1387 904 OFFCURVE",
"1115 1181 OFFCURVE",
"867 1181 QCURVE SMOOTH",
"725 1181 OFFCURVE",
"492 1052 OFFCURVE",
"357 816 OFFCURVE",
"352 669 QCURVE",
"250 681 OFFCURVE",
"155 800 OFFCURVE",
"155 894 QCURVE",
"2 894 LINE",
"2 726 OFFCURVE",
"186 528 OFFCURVE",
"352 517 QCURVE",
"352 274 OFFCURVE",
"658 -16 OFFCURVE",
"913 -16 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"543 831 OFFCURVE",
"724 1025 OFFCURVE",
"867 1025 QCURVE SMOOTH",
"1028 1025 OFFCURVE",
"1202 855 OFFCURVE",
"1202 694 QCURVE SMOOTH",
"1202 667 LINE",
"537 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
21 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 33 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1475;
}
);
note = glyph00535;
},
{
glyphname = "chedescenderabkhasian-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "cheabkhasian-cy.smcp";
},
{
name = glyph00593;
transform = "{1, 0, 0, 1, 700, -72}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1475;
}
);
note = glyph01275;
},
{
glyphname = "schwa-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"477 1181 OFFCURVE",
"285 1134 OFFCURVE",
"220 1093 QCURVE",
"277 947 LINE",
"421 1019 OFFCURVE",
"568 1019 QCURVE SMOOTH",
"751 1019 OFFCURVE",
"944 826 OFFCURVE",
"944 649 QCURVE SMOOTH",
"944 648 LINE",
"94 648 LINE",
"94 518 LINE SMOOTH",
"94 261 OFFCURVE",
"366 -16 OFFCURVE",
"614 -16 QCURVE SMOOTH",
"761 -16 OFFCURVE",
"997 121 OFFCURVE",
"1129 365 OFFCURVE",
"1129 518 QCURVE SMOOTH",
"1129 654 LINE SMOOTH",
"1127 893 OFFCURVE",
"830 1181 OFFCURVE",
"583 1181 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 497 LINE",
"944 497 LINE",
"938 336 OFFCURVE",
"759 138 OFFCURVE",
"614 138 QCURVE SMOOTH",
"452 138 OFFCURVE",
"279 310 OFFCURVE",
"279 470 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 31 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
13 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1226;
}
);
note = glyph00536;
},
{
glyphname = "dzeabkhasian-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"395 542 LINE",
"523 542 LINE SMOOTH",
"657 542 OFFCURVE",
"795 436 OFFCURVE",
"795 341 QCURVE SMOOTH",
"795 235 OFFCURVE",
"649 131 OFFCURVE",
"513 131 QCURVE SMOOTH",
"398 131 OFFCURVE",
"261 231 OFFCURVE",
"256 320 QCURVE",
"71 320 LINE",
"71 162 OFFCURVE",
"193 72 QCURVE SMOOTH",
"253 26 OFFCURVE",
"424 -19 OFFCURVE",
"513 -19 QCURVE SMOOTH",
"728 -19 OFFCURVE",
"980 171 OFFCURVE",
"980 338 QCURVE SMOOTH",
"980 477 OFFCURVE",
"771 674 OFFCURVE",
"594 690 QCURVE",
"937 1047 LINE",
"935 1165 LINE",
"111 1165 LINE",
"111 1012 LINE",
"691 1012 LINE",
"395 707 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
26 29 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 11 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
28 5 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1087;
}
);
note = glyph00537;
},
{
glyphname = "imacron-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "ii-cy.smcp";
},
{
name = macron;
transform = "{1, 0, 0, 1, 156, 38}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1260;
}
);
note = glyph01276;
},
{
glyphname = "obarred-cy.smcp";
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1112 877 OFFCURVE",
"837 1181 OFFCURVE",
"604 1181 QCURVE SMOOTH",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 553 LINE SMOOTH",
"96 290 OFFCURVE",
"377 -16 OFFCURVE",
"606 -16 QCURVE SMOOTH",
"838 -16 OFFCURVE",
"1114 287 OFFCURVE",
"1114 548 QCURVE SMOOTH",
"1114 622 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"930 506 LINE",
"921 326 OFFCURVE",
"753 138 OFFCURVE",
"606 138 QCURVE SMOOTH",
"463 138 OFFCURVE",
"290 330 OFFCURVE",
"280 506 QCURVE"
);
},
{
closed = 1;
nodes = (
"288 830 OFFCURVE",
"459 1025 OFFCURVE",
"604 1025 QCURVE SMOOTH",
"751 1025 OFFCURVE",
"921 837 OFFCURVE",
"930 658 QCURVE",
"280 658 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 3 values pushed */
160 25 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 25 112 25 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
96 25 112 25 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00538;
},
{
glyphname = "umacron-cy.smcp";
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = "u-cy.smcp";
},
{
name = macron;
transform = "{1, 0, 0, 1, 58, 38}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1055;
}
);
note = glyph01277;
},
{
glyphname = Omega;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1221 0 LINE",
"1221 157 LINE",
"1001 157 LINE",
"1107 259 OFFCURVE",
"1227 566 OFFCURVE",
"1227 726 QCURVE SMOOTH",
"1227 856 LINE SMOOTH",
"1224 1036 OFFCURVE",
"1082 1320 OFFCURVE",
"829 1476 OFFCURVE",
"669 1476 QCURVE SMOOTH",
"508 1476 OFFCURVE",
"254 1317 OFFCURVE",
"113 1025 OFFCURVE",
"113 839 QCURVE SMOOTH",
"113 728 LINE SMOOTH",
"113 566 OFFCURVE",
"233 259 OFFCURVE",
"339 157 QCURVE",
"118 157 LINE",
"118 0 LINE",
"610 0 LINE",
"610 162 LINE",
"465 190 OFFCURVE",
"308 486 OFFCURVE",
"308 726 QCURVE SMOOTH",
"308 839 LINE SMOOTH",
"308 1068 OFFCURVE",
"500 1318 OFFCURVE",
"838 1318 OFFCURVE",
"1032 1072 OFFCURVE",
"1032 841 QCURVE SMOOTH",
"1032 707 LINE SMOOTH",
"1029 473 OFFCURVE",
"875 189 OFFCURVE",
"737 162 QCURVE",
"737 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
25 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1362;
}
);
note = uni2126;
unicode = "03A9,2126";
},
{
glyphname = alpha.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph01234;
},
{
glyphname = beta.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = b.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1104;
}
);
note = glyph01235;
},
{
glyphname = gamma.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 1012 LINE",
"901 1012 LINE",
"901 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 943;
}
);
note = glyph00490;
},
{
glyphname = delta.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"477 1165 LINE",
"20 0 LINE",
"1107 0 LINE",
"650 1165 LINE"
);
},
{
closed = 1;
nodes = (
"538 872 LINE",
"563 966 LINE",
"589 874 LINE",
"853 152 LINE",
"274 152 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
leftKerningGroup = delta.smcp;
note = glyph00491;
},
{
glyphname = epsilon.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 998;
}
);
note = glyph01236;
},
{
glyphname = zeta.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1059;
}
);
note = glyph01237;
},
{
glyphname = eta.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = h.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph01238;
},
{
glyphname = theta.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"372 658 LINE",
"372 505 LINE",
"853 505 LINE",
"853 658 LINE"
);
},
{
closed = 1;
nodes = (
"96 290 OFFCURVE",
"377 -16 OFFCURVE",
"606 -16 QCURVE SMOOTH",
"838 -16 OFFCURVE",
"1114 287 OFFCURVE",
"1114 548 QCURVE SMOOTH",
"1114 622 LINE SMOOTH",
"1112 877 OFFCURVE",
"837 1181 OFFCURVE",
"604 1181 QCURVE SMOOTH",
"375 1181 OFFCURVE",
"96 873 OFFCURVE",
"96 615 QCURVE SMOOTH",
"96 553 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 614 LINE SMOOTH",
"279 811 OFFCURVE",
"454 1025 OFFCURVE",
"604 1025 QCURVE SMOOTH",
"759 1025 OFFCURVE",
"931 815 OFFCURVE",
"931 617 QCURVE SMOOTH",
"931 548 LINE SMOOTH",
"931 349 OFFCURVE",
"762 138 OFFCURVE",
"606 138 QCURVE SMOOTH",
"455 138 OFFCURVE",
"279 353 OFFCURVE",
"279 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 7 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 5 values pushed */
96 2 112 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
96 2 112 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = q.smcp;
note = glyph00492;
},
{
glyphname = iota.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph01239;
},
{
glyphname = kappa.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = k.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1108;
}
);
note = glyph01240;
rightKerningGroup = k.smcp;
},
{
glyphname = lambda.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"563 966 LINE",
"589 874 LINE",
"909 0 LINE",
"1107 0 LINE",
"650 1165 LINE",
"477 1165 LINE",
"20 0 LINE",
"219 0 LINE",
"538 872 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
leftKerningGroup = delta.smcp;
note = glyph00493;
},
{
glyphname = mu.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = m.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1538;
}
);
note = glyph01241;
},
{
glyphname = nu.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1251;
}
);
note = glyph01242;
},
{
glyphname = xi.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"62 152 LINE",
"62 0 LINE",
"843 0 LINE",
"843 152 LINE"
);
},
{
closed = 1;
nodes = (
"843 1012 LINE",
"843 1165 LINE",
"62 1165 LINE",
"62 1012 LINE"
);
},
{
closed = 1;
nodes = (
"776 531 LINE",
"776 683 LINE",
"127 683 LINE",
"127 531 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 12 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 10 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 905;
}
);
note = glyph00494;
},
{
glyphname = omicron.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1211;
}
);
note = glyph01243;
},
{
glyphname = pi.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"138 1165 LINE",
"138 0 LINE",
"323 0 LINE",
"323 1012 LINE",
"906 1012 LINE",
"906 0 LINE",
"1092 0 LINE",
"1092 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 8 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
}
);
note = glyph00495;
},
{
glyphname = rho.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = p.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1116;
}
);
note = glyph01244;
},
{
glyphname = sigma.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"293 1012 LINE",
"918 1012 LINE",
"918 1165 LINE",
"63 1165 LINE",
"63 1021 LINE",
"400 583 LINE",
"63 144 LINE",
"63 0 LINE",
"968 0 LINE",
"968 153 LINE",
"293 153 LINE",
"623 570 LINE",
"623 595 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1007;
}
);
note = glyph00496;
},
{
glyphname = tau.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1062;
}
);
note = glyph01245;
rightKerningGroup = t.smcp;
},
{
glyphname = upsilon.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1067;
}
);
leftKerningGroup = y.smcp;
note = glyph01246;
},
{
glyphname = phi.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"599 1165 LINE",
"599 1047 LINE",
"368 1034 OFFCURVE",
"96 782 OFFCURVE",
"96 578 QCURVE SMOOTH",
"96 376 OFFCURVE",
"365 123 OFFCURVE",
"599 110 QCURVE",
"599 0 LINE",
"784 0 LINE",
"784 110 LINE",
"1011 123 OFFCURVE",
"1286 375 OFFCURVE",
"1286 580 QCURVE SMOOTH",
"1286 783 OFFCURVE",
"1014 1033 OFFCURVE",
"784 1046 QCURVE",
"784 1165 LINE"
);
},
{
closed = 1;
nodes = (
"280 732 OFFCURVE",
"445 882 OFFCURVE",
"599 891 QCURVE",
"599 265 LINE",
"280 282 OFFCURVE",
"280 578 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"784 891 LINE",
"936 882 OFFCURVE",
"1102 733 OFFCURVE",
"1102 580 QCURVE SMOOTH",
"1102 425 OFFCURVE",
"936 275 OFFCURVE",
"784 265 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 16 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
9 8 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1383;
}
);
note = glyph00497;
},
{
glyphname = chi.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = x.smcp;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1108;
}
);
leftKerningGroup = x.smcp;
note = glyph01247;
},
{
glyphname = psi.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"558 1165 LINE",
"558 441 LINE",
"282 486 OFFCURVE",
"282 856 QCURVE SMOOTH",
"282 1165 LINE",
"96 1165 LINE",
"96 834 LINE SMOOTH",
"101 592 OFFCURVE",
"341 307 OFFCURVE",
"558 287 QCURVE",
"558 0 LINE",
"744 0 LINE",
"744 289 LINE",
"961 313 OFFCURVE",
"1203 599 OFFCURVE",
"1206 842 QCURVE SMOOTH",
"1206 1165 LINE",
"1021 1165 LINE",
"1021 857 LINE SMOOTH",
"1021 494 OFFCURVE",
"744 443 QCURVE",
"744 1165 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1303;
}
);
note = glyph00498;
},
{
glyphname = omega.smcp;
lastChange = "2020-11-28 03:05:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1150 0 LINE",
"1150 151 LINE",
"969 151 LINE",
"1147 307 OFFCURVE",
"1147 616 QCURVE SMOOTH",
"1147 644 LINE SMOOTH",
"1147 889 OFFCURVE",
"863 1181 OFFCURVE",
"631 1181 QCURVE SMOOTH",
"400 1181 OFFCURVE",
"117 890 OFFCURVE",
"117 652 QCURVE SMOOTH",
"117 622 LINE SMOOTH",
"117 308 OFFCURVE",
"296 151 QCURVE",
"121 151 LINE",
"121 0 LINE",
"571 0 LINE",
"571 157 LINE",
"444 189 OFFCURVE",
"303 412 OFFCURVE",
"303 616 QCURVE SMOOTH",
"303 649 LINE SMOOTH",
"303 832 OFFCURVE",
"475 1025 OFFCURVE",
"631 1025 QCURVE SMOOTH",
"788 1025 OFFCURVE",
"962 833 OFFCURVE",
"962 654 QCURVE SMOOTH",
"962 616 LINE SMOOTH",
"962 411 OFFCURVE",
"835 188 OFFCURVE",
"699 157 QCURVE",
"699 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1266;
}
);
note = glyph00499;
},
{
glyphname = iotatonos.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -307, -289}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 548;
}
);
note = glyph01230;
},
{
glyphname = iotadieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -178, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 488;
}
);
note = glyph01248;
},
{
glyphname = upsilontonos.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -412, -291}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1127;
}
);
leftKerningGroup = y.smcp;
note = glyph01232;
},
{
glyphname = upsilondieresis.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = y.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 109, 30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1067;
}
);
leftKerningGroup = y.smcp;
note = glyph01249;
},
{
glyphname = omicrontonos.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o.smcp;
transform = "{1, 0, 0, 1, 10, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -226, -291}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1221;
}
);
leftKerningGroup = q.smcp;
note = glyph01231;
},
{
glyphname = omegatonos.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = omega.smcp;
transform = "{1, 0, 0, 1, 10, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -201, -292}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1276;
}
);
note = glyph01233;
},
{
glyphname = alphatonos.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a.smcp;
},
{
name = tonos;
transform = "{1, 0, 0, 1, -36, -291}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1157;
}
);
leftKerningGroup = delta.smcp;
note = glyph01227;
},
{
glyphname = epsilontonos.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e.smcp;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -340, -288}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1058;
}
);
note = glyph01228;
},
{
glyphname = etatonos.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = h.smcp;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -311, -291}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1311;
}
);
note = glyph01229;
},
{
glyphname = "ha-ethiopic";
lastChange = "2020-11-28 03:15:20 +0000";
layers = (
{
components = (
{
name = ha.base;
transform = "{1, 0, 0, 1, -5, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
unicode = 1200;
},
{
glyphname = "hu-ethiopic";
lastChange = "2020-11-28 03:15:20 +0000";
layers = (
{
components = (
{
name = ha.base;
transform = "{1, 0, 0, 1, -5, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1124, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1392;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
unicode = 1201;
},
{
glyphname = "hi-ethiopic";
lastChange = "2020-11-28 03:15:20 +0000";
layers = (
{
components = (
{
name = ha.base;
transform = "{1, 0, 0, 1, -5, 0}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 908, -487}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 961, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1213;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
unicode = 1202;
},
{
glyphname = "haa-ethiopic";
lastChange = "2020-11-28 03:15:20 +0000";
layers = (
{
components = (
{
name = ha.base;
transform = "{1, 0, 0, 1, -5, 0}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1059, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
unicode = 1203;
},
{
glyphname = "hee-ethiopic";
lastChange = "2020-11-28 03:15:20 +0000";
layers = (
{
components = (
{
name = ha.base;
transform = "{1, 0, 0, 1, -5, 0}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1033, -40}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1155;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
unicode = 1204;
},
{
glyphname = "he-ethiopic";
lastChange = "2020-11-28 03:15:20 +0000";
layers = (
{
components = (
{
name = ha.base;
transform = "{1, 0, 0, 1, -5, 0}";
},
{
name = _he.inside;
transform = "{1, 0, 0, 1, -39, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 446, 600}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
unicode = 1205;
},
{
glyphname = "ho-ethiopic";
lastChange = "2020-11-28 03:16:36 +0000";
layers = (
{
components = (
{
name = ha.base;
transform = "{1, 0, 0, 1, -5, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1115 1353 OFFCURVE",
"1014 1457 OFFCURVE",
"879 1457 CURVE SMOOTH",
"811 1457 OFFCURVE",
"755 1435 OFFCURVE",
"710 1390 CURVE SMOOTH",
"620 1300 OFFCURVE",
"620 1154 OFFCURVE",
"710 1068 CURVE SMOOTH",
"755 1025 OFFCURVE",
"811 1003 OFFCURVE",
"879 1003 CURVE SMOOTH",
"1012 1003 OFFCURVE",
"1115 1100 OFFCURVE",
"1115 1228 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"759 1295 OFFCURVE",
"812 1351 OFFCURVE",
"881 1351 CURVE SMOOTH",
"1042 1351 OFFCURVE",
"1038 1108 OFFCURVE",
"881 1108 CURVE SMOOTH",
"813 1108 OFFCURVE",
"759 1163 OFFCURVE",
"759 1228 CURVE SMOOTH"
);
}
);
width = 1161;
}
);
leftMetricsKey = u;
unicode = 1206;
},
{
glyphname = "hoa-ethiopic";
lastChange = "2020-11-28 03:16:16 +0000";
layers = (
{
components = (
{
name = "ho-ethiopic";
transform = "{1, 0, 0, 1, 87, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 174, 600}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1258;
}
);
unicode = 1207;
},
{
glyphname = "la-ethiopic";
lastChange = "2020-11-28 03:16:48 +0000";
layers = (
{
components = (
{
name = la.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
leftMetricsKey = h;
rightMetricsKey = h;
unicode = 1208;
},
{
glyphname = "lu-ethiopic";
lastChange = "2020-11-28 03:17:22 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1128, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1300;
}
);
leftMetricsKey = h;
unicode = 1209;
},
{
glyphname = "li-ethiopic";
lastChange = "2020-11-28 03:17:27 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1128, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1337;
}
);
leftMetricsKey = h;
unicode = 120A;
},
{
glyphname = "laa-ethiopic";
lastChange = "2020-11-28 03:17:13 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1128, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftMetricsKey = h;
rightMetricsKey = h;
unicode = 120B;
},
{
glyphname = "lee-ethiopic";
lastChange = "2020-11-28 03:17:34 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = hee0.accent;
transform = "{1.1, 0, 0, 1.1, 1177, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1223;
}
);
leftMetricsKey = h;
unicode = 120C;
},
{
glyphname = "le-ethiopic";
lastChange = "2020-11-28 03:18:35 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = ring;
transform = "{-1.17505, 0, 0, -1.1626, 863, 1658}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
leftMetricsKey = h;
rightMetricsKey = h;
unicode = 120D;
},
{
glyphname = "lo-ethiopic";
lastChange = "2020-11-28 03:17:13 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = ring;
transform = "{1, 0, 0, 1, 733, -850}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1369;
}
);
leftMetricsKey = h;
rightMetricsKey = h;
unicode = 120E;
},
{
glyphname = "lwa-ethiopic";
lastChange = "2020-11-28 03:18:58 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1128, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1124;
}
);
leftMetricsKey = h;
unicode = 120F;
},
{
glyphname = "hha-ethiopic";
lastChange = "2020-11-28 03:19:08 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 950, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1210;
},
{
glyphname = "hhu-ethiopic";
lastChange = "2020-11-28 03:19:30 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 946, 1082}";
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1865, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1872;
}
);
leftMetricsKey = m;
unicode = 1211;
},
{
glyphname = "hhi-ethiopic";
lastChange = "2020-11-28 03:19:36 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 944, 1082}";
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1865, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1900;
}
);
leftMetricsKey = m;
unicode = 1212;
},
{
glyphname = "hhaa-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 943, 1082}";
},
{
name = ha1.accent;
transform = "{1, 0, 0, 1, 1865, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1213;
},
{
glyphname = "hhee-ethiopic";
lastChange = "2020-11-28 03:19:44 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 953, 1082}";
},
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1865, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1802;
}
);
leftMetricsKey = m;
unicode = 1214;
},
{
glyphname = "hhe-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = he1.accent;
transform = "{0.80902, 0.58779, -0.58779, 0.80902, 589, 1214}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1215;
},
{
glyphname = "hho-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 953, 1082}";
},
{
name = ho1.accent;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1216;
},
{
glyphname = "hhwa-ethiopic";
lastChange = "2020-11-28 03:19:55 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 953, 1082}";
},
{
name = hwa1.accent;
transform = "{1, 0, 0, 1, 1865, 180}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1845;
}
);
leftMetricsKey = m;
unicode = 1217;
},
{
glyphname = "ma-ethiopic";
lastChange = "2020-11-28 04:27:12 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1797;
}
);
leftMetricsKey = r;
rightMetricsKey = m;
unicode = 1218;
},
{
glyphname = "mu-ethiopic";
lastChange = "2020-11-28 04:27:12 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1970, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1977;
}
);
leftMetricsKey = r;
unicode = 1219;
},
{
glyphname = "mi-ethiopic";
lastChange = "2020-11-28 04:27:54 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1858, -508}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1778, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1893;
}
);
leftMetricsKey = r;
unicode = 121A;
},
{
glyphname = "maa-ethiopic";
lastChange = "2020-11-28 04:27:12 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
},
{
name = ha1.accent;
transform = "{1, 0, 0, 1.763, 1870, -11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1797;
}
);
leftMetricsKey = r;
rightMetricsKey = m;
unicode = 121B;
},
{
glyphname = "mee-ethiopic";
lastChange = "2020-11-28 04:27:12 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
},
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1850, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1870;
}
);
leftMetricsKey = r;
rightMetricsKey = m;
unicode = 121C;
},
{
glyphname = "me-ethiopic";
lastChange = "2020-11-28 04:27:12 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
},
{
name = he1.accent;
transform = "{0.70711, -0.70711, 0.8498, 0.8498, 511, -62}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1797;
}
);
leftMetricsKey = r;
rightMetricsKey = m;
unicode = 121D;
},
{
glyphname = "mo-ethiopic";
lastChange = "2020-11-28 04:27:12 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
},
{
name = ho1.accent;
transform = "{1, 0, 0, 1.2064, 588, 59}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1797;
}
);
leftMetricsKey = r;
rightMetricsKey = m;
unicode = 121E;
},
{
glyphname = "mwa-ethiopic";
lastChange = "2020-11-28 04:27:12 +0000";
layers = (
{
components = (
{
name = ma.base;
transform = "{1, 0, 0, 1, 2, 0}";
},
{
name = hwa1.accent;
transform = "{1, 0, 0, 1.1997, 1885, 253}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1885;
}
);
leftMetricsKey = r;
rightMetricsKey = m;
unicode = 121F;
},
{
glyphname = "sza-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = sa.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1220;
},
{
glyphname = "szu-ethiopic";
lastChange = "2020-11-28 03:20:13 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1891, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1898;
}
);
leftMetricsKey = m;
unicode = 1221;
},
{
glyphname = "szi-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1686, -463}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 1394, 13}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1815;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1222;
},
{
glyphname = "szaa-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = ha1.accent;
transform = "{1, 0, 0, 2.2411, 1789, 136}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1223;
},
{
glyphname = "szee-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1748, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1868;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1224;
},
{
glyphname = "sze-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = sa.base;
transform = "{-1, 0, 0, 1, 1775, 0}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1225;
},
{
glyphname = "szo-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = ho1.accent;
transform = "{1, 0, 0, 1, 696, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1226;
},
{
glyphname = "szwa-ethiopic";
lastChange = "2020-11-28 03:19:25 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 1389, 0}";
},
{
name = leg.part;
transform = "{0, 0.6763, 1, 0, 1643, -436}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1227;
},
{
glyphname = "ra-ethiopic";
lastChange = "2020-11-28 03:21:19 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 47, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1031;
}
);
leftMetricsKey = m;
rightMetricsKey = r;
unicode = 1228;
},
{
glyphname = "ru-ethiopic";
lastChange = "2020-11-28 03:21:19 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 47, 0}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 898, -95}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1031;
}
);
leftMetricsKey = m;
rightMetricsKey = r;
unicode = 1229;
},
{
glyphname = "ri-ethiopic";
lastChange = "2020-11-28 03:21:19 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 47, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1000 597 LINE",
"654 593 LINE",
"654 463 LINE",
"1000 467 LINE"
);
},
{
closed = 1;
nodes = (
"863 285 LINE",
"1001 289 LINE",
"1001 594 LINE",
"863 590 LINE"
);
}
);
width = 1031;
}
);
leftMetricsKey = m;
rightMetricsKey = r;
unicode = 122A;
},
{
glyphname = "raa-ethiopic";
lastChange = "2020-11-28 03:21:19 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"908 283 LINE",
"906 486 LINE",
"1007 486 LINE",
"1007 659 LINE",
"938 659 LINE SMOOTH",
"820 659 OFFCURVE",
"733 573 OFFCURVE",
"734 455 CURVE SMOOTH",
"736 283 LINE"
);
},
{
closed = 1;
nodes = (
"736 180 OFFCURVE",
"653 131 OFFCURVE",
"521 131 CURVE SMOOTH",
"370 131 OFFCURVE",
"329 270 OFFCURVE",
"324 517 CURVE",
"325 517 LINE",
"325 1082 LINE",
"139 1082 LINE",
"139 524 LINE SMOOTH",
"142 187 OFFCURVE",
"228 -20 OFFCURVE",
"521 -20 CURVE SMOOTH",
"723 -20 OFFCURVE",
"897 61 OFFCURVE",
"907 295 CURVE",
"736 296 LINE"
);
}
);
width = 1037;
}
);
leftMetricsKey = m;
rightMetricsKey = r;
unicode = 122B;
},
{
glyphname = "ree-ethiopic";
lastChange = "2020-11-28 03:21:19 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 47, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1002 443 OFFCURVE",
"911 535 OFFCURVE",
"788 535 CURVE SMOOTH",
"727 535 OFFCURVE",
"675 515 OFFCURVE",
"635 475 CURVE SMOOTH",
"553 393 OFFCURVE",
"552 262 OFFCURVE",
"635 183 CURVE SMOOTH",
"676 144 OFFCURVE",
"727 125 OFFCURVE",
"788 125 CURVE SMOOTH",
"908 125 OFFCURVE",
"1002 213 OFFCURVE",
"1002 328 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"642 390 OFFCURVE",
"689 442 OFFCURVE",
"755 442 CURVE SMOOTH",
"906 442 OFFCURVE",
"902 217 OFFCURVE",
"755 217 CURVE SMOOTH",
"692 217 OFFCURVE",
"642 267 OFFCURVE",
"642 327 CURVE SMOOTH"
);
}
);
width = 1032;
}
);
leftMetricsKey = m;
rightMetricsKey = r;
unicode = 122C;
},
{
glyphname = "re-ethiopic";
lastChange = "2020-11-28 03:21:19 +0000";
layers = (
{
components = (
{
name = na.base;
transform = "{1, 0, 0, 1, 57, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 990;
}
);
leftMetricsKey = m;
rightMetricsKey = r;
unicode = 122D;
},
{
glyphname = "ro-ethiopic";
lastChange = "2020-11-28 03:21:19 +0000";
layers = (
{
components = (
{
name = na.base;
transform = "{1, 0, 0, 1, 57, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1111 1004 OFFCURVE",
"1020 1099 OFFCURVE",
"897 1101 CURVE SMOOTH",
"836 1102 OFFCURVE",
"785 1083 OFFCURVE",
"743 1043 CURVE SMOOTH",
"660 962 OFFCURVE",
"657 831 OFFCURVE",
"738 751 CURVE SMOOTH",
"778 711 OFFCURVE",
"829 690 OFFCURVE",
"890 689 CURVE SMOOTH",
"1011 687 OFFCURVE",
"1107 773 OFFCURVE",
"1109 889 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"797 903 OFFCURVE",
"839 949 OFFCURVE",
"896 948 CURVE SMOOTH",
"1029 946 OFFCURVE",
"1022 747 OFFCURVE",
"893 749 CURVE SMOOTH",
"837 750 OFFCURVE",
"795 795 OFFCURVE",
"796 849 CURVE SMOOTH"
);
}
);
width = 1139;
}
);
leftMetricsKey = m;
rightMetricsKey = r;
unicode = 122E;
},
{
glyphname = "rwa-ethiopic";
lastChange = "2020-11-28 03:21:34 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 89, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"9 1179 LINE",
"9 1079 LINE",
"481 1079 LINE",
"481 1179 LINE"
);
}
);
width = 1126;
}
);
leftMetricsKey = t;
rightMetricsKey = r;
unicode = 122F;
},
{
glyphname = "sa-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1230;
},
{
glyphname = "su-ethiopic";
lastChange = "2020-11-28 03:22:15 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1129, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1301;
}
);
leftMetricsKey = m;
unicode = 1231;
},
{
glyphname = "si-ethiopic";
lastChange = "2020-11-28 03:22:15 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1338;
}
);
leftMetricsKey = m;
unicode = 1232;
},
{
glyphname = "saa-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1132;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1233;
},
{
glyphname = "see-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1249;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1234;
},
{
glyphname = "se-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{0.85717, 0.51504, -0.51504, 0.85717, 523, 1108}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1235;
},
{
glyphname = "so-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1236;
},
{
glyphname = "swa-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1219;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1237;
},
{
glyphname = "sha-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 564, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1238;
},
{
glyphname = "shu-ethiopic";
lastChange = "2020-11-28 03:22:15 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1129, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1301;
}
);
leftMetricsKey = m;
unicode = 1239;
},
{
glyphname = "shi-ethiopic";
lastChange = "2020-11-28 03:22:15 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1338;
}
);
leftMetricsKey = m;
unicode = 123A;
},
{
glyphname = "shaa-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1132;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 123B;
},
{
glyphname = "shee-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1249;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 123C;
},
{
glyphname = "she-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{0.89879, 0.43837, -0.43837, 0.89879, 562, 1108}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 434, 1083}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 123D;
},
{
glyphname = "sho-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 123E;
},
{
glyphname = "shwa-ethiopic";
lastChange = "2020-11-28 03:21:55 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 564, 1082}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1219;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 123F;
},
{
glyphname = "qa-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1240;
},
{
glyphname = "qu-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1709, 548}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1763;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1241;
},
{
glyphname = "qi-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1078, -502}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1242;
},
{
glyphname = "qaa-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{0.81915, -0.57358, 0.57358, 0.81915, 796, -2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1243;
},
{
glyphname = "qee-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1108, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1244;
},
{
glyphname = "qe-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{0.76604, 0.64279, -0.64279, 0.76604, 823, 1113}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1245;
},
{
glyphname = "qo-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = ho2.accent;
transform = "{1, 0, 0, 1, 988, 1512}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1246;
},
{
glyphname = "qwaa-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 778, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"454 -348 LINE",
"454 -397 LINE",
"1008 -427 LINE",
"1008 -361 LINE"
);
}
);
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 124B;
},
{
glyphname = "qha-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 788, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1250;
},
{
glyphname = "qhu-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1765, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1819;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1251;
},
{
glyphname = "qhi-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1081, -479}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1252;
},
{
glyphname = "qhaa-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{0.81915, -0.57358, 0.57358, 0.81915, 851, -90}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 788, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1253;
},
{
glyphname = "qhee-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1132, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1254;
},
{
glyphname = "qhe-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{0.76604, 0.64279, -0.64279, 0.76604, 803, 1103}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 638, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1255;
},
{
glyphname = "qho-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 788, 1202}";
},
{
name = ho2.accent;
transform = "{1, 0, 0, 1, 981, 1502}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1256;
},
{
glyphname = "qhwaa-ethiopic";
lastChange = "2020-11-28 03:22:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 788, 1082}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 788, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 788, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"454 -345 LINE",
"454 -394 LINE",
"1008 -424 LINE",
"1008 -358 LINE"
);
}
);
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 125B;
},
{
glyphname = "ba-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 1260;
},
{
glyphname = "bu-ethiopic";
lastChange = "2020-11-28 03:23:10 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1130, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1302;
}
);
leftMetricsKey = n;
unicode = 1261;
},
{
glyphname = "bi-ethiopic";
lastChange = "2020-11-28 03:23:10 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1339;
}
);
leftMetricsKey = n;
unicode = 1262;
},
{
glyphname = "baa-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1133;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 1263;
},
{
glyphname = "bee-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1250;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 1264;
},
{
glyphname = "be-ethiopic";
lastChange = "2020-11-28 03:23:21 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 98, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 170, 448}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1228;
}
);
rightMetricsKey = n;
unicode = 1265;
},
{
glyphname = "bo-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ho0.accent;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 1266;
},
{
glyphname = "bwa-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1220;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 1267;
},
{
glyphname = "va-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 565, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 1268;
},
{
glyphname = "vu-ethiopic";
lastChange = "2020-11-28 03:23:10 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 565, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1130, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1302;
}
);
leftMetricsKey = n;
unicode = 1269;
},
{
glyphname = "vi-ethiopic";
lastChange = "2020-11-28 03:23:10 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 565, 1082}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1339;
}
);
leftMetricsKey = n;
unicode = 126A;
},
{
glyphname = "vaa-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 565, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1133;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 126B;
},
{
glyphname = "vee-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 565, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1250;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 126C;
},
{
glyphname = "ve-ethiopic";
lastChange = "2020-11-28 03:23:21 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 151, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 716, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 170, 430}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1281;
}
);
rightMetricsKey = n;
unicode = 126D;
},
{
glyphname = "vo-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 565, 1082}";
},
{
name = ho0.accent;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 126E;
},
{
glyphname = "vwa-ethiopic";
lastChange = "2020-11-28 03:22:48 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 565, 1082}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1220;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 126F;
},
{
glyphname = "ta-ethiopic";
lastChange = "2020-11-28 03:14:26 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1270;
},
{
glyphname = "tu-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 590, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1271;
},
{
glyphname = "ti-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 197, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 674;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1272;
},
{
glyphname = "taa-ethiopic";
lastChange = "2020-11-28 04:35:58 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 433, 1082}";
},
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 301, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 772;
}
);
rightMetricsKey = t;
unicode = 1273;
},
{
glyphname = "tee-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 548, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1274;
},
{
glyphname = "te-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{0.64279, 0.76605, -0.76605, 0.64279, 340, 1223}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1275;
},
{
glyphname = "to-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = ho2.accent;
transform = "{1, 0, 0, 1, 525, 1502}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1276;
},
{
glyphname = "twa-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -16, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 357, 1082}";
},
{
name = hwa2.accent;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 696;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1277;
},
{
glyphname = "ca-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 325, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1278;
},
{
glyphname = "cu-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 581, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1279;
},
{
glyphname = "ci-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 208, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 685;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 127A;
},
{
glyphname = "caa-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 433, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 433, 1082}";
},
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 772;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 127B;
},
{
glyphname = "cee-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 325, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 558, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 127C;
},
{
glyphname = "ce-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 71, 0}";
},
{
name = neck.part;
transform = "{0.42261, 0.90631, -0.90631, 0.42261, 442, 1180}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 264, 1102}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 783;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 127D;
},
{
glyphname = "co-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 325, 1142}";
},
{
name = ho2.accent;
transform = "{0.9242, 0, 0, 0.8641, 479, 1442}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 127E;
},
{
glyphname = "cwa-ethiopic";
lastChange = "2020-11-28 04:35:39 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -16, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 357, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 357, 1082}";
},
{
name = hwa2.accent;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 696;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 127F;
},
{
glyphname = "xa-ethiopic";
lastChange = "2020-11-28 03:24:08 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = nose.part;
transform = "{1, 0, 0, 1, 245, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1010;
}
);
rightMetricsKey = n;
unicode = 1280;
},
{
glyphname = "xu-ethiopic";
lastChange = "2020-11-28 03:24:12 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = nose.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 1074, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1119;
}
);
unicode = 1281;
},
{
glyphname = "xi-ethiopic";
lastChange = "2020-11-28 03:24:16 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = nose.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 660, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1111;
}
);
unicode = 1282;
},
{
glyphname = "xaa-ethiopic";
lastChange = "2020-11-28 04:36:20 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = nose.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 660, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1010;
}
);
rightMetricsKey = n;
unicode = 1283;
},
{
glyphname = "xee-ethiopic";
lastChange = "2020-11-28 03:24:25 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = nose.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 985, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1078;
}
);
unicode = 1284;
},
{
glyphname = "xe-ethiopic";
lastChange = "2020-11-28 03:24:31 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = nose.part;
transform = "{1, 0, 0, 1, 245, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"50 756 LINE",
"165 756 LINE",
"165 1082 LINE",
"50 1082 LINE"
);
}
);
width = 1010;
}
);
rightMetricsKey = n;
unicode = 1285;
},
{
glyphname = "xo-ethiopic";
lastChange = "2020-11-28 03:23:40 +0000";
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -79, -755}";
},
{
name = "no-ethiopic";
transform = "{1, 0, 0, 1, 137, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 222, 535}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1248;
}
);
unicode = 1286;
},
{
glyphname = "xwaa-ethiopic";
lastChange = "2020-11-28 03:23:40 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = nose.part;
transform = "{1, 0, 0, 1, 245, 1082}";
},
{
name = minus;
transform = "{0.4818, 0, 0, 0.6755, 505, -440}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"818 -294 LINE",
"980 -294 LINE",
"990 0 LINE",
"806 0 LINE"
);
}
);
width = 1043;
}
);
unicode = 128B;
},
{
glyphname = "na-ethiopic";
lastChange = "2020-11-28 03:24:48 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -35, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 54, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 819;
}
);
rightMetricsKey = n;
unicode = 1290;
},
{
glyphname = "nu-ethiopic";
lastChange = "2020-11-28 03:24:52 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -35, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 54, 1082}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 883, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 928;
}
);
unicode = 1291;
},
{
glyphname = "ni-ethiopic";
lastChange = "2020-11-28 03:24:55 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -35, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 54, 1082}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 469, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 920;
}
);
unicode = 1292;
},
{
glyphname = "naa-ethiopic";
lastChange = "2020-11-28 03:24:58 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"765 -381 LINE",
"884 -381 LINE",
"912 -97 LINE",
"748 -97 LINE"
);
},
{
closed = 1;
nodes = (
"564 131 LINE SMOOTH",
"373 137 OFFCURVE",
"267 271 OFFCURVE",
"267 520 CURVE SMOOTH",
"267 555 LINE SMOOTH",
"267 811 OFFCURVE",
"375 950 OFFCURVE",
"563 950 CURVE SMOOTH",
"703 950 OFFCURVE",
"808 850 OFFCURVE",
"819 710 CURVE",
"994 710 LINE",
"983 942 OFFCURVE",
"806 1102 OFFCURVE",
"563 1102 CURVE SMOOTH",
"366 1102 OFFCURVE",
"218 1007 OFFCURVE",
"140 843 CURVE SMOOTH",
"101 761 OFFCURVE",
"82 667 OFFCURVE",
"82 562 CURVE SMOOTH",
"82 531 LINE SMOOTH",
"82 190 OFFCURVE",
"269 -20 OFFCURVE",
"563 -20 CURVE SMOOTH",
"915 -20 LINE",
"924 119 LINE"
);
}
);
width = 1062;
}
);
rightMetricsKey = c;
unicode = 1293;
},
{
glyphname = "nee-ethiopic";
lastChange = "2020-11-28 03:25:03 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -55, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 34, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 800, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 920;
}
);
rightMetricsKey = n;
unicode = 1294;
},
{
glyphname = "ne-ethiopic";
lastChange = "2020-11-26 07:06:53 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"585 457 CURVE",
"438 -31 LINE",
"641 -31 LINE",
"726 246 LINE SMOOTH",
"796 474 OFFCURVE",
"702 459 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"569 388 LINE",
"696 745 LINE SMOOTH",
"783 988 OFFCURVE",
"579 1132 OFFCURVE",
"350 1132 CURVE SMOOTH",
"253 1132 OFFCURVE",
"159 1105 OFFCURVE",
"89 1050 CURVE",
"89 961 LINE",
"102 916 LINE",
"154 953 OFFCURVE",
"227 975 OFFCURVE",
"294 975 CURVE SMOOTH",
"442 975 OFFCURVE",
"566 888 OFFCURVE",
"511 746 CURVE SMOOTH",
"414 497 LINE SMOOTH",
"374 394 OFFCURVE",
"467 384 OFFCURVE",
"483 385 CURVE SMOOTH"
);
}
);
width = 857;
}
);
unicode = 1295;
},
{
glyphname = "no-ethiopic";
lastChange = "2020-11-28 03:25:17 +0000";
layers = (
{
components = (
{
name = "naa-ethiopic";
transform = "{1, 0, 0, 1, 10, -16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1007 771 OFFCURVE",
"915 864 OFFCURVE",
"792 864 CURVE SMOOTH",
"731 864 OFFCURVE",
"680 844 OFFCURVE",
"639 803 CURVE SMOOTH",
"557 721 OFFCURVE",
"556 590 OFFCURVE",
"639 511 CURVE SMOOTH",
"680 472 OFFCURVE",
"731 452 OFFCURVE",
"792 452 CURVE SMOOTH",
"913 452 OFFCURVE",
"1007 540 OFFCURVE",
"1007 656 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"643 700 OFFCURVE",
"684 746 OFFCURVE",
"741 746 CURVE SMOOTH",
"872 746 OFFCURVE",
"868 549 OFFCURVE",
"741 549 CURVE SMOOTH",
"686 549 OFFCURVE",
"643 593 OFFCURVE",
"643 646 CURVE SMOOTH"
);
}
);
width = 1075;
}
);
leftMetricsKey = c;
rightMetricsKey = c;
unicode = 1296;
},
{
glyphname = "nwa-ethiopic";
lastChange = "2020-11-28 03:25:30 +0000";
layers = (
{
components = (
{
name = "no-ethiopic";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"615 -409 LINE",
"1016 -409 LINE",
"1016 -366 LINE",
"615 -366 LINE"
);
}
);
width = 1084;
}
);
leftMetricsKey = c;
rightMetricsKey = c;
unicode = 1297;
},
{
glyphname = "nya-ethiopic";
lastChange = "2020-11-28 03:26:03 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 95, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 184, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 44, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 949;
}
);
rightMetricsKey = n;
unicode = 1298;
},
{
glyphname = "nyu-ethiopic";
lastChange = "2020-11-28 03:26:07 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 75, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 164, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 44, 1082}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 993, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1038;
}
);
unicode = 1299;
},
{
glyphname = "nyi-ethiopic";
lastChange = "2020-11-28 03:26:10 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 85, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 174, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 44, 1082}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 589, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1040;
}
);
unicode = 129A;
},
{
glyphname = "nyaa-ethiopic";
lastChange = "2020-08-20 17:23:23 +0000";
layers = (
{
components = (
{
name = cap.part;
transform = "{1, 0, 0, 1.8701, 322, 780}";
},
{
name = "naa-ethiopic";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1034;
}
);
unicode = 129B;
},
{
glyphname = "nyee-ethiopic";
lastChange = "2020-11-28 03:26:15 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = shoulder.part;
transform = "{1, 0, 0, 1, 214, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 44, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1000, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1093;
}
);
unicode = 129C;
},
{
glyphname = "nye-ethiopic";
lastChange = "2020-08-20 17:23:33 +0000";
layers = (
{
components = (
{
name = cap.part;
transform = "{1, 0, 0, 1.556, 134, 851}";
},
{
name = "ne-ethiopic";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 842;
}
);
unicode = 129D;
},
{
glyphname = "nyo-ethiopic";
lastChange = "2020-11-28 03:25:42 +0000";
layers = (
{
components = (
{
name = hat.part;
transform = "{1, 0, 0, 1, 597, 983}";
},
{
name = "no-ethiopic";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1075;
}
);
leftMetricsKey = c;
rightMetricsKey = c;
unicode = 129E;
},
{
glyphname = "nywa-ethiopic";
lastChange = "2020-11-28 03:25:36 +0000";
layers = (
{
components = (
{
name = hat.part;
transform = "{1, 0, 0, 1, 548, 962}";
},
{
name = "nwa-ethiopic";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1084;
}
);
leftMetricsKey = c;
rightMetricsKey = c;
unicode = 129F;
},
{
glyphname = "aGlottal-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = aa.part;
transform = "{1, 0, 0, 1, 22, 1082}";
},
{
name = ba.base;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12A0;
},
{
glyphname = "uGlottal-ethiopic";
lastChange = "2020-11-28 03:26:41 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = aa.part;
transform = "{1, 0, 0, 1, 22, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1152, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1324;
}
);
leftMetricsKey = n;
unicode = 12A1;
},
{
glyphname = "iGlottal-ethiopic";
lastChange = "2020-11-28 03:26:52 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = aa.part;
transform = "{1, 0, 0, 1, 22, 1082}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1152, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1361;
}
);
leftMetricsKey = n;
unicode = 12A2;
},
{
glyphname = "aaGlottal-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = aa.part;
transform = "{1, 0, 0, 1, 22, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1152, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1155;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12A3;
},
{
glyphname = "eeGlottal-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = aa.part;
transform = "{1, 0, 0, 1, 22, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1152, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1272;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12A4;
},
{
glyphname = "eGlottal-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 114, 0}";
},
{
name = aa.part;
transform = "{1, 0, 0, 1, 114, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"141 1370 LINE",
"276 1373 LINE",
"289 1587 LINE",
"140 1579 LINE"
);
}
);
width = 1244;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12A5;
},
{
glyphname = "oGlottal-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = aa.part;
transform = "{1, 0, 0, 1, 22, 1082}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, 22, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12A6;
},
{
glyphname = "waGlottal-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 158, 0}";
},
{
name = aa.part;
transform = "{1, 0, 0, 1, 158, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"140 1479 LINE",
"140 1409 LINE",
"639 1409 LINE",
"639 1479 LINE"
);
}
);
width = 1288;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12A7;
},
{
glyphname = "ka-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12A8;
},
{
glyphname = "ku-ethiopic";
lastChange = "2020-11-28 03:26:52 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1130, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1302;
}
);
leftMetricsKey = n;
unicode = 12A9;
},
{
glyphname = "ki-ethiopic";
lastChange = "2020-11-28 03:26:52 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1339;
}
);
leftMetricsKey = n;
unicode = 12AA;
},
{
glyphname = "kaa-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1133;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12AB;
},
{
glyphname = "kee-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1250;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12AC;
},
{
glyphname = "ke-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
},
{
name = _he.inside;
transform = "{1, 0, 0, 1, -38, -180}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12AD;
},
{
glyphname = "ko-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
},
{
name = ho0.accent;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12AE;
},
{
glyphname = "kwaa-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 0, 1082}";
},
{
name = ha0.accent;
transform = "{0, -0.529, 1, 0, 1042, -491}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 933, 56}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1247;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12B3;
},
{
glyphname = "kxa-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1254;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12B8;
},
{
glyphname = "kxu-ethiopic";
lastChange = "2020-11-28 03:26:52 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1254, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1426;
}
);
leftMetricsKey = n;
unicode = 12B9;
},
{
glyphname = "kxi-ethiopic";
lastChange = "2020-11-28 03:26:52 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1254, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1463;
}
);
leftMetricsKey = n;
unicode = 12BA;
},
{
glyphname = "kxaa-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1254, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1257;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12BB;
},
{
glyphname = "kxee-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1254, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1374;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12BC;
},
{
glyphname = "kxe-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = _he.inside;
transform = "{1, 0, 0, 1, 89, -200}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1254;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12BD;
},
{
glyphname = "kxo-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1254;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12BE;
},
{
glyphname = "kxwaa-ethiopic";
lastChange = "2020-11-28 03:26:32 +0000";
layers = (
{
components = (
{
name = ba.base;
transform = "{1, 0, 0, 1, 124, 0}";
},
{
name = ka.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = cap.part;
transform = "{1, 0, 0, 1, 124, 1082}";
},
{
name = ha0.accent;
transform = "{0, -0.5515, 1, 0, 1166, -481}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 1059, 60}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1371;
}
);
leftMetricsKey = n;
rightMetricsKey = n;
unicode = 12C3;
},
{
glyphname = "wa-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12C8;
},
{
glyphname = "wu-ethiopic";
lastChange = "2020-11-28 03:27:29 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1592, 32}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1588;
}
);
leftMetricsKey = o;
unicode = 12C9;
},
{
glyphname = "wi-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1116, -492}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 822, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12CA;
},
{
glyphname = "waa-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 640, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12CB;
},
{
glyphname = "wee-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1090, 21}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12CC;
},
{
glyphname = "we-ethiopic";
lastChange = "2020-11-28 03:27:34 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 1294, -756}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1503, 517}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1715;
}
);
leftMetricsKey = o;
unicode = 12CD;
},
{
glyphname = "wo-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 981, 26}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12CE;
},
{
glyphname = "woa-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = wa.base;
transform = "{1, 0, 0, 1, -134, 0}";
},
{
name = leg.part;
transform = "{0, 0.5489, 1, 0, 996, -399}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 772, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12CF;
},
{
glyphname = "aPharyngeal-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = oo.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12D0;
},
{
glyphname = "uPharyngeal-ethiopic";
lastChange = "2020-11-28 03:27:41 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1226, 471}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1398;
}
);
leftMetricsKey = o;
unicode = 12D1;
},
{
glyphname = "iPharyngeal-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 682, -513}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, 547, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1180;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12D2;
},
{
glyphname = "aaPharyngeal-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1032, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12D3;
},
{
glyphname = "eePharyngeal-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 920, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12D4;
},
{
glyphname = "ePharyngeal-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = he0.accent;
transform = "{1, 0, 0, 1, 283, 1129}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12D5;
},
{
glyphname = "oPharyngeal-ethiopic";
lastChange = "2020-11-28 03:27:18 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = ho0.accent;
transform = "{0.83867, -0.54464, 0.54464, 0.83867, 393, 79}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 12D6;
},
{
glyphname = "za-ethiopic";
lastChange = "2020-11-28 03:28:01 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, -28, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1117;
}
);
leftMetricsKey = l;
rightMetricsKey = l;
unicode = 12D8;
},
{
glyphname = "zu-ethiopic";
lastChange = "2020-11-28 03:28:20 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1100, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1272;
}
);
leftMetricsKey = l;
unicode = 12D9;
},
{
glyphname = "zi-ethiopic";
lastChange = "2020-11-28 03:28:24 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1309;
}
);
leftMetricsKey = l;
unicode = 12DA;
},
{
glyphname = "zaa-ethiopic";
lastChange = "2020-11-28 03:28:01 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1120;
}
);
leftMetricsKey = l;
rightMetricsKey = l;
unicode = 12DB;
},
{
glyphname = "zee-ethiopic";
lastChange = "2020-11-28 03:28:01 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1237;
}
);
leftMetricsKey = l;
rightMetricsKey = l;
unicode = 12DC;
},
{
glyphname = "ze-ethiopic";
lastChange = "2020-11-28 03:28:01 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 93, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"156 1092 LINE",
"432 1092 LINE",
"453 1179 LINE",
"156 1197 LINE"
);
}
);
width = 1238;
}
);
leftMetricsKey = l;
rightMetricsKey = l;
unicode = 12DD;
},
{
glyphname = "zo-ethiopic";
lastChange = "2020-11-28 03:28:01 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, -27, 0}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, 16, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1118;
}
);
leftMetricsKey = l;
rightMetricsKey = l;
unicode = 12DE;
},
{
glyphname = "zwa-ethiopic";
lastChange = "2020-11-28 03:28:01 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1207;
}
);
leftMetricsKey = l;
rightMetricsKey = l;
unicode = 12DF;
},
{
glyphname = "zha-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1327;
}
);
unicode = 12E0;
},
{
glyphname = "zhu-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1212, 541}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1395;
}
);
unicode = 12E1;
},
{
glyphname = "zhi-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1212, 0}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1432;
}
);
unicode = 12E2;
},
{
glyphname = "zhaa-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1212, 0}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1327;
}
);
unicode = 12E3;
},
{
glyphname = "zhee-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1212, 0}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1327;
}
);
unicode = 12E4;
},
{
glyphname = "zhe-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"147 1152 LINE",
"423 1152 LINE",
"444 1239 LINE",
"147 1257 LINE"
);
}
);
width = 1327;
}
);
unicode = 12E5;
},
{
glyphname = "zho-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, 127, 0}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1327;
}
);
unicode = 12E6;
},
{
glyphname = "zhwa-ethiopic";
lastChange = "2020-11-28 03:28:45 +0000";
layers = (
{
components = (
{
name = za.base;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1212, 0}";
},
{
name = ears.accent;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1327;
}
);
unicode = 12E7;
},
{
glyphname = "ya-ethiopic";
lastChange = "2020-11-28 03:28:57 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -28, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 928;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12E8;
},
{
glyphname = "yu-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 474, 130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 928;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12E9;
},
{
glyphname = "yi-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 489, 119}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"845 206 LINE",
"453 206 LINE",
"453 98 LINE",
"845 98 LINE"
);
}
);
width = 928;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12EA;
},
{
glyphname = "yaa-ethiopic";
lastChange = "2020-11-28 04:28:36 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, 40, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 139, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 996;
}
);
rightMetricsKey = r;
unicode = 12EB;
},
{
glyphname = "yee-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hee0.accent;
transform = "{0.8264, 0, 0, 0.8264, 731, 296}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 928;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12EC;
},
{
glyphname = "ye-ethiopic";
lastChange = "2020-11-28 04:28:53 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, 21, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"734 306 LINE",
"734 297 LINE SMOOTH",
"733 180 OFFCURVE",
"731 94 OFFCURVE",
"530 94 CURVE SMOOTH",
"214 94 LINE",
"214 1 LINE",
"679 1 LINE SMOOTH",
"797 1 OFFCURVE",
"883 87 OFFCURVE",
"883 205 CURVE SMOOTH",
"883 306 LINE"
);
},
{
closed = 1;
nodes = (
"163 -179 LINE",
"163 -170 LINE SMOOTH",
"163 -53 OFFCURVE",
"166 33 OFFCURVE",
"367 33 CURVE SMOOTH",
"683 33 LINE",
"683 126 LINE",
"218 126 LINE SMOOTH",
"100 126 OFFCURVE",
"14 40 OFFCURVE",
"14 -78 CURVE SMOOTH",
"14 -179 LINE"
);
}
);
width = 977;
}
);
rightMetricsKey = r;
unicode = 12ED;
},
{
glyphname = "yo-ethiopic";
lastChange = "2020-11-28 03:29:31 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -28, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 979, 670}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1136;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12EE;
},
{
glyphname = "yoa-ethiopic";
lastChange = "2020-11-28 04:29:53 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, 41, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 823, -564}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -110, -1011}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1244;
}
);
unicode = 12EF;
},
{
glyphname = "da-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 933;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F0;
},
{
glyphname = "du-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 954, 165}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1111;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F1;
},
{
glyphname = "di-ethiopic";
lastChange = "2020-11-28 03:30:08 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = ha0.accent;
transform = "{0, -1, 1, 0, 1076, -348}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1146;
}
);
leftMetricsKey = r;
unicode = 12F2;
},
{
glyphname = "daa-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1021, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 933;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F3;
},
{
glyphname = "dee-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = hee0.accent;
transform = "{0.8265, 0, 0, 0.8265, 967, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 981;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F4;
},
{
glyphname = "de-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 769, -563}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1175;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F5;
},
{
glyphname = "do-ethiopic";
lastChange = "2020-11-28 04:30:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -56, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 549, 0}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, -126, 29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 900;
}
);
rightMetricsKey = r;
unicode = 12F6;
},
{
glyphname = "dwa-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1025, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1006;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F7;
},
{
glyphname = "dda-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 933;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F8;
},
{
glyphname = "ddu-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 926, 180}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1083;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12F9;
},
{
glyphname = "ddi-ethiopic";
lastChange = "2020-11-28 03:29:49 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = ha0.accent;
transform = "{0, -1, 1, 0, 1031, -328}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1101;
}
);
leftMetricsKey = r;
unicode = 12FA;
},
{
glyphname = "ddaa-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1023, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 933;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12FB;
},
{
glyphname = "ddee-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hee0.accent;
transform = "{0.8259, -0.02884, 0.02884, 0.8259, 965, 21}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 972;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12FC;
},
{
glyphname = "dde-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 821, -548}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1227;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12FD;
},
{
glyphname = "ddo-ethiopic";
lastChange = "2020-11-28 04:30:28 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -54, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 551, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 551, 1082}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, -126, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 902;
}
);
rightMetricsKey = r;
unicode = 12FE;
},
{
glyphname = "ddwa-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1022, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1003;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 12FF;
},
{
glyphname = "ja-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 582, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 933;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 1300;
},
{
glyphname = "ju-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 911, 181}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1068;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 1301;
},
{
glyphname = "ji-ethiopic";
lastChange = "2020-11-28 03:29:58 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = ha0.accent;
transform = "{0, -1, 1, 0, 1003, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1073;
}
);
leftMetricsKey = r;
unicode = 1302;
},
{
glyphname = "jaa-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1020, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 933;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 1303;
},
{
glyphname = "jee-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hee0.accent;
transform = "{0.8265, 0, 0, 0.8265, 979, 19}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 993;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 1304;
},
{
glyphname = "je-ethiopic";
lastChange = "2020-11-28 04:30:39 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 819, -615}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1240;
}
);
leftMetricsKey = r;
unicode = 1305;
},
{
glyphname = "jo-ethiopic";
lastChange = "2020-11-28 04:30:46 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -95, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 510, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 510, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 510, 1082}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, -126, 23}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 861;
}
);
rightMetricsKey = r;
unicode = 1306;
},
{
glyphname = "jwa-ethiopic";
lastChange = "2020-11-28 03:29:10 +0000";
layers = (
{
components = (
{
name = ya.base;
transform = "{1, 0, 0, 1, -23, 0}";
},
{
name = da.part;
transform = "{1, 0, 0, 1, 582, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 582, 1082}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1021, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1002;
}
);
leftMetricsKey = r;
rightMetricsKey = r;
unicode = 1307;
},
{
glyphname = "ga-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 822;
}
);
rightMetricsKey = n;
unicode = 1308;
},
{
glyphname = "gu-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 886, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1025;
}
);
rightMetricsKey = n;
unicode = 1309;
},
{
glyphname = "gi-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 472, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1017;
}
);
rightMetricsKey = n;
unicode = 130A;
},
{
glyphname = "gaa-ethiopic";
lastChange = "2020-11-28 03:34:58 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -92, 0}";
},
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 423, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 762;
}
);
rightMetricsKey = n;
unicode = 130B;
},
{
glyphname = "gee-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 867, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 987;
}
);
rightMetricsKey = n;
unicode = 130C;
},
{
glyphname = "ge-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"153 1072 OFFCURVE",
"65 978 OFFCURVE",
"65 857 CURVE SMOOTH",
"65 796 OFFCURVE",
"85 745 OFFCURVE",
"124 704 CURVE SMOOTH",
"203 621 OFFCURVE",
"334 622 OFFCURVE",
"416 704 CURVE SMOOTH",
"457 745 OFFCURVE",
"477 796 OFFCURVE",
"477 857 CURVE SMOOTH",
"477 980 OFFCURVE",
"384 1072 OFFCURVE",
"269 1072 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 695 OFFCURVE",
"161 743 OFFCURVE",
"161 804 CURVE SMOOTH",
"161 946 OFFCURVE",
"380 950 OFFCURVE",
"380 804 CURVE SMOOTH",
"380 741 OFFCURVE",
"329 695 OFFCURVE",
"269 695 CURVE SMOOTH"
);
}
);
width = 971;
}
);
rightMetricsKey = n;
unicode = 130D;
},
{
glyphname = "go-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 122, -163}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 822;
}
);
rightMetricsKey = n;
unicode = 130E;
},
{
glyphname = "gwaa-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = minus;
transform = "{0.5969, 0, 0, 1, 139, -751}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"680 -290 LINE",
"802 -290 LINE",
"816 52 LINE",
"672 52 LINE"
);
}
);
width = 955;
}
);
rightMetricsKey = n;
unicode = 1313;
},
{
glyphname = "gga-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 382, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 382, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 822;
}
);
rightMetricsKey = n;
unicode = 1318;
},
{
glyphname = "ggu-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 372, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 372, 1082}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 886, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1025;
}
);
rightMetricsKey = n;
unicode = 1319;
},
{
glyphname = "ggi-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 382, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 382, 1082}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 472, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1017;
}
);
rightMetricsKey = n;
unicode = 131A;
},
{
glyphname = "ggaa-ethiopic";
lastChange = "2020-11-28 03:35:05 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -92, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 322, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 322, 1082}";
},
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 762;
}
);
rightMetricsKey = n;
unicode = 131B;
},
{
glyphname = "ggee-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 352, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 352, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 817, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 937;
}
);
rightMetricsKey = n;
unicode = 131C;
},
{
glyphname = "gge-ethiopic";
lastChange = "2020-11-28 03:30:47 +0000";
layers = (
{
components = (
{
name = neck.part;
transform = "{1, 0, 0, 1, 543, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 543, 1082}";
},
{
name = "ge-ethiopic";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 971;
}
);
rightMetricsKey = n;
unicode = 131D;
},
{
glyphname = "ggo-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 349, 1118}";
},
{
name = ho2.accent;
transform = "{1, 0, 0, 1, 565, 1390}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 822;
}
);
rightMetricsKey = n;
unicode = 131E;
},
{
glyphname = "ggwaa-ethiopic";
lastChange = "2020-11-28 03:30:34 +0000";
layers = (
{
components = (
{
name = ga.base;
transform = "{1, 0, 0, 1, -32, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 382, 1082}";
},
{
name = hat.part;
transform = "{1, 0, 0, 1, 382, 1082}";
},
{
name = hwa2.accent;
transform = "{1, 0, 0, 1, 622, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"664 -288 LINE",
"786 -288 LINE",
"800 4 LINE",
"656 4 LINE"
);
}
);
width = 939;
}
);
rightMetricsKey = n;
unicode = 131F;
},
{
glyphname = "tha-ethiopic";
lastChange = "2020-11-28 03:31:04 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1320;
},
{
glyphname = "thu-ethiopic";
lastChange = "2020-11-28 03:31:10 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1865, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1872;
}
);
leftMetricsKey = m;
unicode = 1321;
},
{
glyphname = "thi-ethiopic";
lastChange = "2020-11-28 03:31:10 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1865, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1900;
}
);
leftMetricsKey = m;
unicode = 1322;
},
{
glyphname = "thaa-ethiopic";
lastChange = "2020-11-28 03:31:04 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = ha1.accent;
transform = "{1, 0, 0, 1, 1865, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1323;
},
{
glyphname = "thee-ethiopic";
lastChange = "2020-11-28 03:31:04 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = hee1.accent;
transform = "{1.21, 0, 0, 1.21, 1934, 35}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1929;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1324;
},
{
glyphname = "the-ethiopic";
lastChange = "2020-11-28 03:31:04 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = acute;
transform = "{0.81915, 0.57358, -0.57358, 0.81915, 1559, -1410}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1325;
},
{
glyphname = "tho-ethiopic";
lastChange = "2020-11-28 03:31:04 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = ho1.accent;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1326;
},
{
glyphname = "thwa-ethiopic";
lastChange = "2020-11-28 03:31:04 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = hwa1.accent;
transform = "{1, 0, 0, 1, 1865, 180}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1865;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1327;
},
{
glyphname = "cha-ethiopic";
lastChange = "2020-11-28 03:31:20 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 968, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 1328;
},
{
glyphname = "chu-ethiopic";
lastChange = "2020-11-28 03:31:29 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 983, 0}";
},
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1865, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1872;
}
);
leftMetricsKey = m;
unicode = 1329;
},
{
glyphname = "chi-ethiopic";
lastChange = "2020-11-28 03:31:29 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 983, 0}";
},
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1865, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1900;
}
);
leftMetricsKey = m;
unicode = 132A;
},
{
glyphname = "chaa-ethiopic";
lastChange = "2020-11-28 03:31:20 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 983, 0}";
},
{
name = ha1.accent;
transform = "{1, 0, 0, 1, 1865, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 132B;
},
{
glyphname = "chee-ethiopic";
lastChange = "2020-11-28 03:31:20 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 983, 0}";
},
{
name = hee1.accent;
transform = "{1.21, 0, 0, 1.21, 1934, 35}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1929;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 132C;
},
{
glyphname = "che-ethiopic";
lastChange = "2020-11-28 03:31:20 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 983, 0}";
},
{
name = acute;
transform = "{0.81915, 0.57358, -0.57358, 0.81915, 1564, -1430}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 132D;
},
{
glyphname = "cho-ethiopic";
lastChange = "2020-11-28 03:31:20 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 983, 0}";
},
{
name = ho1.accent;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1775;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 132E;
},
{
glyphname = "chwa-ethiopic";
lastChange = "2020-11-28 03:31:20 +0000";
layers = (
{
components = (
{
name = hha.base;
transform = "{1, 0, 0, 1, 110, 0}";
},
{
name = shoes.part;
transform = "{1, 0, 0, 1, 983, 0}";
},
{
name = hwa1.accent;
transform = "{1, 0, 0, 1, 1865, 160}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1865;
}
);
leftMetricsKey = m;
rightMetricsKey = m;
unicode = 132F;
},
{
glyphname = "pha-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1029;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 1330;
},
{
glyphname = "phu-ethiopic";
lastChange = "2020-11-28 03:32:22 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1086, 182}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1258;
}
);
leftMetricsKey = s;
unicode = 1331;
},
{
glyphname = "phi-ethiopic";
lastChange = "2020-11-28 03:32:22 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1049, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1258;
}
);
leftMetricsKey = s;
unicode = 1332;
},
{
glyphname = "phaa-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1063, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1029;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 1333;
},
{
glyphname = "phee-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1149, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1231;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 1334;
},
{
glyphname = "phe-ethiopic";
lastChange = "2020-11-28 03:32:32 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 764, -560}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1185;
}
);
leftMetricsKey = s;
unicode = 1335;
},
{
glyphname = "pho-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, -43, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1029;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 1336;
},
{
glyphname = "phwa-ethiopic";
lastChange = "2020-11-28 04:31:11 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 512, 1082}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1064, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1060;
}
);
leftMetricsKey = s;
unicode = 1337;
},
{
glyphname = "tsa-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1029;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 1338;
},
{
glyphname = "tsu-ethiopic";
lastChange = "2020-11-28 03:32:14 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1075, 172}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1247;
}
);
leftMetricsKey = s;
unicode = 1339;
},
{
glyphname = "tsi-ethiopic";
lastChange = "2020-11-28 03:32:22 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1049, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1258;
}
);
leftMetricsKey = s;
unicode = 133A;
},
{
glyphname = "tsaa-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1061, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1029;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 133B;
},
{
glyphname = "tsee-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1149, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1231;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 133C;
},
{
glyphname = "tse-ethiopic";
lastChange = "2020-11-28 03:32:32 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 769, -560}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1190;
}
);
leftMetricsKey = s;
unicode = 133D;
},
{
glyphname = "tso-ethiopic";
lastChange = "2020-11-28 03:31:59 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = ho0.accent;
transform = "{1, 0, 0, 1, -44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1029;
}
);
leftMetricsKey = s;
rightMetricsKey = s;
unicode = 133E;
},
{
glyphname = "tswa-ethiopic";
lastChange = "2020-11-28 03:32:44 +0000";
layers = (
{
components = (
{
name = tsa.base;
transform = "{1, 0, 0, 1, -106, 0}";
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1062, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1100;
}
);
leftMetricsKey = s;
unicode = 133F;
},
{
glyphname = "tza-ethiopic";
lastChange = "2020-11-28 03:32:54 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1340;
},
{
glyphname = "tzu-ethiopic";
lastChange = "2020-11-28 03:33:08 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1168, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1340;
}
);
leftMetricsKey = o;
unicode = 1341;
},
{
glyphname = "tzi-ethiopic";
lastChange = "2020-11-28 03:32:54 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 752, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1250;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1342;
},
{
glyphname = "tzaa-ethiopic";
lastChange = "2020-11-28 03:32:54 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 808, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1343;
},
{
glyphname = "tzee-ethiopic";
lastChange = "2020-11-28 03:32:54 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
},
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 934, -33}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1344;
},
{
glyphname = "tze-ethiopic";
lastChange = "2020-11-28 03:32:54 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
},
{
name = he0.accent;
transform = "{1, 0, 0, 1, 299, 1122}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1345;
},
{
glyphname = "tzo-ethiopic";
lastChange = "2020-11-28 03:32:54 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
},
{
name = ho0.accent;
transform = "{0.71934, -0.69466, 0.69466, 0.71934, 421, 125}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1346;
},
{
glyphname = "tzoa-ethiopic";
lastChange = "2020-11-28 03:32:54 +0000";
layers = (
{
components = (
{
name = oo.base;
},
{
name = belt.part;
},
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 788, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftMetricsKey = o;
rightMetricsKey = o;
unicode = 1347;
},
{
glyphname = "fa-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 44, 0}";
},
{
name = fa.part;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1065;
}
);
leftMetricsKey = u;
unicode = 1348;
},
{
glyphname = "fu-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 44, 0}";
},
{
name = fa.part;
transform = "{1, 0, 0, 1, 44, 0}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 609, 30}";
},
{
name = bar.mulat;
transform = "{0, -1, 1, 0, 629, 1187}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1065;
}
);
leftMetricsKey = u;
unicode = 1349;
},
{
glyphname = "fi-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 44, 0}";
},
{
name = fa.part;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"740 287 LINE",
"996 287 LINE",
"996 457 LINE",
"740 457 LINE"
);
}
);
width = 1065;
}
);
leftMetricsKey = u;
unicode = 134A;
},
{
glyphname = "faa-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 44, 0}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 801, 0}";
},
{
name = fa.part;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1065;
}
);
leftMetricsKey = u;
unicode = 134B;
},
{
glyphname = "fee-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = ra.base;
transform = "{1, 0, 0, 1, 44, 0}";
},
{
name = fa.part;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1001 635 OFFCURVE",
"812 680 OFFCURVE",
"723 551 CURVE SMOOTH",
"667 470 OFFCURVE",
"743 222 OFFCURVE",
"875 222 CURVE SMOOTH",
"993 222 OFFCURVE",
"1016 266 OFFCURVE",
"1008 460 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"933 546 OFFCURVE",
"978 482 OFFCURVE",
"978 417 CURVE SMOOTH",
"978 299 OFFCURVE",
"798 256 OFFCURVE",
"787 400 CURVE SMOOTH",
"782 463 OFFCURVE",
"791 532 OFFCURVE",
"851 538 CURVE SMOOTH"
);
}
);
width = 1076;
}
);
leftMetricsKey = u;
unicode = 134C;
},
{
glyphname = "fe-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = fa.part;
transform = "{1.0798, 0, 0, 1, 49, 0}";
},
{
name = na.base;
transform = "{1, 0, 0, 1, 54, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1024;
}
);
leftMetricsKey = u;
unicode = 134D;
},
{
glyphname = "fo-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = "ro-ethiopic";
transform = "{1, 0, 0, 1, -3, 0}";
},
{
name = fa.part;
transform = "{1, 0, 0, 1, 17, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1173;
}
);
leftMetricsKey = u;
unicode = 134E;
},
{
glyphname = "fwa-ethiopic";
lastChange = "2020-11-28 03:33:39 +0000";
layers = (
{
components = (
{
name = "fe-ethiopic";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 600, 30}";
},
{
name = leg.part;
transform = "{0, 0.5365, 1, 0, 814, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1024;
}
);
leftMetricsKey = u;
unicode = 134F;
},
{
glyphname = "pa-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1350;
},
{
glyphname = "pu-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 598, 541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 669;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1351;
},
{
glyphname = "pi-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 225, -22}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 702;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1352;
},
{
glyphname = "paa-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 82, 0}";
},
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 794;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1353;
},
{
glyphname = "pee-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 638, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1354;
},
{
glyphname = "pe-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -48, 0}";
},
{
name = acute;
transform = "{0.86603, 0.5, -0.6901, 1.19529, 1109, -1976}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 664;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1355;
},
{
glyphname = "po-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"194 0 LINE",
"464 556 LINE",
"464 939 LINE",
"666 939 LINE",
"666 1082 LINE",
"464 1082 LINE",
"279 1082 LINE",
"82 1082 LINE",
"82 939 LINE",
"279 939 LINE",
"279 597 LINE",
"9 0 LINE"
);
}
);
width = 737;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1356;
},
{
glyphname = "pwa-ethiopic";
lastChange = "2020-11-28 03:33:51 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, -26, 0}";
},
{
name = hwa2.accent;
transform = "{1, 0, 0, 1, 357, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"410 -289 LINE",
"532 -289 LINE",
"546 3 LINE",
"402 3 LINE"
);
}
);
width = 686;
}
);
leftMetricsKey = t;
rightMetricsKey = t;
unicode = 1357;
},
{
glyphname = "ha-ethiopic.etcp";
lastChange = "2020-11-27 21:06:49 +0000";
layers = (
{
components = (
{
name = U;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "hu-ethiopic.etcp";
lastChange = "2020-11-27 21:07:57 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1318, 881}";
},
{
name = "ha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1485;
}
);
},
{
glyphname = "hi-ethiopic.etcp";
lastChange = "2020-11-27 21:08:45 +0000";
layers = (
{
components = (
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 942, -487}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 995, 0}";
},
{
name = "ha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "haa-ethiopic.etcp";
lastChange = "2020-11-27 21:09:05 +0000";
layers = (
{
components = (
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1093, 0}";
},
{
name = "ha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "hee-ethiopic.etcp";
lastChange = "2020-11-27 21:09:22 +0000";
layers = (
{
components = (
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1067, -40}";
},
{
name = "ha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "he-ethiopic.etcp";
lastChange = "2020-11-27 21:10:03 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 455, 879}";
},
{
name = "ha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "ho-ethiopic.etcp";
lastChange = "2020-11-27 21:10:57 +0000";
layers = (
{
components = (
{
name = "ha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1121 1349 OFFCURVE",
"1020 1453 OFFCURVE",
"885 1453 CURVE SMOOTH",
"817 1453 OFFCURVE",
"761 1431 OFFCURVE",
"716 1386 CURVE SMOOTH",
"626 1296 OFFCURVE",
"626 1150 OFFCURVE",
"716 1064 CURVE SMOOTH",
"761 1021 OFFCURVE",
"817 999 OFFCURVE",
"885 999 CURVE SMOOTH",
"1018 999 OFFCURVE",
"1121 1096 OFFCURVE",
"1121 1224 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"765 1291 OFFCURVE",
"818 1347 OFFCURVE",
"887 1347 CURVE SMOOTH",
"1048 1347 OFFCURVE",
"1044 1104 OFFCURVE",
"887 1104 CURVE SMOOTH",
"819 1104 OFFCURVE",
"765 1159 OFFCURVE",
"765 1224 CURVE SMOOTH"
);
}
);
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "hoa-ethiopic.etcp";
lastChange = "2020-11-27 21:11:50 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 165, 880}";
},
{
name = "ha-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1221 1354 OFFCURVE",
"1120 1458 OFFCURVE",
"985 1458 CURVE SMOOTH",
"917 1458 OFFCURVE",
"861 1436 OFFCURVE",
"816 1391 CURVE SMOOTH",
"726 1301 OFFCURVE",
"726 1155 OFFCURVE",
"816 1069 CURVE SMOOTH",
"861 1026 OFFCURVE",
"917 1004 OFFCURVE",
"985 1004 CURVE SMOOTH",
"1118 1004 OFFCURVE",
"1221 1101 OFFCURVE",
"1221 1229 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"865 1296 OFFCURVE",
"918 1352 OFFCURVE",
"987 1352 CURVE SMOOTH",
"1148 1352 OFFCURVE",
"1144 1109 OFFCURVE",
"987 1109 CURVE SMOOTH",
"919 1109 OFFCURVE",
"865 1164 OFFCURVE",
"865 1229 CURVE SMOOTH"
);
}
);
width = 1432;
}
);
rightMetricsKey = U;
},
{
glyphname = "la-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{-0.9703, 0.24192, 0.24192, 0.9703, 604, -79}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"651 1041 LINE",
"1067 0 LINE",
"1277 0 LINE",
"737 1296 LINE",
"567 1296 LINE",
"28 0 LINE",
"237 0 LINE",
"651 1041 LINE"
);
}
);
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "lu-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1023, 861}";
},
{
name = "la-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "li-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1318, 30}";
},
{
name = "la-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1509;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "laa-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1389, 0}";
},
{
name = "la-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "lee-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = hee0.accent;
transform = "{1.1, 0, 0, 1.1, 707, 459}";
},
{
name = "la-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "le-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, 605, -1211}";
},
{
name = "la-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "lo-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, 657, -434}";
},
{
name = "la-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "lwa-ethiopic.etcp";
lastChange = "2020-11-28 01:31:02 +0000";
layers = (
{
components = (
{
name = "laa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"830 -314 LINE",
"830 -404 LINE",
"1329 -404 LINE",
"1329 -294 LINE"
);
}
);
width = 1356;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "hha-ethiopic.etcp";
lastChange = "2020-11-28 00:56:16 +0000";
layers = (
{
components = (
{
name = M;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"806 678 LINE",
"975 678 LINE",
"973 1572 LINE",
"809 1572 LINE"
);
}
);
width = 1788;
}
);
leftMetricsKey = M;
rightMetricsKey = M;
},
{
glyphname = "hhu-ethiopic.etcp";
lastChange = "2020-11-28 00:56:16 +0000";
layers = (
{
components = (
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1896, 908}";
},
{
name = "hha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1898;
}
);
},
{
glyphname = "hhi-ethiopic.etcp";
lastChange = "2020-11-28 00:56:16 +0000";
layers = (
{
components = (
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1856, 0}";
},
{
name = "hha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1886;
}
);
},
{
glyphname = "hhaa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:16 +0000";
layers = (
{
components = (
{
name = ha1.accent;
transform = "{1, 0, 0, 1, 1846, 0}";
},
{
name = "hha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "hhee-ethiopic.etcp";
lastChange = "2020-11-28 00:56:16 +0000";
layers = (
{
components = (
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1836, 0}";
},
{
name = "hha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1777;
}
);
},
{
glyphname = "hhe-ethiopic.etcp";
lastChange = "2020-11-28 00:56:17 +0000";
layers = (
{
components = (
{
name = he1.accent;
transform = "{0.80902, 0.58779, -0.58779, 0.80902, 510, 1294}";
},
{
name = "hha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "hho-ethiopic.etcp";
lastChange = "2020-11-28 00:56:17 +0000";
layers = (
{
components = (
{
name = ho1.accent;
transform = "{1, 0, 0, 1, 120, 0}";
},
{
name = "hha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "hhwa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:17 +0000";
layers = (
{
components = (
{
name = hwa1.accent;
transform = "{1, 0, 0, 1, 1843, 160}";
},
{
name = "hha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1927;
}
);
},
{
glyphname = "ma-ethiopic.etcp";
lastChange = "2020-11-28 00:56:17 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1011 1456 LINE",
"889 1082 LINE",
"767 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"617 0 LINE",
"893 939 LINE",
"1200 0 LINE",
"1618 0 LINE",
"1618 1456 LINE",
"1613 1456 LINE"
);
},
{
closed = 1;
nodes = (
"361 962 LINE",
"361 1313 LINE",
"660 1313 LINE",
"761 962 LINE",
"516 160 LINE",
"361 160 LINE"
);
},
{
closed = 1;
nodes = (
"1125 1331 LINE",
"1426 1331 LINE",
"1426 962 LINE",
"1426 769 LINE",
"1444 157 LINE",
"1306 157 LINE",
"1024 962 LINE"
);
}
);
width = 1802;
}
);
},
{
glyphname = "mu-ethiopic.etcp";
lastChange = "2020-11-28 00:56:17 +0000";
layers = (
{
components = (
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1890, 915}";
},
{
name = "ma-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1892;
}
);
},
{
glyphname = "mi-ethiopic.etcp";
lastChange = "2020-11-28 00:56:18 +0000";
layers = (
{
components = (
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1838, -508}";
},
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1758, 0}";
},
{
name = "ma-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1868;
}
);
},
{
glyphname = "maa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:18 +0000";
layers = (
{
components = (
{
name = ha1.accent;
transform = "{1, 0, 0, 1.763, 1851, -11}";
},
{
name = "ma-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1800;
}
);
},
{
glyphname = "mee-ethiopic.etcp";
lastChange = "2020-11-28 00:56:18 +0000";
layers = (
{
components = (
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1880, 0}";
},
{
name = "ma-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1801;
}
);
},
{
glyphname = "me-ethiopic.etcp";
lastChange = "2020-11-28 00:56:18 +0000";
layers = (
{
components = (
{
name = he1.accent;
transform = "{0.70711, -0.70711, 0.8498, 0.8498, 541, 48}";
},
{
name = "ma-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1800;
}
);
},
{
glyphname = "mo-ethiopic.etcp";
lastChange = "2020-11-28 00:56:18 +0000";
layers = (
{
components = (
{
name = ho1.accent;
transform = "{1, 0, 0, 1.2064, 412, 59}";
},
{
name = "ma-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1800;
}
);
},
{
glyphname = "mwa-ethiopic.etcp";
lastChange = "2020-11-28 01:31:51 +0000";
layers = (
{
components = (
{
name = hwa1.accent;
transform = "{1, 0, 0, 1.1997, 1849, 253}";
},
{
name = "ma-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1830;
}
);
},
{
glyphname = "sza-ethiopic.etcp";
lastChange = "2020-11-28 00:56:19 +0000";
layers = (
{
components = (
{
name = W;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1817;
}
);
leftMetricsKey = W;
rightMetricsKey = W;
},
{
glyphname = "szu-ethiopic.etcp";
lastChange = "2020-11-28 00:56:19 +0000";
layers = (
{
components = (
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1922, 911}";
},
{
name = "sza-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1984;
}
);
leftMetricsKey = W;
},
{
glyphname = "szi-ethiopic.etcp";
lastChange = "2020-11-28 00:56:19 +0000";
layers = (
{
components = (
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1717, -463}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 1425, 13}";
},
{
name = "sza-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1912;
}
);
leftMetricsKey = W;
},
{
glyphname = "szaa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:19 +0000";
layers = (
{
components = (
{
name = ha1.accent;
transform = "{1, 0, 0, 1.5647, 1660, 125}";
},
{
name = "sza-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1792;
}
);
leftMetricsKey = W;
},
{
glyphname = "szee-ethiopic.etcp";
lastChange = "2020-11-28 00:56:20 +0000";
layers = (
{
components = (
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1569, 0}";
},
{
name = "sza-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1817;
}
);
leftMetricsKey = W;
rightMetricsKey = W;
},
{
glyphname = "sze-ethiopic.etcp";
lastChange = "2020-11-28 00:56:20 +0000";
layers = (
{
components = (
{
name = ho0.accent;
transform = "{1, 0, 0, 1, 260, 0}";
},
{
name = "sza-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1772;
}
);
leftMetricsKey = W;
},
{
glyphname = "szo-ethiopic.etcp";
lastChange = "2020-11-28 00:56:20 +0000";
layers = (
{
components = (
{
name = "sza-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"631 -385 LINE",
"780 -385 LINE",
"800 336 LINE",
"614 336 LINE"
);
}
);
width = 1787;
}
);
leftMetricsKey = W;
},
{
glyphname = "szwa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:20 +0000";
layers = (
{
components = (
{
name = leg.part;
transform = "{1, 0, 0, 1, 1360, 100}";
},
{
name = leg.part;
transform = "{0, 0.6763, 1, 0, 1564, -316}";
},
{
name = "sza-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1883;
}
);
leftMetricsKey = W;
},
{
glyphname = "ra-ethiopic.etcp";
lastChange = "2020-11-28 00:56:20 +0000";
layers = (
{
components = (
{
name = L;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1102;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
},
{
glyphname = "ru-ethiopic.etcp";
lastChange = "2020-11-28 00:56:21 +0000";
layers = (
{
components = (
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 826, -95}";
},
{
name = L;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1070;
}
);
},
{
glyphname = "ri-ethiopic.etcp";
lastChange = "2020-11-28 00:56:21 +0000";
layers = (
{
components = (
{
name = L;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1049 597 LINE",
"703 593 LINE",
"703 463 LINE",
"1049 467 LINE"
);
},
{
closed = 1;
nodes = (
"912 125 LINE",
"1050 129 LINE",
"1050 594 LINE",
"912 590 LINE"
);
}
);
width = 1102;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
},
{
glyphname = "raa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:21 +0000";
layers = (
{
components = (
{
name = L;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1052 156 LINE",
"942 486 LINE",
"1043 486 LINE",
"1043 659 LINE",
"974 659 LINE SMOOTH",
"856 659 OFFCURVE",
"730 568 OFFCURVE",
"770 455 CURVE SMOOTH",
"876 156 LINE"
);
}
);
width = 1032;
}
);
},
{
glyphname = "ree-ethiopic.etcp";
lastChange = "2020-11-28 00:56:21 +0000";
layers = (
{
components = (
{
name = L;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1089 443 OFFCURVE",
"998 535 OFFCURVE",
"875 535 CURVE SMOOTH",
"814 535 OFFCURVE",
"762 515 OFFCURVE",
"722 475 CURVE SMOOTH",
"640 393 OFFCURVE",
"639 262 OFFCURVE",
"722 183 CURVE SMOOTH",
"763 144 OFFCURVE",
"814 125 OFFCURVE",
"875 125 CURVE SMOOTH",
"995 125 OFFCURVE",
"1089 213 OFFCURVE",
"1089 328 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"759 390 OFFCURVE",
"806 442 OFFCURVE",
"872 442 CURVE SMOOTH",
"1023 442 OFFCURVE",
"1019 217 OFFCURVE",
"872 217 CURVE SMOOTH",
"809 217 OFFCURVE",
"759 267 OFFCURVE",
"759 327 CURVE SMOOTH"
);
}
);
width = 1085;
}
);
},
{
glyphname = "re-ethiopic.etcp";
lastChange = "2020-11-28 00:56:21 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"712 137 LINE",
"704 137 OFFCURVE",
"696 137 OFFCURVE",
"688 137 CURVE SMOOTH",
"451 137 OFFCURVE",
"312 338 OFFCURVE",
"312 654 CURVE SMOOTH",
"312 795 LINE SMOOTH",
"312 1123 OFFCURVE",
"454 1311 OFFCURVE",
"691 1318 CURVE",
"688 1476 LINE",
"463 1470 OFFCURVE",
"286 1357 OFFCURVE",
"192 1157 CURVE SMOOTH",
"143 1054 OFFCURVE",
"119 935 OFFCURVE",
"119 800 CURVE SMOOTH",
"119 660 LINE SMOOTH",
"119 247 OFFCURVE",
"344 -20 OFFCURVE",
"688 -20 CURVE SMOOTH",
"697 -20 OFFCURVE",
"706 -20 OFFCURVE",
"715 -20 CURVE"
);
},
{
closed = 1;
nodes = (
"1074 1319 LINE",
"1074 1477 LINE",
"688 1477 LINE",
"688 1319 LINE"
);
},
{
closed = 1;
nodes = (
"1074 -22 LINE",
"1074 136 LINE",
"688 136 LINE",
"688 -22 LINE"
);
}
);
width = 1133;
}
);
leftMetricsKey = C;
},
{
glyphname = "ro-ethiopic.etcp";
lastChange = "2020-11-28 00:56:22 +0000";
layers = (
{
components = (
{
name = "re-ethiopic.etcp";
},
{
name = ring;
transform = "{1, 0, 0, 1, 592, -130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1133;
}
);
},
{
glyphname = "rwa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:22 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"80 1458 LINE",
"80 1358 LINE",
"552 1358 LINE",
"552 1458 LINE"
);
}
);
width = 1149;
}
);
},
{
glyphname = "sa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:22 +0000";
layers = (
{
components = (
{
name = neck.part;
transform = "{1, 0, 0, 1, 690, 1192}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1194 0 LINE",
"1194 790 LINE SMOOTH",
"1194 996 OFFCURVE",
"936 1265 OFFCURVE",
"716 1274 QCURVE SMOOTH",
"665 1276 LINE SMOOTH",
"426 1285 OFFCURVE",
"140 1018 OFFCURVE",
"140 792 QCURVE SMOOTH",
"140 0 LINE",
"330 0 LINE",
"330 786 LINE SMOOTH",
"330 944 OFFCURVE",
"504 1119 OFFCURVE",
"665 1119 QCURVE SMOOTH",
"828 1119 OFFCURVE",
"1001 945 OFFCURVE",
"1001 787 QCURVE SMOOTH",
"1001 0 LINE",
"1194 0 LINE"
);
}
);
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "su-ethiopic.etcp";
lastChange = "2020-11-28 01:33:17 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1240, 881}";
},
{
name = "sa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1404;
}
);
},
{
glyphname = "si-ethiopic.etcp";
lastChange = "2020-11-28 01:33:24 +0000";
layers = (
{
components = (
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1262, 0}";
},
{
name = "sa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1512;
}
);
},
{
glyphname = "saa-ethiopic.etcp";
lastChange = "2020-11-28 01:33:32 +0000";
layers = (
{
components = (
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1329, 0}";
},
{
name = "sa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "see-ethiopic.etcp";
lastChange = "2020-11-28 01:33:44 +0000";
layers = (
{
components = (
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1120, 440}";
},
{
name = "sa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "se-ethiopic.etcp";
lastChange = "2020-11-28 01:34:11 +0000";
layers = (
{
components = (
{
name = neck.part;
transform = "{0.76604, 0.64279, -0.64279, 0.76604, 727, 1254}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1194 0 LINE",
"1194 790 LINE SMOOTH",
"1194 996 OFFCURVE",
"936 1265 OFFCURVE",
"716 1274 QCURVE SMOOTH",
"665 1276 LINE SMOOTH",
"426 1285 OFFCURVE",
"140 1018 OFFCURVE",
"140 792 QCURVE SMOOTH",
"140 0 LINE",
"330 0 LINE",
"330 786 LINE SMOOTH",
"330 944 OFFCURVE",
"504 1119 OFFCURVE",
"665 1119 QCURVE SMOOTH",
"828 1119 OFFCURVE",
"1001 945 OFFCURVE",
"1001 787 QCURVE SMOOTH",
"1001 0 LINE",
"1194 0 LINE"
);
}
);
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "so-ethiopic.etcp";
lastChange = "2020-11-28 01:34:18 +0000";
layers = (
{
components = (
{
name = ho0.accent;
},
{
name = "sa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "swa-ethiopic.etcp";
lastChange = "2020-11-28 01:34:33 +0000";
layers = (
{
components = (
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1332, 0}";
},
{
name = "sa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1373;
}
);
},
{
glyphname = "sha-ethiopic.etcp";
lastChange = "2020-11-28 00:56:24 +0000";
layers = (
{
components = (
{
name = "sa-ethiopic.etcp";
},
{
name = _sha.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "shu-ethiopic.etcp";
lastChange = "2020-11-28 01:35:10 +0000";
layers = (
{
components = (
{
name = "su-ethiopic.etcp";
},
{
name = _sha.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1432;
}
);
},
{
glyphname = "shi-ethiopic.etcp";
lastChange = "2020-11-28 01:35:33 +0000";
layers = (
{
components = (
{
name = "si-ethiopic.etcp";
},
{
name = _sha.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1512;
}
);
},
{
glyphname = "shaa-ethiopic.etcp";
lastChange = "2020-11-28 01:35:40 +0000";
layers = (
{
components = (
{
name = "saa-ethiopic.etcp";
},
{
name = _sha.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "shee-ethiopic.etcp";
lastChange = "2020-11-28 01:35:45 +0000";
layers = (
{
components = (
{
name = "see-ethiopic.etcp";
},
{
name = _sha.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "she-ethiopic.etcp";
lastChange = "2020-11-28 01:35:50 +0000";
layers = (
{
components = (
{
name = "se-ethiopic.etcp";
},
{
name = _sha.caps;
transform = "{1, 0, 0, 1, -23, -14}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "sho-ethiopic.etcp";
lastChange = "2020-11-28 01:35:56 +0000";
layers = (
{
components = (
{
name = "so-ethiopic.etcp";
},
{
name = _sha.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "shwa-ethiopic.etcp";
lastChange = "2020-11-28 01:36:02 +0000";
layers = (
{
components = (
{
name = "swa-ethiopic.etcp";
},
{
name = _sha.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1405;
}
);
leftMetricsKey = U;
},
{
glyphname = "qa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:25 +0000";
layers = (
{
components = (
{
name = "wa-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 931, -350}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
rightMetricsKey = O;
},
{
glyphname = "qu-ethiopic.etcp";
lastChange = "2020-11-28 00:56:26 +0000";
layers = (
{
components = (
{
name = "wu-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = _qa.neck;
transform = "{1, 0, 0, 1, 0, -1670}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1829;
}
);
},
{
glyphname = "qi-ethiopic.etcp";
lastChange = "2020-11-28 00:56:26 +0000";
layers = (
{
components = (
{
name = "wi-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qaa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:26 +0000";
layers = (
{
components = (
{
name = "waa-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qee-ethiopic.etcp";
lastChange = "2020-11-28 00:56:26 +0000";
layers = (
{
components = (
{
name = "wee-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qe-ethiopic.etcp";
lastChange = "2020-11-28 00:56:26 +0000";
layers = (
{
components = (
{
name = "wo-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"891 1313 LINE",
"1021 1422 LINE",
"785 1699 LINE",
"660 1594 LINE"
);
}
);
width = 1603;
}
);
},
{
glyphname = "qo-ethiopic.etcp";
lastChange = "2020-11-28 00:56:27 +0000";
layers = (
{
components = (
{
name = "wo-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1134 1505 LINE",
"1134 1620 OFFCURVE",
"1042 1713 OFFCURVE",
"919 1713 CURVE SMOOTH",
"858 1713 OFFCURVE",
"807 1693 OFFCURVE",
"766 1652 CURVE SMOOTH",
"684 1571 OFFCURVE",
"684 1439 OFFCURVE",
"766 1360 CURVE SMOOTH",
"807 1321 OFFCURVE",
"858 1301 OFFCURVE",
"919 1301 CURVE SMOOTH",
"1040 1301 OFFCURVE",
"1134 1389 OFFCURVE",
"1134 1505 CURVE",
"1134 1505 LINE"
);
},
{
closed = 1;
nodes = (
"803 1505 LINE",
"803 1569 OFFCURVE",
"852 1623 OFFCURVE",
"919 1623 CURVE SMOOTH",
"1074 1623 OFFCURVE",
"1070 1390 OFFCURVE",
"919 1390 CURVE SMOOTH",
"854 1390 OFFCURVE",
"803 1442 OFFCURVE",
"803 1505 CURVE",
"803 1505 LINE"
);
}
);
width = 1603;
}
);
},
{
glyphname = "qwaa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:27 +0000";
layers = (
{
components = (
{
name = "woa-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
},
{
glyphname = "qha-ethiopic.etcp";
lastChange = "2020-11-28 00:56:27 +0000";
layers = (
{
components = (
{
name = "wo-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = _qha.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
},
{
glyphname = "qhu-ethiopic.etcp";
lastChange = "2020-11-28 00:56:27 +0000";
layers = (
{
components = (
{
name = "wu-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = neck.part;
transform = "{1, 0, 0, 1, 949, -354}";
},
{
name = _qha.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1805;
}
);
},
{
glyphname = "qhi-ethiopic.etcp";
lastChange = "2020-11-28 00:56:27 +0000";
layers = (
{
components = (
{
name = "wi-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = _qha.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qhaa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:28 +0000";
layers = (
{
components = (
{
name = "waa-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = _qha.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qhee-ethiopic.etcp";
lastChange = "2020-11-28 00:56:28 +0000";
layers = (
{
components = (
{
name = "wee-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = _qha.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qhe-ethiopic.etcp";
lastChange = "2020-11-28 01:36:36 +0000";
layers = (
{
components = (
{
name = "qe-ethiopic.etcp";
},
{
name = _qha.neck;
transform = "{1, 0, 0, 1, -140, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qho-ethiopic.etcp";
lastChange = "2020-11-28 00:56:28 +0000";
layers = (
{
components = (
{
name = "qo-ethiopic.etcp";
},
{
name = _qha.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1603;
}
);
},
{
glyphname = "qhwaa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:28 +0000";
layers = (
{
components = (
{
name = "qwaa-ethiopic.etcp";
},
{
name = _qa.neck;
},
{
name = _qha.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
},
{
glyphname = "ba-ethiopic.etcp";
lastChange = "2020-11-28 00:56:29 +0000";
layers = (
{
components = (
{
name = U;
transform = "{1, 0, 0, -1, 0, 1456}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "bu-ethiopic.etcp";
lastChange = "2020-11-28 01:37:09 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1289, 890}";
},
{
name = "ba-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1502;
}
);
},
{
glyphname = "bi-ethiopic.etcp";
lastChange = "2020-11-28 01:37:13 +0000";
layers = (
{
components = (
{
name = hi0.accent;
transform = "{1, 0, 0, 1, 1270, 30}";
},
{
name = "ba-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1528;
}
);
},
{
glyphname = "baa-ethiopic.etcp";
lastChange = "2020-11-28 01:37:20 +0000";
layers = (
{
components = (
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1323, 0}";
},
{
name = "ba-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
rightMetricsKey = U;
},
{
glyphname = "bee-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1120, 440}";
},
{
name = "ba-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "be-ethiopic.etcp";
lastChange = "2020-11-28 01:38:32 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 165, 878}";
},
{
name = "ba-ethiopic.etcp";
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1443;
}
);
rightMetricsKey = U;
},
{
glyphname = "bo-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = ho0.accent;
},
{
name = "ba-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "bwa-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = hwa0.accent;
transform = "{1, 0, 0, 1, 1329, 0}";
},
{
name = "ba-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "va-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic.etcp";
},
{
name = _va.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "vu-ethiopic.etcp";
lastChange = "2020-11-28 01:38:47 +0000";
layers = (
{
components = (
{
name = "bu-ethiopic.etcp";
},
{
name = _va.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1472;
}
);
leftMetricsKey = U;
},
{
glyphname = "vi-ethiopic.etcp";
lastChange = "2020-11-28 01:38:52 +0000";
layers = (
{
components = (
{
name = "bi-ethiopic.etcp";
},
{
name = _va.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1490;
}
);
leftMetricsKey = U;
},
{
glyphname = "vaa-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic.etcp";
},
{
name = _va.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "vee-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = "bee-ethiopic.etcp";
},
{
name = _va.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ve-ethiopic.etcp";
lastChange = "2020-11-28 01:38:10 +0000";
layers = (
{
components = (
{
name = "be-ethiopic.etcp";
transform = "{1, 0, 0, 1, -100, 0}";
},
{
name = _va.hat;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1443;
}
);
rightMetricsKey = U;
},
{
glyphname = "vo-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = "bo-ethiopic.etcp";
},
{
name = _va.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "vwa-ethiopic.etcp";
lastChange = "2020-11-28 01:37:30 +0000";
layers = (
{
components = (
{
name = "bwa-ethiopic.etcp";
},
{
name = _va.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ta-ethiopic.etcp";
lastChange = "2020-11-28 00:56:32 +0000";
layers = (
{
components = (
{
name = neck.part;
transform = "{1, 0, 0, 1, 636, 1321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1175 1326 LINE",
"49 1326 LINE",
"49 1168 LINE",
"516 1168 LINE",
"516 12 LINE",
"707 12 LINE",
"707 1168 LINE",
"1175 1168 LINE"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "tu-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 931, 991}";
},
{
name = "ta-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ti-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 528, 0}";
},
{
name = "ta-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "taa-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 506, 387}";
},
{
name = "ta-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "tee-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1159, 459}";
},
{
name = "ta-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "te-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = neck.part;
transform = "{0.64279, 0.76605, -0.76605, 0.64279, 592, 1443}";
},
{
name = "ta-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "to-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = ho2.accent;
transform = "{1, 0, 0, 1, 812, 1701}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1175 1326 LINE",
"49 1326 LINE",
"49 1168 LINE",
"516 1168 LINE",
"516 12 LINE",
"707 12 LINE",
"707 1168 LINE",
"1175 1168 LINE"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "twa-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = hwa2.accent;
transform = "{1, 0, 0, 1, 642, 0}";
},
{
name = "ta-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ca-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "ta-ethiopic.etcp";
},
{
name = _qha.neck.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "cu-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "tu-ethiopic.etcp";
},
{
name = _qha.neck.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ci-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "ti-ethiopic.etcp";
},
{
name = _qha.neck.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "caa-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "taa-ethiopic.etcp";
},
{
name = _qha.neck.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "cee-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "tee-ethiopic.etcp";
},
{
name = _qha.neck.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ce-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "te-ethiopic.etcp";
},
{
name = _qha.neck.001;
transform = "{1, 0, 0, 1, -12, 80}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "co-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "to-ethiopic.etcp";
},
{
name = _qha.neck.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "cwa-ethiopic.etcp";
lastChange = "2020-11-28 01:39:14 +0000";
layers = (
{
components = (
{
name = "twa-ethiopic.etcp";
},
{
name = _qha.neck.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "xa-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "na-ethiopic.etcp";
transform = "{1, 0, 0, 1, 215, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"55 1325 OFFCURVE",
"285 1324 OFFCURVE",
"285 1470 CURVE SMOOTH",
"285 1621 OFFCURVE",
"55 1621 OFFCURVE",
"55 1470 CURVE"
);
}
);
width = 1288;
}
);
},
{
glyphname = "xu-ethiopic.etcp";
lastChange = "2020-11-28 01:41:02 +0000";
layers = (
{
components = (
{
name = "nu-ethiopic.etcp";
transform = "{1, 0, 0, 1, 225, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"55 1335 OFFCURVE",
"285 1334 OFFCURVE",
"285 1480 CURVE SMOOTH",
"285 1631 OFFCURVE",
"55 1631 OFFCURVE",
"55 1480 CURVE"
);
}
);
width = 1468;
}
);
},
{
glyphname = "xi-ethiopic.etcp";
lastChange = "2020-11-28 01:41:07 +0000";
layers = (
{
components = (
{
name = "ni-ethiopic.etcp";
transform = "{1, 0, 0, 1, 225, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"55 1325 OFFCURVE",
"285 1324 OFFCURVE",
"285 1470 CURVE SMOOTH",
"285 1621 OFFCURVE",
"55 1621 OFFCURVE",
"55 1470 CURVE"
);
}
);
width = 1480;
}
);
},
{
glyphname = "xaa-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "na-ethiopic.etcp";
transform = "{1, 0, 0, 1, 241, 0}";
},
{
name = acute;
transform = "{0.9483, 0, 0, 0.98639, 668, -1515}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -69, 120}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1320;
}
);
},
{
glyphname = "xee-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "nee-ethiopic.etcp";
transform = "{1, 0, 0, 1, 225, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"55 1315 OFFCURVE",
"285 1314 OFFCURVE",
"285 1460 CURVE SMOOTH",
"285 1611 OFFCURVE",
"55 1611 OFFCURVE",
"55 1460 CURVE"
);
}
);
width = 1406;
}
);
},
{
glyphname = "xe-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "na-ethiopic.etcp";
transform = "{1, 0, 0, 1, 225, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"60 1156 LINE",
"175 1156 LINE",
"175 1482 LINE",
"60 1482 LINE"
);
},
{
closed = 1;
nodes = (
"55 1325 OFFCURVE",
"285 1324 OFFCURVE",
"285 1470 CURVE SMOOTH",
"285 1621 OFFCURVE",
"55 1621 OFFCURVE",
"55 1470 CURVE"
);
}
);
width = 1298;
}
);
},
{
glyphname = "xo-ethiopic.etcp";
lastChange = "2020-11-28 01:41:17 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 177, 532}";
},
{
name = "no-ethiopic.etcp";
transform = "{1, 0, 0, 1, 154, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1375;
}
);
},
{
glyphname = "xwaa-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "na-ethiopic.etcp";
transform = "{1, 0, 0, 1, 245, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1078 -394 LINE",
"1240 -394 LINE",
"1250 -100 LINE",
"1066 -100 LINE"
);
},
{
closed = 1;
nodes = (
"55 1325 OFFCURVE",
"285 1324 OFFCURVE",
"285 1470 CURVE SMOOTH",
"285 1621 OFFCURVE",
"55 1621 OFFCURVE",
"55 1470 CURVE"
);
},
{
closed = 1;
nodes = (
"1248 2 LINE",
"846 2 LINE",
"846 -100 LINE",
"1248 -100 LINE",
"1248 -100 LINE"
);
}
);
width = 1390;
}
);
},
{
glyphname = "na-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = shoulder.part;
transform = "{1, 0, 0, -1, 49, 1582}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"745 0 LINE",
"938 0 LINE",
"938 1352 LINE",
"55 1352 LINE",
"55 1195 LINE",
"745 1195 LINE",
"745 1195 LINE"
);
}
);
width = 1078;
}
);
},
{
glyphname = "nu-ethiopic.etcp";
lastChange = "2020-11-28 01:41:30 +0000";
layers = (
{
components = (
{
name = hu2.accent;
transform = "{1, 0, 0, 1, 1143, 991}";
},
{
name = "na-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1253;
}
);
},
{
glyphname = "ni-ethiopic.etcp";
lastChange = "2020-11-28 01:41:37 +0000";
layers = (
{
components = (
{
name = hi2.accent;
transform = "{1, 0, 0, 1, 749, 0}";
},
{
name = "na-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1225;
}
);
},
{
glyphname = "naa-ethiopic.etcp";
lastChange = "2020-11-28 01:41:46 +0000";
layers = (
{
components = (
{
name = "re-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"915 -381 LINE",
"1034 -381 LINE",
"1062 -97 LINE",
"898 -97 LINE"
);
}
);
width = 1142;
}
);
},
{
glyphname = "nee-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = hee0.accent;
transform = "{1, 0, 0, 1, 1060, 31}";
},
{
name = "na-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1181;
}
);
},
{
glyphname = "ne-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"817 778 LINE",
"928 1456 LINE",
"55 1456 LINE",
"55 1299 LINE",
"745 1299 LINE",
"745 1299 LINE",
"661 774 LINE"
);
},
{
closed = 1;
nodes = (
"756 904 LINE",
"766 0 LINE",
"959 0 LINE",
"959 907 LINE"
);
}
);
width = 1099;
}
);
},
{
glyphname = "no-ethiopic.etcp";
lastChange = "2020-11-28 01:41:56 +0000";
layers = (
{
components = (
{
name = "ro-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"904 -397 LINE",
"1023 -397 LINE",
"1051 -113 LINE",
"887 -113 LINE"
);
}
);
width = 1153;
}
);
},
{
glyphname = "nwa-ethiopic.etcp";
lastChange = "2020-11-28 01:42:01 +0000";
layers = (
{
components = (
{
name = "ro-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"715 -409 LINE",
"1116 -409 LINE",
"1116 -366 LINE",
"715 -366 LINE"
);
},
{
closed = 1;
nodes = (
"894 -397 LINE",
"1013 -397 LINE",
"1041 -113 LINE",
"877 -113 LINE"
);
}
);
width = 1203;
}
);
},
{
glyphname = "nya-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "na-ethiopic.etcp";
transform = "{1, 0, 0, 1, 148, 0}";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 148, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1221;
}
);
},
{
glyphname = "nyu-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "nu-ethiopic.etcp";
transform = "{1, 0, 0, 1, 148, 0}";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 148, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1431;
}
);
},
{
glyphname = "nyi-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ni-ethiopic.etcp";
transform = "{1, 0, 0, 1, 148, 0}";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 148, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1443;
}
);
},
{
glyphname = "nyaa-ethiopic.etcp";
lastChange = "2020-11-28 01:42:09 +0000";
layers = (
{
components = (
{
name = "naa-ethiopic.etcp";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 527, -51}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1126;
}
);
},
{
glyphname = "nyee-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "nee-ethiopic.etcp";
transform = "{1, 0, 0, 1, 148, 0}";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 148, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1329;
}
);
},
{
glyphname = "nye-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ne-ethiopic.etcp";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 229, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"419 1373 LINE",
"536 1373 LINE",
"536 1634 LINE",
"419 1634 LINE"
);
}
);
width = 1094;
}
);
},
{
glyphname = "nyo-ethiopic.etcp";
lastChange = "2020-11-28 01:42:19 +0000";
layers = (
{
components = (
{
name = "no-ethiopic.etcp";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 525, -44}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1119;
}
);
},
{
glyphname = "nywa-ethiopic.etcp";
lastChange = "2020-11-28 01:42:25 +0000";
layers = (
{
components = (
{
name = "nwa-ethiopic.etcp";
},
{
name = _NYA.HAT;
transform = "{1, 0, 0, 1, 532, -58}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1169;
}
);
},
{
glyphname = "aGlottal-ethiopic.etcp";
lastChange = "2020-11-28 02:53:27 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"155 1294 LINE",
"739 1294 LINE",
"737 1446 LINE",
"315 1446 LINE",
"315 1673 LINE",
"155 1673 LINE"
);
},
{
closed = 1;
nodes = (
"238 0 LINE",
"654 1041 LINE",
"1068 0 LINE",
"1277 0 LINE",
"738 1296 LINE",
"568 1296 LINE",
"28 0 LINE"
);
}
);
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "uGlottal-ethiopic.etcp";
lastChange = "2020-11-28 01:42:33 +0000";
layers = (
{
components = (
{
name = "aGlottal-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"884 789 OFFCURVE",
"1136 788 OFFCURVE",
"1136 949 CURVE SMOOTH",
"1136 1115 OFFCURVE",
"884 1115 OFFCURVE",
"884 949 CURVE"
);
}
);
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "iGlottal-ethiopic.etcp";
lastChange = "2020-11-28 01:42:33 +0000";
layers = (
{
components = (
{
name = "aGlottal-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1148 -46 OFFCURVE",
"1426 -47 OFFCURVE",
"1426 130 CURVE SMOOTH",
"1426 312 OFFCURVE",
"1148 312 OFFCURVE",
"1148 130 CURVE"
);
}
);
width = 1453;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "aaGlottal-ethiopic.etcp";
lastChange = "2020-11-28 01:42:33 +0000";
layers = (
{
components = (
{
name = "aGlottal-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1065 -378 LINE",
"1214 -378 LINE",
"1244 66 LINE",
"1058 66 LINE"
);
}
);
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "eeGlottal-ethiopic.etcp";
lastChange = "2020-11-28 01:42:33 +0000";
layers = (
{
components = (
{
name = "aGlottal-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1026 312 OFFCURVE",
"934 405 OFFCURVE",
"811 405 CURVE SMOOTH",
"750 405 OFFCURVE",
"698 385 OFFCURVE",
"657 344 CURVE SMOOTH",
"576 263 OFFCURVE",
"576 131 OFFCURVE",
"657 52 CURVE SMOOTH",
"698 12 OFFCURVE",
"750 -7 OFFCURVE",
"811 -7 CURVE SMOOTH",
"932 -7 OFFCURVE",
"1026 81 OFFCURVE",
"1026 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"702 257 OFFCURVE",
"748 308 OFFCURVE",
"811 308 CURVE SMOOTH",
"957 308 OFFCURVE",
"953 89 OFFCURVE",
"811 89 CURVE SMOOTH",
"750 89 OFFCURVE",
"702 138 OFFCURVE",
"702 197 CURVE SMOOTH"
);
}
);
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "eGlottal-ethiopic.etcp";
lastChange = "2020-11-28 02:54:30 +0000";
layers = (
{
components = (
{
name = "aGlottal-ethiopic.etcp";
transform = "{1, 0, 0, 1, 31, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"28 1511 LINE",
"188 1511 LINE",
"188 1739 LINE",
"28 1739 LINE"
);
}
);
width = 1335;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "oGlottal-ethiopic.etcp";
lastChange = "2020-11-28 01:42:33 +0000";
layers = (
{
components = (
{
name = "aGlottal-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"59 -372 LINE",
"208 -372 LINE",
"238 6 LINE",
"52 6 LINE"
);
}
);
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "waGlottal-ethiopic.etcp";
lastChange = "2020-11-28 02:54:51 +0000";
layers = (
{
components = (
{
name = "aGlottal-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"75 1679 LINE",
"75 1609 LINE",
"574 1609 LINE",
"574 1679 LINE"
);
}
);
width = 1304;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "ka-ethiopic.etcp";
lastChange = "2020-11-28 01:46:08 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic.etcp";
},
{
name = _ka.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ku-ethiopic.etcp";
lastChange = "2020-11-28 01:46:21 +0000";
layers = (
{
components = (
{
name = "bu-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"371 1732 LINE",
"175 1732 LINE",
"175 1443 LINE",
"176 1402 LINE",
"605 1412 LINE",
"605 1474 LINE",
"328 1474 LINE"
);
}
);
width = 1461;
}
);
leftMetricsKey = U;
},
{
glyphname = "ki-ethiopic.etcp";
lastChange = "2020-11-28 01:46:25 +0000";
layers = (
{
components = (
{
name = "bi-ethiopic.etcp";
},
{
name = _ka.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1479;
}
);
leftMetricsKey = U;
},
{
glyphname = "kaa-ethiopic.etcp";
lastChange = "2020-11-28 01:46:08 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic.etcp";
},
{
name = _ka.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kee-ethiopic.etcp";
lastChange = "2020-11-28 01:46:08 +0000";
layers = (
{
components = (
{
name = "bee-ethiopic.etcp";
},
{
name = _ka.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ke-ethiopic.etcp";
lastChange = "2020-11-28 00:56:43 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic.etcp";
},
{
name = _ka.hat;
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 429, 902}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ko-ethiopic.etcp";
lastChange = "2020-11-28 01:46:08 +0000";
layers = (
{
components = (
{
name = "bo-ethiopic.etcp";
},
{
name = _ka.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kwaa-ethiopic.etcp";
lastChange = "2020-11-28 01:46:08 +0000";
layers = (
{
components = (
{
name = "bwa-ethiopic.etcp";
},
{
name = _ka.hat;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kxa-ethiopic.etcp";
lastChange = "2020-11-28 01:46:11 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1432;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kxu-ethiopic.etcp";
lastChange = "2020-11-28 01:46:41 +0000";
layers = (
{
components = (
{
name = "bu-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1565;
}
);
leftMetricsKey = U;
},
{
glyphname = "kxi-ethiopic.etcp";
lastChange = "2020-11-28 01:46:48 +0000";
layers = (
{
components = (
{
name = "bi-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1594;
}
);
leftMetricsKey = U;
},
{
glyphname = "kxaa-ethiopic.etcp";
lastChange = "2020-11-28 01:46:11 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1432;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kxee-ethiopic.etcp";
lastChange = "2020-11-28 01:46:11 +0000";
layers = (
{
components = (
{
name = "bee-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1432;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kxe-ethiopic.etcp";
lastChange = "2020-11-28 01:46:11 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 535, 897}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1432;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kxo-ethiopic.etcp";
lastChange = "2020-11-28 01:46:11 +0000";
layers = (
{
components = (
{
name = "bo-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1432;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kxwaa-ethiopic.etcp";
lastChange = "2020-11-28 01:46:11 +0000";
layers = (
{
components = (
{
name = "bwa-ethiopic.etcp";
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _ka.hat;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = _va.hat.001;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1518;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "wa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:45 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1215 1470 OFFCURVE",
"1234 1435 OFFCURVE",
"760 1456 CURVE SMOOTH",
"507 1467 OFFCURVE",
"305 1340 OFFCURVE",
"199 1133 CURVE SMOOTH",
"146 1030 OFFCURVE",
"118 911 OFFCURVE",
"118 777 CURVE SMOOTH",
"118 684 LINE SMOOTH",
"118 409 OFFCURVE",
"228 196 OFFCURVE",
"425 85 CURVE SMOOTH",
"523 30 OFFCURVE",
"637 -1 OFFCURVE",
"768 0 CURVE SMOOTH",
"1171 3 LINE",
"1370 37 OFFCURVE",
"1524 152 OFFCURVE",
"1612 323 CURVE SMOOTH",
"1665 426 OFFCURVE",
"1691 547 OFFCURVE",
"1691 684 CURVE SMOOTH",
"1691 777 LINE SMOOTH",
"1691 1045 OFFCURVE",
"1580 1260 OFFCURVE",
"1385 1372 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"979 157 LINE",
"777 157 LINE SMOOTH",
"481 157 OFFCURVE",
"308 348 OFFCURVE",
"308 688 CURVE SMOOTH",
"308 773 LINE SMOOTH",
"308 1104 OFFCURVE",
"470 1298 OFFCURVE",
"755 1298 CURVE SMOOTH",
"979 1298 LINE",
"1171 1285 LINE",
"1383 1236 OFFCURVE",
"1501 1056 OFFCURVE",
"1501 773 CURVE SMOOTH",
"1501 688 LINE SMOOTH",
"1501 405 OFFCURVE",
"1381 226 OFFCURVE",
"1171 173 CURVE"
);
},
{
closed = 1;
nodes = (
"820 50 LINE",
"1006 50 LINE",
"1006 1447 LINE",
"820 1446 LINE"
);
}
);
width = 1810;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "wu-ethiopic.etcp";
lastChange = "2020-11-28 00:56:45 +0000";
layers = (
{
components = (
{
name = hu1.accent;
transform = "{1, 0, 0, 1, 1710, 32}";
},
{
name = "wa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
rightMetricsKey = O;
},
{
glyphname = "wi-ethiopic.etcp";
lastChange = "2020-11-28 00:56:45 +0000";
layers = (
{
components = (
{
name = hi1.accent;
transform = "{1, 0, 0, 1, 1204, -492}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 920, 0}";
},
{
name = "wa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
rightMetricsKey = O;
},
{
glyphname = "waa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:45 +0000";
layers = (
{
components = (
{
name = ha2.accent;
transform = "{1, 0, 0, 1, 678, 0}";
},
{
name = "wa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
rightMetricsKey = O;
},
{
glyphname = "wee-ethiopic.etcp";
lastChange = "2020-11-28 00:56:46 +0000";
layers = (
{
components = (
{
name = hee1.accent;
transform = "{1, 0, 0, 1, 1278, 21}";
},
{
name = "wa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
rightMetricsKey = O;
},
{
glyphname = "we-ethiopic.etcp";
lastChange = "2020-11-28 00:56:46 +0000";
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 1543, -756}";
},
{
name = "wa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1959;
}
);
},
{
glyphname = "wo-ethiopic.etcp";
lastChange = "2020-11-28 00:56:46 +0000";
layers = (
{
components = (
{
name = ha0.accent;
transform = "{1, 0, 0, 1, 1149, 26}";
},
{
name = "wa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
rightMetricsKey = O;
},
{
glyphname = "woa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:46 +0000";
layers = (
{
components = (
{
name = leg.part;
transform = "{0, 0.5489, 1, 0, 1154, -399}";
},
{
name = leg.part;
transform = "{1, 0, 0, 1, 930, 0}";
},
{
name = "wa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1810;
}
);
rightMetricsKey = O;
},
{
glyphname = "aPharyngeal-ethiopic.etcp";
lastChange = "2020-11-28 00:56:47 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
},
{
glyphname = "uPharyngeal-ethiopic.etcp";
lastChange = "2020-11-28 01:47:21 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1254 799 OFFCURVE",
"1506 798 OFFCURVE",
"1506 959 CURVE SMOOTH",
"1506 1125 OFFCURVE",
"1254 1125 OFFCURVE",
"1254 959 CURVE"
);
}
);
width = 1562;
}
);
},
{
glyphname = "iPharyngeal-ethiopic.etcp";
lastChange = "2020-11-28 01:47:31 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"831 -449 OFFCURVE",
"888 -511 OFFCURVE",
"1002 -511 OFFCURVE",
"1061 -449 OFFCURVE",
"1061 -403 QCURVE SMOOTH",
"1061 -355 OFFCURVE",
"1002 -291 OFFCURVE",
"888 -291 OFFCURVE",
"831 -355 OFFCURVE",
"831 -403 QCURVE"
);
},
{
closed = 1;
nodes = (
"667 -372 LINE",
"816 -372 LINE",
"846 6 LINE",
"660 6 LINE"
);
}
);
width = 1408;
}
);
rightMetricsKey = O;
},
{
glyphname = "aaPharyngeal-ethiopic.etcp";
lastChange = "2020-11-28 01:47:40 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"690 -385 LINE",
"839 -385 LINE",
"869 59 LINE",
"683 59 LINE"
);
}
);
width = 1408;
}
);
rightMetricsKey = O;
},
{
glyphname = "eePharyngeal-ethiopic.etcp";
lastChange = "2020-11-28 01:47:45 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"874 -189 OFFCURVE",
"782 -96 OFFCURVE",
"659 -96 CURVE SMOOTH",
"598 -96 OFFCURVE",
"546 -116 OFFCURVE",
"505 -157 CURVE SMOOTH",
"424 -238 OFFCURVE",
"424 -370 OFFCURVE",
"505 -449 CURVE SMOOTH",
"546 -489 OFFCURVE",
"598 -508 OFFCURVE",
"659 -508 CURVE SMOOTH",
"780 -508 OFFCURVE",
"874 -420 OFFCURVE",
"874 -304 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"550 -244 OFFCURVE",
"596 -193 OFFCURVE",
"659 -193 CURVE SMOOTH",
"805 -193 OFFCURVE",
"801 -412 OFFCURVE",
"659 -412 CURVE SMOOTH",
"598 -412 OFFCURVE",
"550 -363 OFFCURVE",
"550 -304 CURVE SMOOTH"
);
}
);
width = 1408;
}
);
rightMetricsKey = O;
},
{
glyphname = "ePharyngeal-ethiopic.etcp";
lastChange = "2020-11-28 01:47:54 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"697 1370 LINE",
"806 1370 LINE",
"830 1664 LINE",
"684 1664 LINE"
);
}
);
width = 1408;
}
);
rightMetricsKey = O;
},
{
glyphname = "oPharyngeal-ethiopic.etcp";
lastChange = "2020-11-28 01:47:59 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"287 -313 LINE",
"412 -394 LINE",
"643 -94 LINE",
"487 8 LINE"
);
}
);
width = 1408;
}
);
rightMetricsKey = O;
},
{
glyphname = "za-ethiopic.etcp";
lastChange = "2020-11-28 00:56:48 +0000";
layers = (
{
components = (
{
name = H;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zu-ethiopic.etcp";
lastChange = "2020-11-28 01:48:28 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1257 809 OFFCURVE",
"1509 808 OFFCURVE",
"1509 969 CURVE SMOOTH",
"1509 1135 OFFCURVE",
"1257 1135 OFFCURVE",
"1257 969 CURVE"
);
}
);
width = 1554;
}
);
leftMetricsKey = H;
},
{
glyphname = "zi-ethiopic.etcp";
lastChange = "2020-11-28 01:48:33 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1247 -38 OFFCURVE",
"1525 -39 OFFCURVE",
"1525 138 CURVE SMOOTH",
"1525 320 OFFCURVE",
"1247 320 OFFCURVE",
"1247 138 CURVE"
);
}
);
width = 1570;
}
);
leftMetricsKey = H;
},
{
glyphname = "zaa-ethiopic.etcp";
lastChange = "2020-11-28 01:48:19 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1101 -378 LINE",
"1250 -378 LINE",
"1280 66 LINE",
"1094 66 LINE"
);
}
);
width = 1460;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zee-ethiopic.etcp";
lastChange = "2020-11-28 01:48:19 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1211 310 OFFCURVE",
"1119 403 OFFCURVE",
"996 403 CURVE SMOOTH",
"935 403 OFFCURVE",
"883 383 OFFCURVE",
"842 342 CURVE SMOOTH",
"761 261 OFFCURVE",
"761 129 OFFCURVE",
"842 50 CURVE SMOOTH",
"883 10 OFFCURVE",
"935 -9 OFFCURVE",
"996 -9 CURVE SMOOTH",
"1117 -9 OFFCURVE",
"1211 79 OFFCURVE",
"1211 195 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"887 255 OFFCURVE",
"933 306 OFFCURVE",
"996 306 CURVE SMOOTH",
"1142 306 OFFCURVE",
"1138 87 OFFCURVE",
"996 87 CURVE SMOOTH",
"935 87 OFFCURVE",
"887 136 OFFCURVE",
"887 195 CURVE SMOOTH"
);
}
);
width = 1460;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "ze-ethiopic.etcp";
lastChange = "2020-11-28 01:48:22 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"169 1372 LINE",
"445 1372 LINE",
"466 1459 LINE",
"169 1477 LINE"
);
}
);
width = 1589;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zo-ethiopic.etcp";
lastChange = "2020-11-28 01:48:19 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"177 -372 LINE",
"326 -372 LINE",
"356 6 LINE",
"170 6 LINE"
);
}
);
width = 1460;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zwa-ethiopic.etcp";
lastChange = "2020-11-28 01:48:19 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1281 -318 LINE",
"1285 116 LINE",
"1100 116 LINE",
"1102 -318 LINE"
);
},
{
closed = 1;
nodes = (
"877 -314 LINE",
"877 -404 LINE",
"1376 -404 LINE",
"1376 -294 LINE"
);
}
);
width = 1548;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zha-ethiopic.etcp";
lastChange = "2020-11-28 00:56:50 +0000";
layers = (
{
components = (
{
name = "za-ethiopic.etcp";
},
{
name = _ZHA.HATS;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1474;
}
);
},
{
glyphname = "zhu-ethiopic.etcp";
lastChange = "2020-11-28 01:48:53 +0000";
layers = (
{
components = (
{
name = "zu-ethiopic.etcp";
},
{
name = _ZHA.HATS;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1553;
}
);
},
{
glyphname = "zhi-ethiopic.etcp";
lastChange = "2020-11-28 01:49:06 +0000";
layers = (
{
components = (
{
name = "zi-ethiopic.etcp";
},
{
name = _ZHA.HATS;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1565;
}
);
},
{
glyphname = "zhaa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:50 +0000";
layers = (
{
components = (
{
name = "zaa-ethiopic.etcp";
},
{
name = _ZHA.HATS;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1474;
}
);
},
{
glyphname = "zhee-ethiopic.etcp";
lastChange = "2020-11-28 00:56:50 +0000";
layers = (
{
components = (
{
name = "zee-ethiopic.etcp";
},
{
name = _ZHA.HATS;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1474;
}
);
},
{
glyphname = "zhe-ethiopic.etcp";
lastChange = "2020-11-28 01:50:12 +0000";
layers = (
{
components = (
{
name = "ze-ethiopic.etcp";
},
{
name = _ZHA.HATS;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1610;
}
);
},
{
glyphname = "zho-ethiopic.etcp";
lastChange = "2020-11-28 00:56:51 +0000";
layers = (
{
components = (
{
name = "zo-ethiopic.etcp";
},
{
name = _ZHA.HATS;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1474;
}
);
},
{
glyphname = "zhwa-ethiopic.etcp";
lastChange = "2020-11-28 00:56:51 +0000";
layers = (
{
components = (
{
name = "zwa-ethiopic.etcp";
},
{
name = _ZHA.HATS;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1436;
}
);
},
{
glyphname = "ya-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yu-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"370 168 OFFCURVE",
"622 167 OFFCURVE",
"622 328 CURVE SMOOTH",
"622 494 OFFCURVE",
"370 494 OFFCURVE",
"370 328 CURVE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yi-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"836 306 LINE",
"444 306 LINE",
"444 198 LINE",
"836 198 LINE"
);
},
{
closed = 1;
nodes = (
"366 141 OFFCURVE",
"644 140 OFFCURVE",
"644 317 CURVE SMOOTH",
"644 499 OFFCURVE",
"366 499 OFFCURVE",
"366 317 CURVE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yaa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:30 +0000";
layers = (
{
components = (
{
name = P;
transform = "{1, 0, 0, 1, 60, 0}";
},
{
name = acute;
transform = "{-1, 0, 0, -1, 545, 1242}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1352;
}
);
rightMetricsKey = P;
},
{
glyphname = "yee-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"736 463 OFFCURVE",
"660 540 OFFCURVE",
"559 540 CURVE SMOOTH",
"508 540 OFFCURVE",
"465 523 OFFCURVE",
"431 489 CURVE SMOOTH",
"364 422 OFFCURVE",
"364 313 OFFCURVE",
"431 248 CURVE SMOOTH",
"465 215 OFFCURVE",
"508 199 OFFCURVE",
"559 199 CURVE SMOOTH",
"659 199 OFFCURVE",
"736 272 OFFCURVE",
"736 368 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"469 417 OFFCURVE",
"507 459 OFFCURVE",
"559 459 CURVE SMOOTH",
"679 459 OFFCURVE",
"676 278 OFFCURVE",
"559 278 CURVE SMOOTH",
"508 278 OFFCURVE",
"469 319 OFFCURVE",
"469 368 CURVE SMOOTH"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ye-ethiopic.etcp";
lastChange = "2020-11-28 01:51:12 +0000";
layers = (
{
components = (
{
name = P;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1020 486 LINE",
"1020 477 LINE SMOOTH",
"1020 360 OFFCURVE",
"1017 274 OFFCURVE",
"816 274 CURVE SMOOTH",
"500 274 LINE",
"500 141 LINE",
"965 129 LINE SMOOTH",
"1083 126 OFFCURVE",
"1169 286 OFFCURVE",
"1169 486 CURVE"
);
},
{
closed = 1;
nodes = (
"360 -79 LINE",
"367 27 OFFCURVE",
"324 133 OFFCURVE",
"525 133 CURVE SMOOTH",
"841 133 LINE",
"841 274 LINE",
"376 274 LINE SMOOTH",
"258 274 OFFCURVE",
"171 140 OFFCURVE",
"170 22 CURVE SMOOTH",
"169 -79 LINE"
);
}
);
width = 1293;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yo-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1281, 875}";
},
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1484;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yoa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:43 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1426, 883}";
},
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 193, 276}";
},
{
name = P;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1629;
}
);
rightMetricsKey = P;
},
{
glyphname = "da-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = P;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1072 -2 LINE",
"1068 112 OFFCURVE",
"979 342 OFFCURVE",
"850 342 CURVE SMOOTH",
"210 342 LINE",
"210 247 LINE",
"728 247 LINE SMOOTH",
"857 247 OFFCURVE",
"893 121.333 OFFCURVE",
"893 0 CURVE SMOOTH",
"893 0 OFFCURVE",
"893 0 OFFCURVE",
"893 -1 CURVE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "du-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"889 213 OFFCURVE",
"1141 212 OFFCURVE",
"1141 373 CURVE SMOOTH",
"1141 539 OFFCURVE",
"889 539 OFFCURVE",
"889 373 CURVE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "di-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"890 165 LINE",
"890 16 LINE",
"1174 -14 LINE",
"1174 172 LINE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "daa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"890 -378 LINE",
"1039 -378 LINE",
"1072 6 LINE",
"893 6 LINE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dee-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1141 -95 OFFCURVE",
"1065 -18 OFFCURVE",
"964 -18 CURVE SMOOTH",
"913 -18 OFFCURVE",
"870 -35 OFFCURVE",
"836 -69 CURVE SMOOTH",
"769 -136 OFFCURVE",
"769 -245 OFFCURVE",
"836 -310 CURVE SMOOTH",
"870 -343 OFFCURVE",
"913 -359 OFFCURVE",
"964 -359 CURVE SMOOTH",
"1064 -359 OFFCURVE",
"1141 -286 OFFCURVE",
"1141 -190 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"874 -141 OFFCURVE",
"912 -99 OFFCURVE",
"964 -99 CURVE SMOOTH",
"1084 -99 OFFCURVE",
"1081 -280 OFFCURVE",
"964 -280 CURVE SMOOTH",
"913 -280 OFFCURVE",
"874 -239 OFFCURVE",
"874 -190 CURVE SMOOTH"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "de-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1268, 874}";
},
{
name = "da-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1471;
}
);
leftMetricsKey = P;
},
{
glyphname = "do-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"176 -343 LINE",
"325 -343 LINE",
"355 35 LINE",
"169 35 LINE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dwa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1071 -318 LINE",
"1072 6 LINE",
"893 6 LINE",
"892 -318 LINE"
);
},
{
closed = 1;
nodes = (
"666 -314 LINE",
"666 -404 LINE",
"1165 -404 LINE",
"1165 -294 LINE"
);
}
);
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dda-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddu-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "du-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddi-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "di-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddaa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "daa-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddee-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "dee-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dde-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1100, 739}";
},
{
name = "de-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1471;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddo-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "do-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddwa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "dwa-ethiopic.etcp";
},
{
name = _qa.neck;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ja-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ju-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "du-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ji-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "di-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "jaa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "daa-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "jee-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "dee-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "je-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1098, 672}";
},
{
name = "de-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1471;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "jo-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "do-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "jwa-ethiopic.etcp";
lastChange = "2020-11-28 01:51:09 +0000";
layers = (
{
components = (
{
name = "dwa-ethiopic.etcp";
},
{
name = _sha.caps.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ga-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = L;
transform = "{-1, 0, 0, -1, 1107, 1456}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1078;
}
);
},
{
glyphname = "gu-ethiopic.etcp";
lastChange = "2020-11-28 01:52:39 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"909 836 OFFCURVE",
"1139 835 OFFCURVE",
"1139 981 CURVE SMOOTH",
"1139 1132 OFFCURVE",
"909 1132 OFFCURVE",
"909 981 CURVE SMOOTH"
);
}
);
width = 1239;
}
);
},
{
glyphname = "gi-ethiopic.etcp";
lastChange = "2020-11-28 01:52:42 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"931 64 OFFCURVE",
"988 2 OFFCURVE",
"1102 2 OFFCURVE",
"1161 64 OFFCURVE",
"1161 110 QCURVE SMOOTH",
"1161 158 OFFCURVE",
"1102 222 OFFCURVE",
"988 222 OFFCURVE",
"931 158 OFFCURVE",
"931 110 QCURVE"
);
}
);
width = 1261;
}
);
},
{
glyphname = "gaa-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"410 -387 LINE",
"572 -387 LINE",
"910 -3 LINE",
"726 -3 LINE"
);
}
);
width = 1073;
}
);
},
{
glyphname = "gee-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1038 -131 OFFCURVE",
"946 -38 OFFCURVE",
"823 -38 CURVE SMOOTH",
"762 -38 OFFCURVE",
"710 -58 OFFCURVE",
"669 -99 CURVE SMOOTH",
"588 -180 OFFCURVE",
"588 -312 OFFCURVE",
"669 -391 CURVE SMOOTH",
"710 -431 OFFCURVE",
"762 -450 OFFCURVE",
"823 -450 CURVE SMOOTH",
"944 -450 OFFCURVE",
"1038 -362 OFFCURVE",
"1038 -246 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"714 -186 OFFCURVE",
"760 -135 OFFCURVE",
"823 -135 CURVE SMOOTH",
"969 -135 OFFCURVE",
"965 -354 OFFCURVE",
"823 -354 CURVE SMOOTH",
"762 -354 OFFCURVE",
"714 -305 OFFCURVE",
"714 -246 CURVE SMOOTH"
);
}
);
width = 1178;
}
);
},
{
glyphname = "ge-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic.etcp";
transform = "{1, 0, 0, 1, 31, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"143 1292 OFFCURVE",
"55 1198 OFFCURVE",
"55 1077 CURVE SMOOTH",
"55 1016 OFFCURVE",
"75 965 OFFCURVE",
"114 924 CURVE SMOOTH",
"193 841 OFFCURVE",
"324 842 OFFCURVE",
"406 924 CURVE SMOOTH",
"447 965 OFFCURVE",
"467 1016 OFFCURVE",
"467 1077 CURVE SMOOTH",
"467 1200 OFFCURVE",
"374 1292 OFFCURVE",
"259 1292 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"200 968 OFFCURVE",
"151 1016 OFFCURVE",
"151 1077 CURVE SMOOTH",
"151 1219 OFFCURVE",
"370 1223 OFFCURVE",
"370 1077 CURVE SMOOTH",
"370 1014 OFFCURVE",
"319 968 OFFCURVE",
"259 968 CURVE SMOOTH"
);
}
);
width = 1104;
}
);
},
{
glyphname = "go-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 492, 1516}";
},
{
name = "ga-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1073;
}
);
},
{
glyphname = "gwaa-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1013 -290 LINE",
"1135 -290 LINE",
"1149 52 LINE",
"1005 52 LINE"
);
},
{
closed = 1;
nodes = (
"1071 51 LINE",
"572 51 LINE",
"572 -100 LINE",
"1071 -100 LINE",
"1071 -100 LINE"
);
}
);
width = 1289;
}
);
},
{
glyphname = "gga-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1073;
}
);
},
{
glyphname = "ggu-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "gu-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1279;
}
);
},
{
glyphname = "ggi-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "gi-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1301;
}
);
},
{
glyphname = "ggaa-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "gaa-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1073;
}
);
},
{
glyphname = "ggee-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "gee-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1178;
}
);
},
{
glyphname = "gge-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "ge-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1073;
}
);
},
{
glyphname = "ggo-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "go-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1073;
}
);
},
{
glyphname = "ggwaa-ethiopic.etcp";
lastChange = "2020-11-28 01:40:40 +0000";
layers = (
{
components = (
{
name = "gwaa-ethiopic.etcp";
},
{
name = _gga.hat.caps;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1289;
}
);
},
{
glyphname = "tha-ethiopic.etcp";
lastChange = "2020-11-28 00:57:02 +0000";
layers = (
{
components = (
{
name = M;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
},
{
glyphname = "thu-ethiopic.etcp";
lastChange = "2020-11-28 00:57:02 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1627 824 OFFCURVE",
"1857 823 OFFCURVE",
"1857 969 CURVE SMOOTH",
"1857 1120 OFFCURVE",
"1627 1120 OFFCURVE",
"1627 969 CURVE"
);
}
);
width = 1958;
}
);
},
{
glyphname = "thi-ethiopic.etcp";
lastChange = "2020-11-28 01:53:02 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1616 -38 OFFCURVE",
"1846 -39 OFFCURVE",
"1846 107 CURVE SMOOTH",
"1846 258 OFFCURVE",
"1616 258 OFFCURVE",
"1616 107 CURVE"
);
}
);
width = 1946;
}
);
},
{
glyphname = "thaa-ethiopic.etcp";
lastChange = "2020-11-28 01:53:10 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1438 -288 LINE",
"1587 -288 LINE",
"1617 6 LINE",
"1431 6 LINE"
);
}
);
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "thee-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1721 -130 OFFCURVE",
"1610 -17 OFFCURVE",
"1461 -17 CURVE SMOOTH",
"1387 -17 OFFCURVE",
"1324 -41 OFFCURVE",
"1275 -91 CURVE SMOOTH",
"1177 -189 OFFCURVE",
"1177 -349 OFFCURVE",
"1275 -444 CURVE SMOOTH",
"1324 -491 OFFCURVE",
"1387 -516 OFFCURVE",
"1461 -516 CURVE SMOOTH",
"1607 -516 OFFCURVE",
"1721 -409 OFFCURVE",
"1721 -269 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1321 -191 OFFCURVE",
"1380 -126 OFFCURVE",
"1461 -126 CURVE SMOOTH",
"1648 -126 OFFCURVE",
"1644 -408 OFFCURVE",
"1461 -408 CURVE SMOOTH",
"1382 -408 OFFCURVE",
"1321 -345 OFFCURVE",
"1321 -269 CURVE SMOOTH"
);
}
);
width = 1891;
}
);
rightMetricsKey = M;
},
{
glyphname = "the-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"978 -322 LINE",
"1100 -237 LINE",
"1151 158 LINE",
"968 29 LINE",
"968 29 LINE"
);
}
);
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "tho-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"181 -385 LINE",
"330 -385 LINE",
"360 6 LINE",
"174 6 LINE"
);
}
);
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "thwa-ethiopic.etcp";
lastChange = "2020-11-28 00:57:03 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1426 -258 LINE",
"1612 -258 LINE",
"1613 186 LINE",
"1426 186 LINE"
);
},
{
closed = 1;
nodes = (
"1757 -238 LINE",
"1258 -238 LINE",
"1203 -318 LINE",
"1757 -318 LINE"
);
}
);
width = 1927;
}
);
rightMetricsKey = M;
},
{
glyphname = "cha-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "tha-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"329 -38 OFFCURVE",
"559 -39 OFFCURVE",
"559 107 CURVE SMOOTH",
"559 258 OFFCURVE",
"329 258 OFFCURVE",
"329 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1279 -38 OFFCURVE",
"1509 -39 OFFCURVE",
"1509 107 CURVE SMOOTH",
"1509 258 OFFCURVE",
"1279 258 OFFCURVE",
"1279 107 CURVE"
);
}
);
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "chu-ethiopic.etcp";
lastChange = "2020-11-28 01:53:39 +0000";
layers = (
{
components = (
{
name = "thu-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"344 -38 OFFCURVE",
"574 -39 OFFCURVE",
"574 107 CURVE SMOOTH",
"574 258 OFFCURVE",
"344 258 OFFCURVE",
"344 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1294 -38 OFFCURVE",
"1524 -39 OFFCURVE",
"1524 107 CURVE SMOOTH",
"1524 258 OFFCURVE",
"1294 258 OFFCURVE",
"1294 107 CURVE"
);
}
);
width = 1957;
}
);
},
{
glyphname = "chi-ethiopic.etcp";
lastChange = "2020-11-28 01:53:44 +0000";
layers = (
{
components = (
{
name = "thi-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"344 -38 OFFCURVE",
"574 -39 OFFCURVE",
"574 107 CURVE SMOOTH",
"574 258 OFFCURVE",
"344 258 OFFCURVE",
"344 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1294 -38 OFFCURVE",
"1524 -39 OFFCURVE",
"1524 107 CURVE SMOOTH",
"1524 258 OFFCURVE",
"1294 258 OFFCURVE",
"1294 107 CURVE"
);
},
{
closed = 1;
nodes = (
"1656 -38 OFFCURVE",
"1886 -39 OFFCURVE",
"1886 107 CURVE SMOOTH",
"1886 258 OFFCURVE",
"1656 258 OFFCURVE",
"1656 107 CURVE"
);
}
);
width = 1986;
}
);
},
{
glyphname = "chaa-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "thaa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"344 -38 OFFCURVE",
"574 -39 OFFCURVE",
"574 107 CURVE SMOOTH",
"574 258 OFFCURVE",
"344 258 OFFCURVE",
"344 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1294 -38 OFFCURVE",
"1524 -39 OFFCURVE",
"1524 107 CURVE SMOOTH",
"1524 258 OFFCURVE",
"1294 258 OFFCURVE",
"1294 107 CURVE"
);
}
);
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "chee-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "thee-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"344 -38 OFFCURVE",
"574 -39 OFFCURVE",
"574 107 CURVE SMOOTH",
"574 258 OFFCURVE",
"344 258 OFFCURVE",
"344 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1294 -38 OFFCURVE",
"1524 -39 OFFCURVE",
"1524 107 CURVE SMOOTH",
"1524 258 OFFCURVE",
"1294 258 OFFCURVE",
"1294 107 CURVE"
);
}
);
width = 1891;
}
);
rightMetricsKey = M;
},
{
glyphname = "che-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "the-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"344 -38 OFFCURVE",
"574 -39 OFFCURVE",
"574 107 CURVE SMOOTH",
"574 258 OFFCURVE",
"344 258 OFFCURVE",
"344 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1294 -38 OFFCURVE",
"1524 -39 OFFCURVE",
"1524 107 CURVE SMOOTH",
"1524 258 OFFCURVE",
"1294 258 OFFCURVE",
"1294 107 CURVE"
);
}
);
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "cho-ethiopic.etcp";
lastChange = "2020-11-28 01:53:20 +0000";
layers = (
{
components = (
{
name = "tho-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"329 -38 OFFCURVE",
"559 -39 OFFCURVE",
"559 107 CURVE SMOOTH",
"559 258 OFFCURVE",
"329 258 OFFCURVE",
"329 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1279 -38 OFFCURVE",
"1509 -39 OFFCURVE",
"1509 107 CURVE SMOOTH",
"1509 258 OFFCURVE",
"1279 258 OFFCURVE",
"1279 107 CURVE"
);
}
);
width = 1788;
}
);
rightMetricsKey = M;
},
{
glyphname = "chwa-ethiopic.etcp";
lastChange = "2020-11-28 00:57:05 +0000";
layers = (
{
components = (
{
name = "thwa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"344 -38 OFFCURVE",
"574 -39 OFFCURVE",
"574 107 CURVE SMOOTH",
"574 258 OFFCURVE",
"344 258 OFFCURVE",
"344 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1294 -38 OFFCURVE",
"1524 -39 OFFCURVE",
"1524 107 CURVE SMOOTH",
"1524 258 OFFCURVE",
"1294 258 OFFCURVE",
"1294 107 CURVE"
);
}
);
width = 1927;
}
);
rightMetricsKey = M;
},
{
glyphname = "pha-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tsa-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phu-ethiopic.etcp";
lastChange = "2020-11-28 01:54:18 +0000";
layers = (
{
components = (
{
name = "tsu-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1300;
}
);
leftMetricsKey = S;
},
{
glyphname = "phi-ethiopic.etcp";
lastChange = "2020-11-28 01:54:22 +0000";
layers = (
{
components = (
{
name = "tsi-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1311;
}
);
leftMetricsKey = S;
},
{
glyphname = "phaa-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tsaa-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phee-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tsee-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phe-ethiopic.etcp";
lastChange = "2020-11-28 01:54:30 +0000";
layers = (
{
components = (
{
name = "tse-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1324;
}
);
leftMetricsKey = S;
},
{
glyphname = "pho-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tso-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phwa-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tswa-ethiopic.etcp";
},
{
name = bar.mulat.001;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1259;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tsa-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1095 364 LINE",
"1095 366 OFFCURVE",
"1095 368 OFFCURVE",
"1095 370 CURVE SMOOTH",
"1095 518 OFFCURVE",
"1030 625 OFFCURVE",
"894 707 CURVE SMOOTH",
"825 748 OFFCURVE",
"731 785 OFFCURVE",
"610 819 CURVE SMOOTH",
"368 887 OFFCURVE",
"277 963 OFFCURVE",
"277 1082 CURVE SMOOTH",
"277 1230 OFFCURVE",
"389 1318 OFFCURVE",
"578 1318 CURVE SMOOTH",
"782 1318 OFFCURVE",
"899 1211 OFFCURVE",
"899 1035 CURVE",
"1092 1035 LINE",
"1092 1196 OFFCURVE",
"1002 1341 OFFCURVE",
"846 1418 CURVE SMOOTH",
"767 1457 OFFCURVE",
"678 1476 OFFCURVE",
"578 1476 CURVE SMOOTH",
"285 1476 OFFCURVE",
"83 1308 OFFCURVE",
"83 1079 CURVE SMOOTH",
"83 876 OFFCURVE",
"226 744 OFFCURVE",
"555 649 CURVE SMOOTH",
"818 573 OFFCURVE",
"902 511 OFFCURVE",
"902 368 CURVE SMOOTH",
"902 365 OFFCURVE",
"902 362 OFFCURVE",
"902 358 CURVE"
);
},
{
closed = 1;
nodes = (
"273 362 OFFCURVE",
"273 365 OFFCURVE",
"273 368 CURVE SMOOTH",
"273 511 OFFCURVE",
"357 573 OFFCURVE",
"620 649 CURVE SMOOTH",
"949 744 OFFCURVE",
"1092 876 OFFCURVE",
"1092 1079 CURVE SMOOTH",
"1092 1308 OFFCURVE",
"890 1476 OFFCURVE",
"597 1476 CURVE SMOOTH",
"497 1476 OFFCURVE",
"408 1457 OFFCURVE",
"329 1418 CURVE SMOOTH",
"173 1341 OFFCURVE",
"83 1196 OFFCURVE",
"83 1035 CURVE",
"276 1035 LINE",
"276 1211 OFFCURVE",
"393 1318 OFFCURVE",
"597 1318 CURVE SMOOTH",
"786 1318 OFFCURVE",
"898 1230 OFFCURVE",
"898 1082 CURVE SMOOTH",
"898 963 OFFCURVE",
"807 887 OFFCURVE",
"565 819 CURVE SMOOTH",
"444 785 OFFCURVE",
"350 748 OFFCURVE",
"281 707 CURVE SMOOTH",
"144 626 OFFCURVE",
"80 518 OFFCURVE",
"80 370 CURVE SMOOTH",
"80 368 OFFCURVE",
"80 366 OFFCURVE",
"80 364 CURVE",
"273 358 LINE"
);
},
{
closed = 1;
nodes = (
"80 0 LINE",
"273 0 LINE",
"273 373 LINE",
"80 373 LINE"
);
},
{
closed = 1;
nodes = (
"902 0 LINE",
"1095 0 LINE",
"1095 373 LINE",
"902 373 LINE"
);
}
);
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tsu-ethiopic.etcp";
lastChange = "2020-11-28 01:54:37 +0000";
layers = (
{
components = (
{
name = "tsa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1025 90 OFFCURVE",
"1277 89 OFFCURVE",
"1277 250 CURVE SMOOTH",
"1277 416 OFFCURVE",
"1025 416 OFFCURVE",
"1025 250 CURVE"
);
}
);
width = 1300;
}
);
leftMetricsKey = S;
},
{
glyphname = "tsi-ethiopic.etcp";
lastChange = "2020-11-28 01:54:43 +0000";
layers = (
{
components = (
{
name = "tsa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1010 -78 OFFCURVE",
"1288 -79 OFFCURVE",
"1288 98 CURVE SMOOTH",
"1288 280 OFFCURVE",
"1010 280 OFFCURVE",
"1010 98 CURVE"
);
}
);
width = 1311;
}
);
leftMetricsKey = S;
},
{
glyphname = "tsaa-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tsa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"911 -378 LINE",
"1060 -378 LINE",
"1090 66 LINE",
"904 66 LINE"
);
}
);
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tsee-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tsa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1005 263 OFFCURVE",
"913 356 OFFCURVE",
"790 356 CURVE SMOOTH",
"729 356 OFFCURVE",
"677 336 OFFCURVE",
"636 295 CURVE SMOOTH",
"555 214 OFFCURVE",
"555 82 OFFCURVE",
"636 3 CURVE SMOOTH",
"677 -37 OFFCURVE",
"729 -56 OFFCURVE",
"790 -56 CURVE SMOOTH",
"911 -56 OFFCURVE",
"1005 32 OFFCURVE",
"1005 148 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"681 208 OFFCURVE",
"727 259 OFFCURVE",
"790 259 CURVE SMOOTH",
"936 259 OFFCURVE",
"932 40 OFFCURVE",
"790 40 CURVE SMOOTH",
"729 40 OFFCURVE",
"681 89 OFFCURVE",
"681 148 CURVE SMOOTH"
);
}
);
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tse-ethiopic.etcp";
lastChange = "2020-11-28 01:54:50 +0000";
layers = (
{
components = (
{
name = hu0.accent;
transform = "{1, 0, 0, 1, 1163, 917}";
},
{
name = "tsa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1324;
}
);
leftMetricsKey = S;
},
{
glyphname = "tso-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tsa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"90 -372 LINE",
"239 -372 LINE",
"269 6 LINE",
"83 6 LINE"
);
}
);
width = 1172;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tswa-ethiopic.etcp";
lastChange = "2020-11-28 01:54:03 +0000";
layers = (
{
components = (
{
name = "tsa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1087 -318 LINE",
"1091 116 LINE",
"906 116 LINE",
"908 -318 LINE"
);
},
{
closed = 1;
nodes = (
"683 -314 LINE",
"683 -404 LINE",
"1182 -404 LINE",
"1182 -294 LINE"
);
}
);
width = 1259;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tza-ethiopic.etcp";
lastChange = "2020-11-28 01:55:19 +0000";
layers = (
{
components = (
{
name = "aPharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzu-ethiopic.etcp";
lastChange = "2020-11-28 01:55:35 +0000";
layers = (
{
components = (
{
name = "uPharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1551;
}
);
leftMetricsKey = O;
},
{
glyphname = "tzi-ethiopic.etcp";
lastChange = "2020-11-28 01:55:19 +0000";
layers = (
{
components = (
{
name = "iPharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzaa-ethiopic.etcp";
lastChange = "2020-11-28 01:55:19 +0000";
layers = (
{
components = (
{
name = "aaPharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzee-ethiopic.etcp";
lastChange = "2020-11-28 01:55:19 +0000";
layers = (
{
components = (
{
name = "eePharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tze-ethiopic.etcp";
lastChange = "2020-11-28 01:55:19 +0000";
layers = (
{
components = (
{
name = "ePharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzo-ethiopic.etcp";
lastChange = "2020-11-28 01:55:19 +0000";
layers = (
{
components = (
{
name = "oPharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzoa-ethiopic.etcp";
lastChange = "2020-11-28 01:55:19 +0000";
layers = (
{
components = (
{
name = "aaPharyngeal-ethiopic.etcp";
},
{
name = _tsa.belt.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"480 -332 LINE",
"480 -422 LINE",
"979 -422 LINE",
"979 -312 LINE"
);
}
);
width = 1408;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "fa-ethiopic.etcp";
lastChange = "2020-11-28 00:57:10 +0000";
layers = (
{
components = (
{
name = L;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"356 794 LINE",
"366 677 LINE",
"526 676 LINE SMOOTH",
"596 676 OFFCURVE",
"616 654 OFFCURVE",
"616 520 CURVE SMOOTH",
"616 52 LINE",
"685 52 LINE",
"686 635 LINE SMOOTH",
"686 771 OFFCURVE",
"657 794 OFFCURVE",
"464 794 CURVE SMOOTH"
);
}
);
width = 1102;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
},
{
glyphname = "fu-ethiopic.etcp";
lastChange = "2020-11-28 00:57:11 +0000";
layers = (
{
components = (
{
name = "fa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"520 -378 LINE",
"639 -378 LINE",
"657 -24 LINE",
"503 -24 LINE"
);
},
{
closed = 1;
nodes = (
"332 -201 LINE",
"332 -350 LINE",
"626 -380 LINE",
"626 -194 LINE"
);
}
);
width = 1130;
}
);
},
{
glyphname = "fi-ethiopic.etcp";
lastChange = "2020-11-28 00:57:11 +0000";
layers = (
{
components = (
{
name = "fa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"793 368 LINE",
"1049 368 LINE",
"1049 538 LINE",
"793 538 LINE"
);
},
{
closed = 1;
nodes = (
"944 0 LINE",
"1052 0 LINE",
"1052 535 LINE",
"944 535 LINE"
);
}
);
width = 1076;
}
);
},
{
glyphname = "faa-ethiopic.etcp";
lastChange = "2020-11-28 00:57:11 +0000";
layers = (
{
components = (
{
name = "fa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"539 -378 LINE",
"688 -378 LINE",
"718 66 LINE",
"532 66 LINE"
);
}
);
width = 1130;
}
);
},
{
glyphname = "fee-ethiopic.etcp";
lastChange = "2020-11-28 00:57:11 +0000";
layers = (
{
components = (
{
name = "fa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1062 535 OFFCURVE",
"873 580 OFFCURVE",
"784 451 CURVE SMOOTH",
"728 370 OFFCURVE",
"804 122 OFFCURVE",
"936 122 CURVE SMOOTH",
"1054 122 OFFCURVE",
"1077 166 OFFCURVE",
"1069 360 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"994 446 OFFCURVE",
"1039 382 OFFCURVE",
"1039 317 CURVE SMOOTH",
"1039 199 OFFCURVE",
"859 156 OFFCURVE",
"848 300 CURVE SMOOTH",
"843 363 OFFCURVE",
"852 432 OFFCURVE",
"912 438 CURVE SMOOTH"
);
}
);
width = 1170;
}
);
},
{
glyphname = "fe-ethiopic.etcp";
lastChange = "2020-11-28 01:56:00 +0000";
layers = (
{
components = (
{
name = "re-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"333 794 LINE",
"344 677 LINE",
"516 676 LINE SMOOTH",
"592 676 OFFCURVE",
"614 654 OFFCURVE",
"614 520 CURVE SMOOTH",
"614 52 LINE",
"688 52 LINE",
"689 635 LINE SMOOTH",
"689 771 OFFCURVE",
"658 794 OFFCURVE",
"449 794 CURVE SMOOTH"
);
}
);
width = 1141;
}
);
},
{
glyphname = "fo-ethiopic.etcp";
lastChange = "2020-11-28 01:56:05 +0000";
layers = (
{
components = (
{
name = "re-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1118 1325 OFFCURVE",
"1022 1411 OFFCURVE",
"901 1409 CURVE SMOOTH",
"840 1408 OFFCURVE",
"789 1387 OFFCURVE",
"749 1347 CURVE SMOOTH",
"668 1267 OFFCURVE",
"671 1136 OFFCURVE",
"754 1055 CURVE SMOOTH",
"796 1015 OFFCURVE",
"847 996 OFFCURVE",
"908 997 CURVE SMOOTH",
"1031 999 OFFCURVE",
"1122 1094 OFFCURVE",
"1120 1209 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"806 1303 OFFCURVE",
"848 1348 OFFCURVE",
"904 1349 CURVE SMOOTH",
"1033 1351 OFFCURVE",
"1040 1152 OFFCURVE",
"907 1150 CURVE SMOOTH",
"850 1149 OFFCURVE",
"808 1195 OFFCURVE",
"807 1249 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 754 LINE",
"348 637 LINE",
"508 636 LINE SMOOTH",
"578 636 OFFCURVE",
"598 614 OFFCURVE",
"598 480 CURVE SMOOTH",
"598 12 LINE",
"667 12 LINE",
"668 595 LINE SMOOTH",
"668 731 OFFCURVE",
"639 754 OFFCURVE",
"446 754 CURVE SMOOTH"
);
}
);
width = 1162;
}
);
},
{
glyphname = "fwa-ethiopic.etcp";
lastChange = "2020-11-28 01:56:10 +0000";
layers = (
{
components = (
{
name = fa.part;
transform = "{1.0798, 0, 0, 1, 65, 0}";
},
{
name = "re-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"590 -378 LINE",
"709 -378 LINE",
"727 -24 LINE",
"573 -24 LINE"
);
},
{
closed = 1;
nodes = (
"820 -339 LINE",
"466 -349 LINE",
"466 -413 LINE",
"820 -422 LINE"
);
}
);
width = 1119;
}
);
},
{
glyphname = "pa-ethiopic.etcp";
lastChange = "2020-11-28 01:56:20 +0000";
layers = (
{
components = (
{
name = T;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pu-ethiopic.etcp";
lastChange = "2020-11-28 01:56:20 +0000";
layers = (
{
components = (
{
name = "pa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"699 824 OFFCURVE",
"929 823 OFFCURVE",
"929 969 CURVE SMOOTH",
"929 1120 OFFCURVE",
"699 1120 OFFCURVE",
"699 969 CURVE SMOOTH"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pi-ethiopic.etcp";
lastChange = "2020-11-28 01:56:20 +0000";
layers = (
{
components = (
{
name = "pa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"691 52 OFFCURVE",
"748 -10 OFFCURVE",
"862 -10 OFFCURVE",
"921 52 OFFCURVE",
"921 98 QCURVE SMOOTH",
"921 146 OFFCURVE",
"862 210 OFFCURVE",
"748 210 OFFCURVE",
"691 146 OFFCURVE",
"691 98 QCURVE"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "paa-ethiopic.etcp";
lastChange = "2020-11-28 01:56:20 +0000";
layers = (
{
components = (
{
name = "pa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"202 -24 LINE",
"364 -24 LINE",
"702 360 LINE",
"518 360 LINE"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pee-ethiopic.etcp";
lastChange = "2020-11-28 01:56:20 +0000";
layers = (
{
components = (
{
name = "pa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1030 314 OFFCURVE",
"938 407 OFFCURVE",
"815 407 CURVE SMOOTH",
"754 407 OFFCURVE",
"702 387 OFFCURVE",
"661 346 CURVE SMOOTH",
"580 265 OFFCURVE",
"580 133 OFFCURVE",
"661 54 CURVE SMOOTH",
"702 15 OFFCURVE",
"754 -5 OFFCURVE",
"815 -5 CURVE SMOOTH",
"936 -5 OFFCURVE",
"1030 83 OFFCURVE",
"1030 199 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"699 263 OFFCURVE",
"748 317 OFFCURVE",
"815 317 CURVE SMOOTH",
"970 317 OFFCURVE",
"966 84 OFFCURVE",
"815 84 CURVE SMOOTH",
"750 84 OFFCURVE",
"699 136 OFFCURVE",
"699 199 CURVE SMOOTH"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pe-ethiopic.etcp";
lastChange = "2020-11-28 01:56:20 +0000";
layers = (
{
components = (
{
name = "pa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"709 -430 LINE",
"838 -355 LINE",
"868 130 LINE",
"674 18 LINE",
"674 18 LINE"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "po-ethiopic.etcp";
lastChange = "2020-11-28 00:57:14 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1175 1456 LINE",
"49 1456 LINE",
"49 1298 LINE",
"516 1298 LINE",
"106 0 LINE",
"297 0 LINE",
"707 1298 LINE",
"1175 1298 LINE"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pwa-ethiopic.etcp";
lastChange = "2020-11-28 01:56:20 +0000";
layers = (
{
components = (
{
name = "pa-ethiopic.etcp";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"681 -289 LINE",
"803 -289 LINE",
"817 3 LINE",
"673 3 LINE"
);
},
{
closed = 1;
nodes = (
"577 -18 LINE",
"648 -18 LINE",
"686 266 LINE",
"586 266 LINE"
);
},
{
closed = 1;
nodes = (
"779 2 LINE",
"280 2 LINE",
"280 -78 LINE",
"779 -78 LINE"
);
}
);
width = 1222;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ra_xa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xa-ethiopic";
transform = "{1, 0, 0, 1, 752, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1739;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ra-ethiopic";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"418 0 LINE",
"418 483 LINE SMOOTH",
"418 584 OFFCURVE",
"418 584 OFFCURVE",
"365 584 CURVE SMOOTH",
"244 584 LINE",
"244 800 LINE",
"197 800 LINE",
"197 719 LINE",
"128 719 LINE",
"128 628 LINE",
"197 628 LINE",
"197 556 LINE SMOOTH",
"197 525 OFFCURVE",
"206 504 OFFCURVE",
"221 504 CURVE SMOOTH",
"341 504 LINE SMOOTH",
"371 504 OFFCURVE",
"371 504 OFFCURVE",
"371 306 CURVE SMOOTH",
"371 0 LINE"
);
}
);
width = 582;
}
);
note = uni1280;
},
{
glyphname = "ra_xu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1947;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"396 0 LINE",
"396 271 LINE",
"448 271 LINE",
"448 381 LINE",
"396 381 LINE",
"396 483 LINE SMOOTH",
"396 584 OFFCURVE",
"396 584 OFFCURVE",
"341 584 CURVE SMOOTH",
"221 584 LINE",
"221 800 LINE",
"174 800 LINE",
"174 719 LINE",
"106 719 LINE",
"106 628 LINE",
"174 628 LINE",
"174 556 LINE SMOOTH",
"174 526 OFFCURVE",
"183 504 OFFCURVE",
"199 504 CURVE SMOOTH",
"317 504 LINE SMOOTH",
"348 504 OFFCURVE",
"348 504 OFFCURVE",
"348 306 CURVE SMOOTH",
"348 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 485;
}
);
note = uni1281;
},
{
glyphname = "ra_xi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1939;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"454 0 LINE",
"454 110 LINE",
"402 110 LINE",
"402 483 LINE SMOOTH",
"402 584 OFFCURVE",
"402 584 OFFCURVE",
"347 584 CURVE SMOOTH",
"226 584 LINE",
"226 800 LINE",
"179 800 LINE",
"179 719 LINE",
"110 719 LINE",
"110 628 LINE",
"179 628 LINE",
"179 556 LINE SMOOTH",
"179 526 OFFCURVE",
"188 504 OFFCURVE",
"203 504 CURVE SMOOTH",
"323 504 LINE SMOOTH",
"354 504 OFFCURVE",
"354 504 OFFCURVE",
"354 306 CURVE SMOOTH",
"354 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 491;
}
);
note = uni1282;
},
{
glyphname = "ra_xee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"446 0 LINE SMOOTH",
"470 0 OFFCURVE",
"486 17 OFFCURVE",
"496 50 CURVE SMOOTH",
"502 70 OFFCURVE",
"503 95 OFFCURVE",
"503 113 CURVE SMOOTH",
"503 143 OFFCURVE",
"502 166 OFFCURVE",
"489 187 CURVE SMOOTH",
"475 209 OFFCURVE",
"467 220 OFFCURVE",
"446 220 CURVE SMOOTH",
"441 220 LINE",
"441 483 LINE SMOOTH",
"441 584 OFFCURVE",
"441 584 OFFCURVE",
"387 584 CURVE SMOOTH",
"266 584 LINE",
"266 800 LINE",
"220 800 LINE",
"220 719 LINE",
"151 719 LINE",
"151 628 LINE",
"220 628 LINE",
"220 556 LINE SMOOTH",
"220 525 OFFCURVE",
"229 504 OFFCURVE",
"244 504 CURVE SMOOTH",
"362 504 LINE SMOOTH",
"393 504 OFFCURVE",
"393 504 OFFCURVE",
"393 306 CURVE SMOOTH",
"393 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"441 194 LINE",
"448 191 OFFCURVE",
"456 186 OFFCURVE",
"463 172 CURVE",
"468 161 OFFCURVE",
"473 143 OFFCURVE",
"473 109 CURVE SMOOTH",
"473 101 OFFCURVE",
"472 95 OFFCURVE",
"471 86 CURVE",
"471 86 OFFCURVE",
"466 56 OFFCURVE",
"463 51 CURVE",
"462 49 OFFCURVE",
"457 32 OFFCURVE",
"445 29 CURVE",
"444 28 OFFCURVE",
"443 28 OFFCURVE",
"441 26 CURVE"
);
}
);
width = 540;
}
);
note = uni1284;
},
{
glyphname = "ra_xe-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xe-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 483 LINE SMOOTH",
"430 584 OFFCURVE",
"430 584 OFFCURVE",
"376 584 CURVE SMOOTH",
"257 584 LINE",
"257 800 LINE",
"209 800 LINE",
"209 702 LINE",
"142 702 LINE",
"142 699 LINE",
"141 699 LINE",
"141 530 LINE",
"176 530 LINE",
"176 625 LINE SMOOTH",
"176 639 OFFCURVE",
"182 650 OFFCURVE",
"188 650 CURVE SMOOTH",
"209 650 LINE",
"209 504 LINE",
"353 504 LINE SMOOTH",
"384 504 OFFCURVE",
"384 504 OFFCURVE",
"384 306 CURVE SMOOTH",
"384 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 467;
}
);
note = uni1285;
},
{
glyphname = "ra_xwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1863;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"518 -200 LINE",
"518 0 LINE",
"442 0 LINE",
"442 483 LINE SMOOTH",
"442 584 OFFCURVE",
"442 584 OFFCURVE",
"387 584 CURVE SMOOTH",
"267 584 LINE",
"267 800 LINE",
"219 800 LINE",
"219 714 LINE",
"158 714 LINE",
"158 611 LINE",
"219 611 LINE",
"219 556 LINE SMOOTH",
"219 526 OFFCURVE",
"229 504 OFFCURVE",
"244 504 CURVE SMOOTH",
"364 504 LINE SMOOTH",
"393 504 OFFCURVE",
"393 504 OFFCURVE",
"393 306 CURVE SMOOTH",
"393 0 LINE",
"331 0 LINE",
"331 -62 LINE",
"467 -62 LINE",
"467 -200 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 555;
}
);
},
{
glyphname = "ra_na-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "na-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 483 LINE SMOOTH",
"377 584 OFFCURVE",
"377 584 OFFCURVE",
"324 584 CURVE SMOOTH",
"204 584 LINE",
"204 800 LINE",
"156 800 LINE",
"156 556 LINE SMOOTH",
"156 525 OFFCURVE",
"165 504 OFFCURVE",
"180 504 CURVE SMOOTH",
"300 504 LINE SMOOTH",
"330 504 OFFCURVE",
"330 504 OFFCURVE",
"330 306 CURVE SMOOTH",
"330 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 414;
}
);
},
{
glyphname = "ra_nu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1741;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"378 0 LINE",
"378 268 LINE",
"433 268 LINE",
"433 383 LINE",
"378 383 LINE",
"378 483 LINE SMOOTH",
"378 584 OFFCURVE",
"378 584 OFFCURVE",
"324 584 CURVE SMOOTH",
"204 584 LINE",
"204 800 LINE",
"156 800 LINE",
"156 556 LINE SMOOTH",
"156 525 OFFCURVE",
"165 504 OFFCURVE",
"180 504 CURVE SMOOTH",
"300 504 LINE SMOOTH",
"330 504 OFFCURVE",
"330 504 OFFCURVE",
"330 306 CURVE SMOOTH",
"330 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 470;
}
);
},
{
glyphname = "ra_ni-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ni-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1733;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"463 0 LINE",
"463 95 LINE",
"400 95 LINE",
"400 483 LINE SMOOTH",
"400 584 OFFCURVE",
"400 584 OFFCURVE",
"345 584 CURVE SMOOTH",
"225 584 LINE",
"225 800 LINE",
"177 800 LINE",
"177 556 LINE SMOOTH",
"177 528 OFFCURVE",
"186 504 OFFCURVE",
"202 504 CURVE SMOOTH",
"322 504 LINE SMOOTH",
"352 504 OFFCURVE",
"352 504 OFFCURVE",
"352 306 CURVE SMOOTH",
"352 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 500;
}
);
},
{
glyphname = "ra_nee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"439 0 LINE SMOOTH",
"462 0 OFFCURVE",
"479 16 OFFCURVE",
"490 56 CURVE SMOOTH",
"495 74 OFFCURVE",
"498 107 OFFCURVE",
"498 123 CURVE SMOOTH",
"498 161 OFFCURVE",
"493 184 OFFCURVE",
"483 204 CURVE SMOOTH",
"474 223 OFFCURVE",
"460 239 OFFCURVE",
"440 239 CURVE SMOOTH",
"424 239 LINE",
"424 483 LINE SMOOTH",
"424 584 OFFCURVE",
"424 584 OFFCURVE",
"370 584 CURVE SMOOTH",
"250 584 LINE",
"250 800 LINE",
"202 800 LINE",
"202 556 LINE SMOOTH",
"202 526 OFFCURVE",
"212 504 OFFCURVE",
"227 504 CURVE SMOOTH",
"347 504 LINE SMOOTH",
"376 504 OFFCURVE",
"376 504 OFFCURVE",
"376 306 CURVE SMOOTH",
"376 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"424 212 LINE",
"438 211 OFFCURVE",
"450 204 OFFCURVE",
"455 191 CURVE",
"464 170 OFFCURVE",
"465 145 OFFCURVE",
"465 118 CURVE SMOOTH",
"465 109 OFFCURVE",
"466 102 OFFCURVE",
"464 94 CURVE",
"463 74 OFFCURVE",
"461 69 OFFCURVE",
"456 55 CURVE SMOOTH",
"450 38 OFFCURVE",
"446 35 OFFCURVE",
"439 31 CURVE",
"435 29 OFFCURVE",
"431 26 OFFCURVE",
"424 26 CURVE"
);
}
);
width = 535;
}
);
note = uni1294;
},
{
glyphname = "ra_ne-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ne-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1575;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"413 -13 LINE",
"413 232 LINE SMOOTH",
"413 270 OFFCURVE",
"406 278 OFFCURVE",
"392 278 CURVE SMOOTH",
"338 278 LINE",
"418 490 LINE SMOOTH",
"424 507 OFFCURVE",
"418 584 OFFCURVE",
"394 584 CURVE SMOOTH",
"214 584 LINE",
"214 495 LINE",
"371 495 LINE",
"296 292 LINE SMOOTH",
"271 223 OFFCURVE",
"277 210 OFFCURVE",
"291 210 CURVE SMOOTH",
"365 210 LINE",
"365 -13 LINE"
);
}
);
width = 458;
}
);
note = uni1295;
},
{
glyphname = "ra_nya-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nya-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1669;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"440 0 LINE",
"440 483 LINE SMOOTH",
"440 584 OFFCURVE",
"440 584 OFFCURVE",
"385 584 CURVE SMOOTH",
"266 584 LINE",
"266 750 LINE",
"330 750 LINE",
"330 800 LINE",
"164 800 LINE",
"164 750 LINE",
"218 750 LINE",
"218 556 LINE SMOOTH",
"218 527 OFFCURVE",
"227 504 OFFCURVE",
"242 504 CURVE SMOOTH",
"362 504 LINE SMOOTH",
"392 504 OFFCURVE",
"392 504 OFFCURVE",
"392 306 CURVE SMOOTH",
"392 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 477;
}
);
note = uni1298;
},
{
glyphname = "ra_nyu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1851;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"449 0 LINE",
"449 271 LINE",
"501 271 LINE",
"501 381 LINE",
"449 381 LINE",
"449 483 LINE SMOOTH",
"449 584 OFFCURVE",
"449 584 OFFCURVE",
"394 584 CURVE SMOOTH",
"275 584 LINE",
"275 750 LINE",
"339 750 LINE",
"339 800 LINE",
"174 800 LINE",
"174 750 LINE",
"227 750 LINE",
"227 556 LINE SMOOTH",
"227 525 OFFCURVE",
"237 504 OFFCURVE",
"252 504 CURVE SMOOTH",
"372 504 LINE SMOOTH",
"401 504 OFFCURVE",
"401 504 OFFCURVE",
"401 306 CURVE SMOOTH",
"401 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 538;
}
);
note = uni1299;
},
{
glyphname = "ra_nyi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1853;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"527 0 LINE",
"527 110 LINE",
"475 110 LINE",
"475 483 LINE SMOOTH",
"475 584 OFFCURVE",
"475 584 OFFCURVE",
"421 584 CURVE SMOOTH",
"301 584 LINE",
"301 750 LINE",
"374 750 LINE",
"374 800 LINE",
"200 800 LINE",
"200 750 LINE",
"253 750 LINE",
"253 556 LINE SMOOTH",
"253 525 OFFCURVE",
"263 504 OFFCURVE",
"278 504 CURVE SMOOTH",
"398 504 LINE SMOOTH",
"427 504 OFFCURVE",
"427 504 OFFCURVE",
"427 306 CURVE SMOOTH",
"427 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 564;
}
);
note = uni129A;
},
{
glyphname = "ra_nyee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"469 0 LINE SMOOTH",
"491 0 OFFCURVE",
"509 18 OFFCURVE",
"519 51 CURVE",
"524 70 OFFCURVE",
"527 96 OFFCURVE",
"527 117 CURVE SMOOTH",
"527 146 OFFCURVE",
"522 175 OFFCURVE",
"513 193 CURVE",
"497 217 OFFCURVE",
"485 226 OFFCURVE",
"470 226 CURVE SMOOTH",
"444 226 LINE",
"444 483 LINE SMOOTH",
"444 584 OFFCURVE",
"444 584 OFFCURVE",
"391 584 CURVE SMOOTH",
"270 584 LINE",
"270 750 LINE",
"359 750 LINE",
"359 800 LINE",
"168 800 LINE",
"168 750 LINE",
"224 750 LINE",
"224 556 LINE SMOOTH",
"224 525 OFFCURVE",
"233 504 OFFCURVE",
"247 504 CURVE SMOOTH",
"367 504 LINE SMOOTH",
"398 504 OFFCURVE",
"398 504 OFFCURVE",
"398 306 CURVE SMOOTH",
"398 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"444 200 LINE",
"451 200 LINE SMOOTH",
"464 200 OFFCURVE",
"477 196 OFFCURVE",
"486 175 CURVE SMOOTH",
"492 161 OFFCURVE",
"495 138 OFFCURVE",
"495 111 CURVE SMOOTH",
"495 103 OFFCURVE",
"494 96 OFFCURVE",
"493 88 CURVE",
"494 81 OFFCURVE",
"490 66 OFFCURVE",
"486 52 CURVE",
"480 37 OFFCURVE",
"474 35 OFFCURVE",
"467 29 CURVE",
"465 28 OFFCURVE",
"458 25 OFFCURVE",
"452 25 CURVE SMOOTH",
"444 25 LINE"
);
}
);
width = 564;
}
);
note = uni129C;
},
{
glyphname = "ra_ga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 437 LINE SMOOTH",
"377 527 OFFCURVE",
"355 585 OFFCURVE",
"329 585 CURVE SMOOTH",
"153 585 LINE",
"153 497 LINE",
"283 498 LINE SMOOTH",
"321 498 OFFCURVE",
"332 498 OFFCURVE",
"332 351 CURVE SMOOTH",
"332 241 OFFCURVE",
"330 58 OFFCURVE",
"330 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 414;
}
);
},
{
glyphname = "ra_gu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 274 LINE",
"431 274 LINE",
"431 389 LINE",
"377 389 LINE",
"377 437 LINE SMOOTH",
"377 527 OFFCURVE",
"355 585 OFFCURVE",
"329 585 CURVE SMOOTH",
"154 585 LINE",
"153 497 LINE",
"284 498 LINE SMOOTH",
"321 498 OFFCURVE",
"332 497 OFFCURVE",
"332 351 CURVE SMOOTH",
"332 241 OFFCURVE",
"331 58 OFFCURVE",
"331 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 468;
}
);
},
{
glyphname = "ra_gi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"450 0 LINE",
"450 72 LINE",
"392 72 LINE",
"392 437 LINE SMOOTH",
"392 527 OFFCURVE",
"371 585 OFFCURVE",
"344 585 CURVE SMOOTH",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"339 498 OFFCURVE",
"347 492 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"261 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 487;
}
);
note = uni130A;
},
{
glyphname = "ra_gaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 730, 0}";
},
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1537;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 183, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 467;
}
);
note = uni130B;
},
{
glyphname = "ra_gee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1759;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"408 -4 LINE SMOOTH",
"423 -4 OFFCURVE",
"435 8 OFFCURVE",
"445 31 CURVE SMOOTH",
"453 50 OFFCURVE",
"458 79 OFFCURVE",
"458 117 CURVE SMOOTH",
"458 144 OFFCURVE",
"455 168 OFFCURVE",
"451 187 CURVE SMOOTH",
"443 224 OFFCURVE",
"430 244 OFFCURVE",
"408 244 CURVE SMOOTH",
"392 244 LINE",
"392 432 LINE SMOOTH",
"392 515 OFFCURVE",
"372 579 OFFCURVE",
"344 579 CURVE SMOOTH",
"168 580 LINE",
"169 492 LINE",
"299 492 LINE SMOOTH",
"335 492 OFFCURVE",
"347 492 OFFCURVE",
"347 347 CURVE SMOOTH",
"347 237 OFFCURVE",
"346 53 OFFCURVE",
"346 -4 CURVE"
);
},
{
closed = 1;
nodes = (
"392 217 LINE",
"393 217 LINE SMOOTH",
"400 217 OFFCURVE",
"402 216 OFFCURVE",
"406 212 CURVE",
"413 206 OFFCURVE",
"419 204 OFFCURVE",
"422 186 CURVE",
"422 186 OFFCURVE",
"427 168 OFFCURVE",
"429 147 CURVE",
"431 139 OFFCURVE",
"430 127 OFFCURVE",
"430 121 CURVE SMOOTH",
"430 83 OFFCURVE",
"427 65 OFFCURVE",
"422 48 CURVE SMOOTH",
"417 31 OFFCURVE",
"407 24 OFFCURVE",
"394 24 CURVE SMOOTH",
"392 24 LINE"
);
}
);
width = 495;
}
);
note = uni130C;
},
{
glyphname = "ra_ge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"390 0 LINE",
"390 437 LINE SMOOTH",
"390 525 OFFCURVE",
"368 585 OFFCURVE",
"342 585 CURVE SMOOTH",
"166 585 LINE",
"165 497 LINE",
"166 497 LINE",
"166 462 LINE SMOOTH",
"166 425 OFFCURVE",
"174 403 OFFCURVE",
"183 385 CURVE SMOOTH",
"193 365 OFFCURVE",
"208 358 OFFCURVE",
"224 358 CURVE SMOOTH",
"235 358 OFFCURVE",
"248 362 OFFCURVE",
"258 371 CURVE SMOOTH",
"276 387 OFFCURVE",
"284 423 OFFCURVE",
"284 462 CURVE SMOOTH",
"284 498 LINE",
"297 498 LINE SMOOTH",
"332 498 OFFCURVE",
"345 497 OFFCURVE",
"345 351 CURVE SMOOTH",
"345 241 OFFCURVE",
"342 58 OFFCURVE",
"342 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"213 414 OFFCURVE",
"196 422 OFFCURVE",
"190 432 CURVE",
"184 443 OFFCURVE",
"180 468 OFFCURVE",
"180 492 CURVE SMOOTH",
"180 497 LINE",
"272 498 LINE",
"272 491 LINE SMOOTH",
"272 482 OFFCURVE",
"271 469 OFFCURVE",
"270 464 CURVE",
"266 450 OFFCURVE",
"264 437 OFFCURVE",
"258 431 CURVE",
"249 423 OFFCURVE",
"244 421 OFFCURVE",
"239 417 CURVE",
"236 415 OFFCURVE",
"229 414 OFFCURVE",
"226 414 CURVE SMOOTH"
);
}
);
width = 427;
}
);
note = uni130D;
},
{
glyphname = "ra_go-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "go-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"410 0 LINE",
"410 437 LINE SMOOTH",
"410 541 OFFCURVE",
"388 584 OFFCURVE",
"362 584 CURVE SMOOTH",
"295 584 LINE",
"295 800 LINE",
"259 800 LINE",
"259 585 LINE",
"186 585 LINE",
"185 497 LINE",
"317 498 LINE SMOOTH",
"354 498 OFFCURVE",
"365 497 OFFCURVE",
"365 351 CURVE SMOOTH",
"365 241 OFFCURVE",
"364 58 OFFCURVE",
"364 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 447;
}
);
},
{
glyphname = "ra_gwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1579;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"478 -200 LINE",
"478 161 LINE",
"440 161 LINE",
"440 437 LINE SMOOTH",
"440 527 OFFCURVE",
"418 585 OFFCURVE",
"392 585 CURVE SMOOTH",
"216 585 LINE",
"215 497 LINE",
"347 498 LINE SMOOTH",
"382 498 OFFCURVE",
"395 498 OFFCURVE",
"395 351 CURVE SMOOTH",
"395 257 OFFCURVE",
"393 198 OFFCURVE",
"394 147 CURVE",
"309 139 LINE",
"343 61 LINE",
"394 120 LINE",
"428 120 LINE",
"428 -200 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 515;
}
);
note = uni1313;
},
{
glyphname = "ra_gga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"392 0 LINE",
"392 437 LINE SMOOTH",
"392 538 OFFCURVE",
"372 584 OFFCURVE",
"343 584 CURVE SMOOTH",
"267 584 LINE",
"267 750 LINE",
"319 750 LINE",
"319 800 LINE",
"194 800 LINE",
"194 750 LINE",
"244 750 LINE",
"244 585 LINE",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"338 498 OFFCURVE",
"347 491 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 429;
}
);
},
{
glyphname = "ra_ggu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"392 0 LINE",
"392 437 LINE SMOOTH",
"392 538 OFFCURVE",
"372 584 OFFCURVE",
"343 584 CURVE SMOOTH",
"267 584 LINE",
"267 757 LINE",
"331 757 LINE",
"331 800 LINE",
"196 800 LINE",
"196 757 LINE",
"247 757 LINE",
"247 585 LINE",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"338 498 OFFCURVE",
"347 491 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 429;
}
);
},
{
glyphname = "ra_ggi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"461 0 LINE",
"461 61 LINE",
"392 61 LINE",
"392 437 LINE SMOOTH",
"392 538 OFFCURVE",
"372 584 OFFCURVE",
"343 584 CURVE SMOOTH",
"274 584 LINE",
"274 750 LINE",
"325 750 LINE",
"325 800 LINE",
"199 800 LINE",
"199 750 LINE",
"250 750 LINE",
"250 585 LINE",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"338 498 OFFCURVE",
"347 491 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 498;
}
);
},
{
glyphname = "ra_ggaa-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 764, 0}";
},
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1600;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 173, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"261 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 569;
}
);
},
{
glyphname = "ra_ggee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"408 -4 LINE SMOOTH",
"423 -4 OFFCURVE",
"435 8 OFFCURVE",
"445 31 CURVE SMOOTH",
"453 50 OFFCURVE",
"458 79 OFFCURVE",
"458 117 CURVE SMOOTH",
"458 144 OFFCURVE",
"455 168 OFFCURVE",
"451 187 CURVE SMOOTH",
"443 224 OFFCURVE",
"430 244 OFFCURVE",
"408 244 CURVE SMOOTH",
"392 244 LINE",
"392 432 LINE SMOOTH",
"392 532 OFFCURVE",
"372 579 OFFCURVE",
"343 579 CURVE SMOOTH",
"266 579 LINE",
"266 750 LINE",
"325 750 LINE",
"325 800 LINE",
"199 800 LINE",
"199 750 LINE",
"245 750 LINE",
"245 580 LINE",
"168 580 LINE",
"169 492 LINE",
"299 492 LINE SMOOTH",
"335 492 OFFCURVE",
"347 492 OFFCURVE",
"347 347 CURVE SMOOTH",
"347 237 OFFCURVE",
"346 53 OFFCURVE",
"346 -4 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"392 217 LINE",
"393 217 LINE SMOOTH",
"400 217 OFFCURVE",
"402 216 OFFCURVE",
"406 212 CURVE",
"413 206 OFFCURVE",
"419 204 OFFCURVE",
"422 186 CURVE",
"424 180 OFFCURVE",
"428 156 OFFCURVE",
"429 148 CURVE SMOOTH",
"430 138 OFFCURVE",
"430 131 OFFCURVE",
"430 121 CURVE SMOOTH",
"430 83 OFFCURVE",
"427 65 OFFCURVE",
"422 48 CURVE SMOOTH",
"417 31 OFFCURVE",
"406 24 OFFCURVE",
"394 24 CURVE SMOOTH",
"392 24 LINE"
);
}
);
width = 495;
}
);
},
{
glyphname = "ra_gge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1703;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"395 0 LINE",
"395 437 LINE SMOOTH",
"395 542 OFFCURVE",
"373 584 OFFCURVE",
"347 584 CURVE SMOOTH",
"304 584 LINE",
"304 750 LINE",
"364 750 LINE",
"364 800 LINE",
"199 800 LINE",
"199 750 LINE",
"278 750 LINE",
"278 584 LINE",
"171 585 LINE",
"170 497 LINE",
"171 497 LINE",
"171 462 LINE SMOOTH",
"171 427 OFFCURVE",
"178 403 OFFCURVE",
"189 383 CURVE SMOOTH",
"199 365 OFFCURVE",
"211 358 OFFCURVE",
"228 358 CURVE SMOOTH",
"243 358 OFFCURVE",
"255 364 OFFCURVE",
"263 371 CURVE",
"284 391 OFFCURVE",
"290 428 OFFCURVE",
"290 462 CURVE SMOOTH",
"290 498 LINE",
"302 498 LINE SMOOTH",
"338 498 OFFCURVE",
"350 496 OFFCURVE",
"350 351 CURVE SMOOTH",
"350 241 OFFCURVE",
"349 58 OFFCURVE",
"349 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"212 414 OFFCURVE",
"203 423 OFFCURVE",
"197 432 CURVE SMOOTH",
"185 449 OFFCURVE",
"185 475 OFFCURVE",
"185 492 CURVE SMOOTH",
"185 497 LINE",
"277 498 LINE",
"277 491 LINE SMOOTH",
"277 480 OFFCURVE",
"275 471 OFFCURVE",
"275 464 CURVE",
"272 452 OFFCURVE",
"270 438 OFFCURVE",
"262 431 CURVE",
"249 418 OFFCURVE",
"254 424 OFFCURVE",
"245 417 CURVE",
"239 415 OFFCURVE",
"234 414 OFFCURVE",
"232 414 CURVE SMOOTH"
);
}
);
width = 432;
}
);
},
{
glyphname = "ra_ggo-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggo-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"395 0 LINE",
"395 437 LINE SMOOTH",
"395 542 OFFCURVE",
"373 584 OFFCURVE",
"347 584 CURVE SMOOTH",
"323 584 LINE",
"323 667 LINE SMOOTH",
"323 701 OFFCURVE",
"318 729 OFFCURVE",
"308 747 CURVE",
"376 747 LINE",
"376 800 LINE",
"201 800 LINE",
"201 747 LINE",
"245 747 LINE",
"243 745 LINE",
"230 714 OFFCURVE",
"228 688 OFFCURVE",
"228 667 CURVE SMOOTH",
"228 585 LINE",
"171 585 LINE",
"170 497 LINE",
"301 498 LINE SMOOTH",
"335 498 OFFCURVE",
"350 498 OFFCURVE",
"350 351 CURVE SMOOTH",
"350 241 OFFCURVE",
"348 58 OFFCURVE",
"348 0 CURVE"
);
},
{
closed = 1;
nodes = (
"240 585 LINE",
"240 636 LINE SMOOTH",
"240 659 OFFCURVE",
"242 687 OFFCURVE",
"247 695 CURVE SMOOTH",
"254 707 OFFCURVE",
"262 714 OFFCURVE",
"276 714 CURVE SMOOTH",
"278 714 OFFCURVE",
"283 713 OFFCURVE",
"286 711 CURVE SMOOTH",
"298 703 OFFCURVE",
"293 704 OFFCURVE",
"301 697 CURVE",
"305 692 OFFCURVE",
"309 677 OFFCURVE",
"312 664 CURVE",
"311 657 OFFCURVE",
"312 648 OFFCURVE",
"312 637 CURVE SMOOTH",
"312 584 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 432;
}
);
},
{
glyphname = "ra_ggwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1605;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"515 -200 LINE",
"515 -8 LINE",
"514 -8 LINE",
"514 7 LINE",
"478 7 LINE",
"478 437 LINE SMOOTH",
"478 541 OFFCURVE",
"456 584 OFFCURVE",
"430 584 CURVE SMOOTH",
"354 584 LINE",
"354 750 LINE",
"404 750 LINE",
"404 800 LINE",
"280 800 LINE",
"280 750 LINE",
"330 750 LINE",
"330 585 LINE",
"255 585 LINE",
"255 497 LINE",
"385 498 LINE SMOOTH",
"422 498 OFFCURVE",
"432 497 OFFCURVE",
"432 351 CURVE SMOOTH",
"432 7 LINE",
"341 7 LINE",
"341 -20 LINE",
"472 -20 LINE",
"472 -200 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 552;
}
);
},
{
glyphname = "ru_xa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"414 0 LINE",
"414 483 LINE SMOOTH",
"414 584 OFFCURVE",
"414 584 OFFCURVE",
"361 584 CURVE SMOOTH",
"240 584 LINE",
"240 800 LINE",
"194 800 LINE",
"194 719 LINE",
"125 719 LINE",
"125 628 LINE",
"194 628 LINE",
"194 556 LINE SMOOTH",
"194 528 OFFCURVE",
"202 504 OFFCURVE",
"218 504 CURVE SMOOTH",
"337 504 LINE SMOOTH",
"368 504 OFFCURVE",
"368 504 OFFCURVE",
"368 306 CURVE SMOOTH",
"368 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 451;
}
);
note = uni1280;
},
{
glyphname = "ru_xu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1947;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"392 0 LINE",
"392 271 LINE",
"443 271 LINE",
"443 381 LINE",
"392 381 LINE",
"392 483 LINE SMOOTH",
"392 584 OFFCURVE",
"392 584 OFFCURVE",
"337 584 CURVE SMOOTH",
"217 584 LINE",
"217 800 LINE",
"169 800 LINE",
"169 719 LINE",
"100 719 LINE",
"100 628 LINE",
"169 628 LINE",
"169 556 LINE SMOOTH",
"169 526 OFFCURVE",
"178 504 OFFCURVE",
"193 504 CURVE SMOOTH",
"314 504 LINE SMOOTH",
"343 504 OFFCURVE",
"343 504 OFFCURVE",
"343 306 CURVE SMOOTH",
"343 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 480;
}
);
note = uni1281;
},
{
glyphname = "ru_xi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1939;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"454 0 LINE",
"454 110 LINE",
"402 110 LINE",
"402 483 LINE SMOOTH",
"402 584 OFFCURVE",
"402 584 OFFCURVE",
"347 584 CURVE SMOOTH",
"226 584 LINE",
"226 800 LINE",
"179 800 LINE",
"179 719 LINE",
"110 719 LINE",
"110 628 LINE",
"179 628 LINE",
"179 556 LINE SMOOTH",
"179 526 OFFCURVE",
"188 504 OFFCURVE",
"203 504 CURVE SMOOTH",
"323 504 LINE SMOOTH",
"354 504 OFFCURVE",
"354 504 OFFCURVE",
"354 306 CURVE SMOOTH",
"354 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 491;
}
);
note = uni1282;
},
{
glyphname = "ru_xee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"440 0 LINE SMOOTH",
"465 0 OFFCURVE",
"480 20 OFFCURVE",
"489 52 CURVE SMOOTH",
"494 69 OFFCURVE",
"497 90 OFFCURVE",
"497 113 CURVE SMOOTH",
"497 142 OFFCURVE",
"495 166 OFFCURVE",
"483 186 CURVE SMOOTH",
"466 214 OFFCURVE",
"455 220 OFFCURVE",
"439 220 CURVE SMOOTH",
"434 220 LINE",
"434 483 LINE SMOOTH",
"434 584 OFFCURVE",
"434 584 OFFCURVE",
"380 584 CURVE SMOOTH",
"260 584 LINE",
"260 800 LINE",
"212 800 LINE",
"212 719 LINE",
"143 719 LINE",
"143 628 LINE",
"212 628 LINE",
"212 556 LINE SMOOTH",
"212 526 OFFCURVE",
"222 504 OFFCURVE",
"237 504 CURVE SMOOTH",
"355 504 LINE SMOOTH",
"386 504 OFFCURVE",
"386 504 OFFCURVE",
"386 306 CURVE SMOOTH",
"386 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
},
{
closed = 1;
nodes = (
"434 193 LINE",
"443 190 OFFCURVE",
"450 185 OFFCURVE",
"456 172 CURVE SMOOTH",
"463 157 OFFCURVE",
"466 137 OFFCURVE",
"466 109 CURVE SMOOTH",
"466 105 OFFCURVE",
"465 90 OFFCURVE",
"464 86 CURVE SMOOTH",
"462 79 OFFCURVE",
"460 61 OFFCURVE",
"457 51 CURVE",
"452 40 OFFCURVE",
"449 35 OFFCURVE",
"438 29 CURVE",
"434 26 LINE"
);
}
);
width = 534;
}
);
note = uni1284;
},
{
glyphname = "ru_xe-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xe-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"427 0 LINE",
"427 483 LINE SMOOTH",
"427 584 OFFCURVE",
"427 584 OFFCURVE",
"372 584 CURVE SMOOTH",
"253 584 LINE",
"253 800 LINE",
"205 800 LINE",
"205 702 LINE",
"139 702 LINE",
"139 699 LINE",
"136 699 LINE",
"136 530 LINE",
"171 530 LINE",
"171 625 LINE SMOOTH",
"171 639 OFFCURVE",
"177 650 OFFCURVE",
"183 650 CURVE SMOOTH",
"205 650 LINE",
"205 504 LINE",
"349 504 LINE SMOOTH",
"379 504 OFFCURVE",
"379 504 OFFCURVE",
"379 306 CURVE SMOOTH",
"379 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 464;
}
);
note = uni1285;
},
{
glyphname = "ru_xwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1863;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"518 -200 LINE",
"518 0 LINE",
"442 0 LINE",
"442 483 LINE SMOOTH",
"442 584 OFFCURVE",
"442 584 OFFCURVE",
"387 584 CURVE SMOOTH",
"267 584 LINE",
"267 800 LINE",
"219 800 LINE",
"219 714 LINE",
"158 714 LINE",
"158 611 LINE",
"219 611 LINE",
"219 556 LINE SMOOTH",
"219 526 OFFCURVE",
"229 504 OFFCURVE",
"244 504 CURVE SMOOTH",
"364 504 LINE SMOOTH",
"393 504 OFFCURVE",
"393 504 OFFCURVE",
"393 306 CURVE SMOOTH",
"393 0 LINE",
"331 0 LINE",
"331 -62 LINE",
"467 -62 LINE",
"467 -200 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 555;
}
);
},
{
glyphname = "ru_na-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "na-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 483 LINE SMOOTH",
"377 584 OFFCURVE",
"377 584 OFFCURVE",
"324 584 CURVE SMOOTH",
"204 584 LINE",
"204 800 LINE",
"156 800 LINE",
"156 556 LINE SMOOTH",
"156 525 OFFCURVE",
"165 504 OFFCURVE",
"180 504 CURVE SMOOTH",
"300 504 LINE SMOOTH",
"330 504 OFFCURVE",
"330 504 OFFCURVE",
"330 306 CURVE SMOOTH",
"330 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"58 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"168 0 LINE",
"168 -193 LINE"
);
}
);
width = 414;
}
);
},
{
glyphname = "ru_nu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1741;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"378 0 LINE",
"378 268 LINE",
"433 268 LINE",
"433 383 LINE",
"378 383 LINE",
"378 483 LINE SMOOTH",
"378 584 OFFCURVE",
"378 584 OFFCURVE",
"324 584 CURVE SMOOTH",
"204 584 LINE",
"204 800 LINE",
"156 800 LINE",
"156 556 LINE SMOOTH",
"156 525 OFFCURVE",
"165 504 OFFCURVE",
"180 504 CURVE SMOOTH",
"300 504 LINE SMOOTH",
"330 504 OFFCURVE",
"330 504 OFFCURVE",
"330 306 CURVE SMOOTH",
"330 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 470;
}
);
},
{
glyphname = "ru_ni-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ni-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1733;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"463 0 LINE",
"463 95 LINE",
"400 95 LINE",
"400 483 LINE SMOOTH",
"400 584 OFFCURVE",
"400 584 OFFCURVE",
"345 584 CURVE SMOOTH",
"225 584 LINE",
"225 800 LINE",
"177 800 LINE",
"177 556 LINE SMOOTH",
"177 528 OFFCURVE",
"186 504 OFFCURVE",
"202 504 CURVE SMOOTH",
"322 504 LINE SMOOTH",
"352 504 OFFCURVE",
"352 504 OFFCURVE",
"352 306 CURVE SMOOTH",
"352 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 500;
}
);
},
{
glyphname = "ru_nee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"435 0 LINE SMOOTH",
"455 0 OFFCURVE",
"474 13 OFFCURVE",
"485 54 CURVE SMOOTH",
"490 74 OFFCURVE",
"493 94 OFFCURVE",
"493 123 CURVE SMOOTH",
"493 155 OFFCURVE",
"489 183 OFFCURVE",
"479 204 CURVE SMOOTH",
"470 223 OFFCURVE",
"454 239 OFFCURVE",
"436 239 CURVE SMOOTH",
"420 239 LINE",
"420 483 LINE SMOOTH",
"420 584 OFFCURVE",
"420 584 OFFCURVE",
"366 584 CURVE SMOOTH",
"245 584 LINE",
"245 800 LINE",
"199 800 LINE",
"199 556 LINE SMOOTH",
"199 525 OFFCURVE",
"208 504 OFFCURVE",
"223 504 CURVE SMOOTH",
"341 504 LINE SMOOTH",
"372 504 OFFCURVE",
"372 504 OFFCURVE",
"372 306 CURVE SMOOTH",
"372 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
},
{
closed = 1;
nodes = (
"420 212 LINE",
"437 212 OFFCURVE",
"446 202 OFFCURVE",
"453 185 CURVE SMOOTH",
"459 170 OFFCURVE",
"461 141 OFFCURVE",
"461 118 CURVE SMOOTH",
"461 94 LINE SMOOTH",
"461 83 OFFCURVE",
"454 61 OFFCURVE",
"452 55 CURVE",
"448 41 OFFCURVE",
"443 37 OFFCURVE",
"434 31 CURVE",
"428 28 OFFCURVE",
"425 26 OFFCURVE",
"420 26 CURVE"
);
}
);
width = 530;
}
);
note = uni1294;
},
{
glyphname = "ru_ne-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ne-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1575;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
},
{
closed = 1;
nodes = (
"408 -3 LINE",
"408 232 LINE SMOOTH",
"408 273 OFFCURVE",
"399 278 OFFCURVE",
"387 278 CURVE SMOOTH",
"333 278 LINE",
"414 490 LINE SMOOTH",
"420 507 OFFCURVE",
"414 584 OFFCURVE",
"389 584 CURVE SMOOTH",
"208 584 LINE",
"208 495 LINE",
"365 495 LINE",
"291 292 LINE SMOOTH",
"266 223 OFFCURVE",
"272 210 OFFCURVE",
"285 210 CURVE SMOOTH",
"360 210 LINE",
"360 -3 LINE"
);
}
);
width = 454;
}
);
note = uni1295;
},
{
glyphname = "ru_nya-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nya-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1669;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"435 0 LINE",
"435 483 LINE SMOOTH",
"435 584 OFFCURVE",
"435 584 OFFCURVE",
"380 584 CURVE SMOOTH",
"261 584 LINE",
"261 750 LINE",
"325 750 LINE",
"325 800 LINE",
"160 800 LINE",
"160 750 LINE",
"213 750 LINE",
"213 556 LINE SMOOTH",
"213 524 OFFCURVE",
"223 504 OFFCURVE",
"237 504 CURVE SMOOTH",
"357 504 LINE SMOOTH",
"387 504 OFFCURVE",
"387 504 OFFCURVE",
"387 306 CURVE SMOOTH",
"387 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 472;
}
);
note = uni1298;
},
{
glyphname = "ru_nyu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1851;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"445 0 LINE",
"445 271 LINE",
"496 271 LINE",
"496 381 LINE",
"445 381 LINE",
"445 483 LINE SMOOTH",
"445 584 OFFCURVE",
"445 584 OFFCURVE",
"391 584 CURVE SMOOTH",
"270 584 LINE",
"270 750 LINE",
"335 750 LINE",
"335 800 LINE",
"168 800 LINE",
"168 750 LINE",
"224 750 LINE",
"224 556 LINE SMOOTH",
"224 525 OFFCURVE",
"233 504 OFFCURVE",
"247 504 CURVE SMOOTH",
"366 504 LINE SMOOTH",
"397 504 OFFCURVE",
"397 504 OFFCURVE",
"397 306 CURVE SMOOTH",
"397 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 533;
}
);
note = uni1299;
},
{
glyphname = "ru_nyi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1853;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"522 0 LINE",
"522 110 LINE",
"471 110 LINE",
"471 483 LINE SMOOTH",
"471 584 OFFCURVE",
"471 584 OFFCURVE",
"417 584 CURVE SMOOTH",
"296 584 LINE",
"296 750 LINE",
"370 750 LINE",
"370 800 LINE",
"194 800 LINE",
"194 750 LINE",
"250 750 LINE",
"250 556 LINE SMOOTH",
"250 525 OFFCURVE",
"259 504 OFFCURVE",
"274 504 CURVE SMOOTH",
"392 504 LINE SMOOTH",
"423 504 OFFCURVE",
"423 504 OFFCURVE",
"423 306 CURVE SMOOTH",
"423 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 559;
}
);
note = uni129A;
},
{
glyphname = "ru_nyee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"464 0 LINE SMOOTH",
"485 0 OFFCURVE",
"505 18 OFFCURVE",
"513 49 CURVE SMOOTH",
"519 71 OFFCURVE",
"522 95 OFFCURVE",
"522 117 CURVE SMOOTH",
"522 146 OFFCURVE",
"517 174 OFFCURVE",
"508 193 CURVE",
"494 214 OFFCURVE",
"481 226 OFFCURVE",
"464 226 CURVE SMOOTH",
"439 226 LINE",
"439 483 LINE SMOOTH",
"439 584 OFFCURVE",
"439 584 OFFCURVE",
"386 584 CURVE SMOOTH",
"265 584 LINE",
"265 750 LINE",
"355 750 LINE",
"355 800 LINE",
"164 800 LINE",
"164 750 LINE",
"218 750 LINE",
"218 556 LINE SMOOTH",
"218 527 OFFCURVE",
"227 504 OFFCURVE",
"242 504 CURVE SMOOTH",
"362 504 LINE SMOOTH",
"393 504 OFFCURVE",
"393 504 OFFCURVE",
"393 306 CURVE SMOOTH",
"393 0 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
},
{
closed = 1;
nodes = (
"439 200 LINE",
"447 200 LINE SMOOTH",
"462 200 OFFCURVE",
"474 192 OFFCURVE",
"480 177 CURVE SMOOTH",
"486 162 OFFCURVE",
"491 141 OFFCURVE",
"491 111 CURVE SMOOTH",
"491 106 OFFCURVE",
"490 99 OFFCURVE",
"488 85 CURVE SMOOTH",
"487 76 OFFCURVE",
"483 58 OFFCURVE",
"481 52 CURVE",
"477 42 OFFCURVE",
"470 32 OFFCURVE",
"462 29 CURVE",
"459 28 OFFCURVE",
"454 25 OFFCURVE",
"448 25 CURVE SMOOTH",
"439 25 LINE"
);
}
);
width = 559;
}
);
note = uni129C;
},
{
glyphname = "ru_ga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 437 LINE SMOOTH",
"377 527 OFFCURVE",
"355 585 OFFCURVE",
"329 585 CURVE SMOOTH",
"153 585 LINE",
"153 497 LINE",
"283 498 LINE SMOOTH",
"321 498 OFFCURVE",
"332 498 OFFCURVE",
"332 351 CURVE SMOOTH",
"332 241 OFFCURVE",
"330 58 OFFCURVE",
"330 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"58 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"168 0 LINE",
"168 -193 LINE"
);
}
);
width = 414;
}
);
},
{
glyphname = "ru_gu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 274 LINE",
"431 274 LINE",
"431 389 LINE",
"377 389 LINE",
"377 437 LINE SMOOTH",
"377 527 OFFCURVE",
"355 585 OFFCURVE",
"329 585 CURVE SMOOTH",
"154 585 LINE",
"153 497 LINE",
"284 498 LINE SMOOTH",
"321 498 OFFCURVE",
"332 497 OFFCURVE",
"332 351 CURVE SMOOTH",
"332 241 OFFCURVE",
"331 58 OFFCURVE",
"331 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 468;
}
);
},
{
glyphname = "ru_gi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"444 0 LINE",
"444 72 LINE",
"388 72 LINE",
"388 437 LINE SMOOTH",
"388 526 OFFCURVE",
"366 585 OFFCURVE",
"339 585 CURVE SMOOTH",
"164 585 LINE",
"163 497 LINE",
"295 498 LINE SMOOTH",
"328 498 OFFCURVE",
"343 497 OFFCURVE",
"343 351 CURVE SMOOTH",
"343 241 OFFCURVE",
"342 58 OFFCURVE",
"342 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 481;
}
);
note = uni130A;
},
{
glyphname = "ru_gaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 785, 0}";
},
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1584;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 184, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 594;
}
);
note = uni130B;
},
{
glyphname = "ru_gee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1759;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE",
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"438 227 OFFCURVE",
"421 244 OFFCURVE",
"402 244 CURVE SMOOTH",
"388 244 LINE",
"388 432 LINE SMOOTH",
"388 520 OFFCURVE",
"366 579 OFFCURVE",
"339 579 CURVE SMOOTH",
"163 580 LINE",
"164 492 LINE",
"295 492 LINE SMOOTH",
"332 492 OFFCURVE",
"342 491 OFFCURVE",
"342 347 CURVE SMOOTH",
"342 -4 LINE",
"402 -4 LINE SMOOTH",
"418 -4 OFFCURVE",
"430 8 OFFCURVE",
"440 31 CURVE SMOOTH",
"449 52 OFFCURVE",
"453 79 OFFCURVE",
"453 117 CURVE SMOOTH",
"453 137 OFFCURVE",
"451 164 OFFCURVE",
"446 187 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415 40 OFFCURVE",
"407 33 OFFCURVE",
"402 30 CURVE",
"391 217 LINE",
"391 217 OFFCURVE",
"399 212 OFFCURVE",
"402 212 CURVE",
"401 212 OFFCURVE",
"415 201 OFFCURVE",
"418 185 CURVE SMOOTH",
"422 162 OFFCURVE",
"420 164 OFFCURVE",
"424 147 CURVE",
"425 139 OFFCURVE",
"425 129 OFFCURVE",
"425 121 CURVE SMOOTH",
"425 97 OFFCURVE",
"423 65 OFFCURVE",
"418 49 CURVE SMOOTH"
);
}
);
width = 490;
}
);
note = uni130C;
},
{
glyphname = "ru_ge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"390 0 LINE",
"390 437 LINE SMOOTH",
"390 525 OFFCURVE",
"368 585 OFFCURVE",
"342 585 CURVE SMOOTH",
"166 585 LINE",
"165 497 LINE",
"166 497 LINE",
"166 462 LINE SMOOTH",
"166 425 OFFCURVE",
"174 403 OFFCURVE",
"183 385 CURVE SMOOTH",
"193 365 OFFCURVE",
"208 358 OFFCURVE",
"224 358 CURVE SMOOTH",
"235 358 OFFCURVE",
"248 362 OFFCURVE",
"258 371 CURVE SMOOTH",
"276 387 OFFCURVE",
"284 423 OFFCURVE",
"284 462 CURVE SMOOTH",
"284 498 LINE",
"297 498 LINE SMOOTH",
"332 498 OFFCURVE",
"345 497 OFFCURVE",
"345 351 CURVE SMOOTH",
"345 241 OFFCURVE",
"342 58 OFFCURVE",
"342 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
},
{
closed = 1;
nodes = (
"213 414 OFFCURVE",
"196 422 OFFCURVE",
"190 432 CURVE",
"184 443 OFFCURVE",
"180 468 OFFCURVE",
"180 492 CURVE SMOOTH",
"180 497 LINE",
"272 498 LINE",
"272 491 LINE SMOOTH",
"272 482 OFFCURVE",
"271 469 OFFCURVE",
"270 464 CURVE",
"266 450 OFFCURVE",
"264 437 OFFCURVE",
"258 431 CURVE",
"249 423 OFFCURVE",
"244 421 OFFCURVE",
"239 417 CURVE",
"236 415 OFFCURVE",
"229 414 OFFCURVE",
"226 414 CURVE SMOOTH"
);
}
);
width = 427;
}
);
note = uni130D;
},
{
glyphname = "ru_go-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "go-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"405 0 LINE",
"405 437 LINE SMOOTH",
"405 541 OFFCURVE",
"384 584 OFFCURVE",
"357 584 CURVE SMOOTH",
"290 584 LINE",
"290 800 LINE",
"254 800 LINE",
"254 585 LINE",
"181 585 LINE",
"180 497 LINE",
"312 498 LINE SMOOTH",
"346 498 OFFCURVE",
"360 497 OFFCURVE",
"360 351 CURVE SMOOTH",
"360 241 OFFCURVE",
"359 58 OFFCURVE",
"359 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 442;
}
);
},
{
glyphname = "ru_gwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1579;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"472 -200 LINE",
"472 161 LINE",
"436 161 LINE",
"436 437 LINE SMOOTH",
"436 524 OFFCURVE",
"414 585 OFFCURVE",
"387 585 CURVE SMOOTH",
"211 585 LINE",
"210 497 LINE",
"343 498 LINE SMOOTH",
"374 498 OFFCURVE",
"390 497 OFFCURVE",
"390 351 CURVE SMOOTH",
"390 236 OFFCURVE",
"389 183 OFFCURVE",
"388 147 CURVE",
"303 139 LINE",
"338 61 LINE",
"388 120 LINE",
"424 120 LINE",
"424 -200 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 509;
}
);
note = uni1313;
},
{
glyphname = "ru_gga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"388 0 LINE",
"388 437 LINE SMOOTH",
"388 538 OFFCURVE",
"367 584 OFFCURVE",
"340 584 CURVE SMOOTH",
"263 584 LINE",
"263 750 LINE",
"314 750 LINE",
"314 800 LINE",
"190 800 LINE",
"190 750 LINE",
"241 750 LINE",
"241 585 LINE",
"164 585 LINE",
"163 497 LINE",
"295 498 LINE SMOOTH",
"329 498 OFFCURVE",
"343 497 OFFCURVE",
"343 351 CURVE SMOOTH",
"343 241 OFFCURVE",
"342 58 OFFCURVE",
"342 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 425;
}
);
},
{
glyphname = "ru_ggu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"388 0 LINE",
"388 437 LINE SMOOTH",
"388 538 OFFCURVE",
"367 584 OFFCURVE",
"340 584 CURVE SMOOTH",
"263 584 LINE",
"263 757 LINE",
"326 757 LINE",
"326 800 LINE",
"192 800 LINE",
"192 757 LINE",
"242 757 LINE",
"242 585 LINE",
"164 585 LINE",
"163 497 LINE",
"295 498 LINE SMOOTH",
"329 498 OFFCURVE",
"343 497 OFFCURVE",
"343 351 CURVE SMOOTH",
"343 241 OFFCURVE",
"342 58 OFFCURVE",
"342 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 425;
}
);
},
{
glyphname = "ru_ggi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"468 0 LINE",
"468 61 LINE",
"399 61 LINE",
"399 437 LINE SMOOTH",
"399 539 OFFCURVE",
"378 584 OFFCURVE",
"351 584 CURVE SMOOTH",
"281 584 LINE",
"281 750 LINE",
"334 750 LINE",
"334 800 LINE",
"206 800 LINE",
"206 750 LINE",
"257 750 LINE",
"257 585 LINE",
"177 585 LINE",
"176 497 LINE",
"306 498 LINE SMOOTH",
"346 498 OFFCURVE",
"354 491 OFFCURVE",
"354 351 CURVE SMOOTH",
"354 241 OFFCURVE",
"353 58 OFFCURVE",
"353 0 CURVE"
);
},
{
closed = 1;
nodes = (
"198 -193 LINE",
"198 -1 LINE",
"262 -1 LINE",
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"157 0 LINE",
"157 -193 LINE"
);
}
);
width = 505;
}
);
},
{
glyphname = "ru_ggaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 715, 0}";
},
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1505;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 178, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"261 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 575;
}
);
},
{
glyphname = "ru_ggee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"438 227 OFFCURVE",
"421 244 OFFCURVE",
"402 244 CURVE SMOOTH",
"388 244 LINE",
"388 432 LINE SMOOTH",
"388 535 OFFCURVE",
"366 579 OFFCURVE",
"339 579 CURVE SMOOTH",
"260 579 LINE",
"260 750 LINE",
"320 750 LINE",
"320 800 LINE",
"194 800 LINE",
"194 750 LINE",
"239 750 LINE",
"239 580 LINE",
"163 580 LINE",
"164 492 LINE",
"294 492 LINE SMOOTH",
"331 492 OFFCURVE",
"342 492 OFFCURVE",
"342 347 CURVE SMOOTH",
"342 237 OFFCURVE",
"341 53 OFFCURVE",
"341 -4 CURVE",
"402 -4 LINE SMOOTH",
"416 -4 OFFCURVE",
"426 2 OFFCURVE",
"440 32 CURVE SMOOTH",
"449 52 OFFCURVE",
"453 82 OFFCURVE",
"453 117 CURVE SMOOTH",
"453 137 OFFCURVE",
"451 164 OFFCURVE",
"446 187 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"58 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"168 0 LINE",
"168 -193 LINE",
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415 40 OFFCURVE",
"407 33 OFFCURVE",
"402 29 CURVE",
"390 217 LINE",
"390 217 OFFCURVE",
"398 216 OFFCURVE",
"402 212 CURVE SMOOTH",
"412 202 OFFCURVE",
"414 199 OFFCURVE",
"418 186 CURVE",
"420 174 OFFCURVE",
"422 163 OFFCURVE",
"424 147 CURVE SMOOTH",
"425 139 OFFCURVE",
"425 129 OFFCURVE",
"425 121 CURVE SMOOTH",
"425 97 OFFCURVE",
"423 65 OFFCURVE",
"418 49 CURVE SMOOTH"
);
}
);
width = 490;
}
);
},
{
glyphname = "ru_gge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1703;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"390 0 LINE",
"390 437 LINE SMOOTH",
"390 541 OFFCURVE",
"368 584 OFFCURVE",
"342 584 CURVE SMOOTH",
"299 584 LINE",
"299 750 LINE",
"360 750 LINE",
"360 800 LINE",
"194 800 LINE",
"194 750 LINE",
"273 750 LINE",
"273 584 LINE",
"166 585 LINE",
"165 497 LINE",
"166 497 LINE",
"166 462 LINE SMOOTH",
"166 427 OFFCURVE",
"173 403 OFFCURVE",
"184 382 CURVE SMOOTH",
"193 365 OFFCURVE",
"210 358 OFFCURVE",
"224 358 CURVE SMOOTH",
"237 358 OFFCURVE",
"249 363 OFFCURVE",
"258 371 CURVE SMOOTH",
"276 388 OFFCURVE",
"284 422 OFFCURVE",
"284 462 CURVE SMOOTH",
"284 498 LINE",
"297 498 LINE SMOOTH",
"332 498 OFFCURVE",
"345 497 OFFCURVE",
"345 351 CURVE SMOOTH",
"345 241 OFFCURVE",
"342 58 OFFCURVE",
"342 0 CURVE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"58 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"168 0 LINE",
"168 -193 LINE"
);
},
{
closed = 1;
nodes = (
"216 414 OFFCURVE",
"199 420 OFFCURVE",
"191 431 CURVE",
"183 443 OFFCURVE",
"180 473 OFFCURVE",
"180 492 CURVE SMOOTH",
"180 497 LINE",
"272 498 LINE",
"272 491 LINE SMOOTH",
"272 482 OFFCURVE",
"271 469 OFFCURVE",
"270 464 CURVE",
"266 450 OFFCURVE",
"265 441 OFFCURVE",
"257 431 CURVE SMOOTH",
"253 426 OFFCURVE",
"242 419 OFFCURVE",
"239 417 CURVE SMOOTH",
"236 415 OFFCURVE",
"229 414 OFFCURVE",
"226 414 CURVE SMOOTH"
);
}
);
width = 427;
}
);
},
{
glyphname = "ru_ggo-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggo-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"391 0 LINE",
"391 437 LINE SMOOTH",
"391 539 OFFCURVE",
"369 584 OFFCURVE",
"341 584 CURVE SMOOTH",
"319 584 LINE",
"319 667 LINE SMOOTH",
"319 698 OFFCURVE",
"314 729 OFFCURVE",
"304 747 CURVE",
"371 747 LINE",
"371 800 LINE",
"196 800 LINE",
"196 747 LINE",
"239 747 LINE",
"238 745 LINE",
"230 725 OFFCURVE",
"225 699 OFFCURVE",
"225 667 CURVE SMOOTH",
"225 585 LINE",
"167 585 LINE",
"166 497 LINE",
"296 498 LINE SMOOTH",
"334 498 OFFCURVE",
"345 497 OFFCURVE",
"345 351 CURVE SMOOTH",
"345 241 OFFCURVE",
"343 58 OFFCURVE",
"343 0 CURVE"
);
},
{
closed = 1;
nodes = (
"235 585 LINE",
"235 636 LINE SMOOTH",
"235 664 OFFCURVE",
"238 688 OFFCURVE",
"244 697 CURVE SMOOTH",
"251 708 OFFCURVE",
"260 714 OFFCURVE",
"272 714 CURVE SMOOTH",
"274 714 OFFCURVE",
"278 713 OFFCURVE",
"282 711 CURVE",
"289 707 OFFCURVE",
"295 699 OFFCURVE",
"296 697 CURVE",
"302 690 OFFCURVE",
"303 684 OFFCURVE",
"307 664 CURVE",
"308 657 OFFCURVE",
"309 646 OFFCURVE",
"309 637 CURVE SMOOTH",
"309 584 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"262 -1 LINE",
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 428;
}
);
},
{
glyphname = "ru_ggwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ru-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1605;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"515 -200 LINE",
"515 -8 LINE",
"514 -8 LINE",
"514 7 LINE",
"478 7 LINE",
"478 437 LINE SMOOTH",
"478 541 OFFCURVE",
"456 584 OFFCURVE",
"430 584 CURVE SMOOTH",
"354 584 LINE",
"354 750 LINE",
"404 750 LINE",
"404 800 LINE",
"280 800 LINE",
"280 750 LINE",
"330 750 LINE",
"330 585 LINE",
"255 585 LINE",
"255 497 LINE",
"385 498 LINE SMOOTH",
"422 498 OFFCURVE",
"432 497 OFFCURVE",
"432 351 CURVE SMOOTH",
"432 7 LINE",
"341 7 LINE",
"341 -20 LINE",
"472 -20 LINE",
"472 -200 LINE"
);
},
{
closed = 1;
nodes = (
"210 -193 LINE",
"210 -1 LINE",
"261 -1 LINE",
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"169 0 LINE",
"169 -193 LINE"
);
}
);
width = 552;
}
);
},
{
glyphname = "ri_xa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "xa-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1737;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ra-ethiopic";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"418 0 LINE",
"418 483 LINE SMOOTH",
"418 584 OFFCURVE",
"418 584 OFFCURVE",
"365 584 CURVE SMOOTH",
"244 584 LINE",
"244 800 LINE",
"197 800 LINE",
"197 719 LINE",
"128 719 LINE",
"128 628 LINE",
"197 628 LINE",
"197 556 LINE SMOOTH",
"197 525 OFFCURVE",
"206 504 OFFCURVE",
"221 504 CURVE SMOOTH",
"341 504 LINE SMOOTH",
"371 504 OFFCURVE",
"371 504 OFFCURVE",
"371 306 CURVE SMOOTH",
"371 0 LINE"
);
}
);
width = 582;
}
);
note = uni1280;
},
{
glyphname = "ri_xu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "xu-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1939;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"396 0 LINE",
"396 271 LINE",
"448 271 LINE",
"448 381 LINE",
"396 381 LINE",
"396 483 LINE SMOOTH",
"396 584 OFFCURVE",
"396 584 OFFCURVE",
"341 584 CURVE SMOOTH",
"221 584 LINE",
"221 800 LINE",
"174 800 LINE",
"174 719 LINE",
"106 719 LINE",
"106 628 LINE",
"174 628 LINE",
"174 556 LINE SMOOTH",
"174 526 OFFCURVE",
"183 504 OFFCURVE",
"199 504 CURVE SMOOTH",
"317 504 LINE SMOOTH",
"348 504 OFFCURVE",
"348 504 OFFCURVE",
"348 306 CURVE SMOOTH",
"348 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 485;
}
);
note = uni1281;
},
{
glyphname = "ri_xi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "xi-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1931;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"454 0 LINE",
"454 110 LINE",
"402 110 LINE",
"402 483 LINE SMOOTH",
"402 584 OFFCURVE",
"402 584 OFFCURVE",
"347 584 CURVE SMOOTH",
"226 584 LINE",
"226 800 LINE",
"179 800 LINE",
"179 719 LINE",
"110 719 LINE",
"110 628 LINE",
"179 628 LINE",
"179 556 LINE SMOOTH",
"179 526 OFFCURVE",
"188 504 OFFCURVE",
"203 504 CURVE SMOOTH",
"323 504 LINE SMOOTH",
"354 504 OFFCURVE",
"354 504 OFFCURVE",
"354 306 CURVE SMOOTH",
"354 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 491;
}
);
note = uni1282;
},
{
glyphname = "ri_xee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "xee-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1901;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"446 0 LINE SMOOTH",
"470 0 OFFCURVE",
"486 17 OFFCURVE",
"496 50 CURVE SMOOTH",
"502 70 OFFCURVE",
"503 95 OFFCURVE",
"503 113 CURVE SMOOTH",
"503 143 OFFCURVE",
"502 166 OFFCURVE",
"489 187 CURVE SMOOTH",
"475 209 OFFCURVE",
"467 220 OFFCURVE",
"446 220 CURVE SMOOTH",
"441 220 LINE",
"441 483 LINE SMOOTH",
"441 584 OFFCURVE",
"441 584 OFFCURVE",
"387 584 CURVE SMOOTH",
"266 584 LINE",
"266 800 LINE",
"220 800 LINE",
"220 719 LINE",
"151 719 LINE",
"151 628 LINE",
"220 628 LINE",
"220 556 LINE SMOOTH",
"220 525 OFFCURVE",
"229 504 OFFCURVE",
"244 504 CURVE SMOOTH",
"362 504 LINE SMOOTH",
"393 504 OFFCURVE",
"393 504 OFFCURVE",
"393 306 CURVE SMOOTH",
"393 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"441 194 LINE",
"448 191 OFFCURVE",
"456 186 OFFCURVE",
"463 172 CURVE",
"468 161 OFFCURVE",
"473 143 OFFCURVE",
"473 109 CURVE SMOOTH",
"473 101 OFFCURVE",
"472 95 OFFCURVE",
"471 86 CURVE",
"471 86 OFFCURVE",
"466 56 OFFCURVE",
"463 51 CURVE",
"462 49 OFFCURVE",
"457 32 OFFCURVE",
"445 29 CURVE",
"444 28 OFFCURVE",
"443 28 OFFCURVE",
"441 26 CURVE"
);
}
);
width = 540;
}
);
note = uni1284;
},
{
glyphname = "ri_xe-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xe-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 483 LINE SMOOTH",
"430 584 OFFCURVE",
"430 584 OFFCURVE",
"376 584 CURVE SMOOTH",
"257 584 LINE",
"257 800 LINE",
"209 800 LINE",
"209 702 LINE",
"142 702 LINE",
"142 699 LINE",
"141 699 LINE",
"141 530 LINE",
"176 530 LINE",
"176 625 LINE SMOOTH",
"176 639 OFFCURVE",
"182 650 OFFCURVE",
"188 650 CURVE SMOOTH",
"209 650 LINE",
"209 504 LINE",
"353 504 LINE SMOOTH",
"384 504 OFFCURVE",
"384 504 OFFCURVE",
"384 306 CURVE SMOOTH",
"384 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 467;
}
);
note = uni1285;
},
{
glyphname = "ri_xwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1863;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"518 -200 LINE",
"518 0 LINE",
"442 0 LINE",
"442 483 LINE SMOOTH",
"442 584 OFFCURVE",
"442 584 OFFCURVE",
"387 584 CURVE SMOOTH",
"267 584 LINE",
"267 800 LINE",
"219 800 LINE",
"219 714 LINE",
"158 714 LINE",
"158 611 LINE",
"219 611 LINE",
"219 556 LINE SMOOTH",
"219 526 OFFCURVE",
"229 504 OFFCURVE",
"244 504 CURVE SMOOTH",
"364 504 LINE SMOOTH",
"393 504 OFFCURVE",
"393 504 OFFCURVE",
"393 306 CURVE SMOOTH",
"393 0 LINE",
"331 0 LINE",
"331 -62 LINE",
"467 -62 LINE",
"467 -200 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 555;
}
);
},
{
glyphname = "ri_na-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "na-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 483 LINE SMOOTH",
"377 584 OFFCURVE",
"377 584 OFFCURVE",
"324 584 CURVE SMOOTH",
"204 584 LINE",
"204 800 LINE",
"156 800 LINE",
"156 556 LINE SMOOTH",
"156 525 OFFCURVE",
"165 504 OFFCURVE",
"180 504 CURVE SMOOTH",
"300 504 LINE SMOOTH",
"330 504 OFFCURVE",
"330 504 OFFCURVE",
"330 306 CURVE SMOOTH",
"330 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 414;
}
);
},
{
glyphname = "ri_nu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1741;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"378 0 LINE",
"378 268 LINE",
"433 268 LINE",
"433 383 LINE",
"378 383 LINE",
"378 483 LINE SMOOTH",
"378 584 OFFCURVE",
"378 584 OFFCURVE",
"324 584 CURVE SMOOTH",
"204 584 LINE",
"204 800 LINE",
"156 800 LINE",
"156 556 LINE SMOOTH",
"156 525 OFFCURVE",
"165 504 OFFCURVE",
"180 504 CURVE SMOOTH",
"300 504 LINE SMOOTH",
"330 504 OFFCURVE",
"330 504 OFFCURVE",
"330 306 CURVE SMOOTH",
"330 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 470;
}
);
},
{
glyphname = "ri_ni-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ni-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1733;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"463 0 LINE",
"463 95 LINE",
"400 95 LINE",
"400 483 LINE SMOOTH",
"400 584 OFFCURVE",
"400 584 OFFCURVE",
"345 584 CURVE SMOOTH",
"225 584 LINE",
"225 800 LINE",
"177 800 LINE",
"177 556 LINE SMOOTH",
"177 528 OFFCURVE",
"186 504 OFFCURVE",
"202 504 CURVE SMOOTH",
"322 504 LINE SMOOTH",
"352 504 OFFCURVE",
"352 504 OFFCURVE",
"352 306 CURVE SMOOTH",
"352 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 500;
}
);
},
{
glyphname = "ri_nee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"439 0 LINE SMOOTH",
"462 0 OFFCURVE",
"479 16 OFFCURVE",
"490 56 CURVE SMOOTH",
"495 74 OFFCURVE",
"498 107 OFFCURVE",
"498 123 CURVE SMOOTH",
"498 161 OFFCURVE",
"493 184 OFFCURVE",
"483 204 CURVE SMOOTH",
"474 223 OFFCURVE",
"460 239 OFFCURVE",
"440 239 CURVE SMOOTH",
"424 239 LINE",
"424 483 LINE SMOOTH",
"424 584 OFFCURVE",
"424 584 OFFCURVE",
"370 584 CURVE SMOOTH",
"250 584 LINE",
"250 800 LINE",
"202 800 LINE",
"202 556 LINE SMOOTH",
"202 526 OFFCURVE",
"212 504 OFFCURVE",
"227 504 CURVE SMOOTH",
"347 504 LINE SMOOTH",
"376 504 OFFCURVE",
"376 504 OFFCURVE",
"376 306 CURVE SMOOTH",
"376 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"424 212 LINE",
"438 211 OFFCURVE",
"450 204 OFFCURVE",
"455 191 CURVE",
"464 170 OFFCURVE",
"465 145 OFFCURVE",
"465 118 CURVE SMOOTH",
"465 109 OFFCURVE",
"466 102 OFFCURVE",
"464 94 CURVE",
"463 74 OFFCURVE",
"461 69 OFFCURVE",
"456 55 CURVE SMOOTH",
"450 38 OFFCURVE",
"446 35 OFFCURVE",
"439 31 CURVE",
"435 29 OFFCURVE",
"431 26 OFFCURVE",
"424 26 CURVE"
);
}
);
width = 535;
}
);
note = uni1294;
},
{
glyphname = "ri_ne-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ne-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1575;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"413 -13 LINE",
"413 232 LINE SMOOTH",
"413 270 OFFCURVE",
"406 278 OFFCURVE",
"392 278 CURVE SMOOTH",
"338 278 LINE",
"418 490 LINE SMOOTH",
"424 507 OFFCURVE",
"418 584 OFFCURVE",
"394 584 CURVE SMOOTH",
"214 584 LINE",
"214 495 LINE",
"371 495 LINE",
"296 292 LINE SMOOTH",
"271 223 OFFCURVE",
"277 210 OFFCURVE",
"291 210 CURVE SMOOTH",
"365 210 LINE",
"365 -13 LINE"
);
}
);
width = 458;
}
);
note = uni1295;
},
{
glyphname = "ri_nya-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nya-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1669;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"440 0 LINE",
"440 483 LINE SMOOTH",
"440 584 OFFCURVE",
"440 584 OFFCURVE",
"385 584 CURVE SMOOTH",
"266 584 LINE",
"266 750 LINE",
"330 750 LINE",
"330 800 LINE",
"164 800 LINE",
"164 750 LINE",
"218 750 LINE",
"218 556 LINE SMOOTH",
"218 527 OFFCURVE",
"227 504 OFFCURVE",
"242 504 CURVE SMOOTH",
"362 504 LINE SMOOTH",
"392 504 OFFCURVE",
"392 504 OFFCURVE",
"392 306 CURVE SMOOTH",
"392 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 477;
}
);
note = uni1298;
},
{
glyphname = "ri_nyu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1851;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"449 0 LINE",
"449 271 LINE",
"501 271 LINE",
"501 381 LINE",
"449 381 LINE",
"449 483 LINE SMOOTH",
"449 584 OFFCURVE",
"449 584 OFFCURVE",
"394 584 CURVE SMOOTH",
"275 584 LINE",
"275 750 LINE",
"339 750 LINE",
"339 800 LINE",
"174 800 LINE",
"174 750 LINE",
"227 750 LINE",
"227 556 LINE SMOOTH",
"227 525 OFFCURVE",
"237 504 OFFCURVE",
"252 504 CURVE SMOOTH",
"372 504 LINE SMOOTH",
"401 504 OFFCURVE",
"401 504 OFFCURVE",
"401 306 CURVE SMOOTH",
"401 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 538;
}
);
note = uni1299;
},
{
glyphname = "ri_nyi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1853;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"527 0 LINE",
"527 110 LINE",
"475 110 LINE",
"475 483 LINE SMOOTH",
"475 584 OFFCURVE",
"475 584 OFFCURVE",
"421 584 CURVE SMOOTH",
"301 584 LINE",
"301 750 LINE",
"374 750 LINE",
"374 800 LINE",
"200 800 LINE",
"200 750 LINE",
"253 750 LINE",
"253 556 LINE SMOOTH",
"253 525 OFFCURVE",
"263 504 OFFCURVE",
"278 504 CURVE SMOOTH",
"398 504 LINE SMOOTH",
"427 504 OFFCURVE",
"427 504 OFFCURVE",
"427 306 CURVE SMOOTH",
"427 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 564;
}
);
note = uni129A;
},
{
glyphname = "ri_nyee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"469 0 LINE SMOOTH",
"491 0 OFFCURVE",
"509 18 OFFCURVE",
"519 51 CURVE",
"524 70 OFFCURVE",
"527 96 OFFCURVE",
"527 117 CURVE SMOOTH",
"527 146 OFFCURVE",
"522 175 OFFCURVE",
"513 193 CURVE",
"497 217 OFFCURVE",
"485 226 OFFCURVE",
"470 226 CURVE SMOOTH",
"444 226 LINE",
"444 483 LINE SMOOTH",
"444 584 OFFCURVE",
"444 584 OFFCURVE",
"391 584 CURVE SMOOTH",
"270 584 LINE",
"270 750 LINE",
"359 750 LINE",
"359 800 LINE",
"168 800 LINE",
"168 750 LINE",
"224 750 LINE",
"224 556 LINE SMOOTH",
"224 525 OFFCURVE",
"233 504 OFFCURVE",
"247 504 CURVE SMOOTH",
"367 504 LINE SMOOTH",
"398 504 OFFCURVE",
"398 504 OFFCURVE",
"398 306 CURVE SMOOTH",
"398 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 87 LINE",
"131 86 LINE SMOOTH",
"99 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"444 200 LINE",
"451 200 LINE SMOOTH",
"464 200 OFFCURVE",
"477 196 OFFCURVE",
"486 175 CURVE SMOOTH",
"492 161 OFFCURVE",
"495 138 OFFCURVE",
"495 111 CURVE SMOOTH",
"495 103 OFFCURVE",
"494 96 OFFCURVE",
"493 88 CURVE",
"494 81 OFFCURVE",
"490 66 OFFCURVE",
"486 52 CURVE",
"480 37 OFFCURVE",
"474 35 OFFCURVE",
"467 29 CURVE",
"465 28 OFFCURVE",
"458 25 OFFCURVE",
"452 25 CURVE SMOOTH",
"444 25 LINE"
);
}
);
width = 564;
}
);
note = uni129C;
},
{
glyphname = "ri_ga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 437 LINE SMOOTH",
"377 527 OFFCURVE",
"355 585 OFFCURVE",
"329 585 CURVE SMOOTH",
"153 585 LINE",
"153 497 LINE",
"283 498 LINE SMOOTH",
"321 498 OFFCURVE",
"332 498 OFFCURVE",
"332 351 CURVE SMOOTH",
"332 241 OFFCURVE",
"330 58 OFFCURVE",
"330 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 414;
}
);
},
{
glyphname = "ri_gu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"377 0 LINE",
"377 274 LINE",
"431 274 LINE",
"431 389 LINE",
"377 389 LINE",
"377 437 LINE SMOOTH",
"377 527 OFFCURVE",
"355 585 OFFCURVE",
"329 585 CURVE SMOOTH",
"154 585 LINE",
"153 497 LINE",
"284 498 LINE SMOOTH",
"321 498 OFFCURVE",
"332 497 OFFCURVE",
"332 351 CURVE SMOOTH",
"332 241 OFFCURVE",
"331 58 OFFCURVE",
"331 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 468;
}
);
},
{
glyphname = "ri_gi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"450 0 LINE",
"450 72 LINE",
"392 72 LINE",
"392 437 LINE SMOOTH",
"392 527 OFFCURVE",
"371 585 OFFCURVE",
"344 585 CURVE SMOOTH",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"339 498 OFFCURVE",
"347 492 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"261 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 487;
}
);
note = uni130A;
},
{
glyphname = "ri_gaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 710, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1517;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 183, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 467;
}
);
note = uni130B;
},
{
glyphname = "ri_gee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1759;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"408 -4 LINE SMOOTH",
"423 -4 OFFCURVE",
"435 8 OFFCURVE",
"445 31 CURVE SMOOTH",
"453 50 OFFCURVE",
"458 79 OFFCURVE",
"458 117 CURVE SMOOTH",
"458 144 OFFCURVE",
"455 168 OFFCURVE",
"451 187 CURVE SMOOTH",
"443 224 OFFCURVE",
"430 244 OFFCURVE",
"408 244 CURVE SMOOTH",
"392 244 LINE",
"392 432 LINE SMOOTH",
"392 515 OFFCURVE",
"372 579 OFFCURVE",
"344 579 CURVE SMOOTH",
"168 580 LINE",
"169 492 LINE",
"299 492 LINE SMOOTH",
"335 492 OFFCURVE",
"347 492 OFFCURVE",
"347 347 CURVE SMOOTH",
"347 237 OFFCURVE",
"346 53 OFFCURVE",
"346 -4 CURVE"
);
},
{
closed = 1;
nodes = (
"392 217 LINE",
"393 217 LINE SMOOTH",
"400 217 OFFCURVE",
"402 216 OFFCURVE",
"406 212 CURVE",
"413 206 OFFCURVE",
"419 204 OFFCURVE",
"422 186 CURVE",
"422 186 OFFCURVE",
"427 168 OFFCURVE",
"429 147 CURVE",
"431 139 OFFCURVE",
"430 127 OFFCURVE",
"430 121 CURVE SMOOTH",
"430 83 OFFCURVE",
"427 65 OFFCURVE",
"422 48 CURVE SMOOTH",
"417 31 OFFCURVE",
"407 24 OFFCURVE",
"394 24 CURVE SMOOTH",
"392 24 LINE"
);
}
);
width = 495;
}
);
note = uni130C;
},
{
glyphname = "ri_ge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"390 0 LINE",
"390 437 LINE SMOOTH",
"390 525 OFFCURVE",
"368 585 OFFCURVE",
"342 585 CURVE SMOOTH",
"166 585 LINE",
"165 497 LINE",
"166 497 LINE",
"166 462 LINE SMOOTH",
"166 425 OFFCURVE",
"174 403 OFFCURVE",
"183 385 CURVE SMOOTH",
"193 365 OFFCURVE",
"208 358 OFFCURVE",
"224 358 CURVE SMOOTH",
"235 358 OFFCURVE",
"248 362 OFFCURVE",
"258 371 CURVE SMOOTH",
"276 387 OFFCURVE",
"284 423 OFFCURVE",
"284 462 CURVE SMOOTH",
"284 498 LINE",
"297 498 LINE SMOOTH",
"332 498 OFFCURVE",
"345 497 OFFCURVE",
"345 351 CURVE SMOOTH",
"345 241 OFFCURVE",
"342 58 OFFCURVE",
"342 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"98 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"213 414 OFFCURVE",
"196 422 OFFCURVE",
"190 432 CURVE",
"184 443 OFFCURVE",
"180 468 OFFCURVE",
"180 492 CURVE SMOOTH",
"180 497 LINE",
"272 498 LINE",
"272 491 LINE SMOOTH",
"272 482 OFFCURVE",
"271 469 OFFCURVE",
"270 464 CURVE",
"266 450 OFFCURVE",
"264 437 OFFCURVE",
"258 431 CURVE",
"249 423 OFFCURVE",
"244 421 OFFCURVE",
"239 417 CURVE",
"236 415 OFFCURVE",
"229 414 OFFCURVE",
"226 414 CURVE SMOOTH"
);
}
);
width = 427;
}
);
note = uni130D;
},
{
glyphname = "ri_go-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "go-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"410 0 LINE",
"410 437 LINE SMOOTH",
"410 541 OFFCURVE",
"388 584 OFFCURVE",
"362 584 CURVE SMOOTH",
"295 584 LINE",
"295 800 LINE",
"259 800 LINE",
"259 585 LINE",
"186 585 LINE",
"185 497 LINE",
"317 498 LINE SMOOTH",
"354 498 OFFCURVE",
"365 497 OFFCURVE",
"365 351 CURVE SMOOTH",
"365 241 OFFCURVE",
"364 58 OFFCURVE",
"364 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 447;
}
);
},
{
glyphname = "ri_gwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1579;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"478 -200 LINE",
"478 161 LINE",
"440 161 LINE",
"440 437 LINE SMOOTH",
"440 527 OFFCURVE",
"418 585 OFFCURVE",
"392 585 CURVE SMOOTH",
"216 585 LINE",
"215 497 LINE",
"347 498 LINE SMOOTH",
"382 498 OFFCURVE",
"395 498 OFFCURVE",
"395 351 CURVE SMOOTH",
"395 257 OFFCURVE",
"393 198 OFFCURVE",
"394 147 CURVE",
"309 139 LINE",
"343 61 LINE",
"394 120 LINE",
"428 120 LINE",
"428 -200 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 515;
}
);
note = uni1313;
},
{
glyphname = "ri_gga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"392 0 LINE",
"392 437 LINE SMOOTH",
"392 538 OFFCURVE",
"372 584 OFFCURVE",
"343 584 CURVE SMOOTH",
"267 584 LINE",
"267 750 LINE",
"319 750 LINE",
"319 800 LINE",
"194 800 LINE",
"194 750 LINE",
"244 750 LINE",
"244 585 LINE",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"338 498 OFFCURVE",
"347 491 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 429;
}
);
},
{
glyphname = "ri_ggu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"392 0 LINE",
"392 437 LINE SMOOTH",
"392 538 OFFCURVE",
"372 584 OFFCURVE",
"343 584 CURVE SMOOTH",
"267 584 LINE",
"267 757 LINE",
"331 757 LINE",
"331 800 LINE",
"196 800 LINE",
"196 757 LINE",
"247 757 LINE",
"247 585 LINE",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"338 498 OFFCURVE",
"347 491 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 429;
}
);
},
{
glyphname = "ri_ggi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"461 0 LINE",
"461 61 LINE",
"392 61 LINE",
"392 437 LINE SMOOTH",
"392 538 OFFCURVE",
"372 584 OFFCURVE",
"343 584 CURVE SMOOTH",
"274 584 LINE",
"274 750 LINE",
"325 750 LINE",
"325 800 LINE",
"199 800 LINE",
"199 750 LINE",
"250 750 LINE",
"250 585 LINE",
"168 585 LINE",
"169 497 LINE",
"299 498 LINE SMOOTH",
"338 498 OFFCURVE",
"347 491 OFFCURVE",
"347 351 CURVE SMOOTH",
"347 241 OFFCURVE",
"346 58 OFFCURVE",
"346 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 498;
}
);
},
{
glyphname = "ri_ggaa-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 720, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1556;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 173, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"261 87 LINE",
"130 86 LINE SMOOTH",
"91 86 OFFCURVE",
"83 93 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
}
);
width = 569;
}
);
},
{
glyphname = "ri_ggee-ethiopic.liga";
lastChange = "2020-11-26 07:08:22 +0000";
layers = (
{
components = (
{
name = "ggee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"408 -4 LINE SMOOTH",
"423 -4 OFFCURVE",
"435 8 OFFCURVE",
"445 31 CURVE SMOOTH",
"453 50 OFFCURVE",
"458 79 OFFCURVE",
"458 117 CURVE SMOOTH",
"458 144 OFFCURVE",
"455 168 OFFCURVE",
"451 187 CURVE SMOOTH",
"443 224 OFFCURVE",
"430 244 OFFCURVE",
"408 244 CURVE SMOOTH",
"392 244 LINE",
"392 432 LINE SMOOTH",
"392 532 OFFCURVE",
"372 579 OFFCURVE",
"343 579 CURVE SMOOTH",
"266 579 LINE",
"266 750 LINE",
"325 750 LINE",
"325 800 LINE",
"199 800 LINE",
"199 750 LINE",
"245 750 LINE",
"245 580 LINE",
"168 580 LINE",
"169 492 LINE",
"299 492 LINE SMOOTH",
"335 492 OFFCURVE",
"347 492 OFFCURVE",
"347 347 CURVE SMOOTH",
"347 237 OFFCURVE",
"346 53 OFFCURVE",
"346 -4 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"392 217 LINE",
"393 217 LINE SMOOTH",
"400 217 OFFCURVE",
"402 216 OFFCURVE",
"406 212 CURVE",
"413 206 OFFCURVE",
"419 204 OFFCURVE",
"422 186 CURVE",
"424 180 OFFCURVE",
"428 156 OFFCURVE",
"429 148 CURVE SMOOTH",
"430 138 OFFCURVE",
"430 131 OFFCURVE",
"430 121 CURVE SMOOTH",
"430 83 OFFCURVE",
"427 65 OFFCURVE",
"422 48 CURVE SMOOTH",
"417 31 OFFCURVE",
"406 24 OFFCURVE",
"394 24 CURVE SMOOTH",
"392 24 LINE"
);
}
);
width = 495;
}
);
},
{
glyphname = "ri_gge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1703;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"395 0 LINE",
"395 437 LINE SMOOTH",
"395 542 OFFCURVE",
"373 584 OFFCURVE",
"347 584 CURVE SMOOTH",
"304 584 LINE",
"304 750 LINE",
"364 750 LINE",
"364 800 LINE",
"199 800 LINE",
"199 750 LINE",
"278 750 LINE",
"278 584 LINE",
"171 585 LINE",
"170 497 LINE",
"171 497 LINE",
"171 462 LINE SMOOTH",
"171 427 OFFCURVE",
"178 403 OFFCURVE",
"189 383 CURVE SMOOTH",
"199 365 OFFCURVE",
"211 358 OFFCURVE",
"228 358 CURVE SMOOTH",
"243 358 OFFCURVE",
"255 364 OFFCURVE",
"263 371 CURVE",
"284 391 OFFCURVE",
"290 428 OFFCURVE",
"290 462 CURVE SMOOTH",
"290 498 LINE",
"302 498 LINE SMOOTH",
"338 498 OFFCURVE",
"350 496 OFFCURVE",
"350 351 CURVE SMOOTH",
"350 241 OFFCURVE",
"349 58 OFFCURVE",
"349 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"212 414 OFFCURVE",
"203 423 OFFCURVE",
"197 432 CURVE SMOOTH",
"185 449 OFFCURVE",
"185 475 OFFCURVE",
"185 492 CURVE SMOOTH",
"185 497 LINE",
"277 498 LINE",
"277 491 LINE SMOOTH",
"277 480 OFFCURVE",
"275 471 OFFCURVE",
"275 464 CURVE",
"272 452 OFFCURVE",
"270 438 OFFCURVE",
"262 431 CURVE",
"249 418 OFFCURVE",
"254 424 OFFCURVE",
"245 417 CURVE",
"239 415 OFFCURVE",
"234 414 OFFCURVE",
"232 414 CURVE SMOOTH"
);
}
);
width = 432;
}
);
},
{
glyphname = "ri_ggo-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggo-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"395 0 LINE",
"395 437 LINE SMOOTH",
"395 542 OFFCURVE",
"373 584 OFFCURVE",
"347 584 CURVE SMOOTH",
"323 584 LINE",
"323 667 LINE SMOOTH",
"323 701 OFFCURVE",
"318 729 OFFCURVE",
"308 747 CURVE",
"376 747 LINE",
"376 800 LINE",
"201 800 LINE",
"201 747 LINE",
"245 747 LINE",
"243 745 LINE",
"230 714 OFFCURVE",
"228 688 OFFCURVE",
"228 667 CURVE SMOOTH",
"228 585 LINE",
"171 585 LINE",
"170 497 LINE",
"301 498 LINE SMOOTH",
"335 498 OFFCURVE",
"350 498 OFFCURVE",
"350 351 CURVE SMOOTH",
"350 241 OFFCURVE",
"348 58 OFFCURVE",
"348 0 CURVE"
);
},
{
closed = 1;
nodes = (
"240 585 LINE",
"240 636 LINE SMOOTH",
"240 659 OFFCURVE",
"242 687 OFFCURVE",
"247 695 CURVE SMOOTH",
"254 707 OFFCURVE",
"262 714 OFFCURVE",
"276 714 CURVE SMOOTH",
"278 714 OFFCURVE",
"283 713 OFFCURVE",
"286 711 CURVE SMOOTH",
"298 703 OFFCURVE",
"293 704 OFFCURVE",
"301 697 CURVE",
"305 692 OFFCURVE",
"309 677 OFFCURVE",
"312 664 CURVE",
"311 657 OFFCURVE",
"312 648 OFFCURVE",
"312 637 CURVE SMOOTH",
"312 584 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 432;
}
);
},
{
glyphname = "ri_ggwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
},
{
name = "ri-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1605;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"515 -200 LINE",
"515 -8 LINE",
"514 -8 LINE",
"514 7 LINE",
"478 7 LINE",
"478 437 LINE SMOOTH",
"478 541 OFFCURVE",
"456 584 OFFCURVE",
"430 584 CURVE SMOOTH",
"354 584 LINE",
"354 750 LINE",
"404 750 LINE",
"404 800 LINE",
"280 800 LINE",
"280 750 LINE",
"330 750 LINE",
"330 585 LINE",
"255 585 LINE",
"255 497 LINE",
"385 498 LINE SMOOTH",
"422 498 OFFCURVE",
"432 497 OFFCURVE",
"432 351 CURVE SMOOTH",
"432 7 LINE",
"341 7 LINE",
"341 -20 LINE",
"472 -20 LINE",
"472 -200 LINE"
);
},
{
closed = 1;
nodes = (
"262 87 LINE",
"130 86 LINE SMOOTH",
"97 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
}
);
width = 552;
}
);
},
{
glyphname = "raa_xa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"434 0 LINE",
"434 483 LINE SMOOTH",
"434 584 OFFCURVE",
"434 584 OFFCURVE",
"380 584 CURVE SMOOTH",
"260 584 LINE",
"260 800 LINE",
"212 800 LINE",
"212 719 LINE",
"144 719 LINE",
"144 628 LINE",
"212 628 LINE",
"212 556 LINE SMOOTH",
"212 526 OFFCURVE",
"222 504 OFFCURVE",
"237 504 CURVE SMOOTH",
"355 504 LINE SMOOTH",
"386 504 OFFCURVE",
"386 504 OFFCURVE",
"386 306 CURVE SMOOTH",
"386 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"171 156 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"96 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 471;
}
);
note = uni1280;
},
{
glyphname = "raa_xu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1947;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"444 0 LINE",
"444 271 LINE",
"495 271 LINE",
"495 381 LINE",
"444 381 LINE",
"444 483 LINE SMOOTH",
"444 584 OFFCURVE",
"444 584 OFFCURVE",
"389 584 CURVE SMOOTH",
"270 584 LINE",
"270 800 LINE",
"222 800 LINE",
"222 719 LINE",
"153 719 LINE",
"153 628 LINE",
"222 628 LINE",
"222 556 LINE SMOOTH",
"222 527 OFFCURVE",
"231 504 OFFCURVE",
"245 504 CURVE SMOOTH",
"366 504 LINE SMOOTH",
"396 504 OFFCURVE",
"396 504 OFFCURVE",
"396 306 CURVE SMOOTH",
"396 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"90 85 OFFCURVE",
"83 86 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 532;
}
);
note = uni1281;
},
{
glyphname = "raa_xi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1939;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"519 0 LINE",
"519 110 LINE",
"467 110 LINE",
"467 483 LINE SMOOTH",
"467 584 OFFCURVE",
"467 584 OFFCURVE",
"413 584 CURVE SMOOTH",
"294 584 LINE",
"294 800 LINE",
"245 800 LINE",
"245 719 LINE",
"178 719 LINE",
"178 628 LINE",
"245 628 LINE",
"245 556 LINE SMOOTH",
"245 528 OFFCURVE",
"254 504 OFFCURVE",
"271 504 CURVE SMOOTH",
"389 504 LINE SMOOTH",
"420 504 OFFCURVE",
"420 504 OFFCURVE",
"420 306 CURVE SMOOTH",
"420 0 LINE"
);
},
{
closed = 1;
nodes = (
"178 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"184 87 CURVE",
"157 87 LINE",
"131 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 556;
}
);
note = uni1282;
},
{
glyphname = "raa_xee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"478 0 LINE SMOOTH",
"497 0 OFFCURVE",
"516 11 OFFCURVE",
"528 52 CURVE SMOOTH",
"533 69 OFFCURVE",
"535 94 OFFCURVE",
"535 113 CURVE SMOOTH",
"535 145 OFFCURVE",
"533 166 OFFCURVE",
"521 186 CURVE SMOOTH",
"504 214 OFFCURVE",
"494 220 OFFCURVE",
"477 220 CURVE SMOOTH",
"473 220 LINE",
"473 483 LINE SMOOTH",
"473 584 OFFCURVE",
"473 584 OFFCURVE",
"419 584 CURVE SMOOTH",
"298 584 LINE",
"298 800 LINE",
"251 800 LINE",
"251 719 LINE",
"182 719 LINE",
"182 628 LINE",
"251 628 LINE",
"251 556 LINE SMOOTH",
"251 526 OFFCURVE",
"260 504 OFFCURVE",
"275 504 CURVE SMOOTH",
"393 504 LINE SMOOTH",
"424 504 OFFCURVE",
"424 504 OFFCURVE",
"424 306 CURVE SMOOTH",
"424 0 LINE"
);
},
{
closed = 1;
nodes = (
"178 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"184 87 CURVE",
"157 87 LINE",
"131 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"473 194 LINE",
"487 187 OFFCURVE",
"489 183 OFFCURVE",
"494 172 CURVE SMOOTH",
"501 156 OFFCURVE",
"504 142 OFFCURVE",
"504 109 CURVE SMOOTH",
"504 101 OFFCURVE",
"503 95 OFFCURVE",
"502 86 CURVE",
"498 59 OFFCURVE",
"498 65 OFFCURVE",
"495 51 CURVE",
"490 40 OFFCURVE",
"487 35 OFFCURVE",
"477 29 CURVE",
"475 28 OFFCURVE",
"474 28 OFFCURVE",
"473 26 CURVE"
);
}
);
width = 572;
}
);
note = uni1284;
},
{
glyphname = "raa_xe-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xe-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"461 0 LINE",
"461 483 LINE SMOOTH",
"461 584 OFFCURVE",
"461 584 OFFCURVE",
"406 584 CURVE SMOOTH",
"286 584 LINE",
"286 800 LINE",
"238 800 LINE",
"238 702 LINE",
"173 702 LINE",
"173 699 LINE",
"170 699 LINE",
"170 530 LINE",
"204 530 LINE",
"204 625 LINE SMOOTH",
"204 639 OFFCURVE",
"210 650 OFFCURVE",
"216 650 CURVE SMOOTH",
"238 650 LINE",
"238 504 LINE",
"382 504 LINE SMOOTH",
"413 504 OFFCURVE",
"413 504 OFFCURVE",
"413 306 CURVE SMOOTH",
"413 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 498;
}
);
note = uni1285;
},
{
glyphname = "raa_xwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1863;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"571 -200 LINE",
"571 0 LINE",
"494 0 LINE",
"494 483 LINE SMOOTH",
"494 584 OFFCURVE",
"494 584 OFFCURVE",
"439 584 CURVE SMOOTH",
"320 584 LINE",
"320 800 LINE",
"272 800 LINE",
"272 714 LINE",
"210 714 LINE",
"210 611 LINE",
"272 611 LINE",
"272 556 LINE SMOOTH",
"272 524 OFFCURVE",
"282 504 OFFCURVE",
"296 504 CURVE SMOOTH",
"416 504 LINE SMOOTH",
"446 504 OFFCURVE",
"446 504 OFFCURVE",
"446 306 CURVE SMOOTH",
"446 0 LINE",
"384 0 LINE",
"384 -62 LINE",
"520 -62 LINE",
"520 -200 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 608;
}
);
},
{
glyphname = "raa_na-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "na-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"440 0 LINE",
"440 483 LINE SMOOTH",
"440 584 OFFCURVE",
"440 584 OFFCURVE",
"385 584 CURVE SMOOTH",
"266 584 LINE",
"266 800 LINE",
"218 800 LINE",
"218 556 LINE SMOOTH",
"218 527 OFFCURVE",
"227 504 OFFCURVE",
"242 504 CURVE SMOOTH",
"362 504 LINE SMOOTH",
"392 504 OFFCURVE",
"392 504 OFFCURVE",
"392 306 CURVE SMOOTH",
"392 0 LINE"
);
},
{
closed = 1;
nodes = (
"178 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"184 87 CURVE",
"157 87 LINE",
"131 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 477;
}
);
},
{
glyphname = "raa_nu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1741;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"425 0 LINE",
"425 268 LINE",
"481 268 LINE",
"481 383 LINE",
"425 383 LINE",
"425 483 LINE SMOOTH",
"425 584 OFFCURVE",
"425 584 OFFCURVE",
"372 584 CURVE SMOOTH",
"251 584 LINE",
"251 800 LINE",
"204 800 LINE",
"204 556 LINE SMOOTH",
"204 526 OFFCURVE",
"213 504 OFFCURVE",
"227 504 CURVE SMOOTH",
"347 504 LINE SMOOTH",
"378 504 OFFCURVE",
"378 504 OFFCURVE",
"378 306 CURVE SMOOTH",
"378 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 249 OFFCURVE",
"159 212 OFFCURVE",
"166 179 CURVE SMOOTH",
"172 151 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 518;
}
);
},
{
glyphname = "raa_ni-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ni-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1733;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"506 0 LINE",
"506 95 LINE",
"444 95 LINE",
"444 483 LINE SMOOTH",
"444 584 OFFCURVE",
"444 584 OFFCURVE",
"389 584 CURVE SMOOTH",
"268 584 LINE",
"268 800 LINE",
"221 800 LINE",
"221 556 LINE SMOOTH",
"221 526 OFFCURVE",
"230 504 OFFCURVE",
"245 504 CURVE SMOOTH",
"364 504 LINE SMOOTH",
"395 504 OFFCURVE",
"395 504 OFFCURVE",
"395 306 CURVE SMOOTH",
"395 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 249 OFFCURVE",
"159 212 OFFCURVE",
"166 179 CURVE SMOOTH",
"172 151 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 543;
}
);
},
{
glyphname = "raa_nee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"464 0 LINE SMOOTH",
"486 0 OFFCURVE",
"502 14 OFFCURVE",
"513 54 CURVE SMOOTH",
"519 76 OFFCURVE",
"521 96 OFFCURVE",
"521 123 CURVE SMOOTH",
"521 157 OFFCURVE",
"517 184 OFFCURVE",
"508 201 CURVE SMOOTH",
"490 236 OFFCURVE",
"477 239 OFFCURVE",
"464 239 CURVE SMOOTH",
"448 239 LINE",
"448 483 LINE SMOOTH",
"448 584 OFFCURVE",
"448 584 OFFCURVE",
"393 584 CURVE SMOOTH",
"274 584 LINE",
"274 800 LINE",
"226 800 LINE",
"226 556 LINE SMOOTH",
"226 527 OFFCURVE",
"235 504 OFFCURVE",
"251 504 CURVE SMOOTH",
"371 504 LINE SMOOTH",
"402 504 OFFCURVE",
"402 504 OFFCURVE",
"402 306 CURVE SMOOTH",
"402 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 249 OFFCURVE",
"159 212 OFFCURVE",
"166 179 CURVE SMOOTH",
"172 151 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"448 212 LINE",
"464 211 OFFCURVE",
"474 203 OFFCURVE",
"481 188 CURVE",
"486 173 OFFCURVE",
"491 149 OFFCURVE",
"491 118 CURVE SMOOTH",
"491 112 OFFCURVE",
"490 105 OFFCURVE",
"488 90 CURVE",
"488 88 OFFCURVE",
"484 62 OFFCURVE",
"481 55 CURVE",
"476 42 OFFCURVE",
"470 35 OFFCURVE",
"463 31 CURVE SMOOTH",
"458 28 OFFCURVE",
"452 26 OFFCURVE",
"448 26 CURVE"
);
}
);
width = 558;
}
);
note = uni1294;
},
{
glyphname = "raa_ne-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ne-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1575;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"466 -13 LINE",
"466 232 LINE SMOOTH",
"466 270 OFFCURVE",
"460 278 OFFCURVE",
"445 278 CURVE SMOOTH",
"392 278 LINE",
"472 490 LINE SMOOTH",
"478 507 OFFCURVE",
"472 584 OFFCURVE",
"448 584 CURVE SMOOTH",
"266 584 LINE",
"266 495 LINE",
"423 495 LINE",
"350 292 LINE SMOOTH",
"321 210 OFFCURVE",
"333 210 OFFCURVE",
"344 210 CURVE SMOOTH",
"418 210 LINE",
"418 -13 LINE"
);
}
);
width = 512;
}
);
note = uni1295;
},
{
glyphname = "raa_nya-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nya-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1669;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"487 0 LINE",
"487 483 LINE SMOOTH",
"487 584 OFFCURVE",
"487 584 OFFCURVE",
"432 584 CURVE SMOOTH",
"313 584 LINE",
"313 750 LINE",
"377 750 LINE",
"377 800 LINE",
"212 800 LINE",
"212 750 LINE",
"265 750 LINE",
"265 556 LINE SMOOTH",
"265 525 OFFCURVE",
"275 504 OFFCURVE",
"290 504 CURVE SMOOTH",
"410 504 LINE SMOOTH",
"439 504 OFFCURVE",
"439 504 OFFCURVE",
"439 306 CURVE SMOOTH",
"439 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 250 OFFCURVE",
"158 216 OFFCURVE",
"166 179 CURVE SMOOTH",
"171 158 OFFCURVE",
"191 87 OFFCURVE",
"183 87 CURVE SMOOTH",
"156 87 LINE",
"130 86 LINE SMOOTH",
"96 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 524;
}
);
note = uni1298;
},
{
glyphname = "raa_nyu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1851;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"473 0 LINE",
"473 271 LINE",
"524 271 LINE",
"524 381 LINE",
"473 381 LINE",
"473 483 LINE SMOOTH",
"473 584 OFFCURVE",
"473 584 OFFCURVE",
"418 584 CURVE SMOOTH",
"299 584 LINE",
"299 750 LINE",
"363 750 LINE",
"363 800 LINE",
"197 800 LINE",
"197 750 LINE",
"251 750 LINE",
"251 556 LINE SMOOTH",
"251 527 OFFCURVE",
"260 504 OFFCURVE",
"276 504 CURVE SMOOTH",
"395 504 LINE SMOOTH",
"425 504 OFFCURVE",
"425 504 OFFCURVE",
"425 306 CURVE SMOOTH",
"425 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"171 156 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"96 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 561;
}
);
note = uni1299;
},
{
glyphname = "raa_nyi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1853;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"527 0 LINE",
"527 110 LINE",
"475 110 LINE",
"475 483 LINE SMOOTH",
"475 584 OFFCURVE",
"475 584 OFFCURVE",
"421 584 CURVE SMOOTH",
"301 584 LINE",
"301 750 LINE",
"374 750 LINE",
"374 800 LINE",
"200 800 LINE",
"200 750 LINE",
"253 750 LINE",
"253 556 LINE SMOOTH",
"253 525 OFFCURVE",
"263 504 OFFCURVE",
"278 504 CURVE SMOOTH",
"398 504 LINE SMOOTH",
"427 504 OFFCURVE",
"427 504 OFFCURVE",
"427 306 CURVE SMOOTH",
"427 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"253 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH",
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"169 160 OFFCURVE",
"190 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
}
);
width = 564;
}
);
note = uni129A;
},
{
glyphname = "raa_nyee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"502 0 LINE SMOOTH",
"525 0 OFFCURVE",
"542 18 OFFCURVE",
"551 50 CURVE SMOOTH",
"555 64 OFFCURVE",
"560 92 OFFCURVE",
"560 117 CURVE SMOOTH",
"560 148 OFFCURVE",
"555 174 OFFCURVE",
"546 193 CURVE",
"533 213 OFFCURVE",
"520 226 OFFCURVE",
"503 226 CURVE SMOOTH",
"478 226 LINE",
"478 483 LINE SMOOTH",
"478 584 OFFCURVE",
"478 584 OFFCURVE",
"424 584 CURVE SMOOTH",
"303 584 LINE",
"303 750 LINE",
"392 750 LINE",
"392 800 LINE",
"203 800 LINE",
"203 750 LINE",
"256 750 LINE",
"256 556 LINE SMOOTH",
"256 524 OFFCURVE",
"266 504 OFFCURVE",
"280 504 CURVE SMOOTH",
"399 504 LINE SMOOTH",
"431 504 OFFCURVE",
"431 504 OFFCURVE",
"431 306 CURVE SMOOTH",
"431 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"253 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH",
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"169 160 OFFCURVE",
"190 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"478 200 LINE",
"485 200 LINE SMOOTH",
"499 200 OFFCURVE",
"510 194 OFFCURVE",
"518 177 CURVE SMOOTH",
"525 162 OFFCURVE",
"528 133 OFFCURVE",
"528 111 CURVE SMOOTH",
"528 104 OFFCURVE",
"527 94 OFFCURVE",
"526 88 CURVE",
"525 75 OFFCURVE",
"521 60 OFFCURVE",
"519 52 CURVE",
"513 36 OFFCURVE",
"505 33 OFFCURVE",
"501 29 CURVE",
"495 27 OFFCURVE",
"490 25 OFFCURVE",
"485 25 CURVE SMOOTH",
"478 25 LINE"
);
}
);
width = 597;
}
);
note = uni129C;
},
{
glyphname = "raa_ga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"449 0 LINE",
"449 437 LINE SMOOTH",
"449 527 OFFCURVE",
"427 585 OFFCURVE",
"401 585 CURVE SMOOTH",
"224 585 LINE",
"224 497 LINE",
"356 498 LINE SMOOTH",
"389 498 OFFCURVE",
"403 497 OFFCURVE",
"403 351 CURVE SMOOTH",
"403 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 486;
}
);
},
{
glyphname = "raa_gu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"425 0 LINE",
"425 274 LINE",
"479 274 LINE",
"479 389 LINE",
"425 389 LINE",
"425 437 LINE SMOOTH",
"425 526 OFFCURVE",
"403 585 OFFCURVE",
"376 585 CURVE SMOOTH",
"202 585 LINE",
"201 497 LINE",
"332 498 LINE SMOOTH",
"371 498 OFFCURVE",
"381 493 OFFCURVE",
"381 351 CURVE SMOOTH",
"381 241 OFFCURVE",
"378 58 OFFCURVE",
"378 0 CURVE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 516;
}
);
},
{
glyphname = "raa_gi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"473 0 LINE",
"473 72 LINE",
"416 72 LINE",
"416 437 LINE SMOOTH",
"416 525 OFFCURVE",
"394 585 OFFCURVE",
"368 585 CURVE SMOOTH",
"193 585 LINE",
"192 497 LINE",
"323 498 LINE SMOOTH",
"355 498 OFFCURVE",
"372 498 OFFCURVE",
"372 351 CURVE SMOOTH",
"372 241 OFFCURVE",
"370 58 OFFCURVE",
"370 0 CURVE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"253 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH",
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"169 160 OFFCURVE",
"190 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
}
);
width = 510;
}
);
note = uni130A;
},
{
glyphname = "raa_gaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 735, 0}";
},
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1534;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 189, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"171 156 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"96 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 603;
}
);
note = uni130B;
},
{
glyphname = "raa_gee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1759;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"169 160 OFFCURVE",
"190 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"253 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"491 224 OFFCURVE",
"475 244 OFFCURVE",
"455 244 CURVE SMOOTH",
"440 244 LINE",
"440 432 LINE SMOOTH",
"440 521 OFFCURVE",
"418 579 OFFCURVE",
"392 579 CURVE SMOOTH",
"215 580 LINE",
"216 492 LINE",
"347 492 LINE SMOOTH",
"384 492 OFFCURVE",
"394 491 OFFCURVE",
"394 347 CURVE SMOOTH",
"394 -4 LINE",
"455 -4 LINE SMOOTH",
"469 -4 OFFCURVE",
"482 7 OFFCURVE",
"492 30 CURVE SMOOTH",
"502 53 OFFCURVE",
"505 83 OFFCURVE",
"505 117 CURVE SMOOTH",
"505 141 OFFCURVE",
"503 166 OFFCURVE",
"499 187 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"477 93 OFFCURVE",
"475 65 OFFCURVE",
"470 48 CURVE",
"467 39 OFFCURVE",
"459 33 OFFCURVE",
"454 29 CURVE",
"443 217 LINE",
"443 217 OFFCURVE",
"451 212 OFFCURVE",
"454 212 CURVE",
"453 212 OFFCURVE",
"467 201 OFFCURVE",
"470 186 CURVE SMOOTH",
"474 166 OFFCURVE",
"473 164 OFFCURVE",
"477 147 CURVE",
"478 138 OFFCURVE",
"477 130 OFFCURVE",
"477 121 CURVE SMOOTH"
);
}
);
width = 542;
}
);
note = uni130C;
},
{
glyphname = "raa_ge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"456 0 LINE",
"456 437 LINE SMOOTH",
"456 524 OFFCURVE",
"436 585 OFFCURVE",
"408 585 CURVE SMOOTH",
"234 585 LINE",
"233 497 LINE",
"234 497 LINE",
"234 462 LINE SMOOTH",
"234 424 OFFCURVE",
"242 400 OFFCURVE",
"250 384 CURVE SMOOTH",
"260 365 OFFCURVE",
"274 358 OFFCURVE",
"292 358 CURVE SMOOTH",
"302 358 OFFCURVE",
"312 360 OFFCURVE",
"324 371 CURVE SMOOTH",
"342 387 OFFCURVE",
"352 417 OFFCURVE",
"352 462 CURVE SMOOTH",
"352 498 LINE",
"363 498 LINE SMOOTH",
"399 498 OFFCURVE",
"412 498 OFFCURVE",
"412 351 CURVE SMOOTH",
"412 241 OFFCURVE",
"410 58 OFFCURVE",
"410 0 CURVE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 249 OFFCURVE",
"156 227 OFFCURVE",
"167 176 CURVE SMOOTH",
"174 144 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"96 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 414 OFFCURVE",
"267 420 OFFCURVE",
"258 431 CURVE SMOOTH",
"251 440 OFFCURVE",
"247 466 OFFCURVE",
"247 492 CURVE SMOOTH",
"247 497 LINE",
"338 498 LINE",
"338 491 LINE SMOOTH",
"338 479 OFFCURVE",
"339 474 OFFCURVE",
"336 462 CURVE SMOOTH",
"333 450 OFFCURVE",
"332 438 OFFCURVE",
"325 431 CURVE",
"327 434 OFFCURVE",
"321 424 OFFCURVE",
"306 417 CURVE SMOOTH",
"300 414 OFFCURVE",
"295 414 OFFCURVE",
"293 414 CURVE SMOOTH"
);
}
);
width = 493;
}
);
note = uni130D;
},
{
glyphname = "raa_go-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "go-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"444 0 LINE",
"444 437 LINE SMOOTH",
"444 541 OFFCURVE",
"422 584 OFFCURVE",
"395 584 CURVE SMOOTH",
"329 584 LINE",
"329 800 LINE",
"293 800 LINE",
"293 585 LINE",
"220 585 LINE",
"219 497 LINE",
"351 498 LINE SMOOTH",
"384 498 OFFCURVE",
"398 497 OFFCURVE",
"398 351 CURVE SMOOTH",
"398 0 LINE"
);
},
{
closed = 1;
nodes = (
"178 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"184 87 CURVE",
"157 87 LINE",
"131 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 481;
}
);
},
{
glyphname = "raa_gwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1579;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"459 437 LINE SMOOTH",
"459 534 OFFCURVE",
"434 585 OFFCURVE",
"411 585 CURVE SMOOTH",
"235 585 LINE",
"236 497 LINE",
"366 498 LINE SMOOTH",
"403 498 OFFCURVE",
"414 497 OFFCURVE",
"414 351 CURVE SMOOTH",
"413 147 LINE",
"328 139 LINE",
"362 61 LINE",
"414 120 LINE",
"448 120 LINE",
"448 -200 LINE",
"496 -200 LINE",
"496 161 LINE",
"459 161 LINE"
);
},
{
closed = 1;
nodes = (
"154 249 OFFCURVE",
"156 227 OFFCURVE",
"167 176 CURVE SMOOTH",
"174 144 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"96 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH"
);
}
);
width = 533;
}
);
note = uni1313;
},
{
glyphname = "raa_gga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"431 0 LINE",
"431 437 LINE SMOOTH",
"431 540 OFFCURVE",
"409 584 OFFCURVE",
"382 584 CURVE SMOOTH",
"304 584 LINE",
"304 750 LINE",
"356 750 LINE",
"356 800 LINE",
"231 800 LINE",
"231 750 LINE",
"282 750 LINE",
"282 585 LINE",
"207 585 LINE",
"206 497 LINE",
"338 498 LINE SMOOTH",
"376 498 OFFCURVE",
"386 493 OFFCURVE",
"386 351 CURVE SMOOTH",
"386 241 OFFCURVE",
"383 58 OFFCURVE",
"383 0 CURVE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"267 241 CURVE",
"267 320 LINE",
"253 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH",
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"169 160 OFFCURVE",
"190 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"58 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
}
);
width = 468;
}
);
},
{
glyphname = "raa_ggu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"426 0 LINE",
"426 437 LINE SMOOTH",
"426 540 OFFCURVE",
"404 584 OFFCURVE",
"377 584 CURVE SMOOTH",
"301 584 LINE",
"301 757 LINE",
"364 757 LINE",
"364 800 LINE",
"230 800 LINE",
"230 757 LINE",
"281 757 LINE",
"281 585 LINE",
"202 585 LINE",
"203 497 LINE",
"333 498 LINE SMOOTH",
"372 498 OFFCURVE",
"380 491 OFFCURVE",
"380 351 CURVE SMOOTH",
"380 0 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 249 OFFCURVE",
"159 212 OFFCURVE",
"166 179 CURVE SMOOTH",
"172 151 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"96 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 463;
}
);
},
{
glyphname = "raa_ggi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"488 0 LINE",
"488 61 LINE",
"420 61 LINE",
"420 437 LINE SMOOTH",
"420 541 OFFCURVE",
"398 584 OFFCURVE",
"371 584 CURVE SMOOTH",
"302 584 LINE",
"302 750 LINE",
"354 750 LINE",
"354 800 LINE",
"226 800 LINE",
"226 750 LINE",
"278 750 LINE",
"278 585 LINE",
"196 585 LINE",
"195 497 LINE",
"327 498 LINE SMOOTH",
"366 498 OFFCURVE",
"375 493 OFFCURVE",
"375 351 CURVE SMOOTH",
"375 241 OFFCURVE",
"372 58 OFFCURVE",
"372 0 CURVE"
);
},
{
closed = 1;
nodes = (
"178 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"184 87 CURVE",
"157 87 LINE",
"131 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 525;
}
);
},
{
glyphname = "raa_ggaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 702, 0}";
},
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1495;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"253 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH",
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"169 160 OFFCURVE",
"190 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
}
);
width = 584;
}
);
},
{
glyphname = "raa_ggee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"467 227 OFFCURVE",
"450 244 OFFCURVE",
"432 244 CURVE SMOOTH",
"417 244 LINE",
"417 432 LINE SMOOTH",
"417 534 OFFCURVE",
"395 579 OFFCURVE",
"367 579 CURVE SMOOTH",
"289 579 LINE",
"289 750 LINE",
"351 750 LINE",
"351 800 LINE",
"223 800 LINE",
"223 750 LINE",
"267 750 LINE",
"267 580 LINE",
"194 580 LINE",
"193 492 LINE",
"323 492 LINE SMOOTH",
"361 492 OFFCURVE",
"372 492 OFFCURVE",
"372 347 CURVE SMOOTH",
"372 237 OFFCURVE",
"370 53 OFFCURVE",
"370 -4 CURVE",
"432 -4 LINE SMOOTH",
"447 -4 OFFCURVE",
"461 10 OFFCURVE",
"471 34 CURVE SMOOTH",
"477 49 OFFCURVE",
"481 86 OFFCURVE",
"481 117 CURVE SMOOTH",
"481 144 OFFCURVE",
"479 168 OFFCURVE",
"475 188 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH",
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"444 40 OFFCURVE",
"437 34 OFFCURVE",
"431 30 CURVE",
"417 217 LINE",
"419 217 LINE SMOOTH",
"424 217 OFFCURVE",
"427 215 OFFCURVE",
"430 212 CURVE",
"437 206 OFFCURVE",
"443 203 OFFCURVE",
"446 186 CURVE",
"446 186 OFFCURVE",
"454 155 OFFCURVE",
"454 147 CURVE",
"455 121 LINE",
"455 85 OFFCURVE",
"451 65 OFFCURVE",
"446 47 CURVE SMOOTH"
);
}
);
width = 518;
}
);
},
{
glyphname = "raa_gge-ethiopic.liga";
lastChange = "2020-11-26 16:40:10 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gge-ethiopic";
transform = "{1, 0, 0, 1, 758, 111}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1703;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"443 0 LINE",
"443 437 LINE SMOOTH",
"443 540 OFFCURVE",
"421 584 OFFCURVE",
"394 584 CURVE SMOOTH",
"352 584 LINE",
"352 750 LINE",
"413 750 LINE",
"413 800 LINE",
"246 800 LINE",
"246 750 LINE",
"325 750 LINE",
"325 584 LINE",
"219 585 LINE",
"218 497 LINE",
"219 497 LINE",
"219 462 LINE SMOOTH",
"219 427 OFFCURVE",
"225 404 OFFCURVE",
"236 383 CURVE SMOOTH",
"245 366 OFFCURVE",
"260 358 OFFCURVE",
"276 358 CURVE SMOOTH",
"288 358 OFFCURVE",
"304 364 OFFCURVE",
"311 371 CURVE SMOOTH",
"328 387 OFFCURVE",
"337 424 OFFCURVE",
"337 462 CURVE SMOOTH",
"337 498 LINE",
"349 498 LINE SMOOTH",
"385 498 OFFCURVE",
"398 497 OFFCURVE",
"398 351 CURVE SMOOTH",
"398 241 OFFCURVE",
"396 58 OFFCURVE",
"396 0 CURVE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"267 241 CURVE",
"267 320 LINE",
"253 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH",
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"169 160 OFFCURVE",
"190 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"58 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"268 414 OFFCURVE",
"250 421 OFFCURVE",
"243 431 CURVE SMOOTH",
"236 441 OFFCURVE",
"232 473 OFFCURVE",
"232 492 CURVE SMOOTH",
"232 497 LINE",
"324 498 LINE",
"324 491 LINE SMOOTH",
"324 482 OFFCURVE",
"324 471 OFFCURVE",
"322 464 CURVE",
"319 451 OFFCURVE",
"317 440 OFFCURVE",
"309 431 CURVE",
"306 426 OFFCURVE",
"294 419 OFFCURVE",
"292 417 CURVE SMOOTH",
"290 415 OFFCURVE",
"281 414 OFFCURVE",
"279 414 CURVE SMOOTH"
);
}
);
width = 480;
}
);
},
{
glyphname = "raa_ggo-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggo-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"414 0 LINE",
"414 437 LINE SMOOTH",
"414 541 OFFCURVE",
"392 584 OFFCURVE",
"365 584 CURVE SMOOTH",
"341 584 LINE",
"341 667 LINE SMOOTH",
"341 702 OFFCURVE",
"336 730 OFFCURVE",
"328 747 CURVE",
"394 747 LINE",
"394 800 LINE",
"219 800 LINE",
"219 747 LINE",
"263 747 LINE",
"261 745 LINE",
"253 725 OFFCURVE",
"247 698 OFFCURVE",
"247 667 CURVE SMOOTH",
"247 585 LINE",
"189 585 LINE",
"189 497 LINE",
"321 498 LINE SMOOTH",
"360 498 OFFCURVE",
"368 491 OFFCURVE",
"368 351 CURVE SMOOTH",
"368 0 LINE"
);
},
{
closed = 1;
nodes = (
"258 585 LINE",
"258 636 LINE SMOOTH",
"258 670 OFFCURVE",
"262 687 OFFCURVE",
"268 697 CURVE",
"273 708 OFFCURVE",
"284 714 OFFCURVE",
"295 714 CURVE SMOOTH",
"296 714 OFFCURVE",
"302 713 OFFCURVE",
"304 711 CURVE",
"312 707 OFFCURVE",
"312 705 OFFCURVE",
"321 697 CURVE",
"328 686 OFFCURVE",
"326 682 OFFCURVE",
"330 664 CURVE",
"331 657 OFFCURVE",
"331 648 OFFCURVE",
"331 637 CURVE SMOOTH",
"331 584 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"225 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"189 205 OFFCURVE",
"189 235 CURVE SMOOTH",
"189 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"196 320 OFFCURVE",
"153 326 OFFCURVE",
"153 266 CURVE SMOOTH",
"153 245 OFFCURVE",
"160 206 OFFCURVE",
"166 177 CURVE SMOOTH",
"171 156 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"156 87 LINE",
"130 86 LINE SMOOTH",
"99 85 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH"
);
}
);
width = 451;
}
);
},
{
glyphname = "raa_ggwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1605;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"477 -200 LINE",
"477 -8 LINE",
"476 -8 LINE",
"476 7 LINE",
"440 7 LINE",
"440 437 LINE SMOOTH",
"440 541 OFFCURVE",
"418 584 OFFCURVE",
"393 584 CURVE SMOOTH",
"315 584 LINE",
"315 750 LINE",
"366 750 LINE",
"366 800 LINE",
"242 800 LINE",
"242 750 LINE",
"293 750 LINE",
"293 585 LINE",
"216 585 LINE",
"215 497 LINE",
"347 498 LINE SMOOTH",
"384 498 OFFCURVE",
"395 498 OFFCURVE",
"395 351 CURVE SMOOTH",
"395 245 OFFCURVE",
"394 73 OFFCURVE",
"394 7 CURVE",
"303 7 LINE",
"303 -20 LINE",
"434 -20 LINE",
"434 -200 LINE"
);
},
{
closed = 1;
nodes = (
"177 0 LINE SMOOTH",
"226 0 OFFCURVE",
"230 0 OFFCURVE",
"230 61 CURVE SMOOTH",
"230 95 OFFCURVE",
"190 205 OFFCURVE",
"190 235 CURVE SMOOTH",
"190 281 OFFCURVE",
"205 240 OFFCURVE",
"268 241 CURVE",
"268 320 LINE",
"252 320 LINE SMOOTH",
"197 320 OFFCURVE",
"154 326 OFFCURVE",
"154 266 CURVE SMOOTH",
"154 247 OFFCURVE",
"161 206 OFFCURVE",
"167 177 CURVE SMOOTH",
"172 152 OFFCURVE",
"189 96 OFFCURVE",
"183 87 CURVE",
"157 87 LINE",
"130 86 LINE SMOOTH",
"98 85 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 43 OFFCURVE",
"59 0 OFFCURVE",
"86 0 CURVE SMOOTH"
);
}
);
width = 514;
}
);
},
{
glyphname = "ree_xa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"434 0 LINE",
"434 483 LINE SMOOTH",
"434 584 OFFCURVE",
"434 584 OFFCURVE",
"381 584 CURVE SMOOTH",
"260 584 LINE",
"260 800 LINE",
"213 800 LINE",
"213 719 LINE",
"144 719 LINE",
"144 628 LINE",
"213 628 LINE",
"213 556 LINE SMOOTH",
"213 527 OFFCURVE",
"222 504 OFFCURVE",
"236 504 CURVE SMOOTH",
"356 504 LINE SMOOTH",
"387 504 OFFCURVE",
"387 504 OFFCURVE",
"387 306 CURVE SMOOTH",
"387 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"189 244 OFFCURVE",
"174 238 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 137 OFFCURVE",
"164 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"179 184 OFFCURVE",
"192 188 OFFCURVE",
"206 188 CURVE",
"217 186 LINE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE",
"247 136 OFFCURVE",
"249 129 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 471;
}
);
note = uni1280;
},
{
glyphname = "ree_xu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1947;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"445 0 LINE",
"445 271 LINE",
"496 271 LINE",
"496 381 LINE",
"445 381 LINE",
"445 483 LINE SMOOTH",
"445 584 OFFCURVE",
"445 584 OFFCURVE",
"390 584 CURVE SMOOTH",
"271 584 LINE",
"271 800 LINE",
"223 800 LINE",
"223 719 LINE",
"154 719 LINE",
"154 628 LINE",
"223 628 LINE",
"223 556 LINE SMOOTH",
"223 525 OFFCURVE",
"232 504 OFFCURVE",
"246 504 CURVE SMOOTH",
"366 504 LINE SMOOTH",
"397 504 OFFCURVE",
"397 504 OFFCURVE",
"397 306 CURVE SMOOTH",
"397 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 185 OFFCURVE",
"233 177 OFFCURVE",
"236 172 CURVE SMOOTH",
"241 164 OFFCURVE",
"247 151 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 533;
}
);
note = uni1281;
},
{
glyphname = "ree_xi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1939;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"519 0 LINE",
"519 110 LINE",
"467 110 LINE",
"467 483 LINE SMOOTH",
"467 584 OFFCURVE",
"467 584 OFFCURVE",
"413 584 CURVE SMOOTH",
"294 584 LINE",
"294 800 LINE",
"245 800 LINE",
"245 719 LINE",
"178 719 LINE",
"178 628 LINE",
"245 628 LINE",
"245 556 LINE SMOOTH",
"245 528 OFFCURVE",
"254 504 OFFCURVE",
"271 504 CURVE SMOOTH",
"389 504 LINE SMOOTH",
"420 504 OFFCURVE",
"420 504 OFFCURVE",
"420 306 CURVE SMOOTH",
"420 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 181 OFFCURVE",
"252 216 OFFCURVE",
"235 230 CURVE SMOOTH",
"227 237 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"186 244 OFFCURVE",
"171 234 OFFCURVE",
"163 219 CURVE SMOOTH",
"158 210 OFFCURVE",
"147 180 OFFCURVE",
"147 144 CURVE SMOOTH",
"147 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 134 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE",
"178 183 OFFCURVE",
"190 188 OFFCURVE",
"205 188 CURVE SMOOTH",
"206 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"242 159 OFFCURVE",
"246 141 CURVE",
"249 113 OFFCURVE",
"248 124 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 556;
}
);
note = uni1282;
},
{
glyphname = "ree_xee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"478 0 LINE SMOOTH",
"497 0 OFFCURVE",
"516 11 OFFCURVE",
"528 52 CURVE SMOOTH",
"533 69 OFFCURVE",
"535 94 OFFCURVE",
"535 113 CURVE SMOOTH",
"535 145 OFFCURVE",
"533 166 OFFCURVE",
"521 186 CURVE SMOOTH",
"504 214 OFFCURVE",
"494 220 OFFCURVE",
"477 220 CURVE SMOOTH",
"473 220 LINE",
"473 483 LINE SMOOTH",
"473 584 OFFCURVE",
"473 584 OFFCURVE",
"419 584 CURVE SMOOTH",
"298 584 LINE",
"298 800 LINE",
"251 800 LINE",
"251 719 LINE",
"182 719 LINE",
"182 628 LINE",
"251 628 LINE",
"251 556 LINE SMOOTH",
"251 526 OFFCURVE",
"260 504 OFFCURVE",
"275 504 CURVE SMOOTH",
"393 504 LINE SMOOTH",
"424 504 OFFCURVE",
"424 504 OFFCURVE",
"424 306 CURVE SMOOTH",
"424 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 181 OFFCURVE",
"252 216 OFFCURVE",
"235 230 CURVE SMOOTH",
"227 237 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"186 244 OFFCURVE",
"171 234 OFFCURVE",
"163 219 CURVE SMOOTH",
"158 210 OFFCURVE",
"147 180 OFFCURVE",
"147 144 CURVE SMOOTH",
"147 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"473 194 LINE",
"487 187 OFFCURVE",
"489 183 OFFCURVE",
"494 172 CURVE SMOOTH",
"501 156 OFFCURVE",
"504 142 OFFCURVE",
"504 109 CURVE SMOOTH",
"504 101 OFFCURVE",
"503 95 OFFCURVE",
"502 86 CURVE",
"498 59 OFFCURVE",
"498 65 OFFCURVE",
"495 51 CURVE",
"490 40 OFFCURVE",
"487 35 OFFCURVE",
"477 29 CURVE",
"475 28 OFFCURVE",
"474 28 OFFCURVE",
"473 26 CURVE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 134 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE",
"178 183 OFFCURVE",
"190 188 OFFCURVE",
"205 188 CURVE SMOOTH",
"206 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"242 159 OFFCURVE",
"246 141 CURVE",
"249 113 OFFCURVE",
"248 124 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 572;
}
);
note = uni1284;
},
{
glyphname = "ree_xe-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xe-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"460 0 LINE",
"460 483 LINE SMOOTH",
"460 584 OFFCURVE",
"460 584 OFFCURVE",
"407 584 CURVE SMOOTH",
"286 584 LINE",
"286 800 LINE",
"239 800 LINE",
"239 702 LINE",
"172 702 LINE",
"172 699 LINE",
"170 699 LINE",
"170 530 LINE",
"205 530 LINE",
"205 625 LINE SMOOTH",
"205 639 OFFCURVE",
"211 650 OFFCURVE",
"217 650 CURVE SMOOTH",
"239 650 LINE",
"239 504 LINE",
"383 504 LINE SMOOTH",
"414 504 OFFCURVE",
"414 504 OFFCURVE",
"414 306 CURVE SMOOTH",
"414 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"131 86 LINE SMOOTH",
"94 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 184 OFFCURVE",
"228 180 OFFCURVE",
"236 173 CURVE",
"241 166 OFFCURVE",
"245 154 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 497;
}
);
note = uni1285;
},
{
glyphname = "ree_xwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "xwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1863;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"570 -200 LINE",
"570 0 LINE",
"495 0 LINE",
"495 483 LINE SMOOTH",
"495 584 OFFCURVE",
"495 584 OFFCURVE",
"440 584 CURVE SMOOTH",
"321 584 LINE",
"321 800 LINE",
"273 800 LINE",
"273 714 LINE",
"211 714 LINE",
"211 611 LINE",
"273 611 LINE",
"273 556 LINE SMOOTH",
"273 524 OFFCURVE",
"283 504 OFFCURVE",
"297 504 CURVE SMOOTH",
"417 504 LINE SMOOTH",
"447 504 OFFCURVE",
"447 504 OFFCURVE",
"447 306 CURVE SMOOTH",
"447 0 LINE",
"383 0 LINE",
"383 -62 LINE",
"519 -62 LINE",
"519 -200 LINE"
);
},
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 185 OFFCURVE",
"233 177 OFFCURVE",
"236 172 CURVE SMOOTH",
"241 164 OFFCURVE",
"247 151 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 607;
}
);
},
{
glyphname = "ree_na-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "na-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"440 0 LINE",
"440 483 LINE SMOOTH",
"440 584 OFFCURVE",
"440 584 OFFCURVE",
"385 584 CURVE SMOOTH",
"266 584 LINE",
"266 800 LINE",
"218 800 LINE",
"218 556 LINE SMOOTH",
"218 527 OFFCURVE",
"227 504 OFFCURVE",
"242 504 CURVE SMOOTH",
"362 504 LINE SMOOTH",
"392 504 OFFCURVE",
"392 504 OFFCURVE",
"392 306 CURVE SMOOTH",
"392 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 181 OFFCURVE",
"252 216 OFFCURVE",
"235 230 CURVE SMOOTH",
"227 237 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"186 244 OFFCURVE",
"171 234 OFFCURVE",
"163 219 CURVE SMOOTH",
"158 210 OFFCURVE",
"147 180 OFFCURVE",
"147 144 CURVE SMOOTH",
"147 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 134 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE",
"178 183 OFFCURVE",
"190 188 OFFCURVE",
"205 188 CURVE SMOOTH",
"206 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"242 159 OFFCURVE",
"246 141 CURVE",
"249 113 OFFCURVE",
"248 124 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 477;
}
);
},
{
glyphname = "ree_nu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1741;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"426 0 LINE",
"426 268 LINE",
"482 268 LINE",
"482 383 LINE",
"426 383 LINE",
"426 483 LINE SMOOTH",
"426 584 OFFCURVE",
"426 584 OFFCURVE",
"371 584 CURVE SMOOTH",
"252 584 LINE",
"252 800 LINE",
"204 800 LINE",
"204 556 LINE SMOOTH",
"204 524 OFFCURVE",
"214 504 OFFCURVE",
"228 504 CURVE SMOOTH",
"348 504 LINE SMOOTH",
"378 504 OFFCURVE",
"378 504 OFFCURVE",
"378 306 CURVE SMOOTH",
"378 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"224 182 OFFCURVE",
"229 180 OFFCURVE",
"234 173 CURVE SMOOTH",
"240 165 OFFCURVE",
"244 159 OFFCURVE",
"246 141 CURVE SMOOTH",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 519;
}
);
},
{
glyphname = "ree_ni-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ni-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1733;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"507 0 LINE",
"507 95 LINE",
"443 95 LINE",
"443 483 LINE SMOOTH",
"443 584 OFFCURVE",
"443 584 OFFCURVE",
"388 584 CURVE SMOOTH",
"269 584 LINE",
"269 800 LINE",
"221 800 LINE",
"221 556 LINE SMOOTH",
"221 527 OFFCURVE",
"230 504 OFFCURVE",
"246 504 CURVE SMOOTH",
"365 504 LINE SMOOTH",
"396 504 OFFCURVE",
"396 504 OFFCURVE",
"396 306 CURVE SMOOTH",
"396 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"224 182 OFFCURVE",
"229 180 OFFCURVE",
"234 173 CURVE SMOOTH",
"240 165 OFFCURVE",
"244 159 OFFCURVE",
"246 141 CURVE SMOOTH",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 544;
}
);
},
{
glyphname = "ree_nee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"464 0 LINE SMOOTH",
"488 0 OFFCURVE",
"505 21 OFFCURVE",
"513 51 CURVE SMOOTH",
"521 82 OFFCURVE",
"522 101 OFFCURVE",
"522 123 CURVE SMOOTH",
"522 153 OFFCURVE",
"518 184 OFFCURVE",
"509 201 CURVE SMOOTH",
"496 227 OFFCURVE",
"483 239 OFFCURVE",
"465 239 CURVE SMOOTH",
"449 239 LINE",
"449 483 LINE SMOOTH",
"449 584 OFFCURVE",
"449 584 OFFCURVE",
"394 584 CURVE SMOOTH",
"275 584 LINE",
"275 800 LINE",
"227 800 LINE",
"227 556 LINE SMOOTH",
"227 525 OFFCURVE",
"236 504 OFFCURVE",
"251 504 CURVE SMOOTH",
"372 504 LINE SMOOTH",
"401 504 OFFCURVE",
"401 504 OFFCURVE",
"401 306 CURVE SMOOTH",
"401 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"449 212 LINE",
"463 211 OFFCURVE",
"470 207 OFFCURVE",
"482 188 CURVE",
"488 169 OFFCURVE",
"490 143 OFFCURVE",
"490 118 CURVE SMOOTH",
"490 116 OFFCURVE",
"490 97 OFFCURVE",
"489 91 CURVE SMOOTH",
"487 81 OFFCURVE",
"485 64 OFFCURVE",
"482 55 CURVE",
"477 42 OFFCURVE",
"469 33 OFFCURVE",
"464 31 CURVE SMOOTH",
"459 29 OFFCURVE",
"453 26 OFFCURVE",
"449 26 CURVE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"224 182 OFFCURVE",
"229 180 OFFCURVE",
"234 173 CURVE SMOOTH",
"240 165 OFFCURVE",
"244 159 OFFCURVE",
"246 141 CURVE SMOOTH",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 559;
}
);
note = uni1294;
},
{
glyphname = "ree_ne-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ne-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1575;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"467 -2 LINE",
"467 232 LINE SMOOTH",
"467 270 OFFCURVE",
"461 278 OFFCURVE",
"446 278 CURVE SMOOTH",
"393 278 LINE",
"473 490 LINE SMOOTH",
"479 507 OFFCURVE",
"473 584 OFFCURVE",
"449 584 CURVE SMOOTH",
"267 584 LINE",
"267 495 LINE",
"424 495 LINE",
"351 292 LINE SMOOTH",
"322 210 OFFCURVE",
"334 210 OFFCURVE",
"345 210 CURVE SMOOTH",
"419 210 LINE",
"419 -2 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 185 OFFCURVE",
"233 177 OFFCURVE",
"236 172 CURVE SMOOTH",
"241 164 OFFCURVE",
"247 151 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 513;
}
);
note = uni1295;
},
{
glyphname = "ree_nya-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nya-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1669;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"488 0 LINE",
"488 483 LINE SMOOTH",
"488 584 OFFCURVE",
"488 584 OFFCURVE",
"433 584 CURVE SMOOTH",
"314 584 LINE",
"314 750 LINE",
"378 750 LINE",
"378 800 LINE",
"213 800 LINE",
"213 750 LINE",
"266 750 LINE",
"266 556 LINE SMOOTH",
"266 525 OFFCURVE",
"276 504 OFFCURVE",
"291 504 CURVE SMOOTH",
"409 504 LINE SMOOTH",
"440 504 OFFCURVE",
"440 504 OFFCURVE",
"440 306 CURVE SMOOTH",
"440 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 137 OFFCURVE",
"164 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"179 184 OFFCURVE",
"192 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"208 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE",
"247 136 OFFCURVE",
"249 129 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 525;
}
);
note = uni1298;
},
{
glyphname = "ree_nyu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1851;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"474 0 LINE",
"474 271 LINE",
"525 271 LINE",
"525 381 LINE",
"474 381 LINE",
"474 483 LINE SMOOTH",
"474 584 OFFCURVE",
"474 584 OFFCURVE",
"419 584 CURVE SMOOTH",
"300 584 LINE",
"300 750 LINE",
"364 750 LINE",
"364 800 LINE",
"198 800 LINE",
"198 750 LINE",
"252 750 LINE",
"252 556 LINE SMOOTH",
"252 525 OFFCURVE",
"261 504 OFFCURVE",
"275 504 CURVE SMOOTH",
"396 504 LINE SMOOTH",
"426 504 OFFCURVE",
"426 504 OFFCURVE",
"426 306 CURVE SMOOTH",
"426 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"189 244 OFFCURVE",
"174 238 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 137 OFFCURVE",
"164 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"179 184 OFFCURVE",
"192 188 OFFCURVE",
"206 188 CURVE",
"217 186 LINE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE",
"247 136 OFFCURVE",
"249 129 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 562;
}
);
note = uni1299;
},
{
glyphname = "ree_nyi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1853;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"528 0 LINE",
"528 110 LINE",
"476 110 LINE",
"476 483 LINE SMOOTH",
"476 584 OFFCURVE",
"476 584 OFFCURVE",
"422 584 CURVE SMOOTH",
"302 584 LINE",
"302 750 LINE",
"375 750 LINE",
"375 800 LINE",
"200 800 LINE",
"200 750 LINE",
"254 750 LINE",
"254 556 LINE SMOOTH",
"254 525 OFFCURVE",
"264 504 OFFCURVE",
"279 504 CURVE SMOOTH",
"397 504 LINE SMOOTH",
"428 504 OFFCURVE",
"428 504 OFFCURVE",
"428 306 CURVE SMOOTH",
"428 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"172 236 OFFCURVE",
"163 219 CURVE SMOOTH",
"154 202 OFFCURVE",
"148 172 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 135 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"178 182 OFFCURVE",
"189 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE SMOOTH",
"247 134 OFFCURVE",
"248 130 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 565;
}
);
note = uni129A;
},
{
glyphname = "ree_nyee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "nyee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1909;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"503 0 LINE SMOOTH",
"529 0 OFFCURVE",
"545 24 OFFCURVE",
"551 49 CURVE SMOOTH",
"558 76 OFFCURVE",
"560 94 OFFCURVE",
"560 117 CURVE SMOOTH",
"560 144 OFFCURVE",
"556 174 OFFCURVE",
"545 193 CURVE SMOOTH",
"535 211 OFFCURVE",
"521 226 OFFCURVE",
"502 226 CURVE SMOOTH",
"477 226 LINE",
"477 483 LINE SMOOTH",
"477 584 OFFCURVE",
"477 584 OFFCURVE",
"423 584 CURVE SMOOTH",
"304 584 LINE",
"304 750 LINE",
"393 750 LINE",
"393 800 LINE",
"202 800 LINE",
"202 750 LINE",
"256 750 LINE",
"256 556 LINE SMOOTH",
"256 527 OFFCURVE",
"265 504 OFFCURVE",
"281 504 CURVE SMOOTH",
"400 504 LINE SMOOTH",
"430 504 OFFCURVE",
"430 504 OFFCURVE",
"430 306 CURVE SMOOTH",
"430 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"172 236 OFFCURVE",
"163 219 CURVE SMOOTH",
"154 202 OFFCURVE",
"148 172 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"477 200 LINE",
"485 200 LINE SMOOTH",
"498 200 OFFCURVE",
"511 194 OFFCURVE",
"519 177 CURVE",
"524 162 OFFCURVE",
"529 144 OFFCURVE",
"529 111 CURVE SMOOTH",
"529 106 OFFCURVE",
"528 96 OFFCURVE",
"527 88 CURVE SMOOTH",
"523 62 OFFCURVE",
"522 66 OFFCURVE",
"520 52 CURVE",
"514 40 OFFCURVE",
"510 35 OFFCURVE",
"501 29 CURVE",
"496 27 OFFCURVE",
"491 25 OFFCURVE",
"486 25 CURVE SMOOTH",
"477 25 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 135 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"178 182 OFFCURVE",
"189 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE SMOOTH",
"247 134 OFFCURVE",
"248 130 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 597;
}
);
note = uni129C;
},
{
glyphname = "ree_ga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"450 0 LINE",
"450 437 LINE SMOOTH",
"450 525 OFFCURVE",
"428 585 OFFCURVE",
"402 585 CURVE SMOOTH",
"225 585 LINE",
"225 497 LINE",
"355 498 LINE SMOOTH",
"393 498 OFFCURVE",
"404 497 OFFCURVE",
"404 351 CURVE SMOOTH",
"404 241 OFFCURVE",
"402 58 OFFCURVE",
"402 0 CURVE"
);
},
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"131 86 LINE SMOOTH",
"94 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 184 OFFCURVE",
"228 180 OFFCURVE",
"236 173 CURVE",
"241 166 OFFCURVE",
"245 154 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 487;
}
);
},
{
glyphname = "ree_gu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"425 0 LINE",
"425 274 LINE",
"480 274 LINE",
"480 389 LINE",
"425 389 LINE",
"425 437 LINE SMOOTH",
"425 526 OFFCURVE",
"404 585 OFFCURVE",
"377 585 CURVE SMOOTH",
"203 585 LINE",
"202 497 LINE",
"332 498 LINE SMOOTH",
"372 498 OFFCURVE",
"380 491 OFFCURVE",
"380 351 CURVE SMOOTH",
"380 241 OFFCURVE",
"379 58 OFFCURVE",
"379 0 CURVE"
);
},
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"131 86 LINE SMOOTH",
"94 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 184 OFFCURVE",
"228 180 OFFCURVE",
"236 173 CURVE",
"241 166 OFFCURVE",
"245 154 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 517;
}
);
},
{
glyphname = "ree_gi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"474 0 LINE",
"474 72 LINE",
"417 72 LINE",
"417 437 LINE SMOOTH",
"417 525 OFFCURVE",
"395 585 OFFCURVE",
"367 585 CURVE SMOOTH",
"194 585 LINE",
"193 497 LINE",
"323 498 LINE SMOOTH",
"356 498 OFFCURVE",
"371 497 OFFCURVE",
"371 351 CURVE SMOOTH",
"371 241 OFFCURVE",
"370 58 OFFCURVE",
"370 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"172 236 OFFCURVE",
"163 219 CURVE SMOOTH",
"154 202 OFFCURVE",
"148 172 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 135 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"178 182 OFFCURVE",
"189 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE SMOOTH",
"247 134 OFFCURVE",
"248 130 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 511;
}
);
note = uni130A;
},
{
glyphname = "ree_gaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 695, 0}";
},
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1494;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 205, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"189 244 OFFCURVE",
"174 238 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 137 OFFCURVE",
"164 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"179 184 OFFCURVE",
"193 188 OFFCURVE",
"206 188 CURVE",
"217 186 LINE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE",
"247 136 OFFCURVE",
"249 129 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"160 86 LINE"
);
}
);
width = 622;
}
);
note = uni130B;
},
{
glyphname = "ree_gee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1759;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"172 236 OFFCURVE",
"163 219 CURVE SMOOTH",
"154 202 OFFCURVE",
"148 172 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE",
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"492 224 OFFCURVE",
"474 244 OFFCURVE",
"456 244 CURVE SMOOTH",
"441 244 LINE",
"441 432 LINE SMOOTH",
"441 519 OFFCURVE",
"419 579 OFFCURVE",
"393 579 CURVE SMOOTH",
"216 580 LINE",
"215 492 LINE",
"348 492 LINE SMOOTH",
"385 492 OFFCURVE",
"395 491 OFFCURVE",
"395 347 CURVE SMOOTH",
"395 237 OFFCURVE",
"393 53 OFFCURVE",
"393 -4 CURVE",
"456 -4 LINE SMOOTH",
"470 -4 OFFCURVE",
"482 6 OFFCURVE",
"494 33 CURVE SMOOTH",
"503 53 OFFCURVE",
"505 92 OFFCURVE",
"505 117 CURVE SMOOTH",
"505 134 OFFCURVE",
"504 166 OFFCURVE",
"498 187 CURVE"
);
},
{
closed = 1;
nodes = (
"478 89 OFFCURVE",
"475 63 OFFCURVE",
"471 50 CURVE",
"467 39 OFFCURVE",
"460 33 OFFCURVE",
"455 29 CURVE",
"444 217 LINE",
"444 217 OFFCURVE",
"452 216 OFFCURVE",
"456 212 CURVE SMOOTH",
"464 204 OFFCURVE",
"469 197 OFFCURVE",
"471 184 CURVE",
"477 153 OFFCURVE",
"474 162 OFFCURVE",
"478 147 CURVE",
"477 139 OFFCURVE",
"478 129 OFFCURVE",
"478 121 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"248 87 LINE",
"160 86 LINE",
"160 114 LINE SMOOTH",
"160 135 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"178 182 OFFCURVE",
"189 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE SMOOTH",
"247 134 OFFCURVE",
"248 130 OFFCURVE",
"248 116 CURVE SMOOTH"
);
}
);
width = 542;
}
);
note = uni130C;
},
{
glyphname = "ree_ge-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ge-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"457 0 LINE",
"457 437 LINE SMOOTH",
"457 527 OFFCURVE",
"435 585 OFFCURVE",
"409 585 CURVE SMOOTH",
"234 585 LINE",
"234 462 LINE SMOOTH",
"234 432 OFFCURVE",
"240 403 OFFCURVE",
"250 384 CURVE",
"261 365 OFFCURVE",
"275 358 OFFCURVE",
"291 358 CURVE SMOOTH",
"301 358 OFFCURVE",
"313 360 OFFCURVE",
"325 371 CURVE SMOOTH",
"343 387 OFFCURVE",
"352 421 OFFCURVE",
"352 462 CURVE SMOOTH",
"352 498 LINE",
"364 498 LINE SMOOTH",
"400 498 OFFCURVE",
"412 497 OFFCURVE",
"412 351 CURVE SMOOTH",
"412 241 OFFCURVE",
"411 58 OFFCURVE",
"411 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"279 414 OFFCURVE",
"268 420 OFFCURVE",
"259 431 CURVE",
"251 442 OFFCURVE",
"247 462 OFFCURVE",
"247 492 CURVE SMOOTH",
"247 497 LINE",
"339 498 LINE",
"339 491 LINE SMOOTH",
"339 480 OFFCURVE",
"340 477 OFFCURVE",
"337 464 CURVE SMOOTH",
"334 450 OFFCURVE",
"331 437 OFFCURVE",
"324 431 CURVE",
"317 423 OFFCURVE",
"308 418 OFFCURVE",
"306 417 CURVE",
"303 415 OFFCURVE",
"298 414 OFFCURVE",
"294 414 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 137 OFFCURVE",
"164 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"179 184 OFFCURVE",
"192 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"208 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE",
"247 136 OFFCURVE",
"249 129 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 494;
}
);
note = uni130D;
},
{
glyphname = "ree_go-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "go-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"444 0 LINE",
"444 437 LINE SMOOTH",
"444 541 OFFCURVE",
"422 584 OFFCURVE",
"395 584 CURVE SMOOTH",
"329 584 LINE",
"329 800 LINE",
"293 800 LINE",
"293 585 LINE",
"220 585 LINE",
"219 497 LINE",
"351 498 LINE SMOOTH",
"384 498 OFFCURVE",
"398 497 OFFCURVE",
"398 351 CURVE SMOOTH",
"398 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 181 OFFCURVE",
"252 216 OFFCURVE",
"235 230 CURVE SMOOTH",
"227 237 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"186 244 OFFCURVE",
"171 234 OFFCURVE",
"163 219 CURVE SMOOTH",
"158 210 OFFCURVE",
"147 180 OFFCURVE",
"147 144 CURVE SMOOTH",
"147 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 134 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE",
"178 183 OFFCURVE",
"190 188 OFFCURVE",
"205 188 CURVE SMOOTH",
"206 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"242 159 OFFCURVE",
"246 141 CURVE",
"249 113 OFFCURVE",
"248 124 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 481;
}
);
},
{
glyphname = "ree_gwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1579;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"497 -200 LINE",
"497 161 LINE",
"460 161 LINE",
"460 437 LINE SMOOTH",
"460 525 OFFCURVE",
"438 585 OFFCURVE",
"412 585 CURVE SMOOTH",
"236 585 LINE",
"235 497 LINE",
"367 498 LINE SMOOTH",
"399 498 OFFCURVE",
"415 497 OFFCURVE",
"415 351 CURVE SMOOTH",
"415 259 OFFCURVE",
"413 198 OFFCURVE",
"414 147 CURVE",
"328 139 LINE",
"363 61 LINE",
"413 120 LINE",
"449 120 LINE",
"449 -200 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 137 OFFCURVE",
"164 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"179 184 OFFCURVE",
"192 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"208 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE",
"247 136 OFFCURVE",
"249 129 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 534;
}
);
note = uni1313;
},
{
glyphname = "ree_gga-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gga-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 437 LINE SMOOTH",
"430 540 OFFCURVE",
"410 584 OFFCURVE",
"383 584 CURVE SMOOTH",
"305 584 LINE",
"305 750 LINE",
"357 750 LINE",
"357 800 LINE",
"232 800 LINE",
"232 750 LINE",
"283 750 LINE",
"283 585 LINE",
"208 585 LINE",
"207 497 LINE",
"337 498 LINE SMOOTH",
"377 498 OFFCURVE",
"385 491 OFFCURVE",
"385 351 CURVE SMOOTH",
"385 241 OFFCURVE",
"384 58 OFFCURVE",
"384 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"172 236 OFFCURVE",
"163 219 CURVE SMOOTH",
"154 202 OFFCURVE",
"148 172 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 135 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"178 182 OFFCURVE",
"189 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"242 159 OFFCURVE",
"246 141 CURVE",
"249 113 OFFCURVE",
"248 124 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 467;
}
);
},
{
glyphname = "ree_ggu-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggu-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1727;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"427 0 LINE",
"427 437 LINE SMOOTH",
"427 540 OFFCURVE",
"405 584 OFFCURVE",
"378 584 CURVE SMOOTH",
"302 584 LINE",
"302 757 LINE",
"365 757 LINE",
"365 800 LINE",
"230 800 LINE",
"230 757 LINE",
"281 757 LINE",
"281 585 LINE",
"203 585 LINE",
"202 497 LINE",
"334 498 LINE SMOOTH",
"367 498 OFFCURVE",
"381 497 OFFCURVE",
"381 351 CURVE SMOOTH",
"381 0 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"208 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"243 156 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 464;
}
);
},
{
glyphname = "ree_ggi-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggi-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1719;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"488 0 LINE",
"488 61 LINE",
"420 61 LINE",
"420 437 LINE SMOOTH",
"420 541 OFFCURVE",
"398 584 OFFCURVE",
"371 584 CURVE SMOOTH",
"302 584 LINE",
"302 750 LINE",
"354 750 LINE",
"354 800 LINE",
"226 800 LINE",
"226 750 LINE",
"278 750 LINE",
"278 585 LINE",
"196 585 LINE",
"195 497 LINE",
"327 498 LINE SMOOTH",
"366 498 OFFCURVE",
"375 493 OFFCURVE",
"375 351 CURVE SMOOTH",
"375 241 OFFCURVE",
"372 58 OFFCURVE",
"372 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 181 OFFCURVE",
"252 216 OFFCURVE",
"235 230 CURVE SMOOTH",
"227 237 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"186 244 OFFCURVE",
"171 234 OFFCURVE",
"163 219 CURVE SMOOTH",
"158 210 OFFCURVE",
"147 180 OFFCURVE",
"147 144 CURVE SMOOTH",
"147 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 60 OFFCURVE",
"58 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 134 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE",
"178 183 OFFCURVE",
"190 188 OFFCURVE",
"205 188 CURVE SMOOTH",
"206 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"242 159 OFFCURVE",
"246 141 CURVE",
"249 113 OFFCURVE",
"248 124 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 525;
}
);
},
{
glyphname = "ree_ggaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 765, 0}";
},
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1555;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 194, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"172 236 OFFCURVE",
"163 219 CURVE SMOOTH",
"154 202 OFFCURVE",
"148 172 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 135 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"178 182 OFFCURVE",
"189 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE SMOOTH",
"247 134 OFFCURVE",
"248 130 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 599;
}
);
},
{
glyphname = "ree_ggee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggee-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1709;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"433 -4 LINE SMOOTH",
"448 -4 OFFCURVE",
"459 7 OFFCURVE",
"470 32 CURVE SMOOTH",
"478 51 OFFCURVE",
"482 81 OFFCURVE",
"482 117 CURVE SMOOTH",
"482 141 OFFCURVE",
"480 166 OFFCURVE",
"476 185 CURVE SMOOTH",
"468 225 OFFCURVE",
"453 244 OFFCURVE",
"433 244 CURVE SMOOTH",
"417 244 LINE",
"417 432 LINE SMOOTH",
"417 535 OFFCURVE",
"395 579 OFFCURVE",
"368 579 CURVE SMOOTH",
"289 579 LINE",
"289 750 LINE",
"350 750 LINE",
"350 800 LINE",
"224 800 LINE",
"224 750 LINE",
"268 750 LINE",
"268 580 LINE",
"193 580 LINE",
"194 492 LINE",
"324 492 LINE SMOOTH",
"361 492 OFFCURVE",
"371 491 OFFCURVE",
"371 347 CURVE SMOOTH",
"371 -4 LINE"
);
},
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 584 LINE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"417 217 LINE",
"418 217 LINE SMOOTH",
"424 217 OFFCURVE",
"426 217 OFFCURVE",
"431 212 CURVE",
"437 205 OFFCURVE",
"443 205 OFFCURVE",
"447 186 CURVE",
"448 178 OFFCURVE",
"450 176 OFFCURVE",
"453 150 CURVE SMOOTH",
"456 123 OFFCURVE",
"455 142 OFFCURVE",
"455 121 CURVE SMOOTH",
"455 90 OFFCURVE",
"452 65 OFFCURVE",
"447 49 CURVE SMOOTH",
"441 30 OFFCURVE",
"432 24 OFFCURVE",
"419 24 CURVE SMOOTH",
"417 24 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 185 OFFCURVE",
"233 177 OFFCURVE",
"236 172 CURVE SMOOTH",
"241 164 OFFCURVE",
"247 151 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 519;
}
);
},
{
glyphname = "ree_gge-ethiopic.liga";
lastChange = "2020-11-26 06:18:03 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "gge-ethiopic";
transform = "{1, 0, 0, 1, 858, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1748;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"444 0 LINE",
"444 437 LINE SMOOTH",
"444 537 OFFCURVE",
"422 584 OFFCURVE",
"393 584 CURVE SMOOTH",
"353 584 LINE",
"353 750 LINE",
"414 750 LINE",
"414 800 LINE",
"247 800 LINE",
"247 750 LINE",
"326 750 LINE",
"326 584 LINE",
"220 585 LINE",
"219 497 LINE",
"220 497 LINE",
"220 462 LINE SMOOTH",
"220 426 OFFCURVE",
"226 402 OFFCURVE",
"236 384 CURVE SMOOTH",
"247 364 OFFCURVE",
"261 358 OFFCURVE",
"277 358 CURVE SMOOTH",
"292 358 OFFCURVE",
"300 362 OFFCURVE",
"310 371 CURVE SMOOTH",
"328 387 OFFCURVE",
"338 419 OFFCURVE",
"338 462 CURVE SMOOTH",
"338 498 LINE",
"349 498 LINE SMOOTH",
"385 498 OFFCURVE",
"397 497 OFFCURVE",
"397 351 CURVE SMOOTH",
"397 241 OFFCURVE",
"396 58 OFFCURVE",
"396 0 CURVE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"172 236 OFFCURVE",
"163 219 CURVE SMOOTH",
"154 202 OFFCURVE",
"148 172 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"94 86 OFFCURVE",
"82 88 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"84 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"264 414 OFFCURVE",
"250 422 OFFCURVE",
"244 431 CURVE SMOOTH",
"237 441 OFFCURVE",
"233 465 OFFCURVE",
"233 492 CURVE SMOOTH",
"233 497 LINE",
"325 498 LINE",
"325 491 LINE SMOOTH",
"325 484 OFFCURVE",
"325 475 OFFCURVE",
"323 464 CURVE SMOOTH",
"320 450 OFFCURVE",
"315 439 OFFCURVE",
"310 431 CURVE",
"311 432 OFFCURVE",
"300 420 OFFCURVE",
"292 417 CURVE",
"288 415 OFFCURVE",
"283 414 OFFCURVE",
"278 414 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 135 OFFCURVE",
"163 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"178 182 OFFCURVE",
"189 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"242 159 OFFCURVE",
"246 141 CURVE",
"249 113 OFFCURVE",
"248 124 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 481;
}
);
},
{
glyphname = "ree_ggo-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggo-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1525;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"415 0 LINE",
"415 437 LINE SMOOTH",
"415 541 OFFCURVE",
"393 584 OFFCURVE",
"366 584 CURVE SMOOTH",
"342 584 LINE",
"342 667 LINE SMOOTH",
"342 700 OFFCURVE",
"337 730 OFFCURVE",
"328 747 CURVE",
"395 747 LINE",
"395 800 LINE",
"220 800 LINE",
"220 747 LINE",
"263 747 LINE",
"262 745 LINE",
"254 725 OFFCURVE",
"248 701 OFFCURVE",
"248 667 CURVE SMOOTH",
"248 585 LINE",
"190 585 LINE",
"190 497 LINE",
"322 498 LINE SMOOTH",
"353 498 OFFCURVE",
"369 497 OFFCURVE",
"369 351 CURVE SMOOTH",
"369 241 OFFCURVE",
"367 58 OFFCURVE",
"367 0 CURVE"
);
},
{
closed = 1;
nodes = (
"259 585 LINE",
"259 636 LINE SMOOTH",
"259 658 OFFCURVE",
"261 686 OFFCURVE",
"268 697 CURVE",
"274 708 OFFCURVE",
"285 714 OFFCURVE",
"296 714 CURVE SMOOTH",
"297 714 OFFCURVE",
"303 713 OFFCURVE",
"305 711 CURVE",
"313 707 OFFCURVE",
"317 700 OFFCURVE",
"320 697 CURVE",
"326 690 OFFCURVE",
"327 684 OFFCURVE",
"331 664 CURVE",
"332 657 OFFCURVE",
"332 648 OFFCURVE",
"332 637 CURVE SMOOTH",
"332 584 LINE"
);
},
{
closed = 1;
nodes = (
"262 55 LINE",
"262 143 LINE SMOOTH",
"262 178 OFFCURVE",
"254 214 OFFCURVE",
"235 230 CURVE SMOOTH",
"224 239 OFFCURVE",
"213 244 OFFCURVE",
"202 244 CURVE SMOOTH",
"189 244 OFFCURVE",
"174 238 OFFCURVE",
"164 219 CURVE SMOOTH",
"154 201 OFFCURVE",
"148 176 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"130 86 LINE SMOOTH",
"95 86 OFFCURVE",
"82 87 OFFCURVE",
"82 233 CURVE SMOOTH",
"82 343 OFFCURVE",
"83 526 OFFCURVE",
"83 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"261 -1 LINE"
);
},
{
closed = 1;
nodes = (
"160 114 LINE SMOOTH",
"160 137 OFFCURVE",
"164 161 OFFCURVE",
"171 172 CURVE SMOOTH",
"179 184 OFFCURVE",
"193 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"207 188 OFFCURVE",
"213 187 OFFCURVE",
"216 186 CURVE",
"226 182 OFFCURVE",
"229 178 OFFCURVE",
"235 173 CURVE",
"240 165 OFFCURVE",
"244 160 OFFCURVE",
"246 142 CURVE SMOOTH",
"247 134 OFFCURVE",
"248 130 OFFCURVE",
"248 116 CURVE SMOOTH",
"248 87 LINE",
"160 86 LINE"
);
}
);
width = 452;
}
);
},
{
glyphname = "ree_ggwaa-ethiopic.liga";
lastChange = "2020-11-26 06:07:06 +0000";
layers = (
{
components = (
{
name = "ree-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = "ggwaa-ethiopic";
transform = "{1, 0, 0, 1, 758, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1605;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"478 -200 LINE",
"478 -8 LINE",
"477 -8 LINE",
"477 7 LINE",
"441 7 LINE",
"441 437 LINE SMOOTH",
"441 541 OFFCURVE",
"419 584 OFFCURVE",
"392 584 CURVE SMOOTH",
"315 584 LINE",
"315 750 LINE",
"367 750 LINE",
"367 800 LINE",
"242 800 LINE",
"242 750 LINE",
"293 750 LINE",
"293 585 LINE",
"217 585 LINE",
"216 497 LINE",
"348 498 LINE SMOOTH",
"387 498 OFFCURVE",
"396 493 OFFCURVE",
"396 351 CURVE SMOOTH",
"396 245 OFFCURVE",
"393 73 OFFCURVE",
"393 7 CURVE",
"304 7 LINE",
"304 -20 LINE",
"435 -20 LINE",
"435 -200 LINE"
);
},
{
closed = 1;
nodes = (
"261 55 LINE",
"261 143 LINE SMOOTH",
"261 183 OFFCURVE",
"253 215 OFFCURVE",
"235 230 CURVE SMOOTH",
"223 240 OFFCURVE",
"212 244 OFFCURVE",
"203 244 CURVE SMOOTH",
"188 244 OFFCURVE",
"173 237 OFFCURVE",
"164 219 CURVE SMOOTH",
"156 203 OFFCURVE",
"148 180 OFFCURVE",
"148 144 CURVE SMOOTH",
"148 86 LINE",
"131 86 LINE SMOOTH",
"94 86 OFFCURVE",
"83 87 OFFCURVE",
"83 233 CURVE SMOOTH",
"83 343 OFFCURVE",
"84 526 OFFCURVE",
"84 584 CURVE",
"37 584 LINE",
"37 147 LINE SMOOTH",
"37 58 OFFCURVE",
"59 0 OFFCURVE",
"85 0 CURVE SMOOTH",
"262 -1 LINE"
);
},
{
closed = 1;
nodes = (
"161 114 LINE SMOOTH",
"161 136 OFFCURVE",
"164 161 OFFCURVE",
"172 172 CURVE",
"179 183 OFFCURVE",
"191 188 OFFCURVE",
"206 188 CURVE SMOOTH",
"209 188 OFFCURVE",
"213 187 OFFCURVE",
"217 186 CURVE",
"223 184 OFFCURVE",
"228 180 OFFCURVE",
"236 173 CURVE",
"241 166 OFFCURVE",
"245 154 OFFCURVE",
"246 141 CURVE",
"247 134 OFFCURVE",
"249 125 OFFCURVE",
"249 116 CURVE SMOOTH",
"249 87 LINE",
"161 86 LINE"
);
}
);
width = 515;
}
);
},
{
glyphname = "rwa_xa-ethiopic.liga";
lastChange = "2020-08-10 02:48:59 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "xa-ethiopic";
transform = "{1, 0, 0, 1, 650, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1637;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"519 0 LINE",
"519 483 LINE SMOOTH",
"519 584 OFFCURVE",
"519 584 OFFCURVE",
"466 584 CURVE SMOOTH",
"345 584 LINE",
"345 800 LINE",
"298 800 LINE",
"298 719 LINE",
"229 719 LINE",
"229 628 LINE",
"298 628 LINE",
"298 556 LINE SMOOTH",
"298 527 OFFCURVE",
"307 504 OFFCURVE",
"323 504 CURVE SMOOTH",
"442 504 LINE SMOOTH",
"473 504 OFFCURVE",
"473 504 OFFCURVE",
"473 306 CURVE SMOOTH",
"473 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"124 86 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 556;
}
);
note = uni1280;
},
{
glyphname = "rwa_xu-ethiopic.liga";
lastChange = "2020-08-10 02:48:59 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -20, 0}";
},
{
name = "xu-ethiopic";
transform = "{1, 0, 0, 1, 650, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1839;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"539 0 LINE",
"539 271 LINE",
"591 271 LINE",
"591 381 LINE",
"539 381 LINE",
"539 483 LINE SMOOTH",
"539 584 OFFCURVE",
"539 584 OFFCURVE",
"484 584 CURVE SMOOTH",
"365 584 LINE",
"365 800 LINE",
"317 800 LINE",
"317 719 LINE",
"248 719 LINE",
"248 628 LINE",
"317 628 LINE",
"317 556 LINE SMOOTH",
"317 525 OFFCURVE",
"326 504 OFFCURVE",
"341 504 CURVE SMOOTH",
"461 504 LINE SMOOTH",
"491 504 OFFCURVE",
"491 504 OFFCURVE",
"491 306 CURVE SMOOTH",
"491 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"199 87 LINE",
"172 86 LINE SMOOTH",
"131 84 OFFCURVE",
"125 90 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 628;
}
);
note = uni1281;
},
{
glyphname = "rwa_xi-ethiopic.liga";
lastChange = "2020-08-10 02:48:59 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -20, 0}";
},
{
name = "xi-ethiopic";
transform = "{1, 0, 0, 1, 650, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1831;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"601 0 LINE",
"601 110 LINE",
"548 110 LINE",
"548 483 LINE SMOOTH",
"548 584 OFFCURVE",
"548 584 OFFCURVE",
"493 584 CURVE SMOOTH",
"372 584 LINE",
"372 800 LINE",
"326 800 LINE",
"326 719 LINE",
"257 719 LINE",
"257 628 LINE",
"326 628 LINE",
"326 556 LINE SMOOTH",
"326 525 OFFCURVE",
"335 504 OFFCURVE",
"350 504 CURVE SMOOTH",
"469 504 LINE SMOOTH",
"500 504 OFFCURVE",
"500 504 OFFCURVE",
"500 306 CURVE SMOOTH",
"500 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"124 86 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 638;
}
);
note = uni1282;
},
{
glyphname = "rwa_xee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "xee-ethiopic";
transform = "{1, 0, 0, 1, 650, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1801;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"558 0 LINE SMOOTH",
"578 0 OFFCURVE",
"598 16 OFFCURVE",
"607 50 CURVE SMOOTH",
"612 69 OFFCURVE",
"616 87 OFFCURVE",
"616 113 CURVE SMOOTH",
"616 143 OFFCURVE",
"611 169 OFFCURVE",
"601 187 CURVE SMOOTH",
"589 208 OFFCURVE",
"576 220 OFFCURVE",
"559 220 CURVE SMOOTH",
"552 220 LINE",
"552 483 LINE SMOOTH",
"552 584 OFFCURVE",
"552 584 OFFCURVE",
"498 584 CURVE SMOOTH",
"378 584 LINE",
"378 800 LINE",
"330 800 LINE",
"330 719 LINE",
"261 719 LINE",
"261 628 LINE",
"330 628 LINE",
"330 556 LINE SMOOTH",
"330 526 OFFCURVE",
"339 504 OFFCURVE",
"354 504 CURVE SMOOTH",
"475 504 LINE SMOOTH",
"504 504 OFFCURVE",
"504 504 OFFCURVE",
"504 306 CURVE SMOOTH",
"504 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"124 86 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"552 194 LINE",
"560 191 OFFCURVE",
"567 185 OFFCURVE",
"574 173 CURVE",
"581 158 OFFCURVE",
"584 131 OFFCURVE",
"584 109 CURVE SMOOTH",
"584 100 OFFCURVE",
"583 95 OFFCURVE",
"582 86 CURVE",
"582 80 OFFCURVE",
"580 68 OFFCURVE",
"574 51 CURVE SMOOTH",
"569 37 OFFCURVE",
"563 32 OFFCURVE",
"556 29 CURVE",
"554 28 OFFCURVE",
"553 28 OFFCURVE",
"552 26 CURVE"
);
}
);
width = 653;
}
);
note = uni1284;
},
{
glyphname = "rwa_xe-ethiopic.liga";
lastChange = "2020-08-10 02:48:59 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -42, 0}";
},
{
name = "xe-ethiopic";
transform = "{1, 0, 0, 1, 650, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1637;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"555 0 LINE",
"555 483 LINE SMOOTH",
"555 584 OFFCURVE",
"555 584 OFFCURVE",
"500 584 CURVE SMOOTH",
"381 584 LINE",
"381 800 LINE",
"333 800 LINE",
"333 702 LINE",
"267 702 LINE",
"267 699 LINE",
"265 699 LINE",
"265 530 LINE",
"298 530 LINE",
"298 625 LINE SMOOTH",
"298 639 OFFCURVE",
"304 650 OFFCURVE",
"311 650 CURVE SMOOTH",
"333 650 LINE",
"333 504 LINE",
"476 504 LINE SMOOTH",
"507 504 OFFCURVE",
"507 504 OFFCURVE",
"507 306 CURVE SMOOTH",
"507 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"199 87 LINE",
"172 86 LINE SMOOTH",
"131 84 OFFCURVE",
"125 90 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 592;
}
);
note = uni1285;
},
{
glyphname = "rwa_xwaa-ethiopic.liga";
lastChange = "2020-08-10 02:48:59 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "xwaa-ethiopic";
transform = "{1, 0, 0, 1, 650, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1755;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"627 -200 LINE",
"627 0 LINE",
"550 0 LINE",
"550 483 LINE SMOOTH",
"550 584 OFFCURVE",
"550 584 OFFCURVE",
"495 584 CURVE SMOOTH",
"376 584 LINE",
"376 800 LINE",
"328 800 LINE",
"328 714 LINE",
"266 714 LINE",
"266 611 LINE",
"328 611 LINE",
"328 556 LINE SMOOTH",
"328 527 OFFCURVE",
"337 504 OFFCURVE",
"352 504 CURVE SMOOTH",
"473 504 LINE SMOOTH",
"502 504 OFFCURVE",
"502 504 OFFCURVE",
"502 306 CURVE SMOOTH",
"502 0 LINE",
"440 0 LINE",
"440 -62 LINE",
"576 -62 LINE",
"576 -200 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 664;
}
);
},
{
glyphname = "rwa_na-ethiopic.liga";
lastChange = "2020-08-10 02:52:16 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -35, 0}";
},
{
name = "na-ethiopic";
transform = "{1, 0, 0, 1, 846, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1627;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"458 0 LINE",
"458 483 LINE SMOOTH",
"458 584 OFFCURVE",
"458 584 OFFCURVE",
"403 584 CURVE SMOOTH",
"284 584 LINE",
"284 800 LINE",
"236 800 LINE",
"236 556 LINE SMOOTH",
"236 525 OFFCURVE",
"245 504 OFFCURVE",
"261 504 CURVE SMOOTH",
"381 504 LINE SMOOTH",
"410 504 OFFCURVE",
"410 504 OFFCURVE",
"410 306 CURVE SMOOTH",
"410 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"125 86 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 495;
}
);
},
{
glyphname = "rwa_nu-ethiopic.liga";
lastChange = "2020-08-10 02:52:35 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -69, 0}";
},
{
name = "nu-ethiopic";
transform = "{1, 0, 0, 1, 752, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1735;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"481 0 LINE",
"481 268 LINE",
"536 268 LINE",
"536 383 LINE",
"481 383 LINE",
"481 483 LINE SMOOTH",
"481 584 OFFCURVE",
"481 584 OFFCURVE",
"428 584 CURVE SMOOTH",
"307 584 LINE",
"307 800 LINE",
"260 800 LINE",
"260 556 LINE SMOOTH",
"260 526 OFFCURVE",
"269 504 OFFCURVE",
"284 504 CURVE SMOOTH",
"403 504 LINE SMOOTH",
"434 504 OFFCURVE",
"434 504 OFFCURVE",
"434 306 CURVE SMOOTH",
"434 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"309 241 CURVE",
"309 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"100 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 573;
}
);
},
{
glyphname = "rwa_ni-ethiopic.liga";
lastChange = "2020-08-10 02:52:48 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -59, 0}";
},
{
name = "ni-ethiopic";
transform = "{1, 0, 0, 1, 772, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1747;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"561 0 LINE",
"561 95 LINE",
"499 95 LINE",
"499 483 LINE SMOOTH",
"499 584 OFFCURVE",
"499 584 OFFCURVE",
"445 584 CURVE SMOOTH",
"324 584 LINE",
"324 800 LINE",
"277 800 LINE",
"277 556 LINE SMOOTH",
"277 526 OFFCURVE",
"286 504 OFFCURVE",
"301 504 CURVE SMOOTH",
"420 504 LINE SMOOTH",
"451 504 OFFCURVE",
"451 504 OFFCURVE",
"451 306 CURVE SMOOTH",
"451 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"309 241 CURVE",
"309 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"100 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 598;
}
);
},
{
glyphname = "rwa_nee-ethiopic.liga";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -69, 0}";
},
{
name = "nee-ethiopic";
transform = "{1, 0, 0, 1, 672, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1623;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"505 0 LINE SMOOTH",
"531 0 OFFCURVE",
"545 19 OFFCURVE",
"555 54 CURVE SMOOTH",
"561 75 OFFCURVE",
"563 100 OFFCURVE",
"563 123 CURVE SMOOTH",
"563 155 OFFCURVE",
"559 184 OFFCURVE",
"550 201 CURVE SMOOTH",
"533 234 OFFCURVE",
"520 239 OFFCURVE",
"506 239 CURVE SMOOTH",
"490 239 LINE",
"490 483 LINE SMOOTH",
"490 584 OFFCURVE",
"490 584 OFFCURVE",
"435 584 CURVE SMOOTH",
"316 584 LINE",
"316 800 LINE",
"268 800 LINE",
"268 556 LINE SMOOTH",
"268 527 OFFCURVE",
"277 504 OFFCURVE",
"293 504 CURVE SMOOTH",
"413 504 LINE SMOOTH",
"444 504 OFFCURVE",
"444 504 OFFCURVE",
"444 306 CURVE SMOOTH",
"444 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"125 86 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"490 212 LINE",
"505 211 OFFCURVE",
"512 206 OFFCURVE",
"522 188 CURVE",
"528 172 OFFCURVE",
"533 150 OFFCURVE",
"533 118 CURVE SMOOTH",
"533 112 OFFCURVE",
"530 92 OFFCURVE",
"530 90 CURVE SMOOTH",
"530 88 OFFCURVE",
"526 62 OFFCURVE",
"522 55 CURVE",
"518 43 OFFCURVE",
"512 35 OFFCURVE",
"505 31 CURVE SMOOTH",
"500 28 OFFCURVE",
"494 26 OFFCURVE",
"490 26 CURVE"
);
}
);
width = 600;
}
);
note = uni1294;
},
{
glyphname = "rwa_ne-ethiopic.liga";
lastChange = "2020-08-10 02:53:10 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -69, 0}";
},
{
name = "ne-ethiopic";
transform = "{1, 0, 0, 1, 772, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1589;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE SMOOTH",
"213 154 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"512 -2 LINE",
"512 232 LINE SMOOTH",
"512 273 OFFCURVE",
"505 278 OFFCURVE",
"491 278 CURVE SMOOTH",
"438 278 LINE",
"518 490 LINE SMOOTH",
"524 507 OFFCURVE",
"520 584 OFFCURVE",
"495 584 CURVE SMOOTH",
"314 584 LINE",
"314 495 LINE",
"471 495 LINE",
"396 292 LINE SMOOTH",
"374 231 OFFCURVE",
"376 210 OFFCURVE",
"391 210 CURVE SMOOTH",
"466 210 LINE",
"466 -2 LINE"
);
}
);
width = 558;
}
);
note = uni1295;
},
{
glyphname = "rwa_nya-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "nya-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1561;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"505 0 LINE",
"505 483 LINE SMOOTH",
"505 584 OFFCURVE",
"505 584 OFFCURVE",
"452 584 CURVE SMOOTH",
"331 584 LINE",
"331 750 LINE",
"395 750 LINE",
"395 800 LINE",
"230 800 LINE",
"230 750 LINE",
"284 750 LINE",
"284 556 LINE SMOOTH",
"284 525 OFFCURVE",
"293 504 OFFCURVE",
"308 504 CURVE SMOOTH",
"428 504 LINE SMOOTH",
"457 504 OFFCURVE",
"457 504 OFFCURVE",
"457 306 CURVE SMOOTH",
"457 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE SMOOTH",
"213 154 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 542;
}
);
note = uni1298;
},
{
glyphname = "rwa_nyu-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "nyu-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1743;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"491 0 LINE",
"491 271 LINE",
"542 271 LINE",
"542 381 LINE",
"491 381 LINE",
"491 483 LINE SMOOTH",
"491 584 OFFCURVE",
"491 584 OFFCURVE",
"436 584 CURVE SMOOTH",
"317 584 LINE",
"317 750 LINE",
"381 750 LINE",
"381 800 LINE",
"216 800 LINE",
"216 750 LINE",
"269 750 LINE",
"269 556 LINE SMOOTH",
"269 525 OFFCURVE",
"279 504 OFFCURVE",
"294 504 CURVE SMOOTH",
"414 504 LINE SMOOTH",
"443 504 OFFCURVE",
"443 504 OFFCURVE",
"443 306 CURVE SMOOTH",
"443 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 579;
}
);
note = uni1299;
},
{
glyphname = "rwa_nyi-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "nyi-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1745;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"546 0 LINE",
"546 110 LINE",
"493 110 LINE",
"493 483 LINE SMOOTH",
"493 584 OFFCURVE",
"493 584 OFFCURVE",
"439 584 CURVE SMOOTH",
"319 584 LINE",
"319 750 LINE",
"392 750 LINE",
"392 800 LINE",
"218 800 LINE",
"218 750 LINE",
"272 750 LINE",
"272 556 LINE SMOOTH",
"272 527 OFFCURVE",
"281 504 OFFCURVE",
"297 504 CURVE SMOOTH",
"415 504 LINE SMOOTH",
"446 504 OFFCURVE",
"446 504 OFFCURVE",
"446 306 CURVE SMOOTH",
"446 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"199 87 LINE",
"172 86 LINE SMOOTH",
"131 84 OFFCURVE",
"125 90 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 583;
}
);
note = uni129A;
},
{
glyphname = "rwa_nyee-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -39, 0}";
},
{
name = "nyee-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1845;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"518 0 LINE SMOOTH",
"543 0 OFFCURVE",
"559 18 OFFCURVE",
"568 50 CURVE SMOOTH",
"573 66 OFFCURVE",
"576 92 OFFCURVE",
"576 117 CURVE SMOOTH",
"576 150 OFFCURVE",
"571 175 OFFCURVE",
"562 193 CURVE",
"550 214 OFFCURVE",
"537 226 OFFCURVE",
"519 226 CURVE SMOOTH",
"495 226 LINE",
"495 483 LINE SMOOTH",
"495 584 OFFCURVE",
"495 584 OFFCURVE",
"440 584 CURVE SMOOTH",
"321 584 LINE",
"321 750 LINE",
"408 750 LINE",
"408 800 LINE",
"220 800 LINE",
"220 750 LINE",
"273 750 LINE",
"273 556 LINE SMOOTH",
"273 524 OFFCURVE",
"283 504 OFFCURVE",
"297 504 CURVE SMOOTH",
"417 504 LINE SMOOTH",
"447 504 OFFCURVE",
"447 504 OFFCURVE",
"447 306 CURVE SMOOTH",
"447 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"199 87 LINE",
"172 86 LINE SMOOTH",
"131 84 OFFCURVE",
"125 90 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"495 200 LINE",
"503 200 LINE SMOOTH",
"517 200 OFFCURVE",
"530 190 OFFCURVE",
"535 178 CURVE SMOOTH",
"542 162 OFFCURVE",
"544 133 OFFCURVE",
"544 111 CURVE SMOOTH",
"544 106 OFFCURVE",
"544 96 OFFCURVE",
"543 88 CURVE SMOOTH",
"541 73 OFFCURVE",
"538 64 OFFCURVE",
"535 52 CURVE SMOOTH",
"532 40 OFFCURVE",
"522 32 OFFCURVE",
"518 29 CURVE",
"511 27 OFFCURVE",
"508 25 OFFCURVE",
"503 25 CURVE SMOOTH",
"495 25 LINE"
);
}
);
width = 613;
}
);
note = uni129C;
},
{
glyphname = "rwa_ga-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "ga-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1417;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"482 0 LINE",
"482 437 LINE SMOOTH",
"482 527 OFFCURVE",
"460 585 OFFCURVE",
"433 585 CURVE SMOOTH",
"257 585 LINE",
"258 497 LINE",
"388 498 LINE SMOOTH",
"428 498 OFFCURVE",
"436 492 OFFCURVE",
"436 351 CURVE SMOOTH",
"436 241 OFFCURVE",
"435 58 OFFCURVE",
"435 0 CURVE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"309 241 CURVE",
"309 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"100 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 519;
}
);
},
{
glyphname = "rwa_gu-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = "gu-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1619;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"476 0 LINE",
"476 274 LINE",
"530 274 LINE",
"530 389 LINE",
"476 389 LINE",
"476 437 LINE SMOOTH",
"476 523 OFFCURVE",
"455 585 OFFCURVE",
"428 585 CURVE SMOOTH",
"252 585 LINE",
"253 497 LINE",
"383 498 LINE SMOOTH",
"415 498 OFFCURVE",
"431 497 OFFCURVE",
"431 351 CURVE SMOOTH",
"431 241 OFFCURVE",
"430 58 OFFCURVE",
"430 0 CURVE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"199 87 LINE",
"172 86 LINE SMOOTH",
"131 84 OFFCURVE",
"125 90 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 567;
}
);
},
{
glyphname = "rwa_gi-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -39, 0}";
},
{
name = "gi-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1611;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"554 0 LINE",
"554 72 LINE",
"497 72 LINE",
"497 437 LINE SMOOTH",
"497 525 OFFCURVE",
"475 585 OFFCURVE",
"449 585 CURVE SMOOTH",
"273 585 LINE",
"272 497 LINE",
"403 498 LINE SMOOTH",
"440 498 OFFCURVE",
"452 498 OFFCURVE",
"452 351 CURVE SMOOTH",
"452 241 OFFCURVE",
"450 58 OFFCURVE",
"450 0 CURVE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"199 87 LINE",
"172 86 LINE SMOOTH",
"131 84 OFFCURVE",
"125 90 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 591;
}
);
note = uni130A;
},
{
glyphname = "rwa_gaa-ethiopic.liga";
lastChange = "2020-08-10 02:55:06 +0000";
layers = (
{
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 749, 0}";
},
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -50, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1526;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "gaa-ethiopic";
transform = "{1, 0, 0, 1, 215, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 244 OFFCURVE",
"203 200 OFFCURVE",
"208 177 CURVE SMOOTH",
"213 154 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"124 86 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 641;
}
);
note = uni130B;
},
{
glyphname = "rwa_gee-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -29, 0}";
},
{
name = "gee-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1671;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE SMOOTH",
"213 154 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"488 -4 LINE SMOOTH",
"505 -4 OFFCURVE",
"516 10 OFFCURVE",
"526 34 CURVE SMOOTH",
"533 51 OFFCURVE",
"537 79 OFFCURVE",
"537 117 CURVE SMOOTH",
"537 137 OFFCURVE",
"536 163 OFFCURVE",
"531 187 CURVE SMOOTH",
"523 224 OFFCURVE",
"508 244 OFFCURVE",
"488 244 CURVE SMOOTH",
"472 244 LINE",
"472 432 LINE SMOOTH",
"472 517 OFFCURVE",
"452 579 OFFCURVE",
"424 579 CURVE SMOOTH",
"249 580 LINE",
"248 492 LINE",
"379 492 LINE SMOOTH",
"416 492 OFFCURVE",
"428 492 OFFCURVE",
"428 347 CURVE SMOOTH",
"428 237 OFFCURVE",
"425 53 OFFCURVE",
"425 -4 CURVE"
);
},
{
closed = 1;
nodes = (
"472 217 LINE",
"474 217 LINE SMOOTH",
"480 217 OFFCURVE",
"481 216 OFFCURVE",
"486 212 CURVE SMOOTH",
"493 206 OFFCURVE",
"498 204 OFFCURVE",
"502 186 CURVE SMOOTH",
"509 153 OFFCURVE",
"506 163 OFFCURVE",
"509 147 CURVE",
"510 139 OFFCURVE",
"511 129 OFFCURVE",
"511 121 CURVE SMOOTH",
"511 96 OFFCURVE",
"510 74 OFFCURVE",
"502 49 CURVE SMOOTH",
"495 28 OFFCURVE",
"479 24 OFFCURVE",
"479 24 CURVE"
);
}
);
width = 574;
}
);
note = uni130C;
},
{
glyphname = "rwa_ge-ethiopic.liga";
lastChange = "2020-11-26 05:45:27 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -49, 0}";
},
{
name = "ge-ethiopic";
transform = "{1, 0, 0, 1, 620, 85}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1601;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"532 0 LINE",
"532 437 LINE SMOOTH",
"532 534 OFFCURVE",
"507 585 OFFCURVE",
"483 585 CURVE SMOOTH",
"309 585 LINE",
"308 497 LINE",
"309 497 LINE",
"309 462 LINE SMOOTH",
"309 430 OFFCURVE",
"315 403 OFFCURVE",
"326 382 CURVE SMOOTH",
"335 366 OFFCURVE",
"350 358 OFFCURVE",
"366 358 CURVE SMOOTH",
"379 358 OFFCURVE",
"390 362 OFFCURVE",
"400 371 CURVE SMOOTH",
"418 387 OFFCURVE",
"428 421 OFFCURVE",
"428 462 CURVE SMOOTH",
"428 498 LINE",
"439 498 LINE SMOOTH",
"475 498 OFFCURVE",
"486 497 OFFCURVE",
"486 351 CURVE SMOOTH",
"486 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"125 86 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"357 414 OFFCURVE",
"341 420 OFFCURVE",
"334 431 CURVE",
"324 445 OFFCURVE",
"323 465 OFFCURVE",
"323 492 CURVE SMOOTH",
"323 497 LINE",
"414 498 LINE",
"414 491 LINE SMOOTH",
"414 484 OFFCURVE",
"414 475 OFFCURVE",
"412 464 CURVE SMOOTH",
"409 450 OFFCURVE",
"406 437 OFFCURVE",
"399 431 CURVE",
"389 421 OFFCURVE",
"391 424 OFFCURVE",
"381 417 CURVE",
"377 415 OFFCURVE",
"371 414 OFFCURVE",
"368 414 CURVE SMOOTH"
);
}
);
width = 569;
}
);
note = uni130D;
},
{
glyphname = "rwa_go-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -49, 0}";
},
{
name = "go-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1417;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"476 0 LINE",
"476 437 LINE SMOOTH",
"476 540 OFFCURVE",
"454 584 OFFCURVE",
"428 584 CURVE SMOOTH",
"361 584 LINE",
"361 800 LINE",
"324 800 LINE",
"324 585 LINE",
"252 585 LINE",
"252 497 LINE",
"382 498 LINE SMOOTH",
"415 498 OFFCURVE",
"431 498 OFFCURVE",
"431 351 CURVE SMOOTH",
"431 241 OFFCURVE",
"429 58 OFFCURVE",
"429 0 CURVE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"309 241 CURVE",
"309 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"100 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 513;
}
);
},
{
glyphname = "rwa_gwaa-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -49, 0}";
},
{
name = "gwaa-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1471;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"538 -200 LINE",
"538 161 LINE",
"501 161 LINE",
"501 437 LINE SMOOTH",
"501 536 OFFCURVE",
"475 585 OFFCURVE",
"453 585 CURVE SMOOTH",
"277 585 LINE",
"277 497 LINE",
"407 498 LINE SMOOTH",
"445 498 OFFCURVE",
"456 497 OFFCURVE",
"456 351 CURVE SMOOTH",
"456 278 OFFCURVE",
"454 107 OFFCURVE",
"454 147 CURVE",
"370 139 LINE",
"403 61 LINE",
"455 120 LINE",
"490 120 LINE",
"490 -200 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 245 OFFCURVE",
"200 217 OFFCURVE",
"209 175 CURVE SMOOTH",
"214 153 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"124 86 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 575;
}
);
note = uni1313;
},
{
glyphname = "rwa_gga-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -29, 0}";
},
{
name = "gga-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1417;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"482 0 LINE",
"482 437 LINE SMOOTH",
"482 541 OFFCURVE",
"461 584 OFFCURVE",
"434 584 CURVE SMOOTH",
"357 584 LINE",
"357 750 LINE",
"409 750 LINE",
"409 800 LINE",
"284 800 LINE",
"284 750 LINE",
"335 750 LINE",
"335 585 LINE",
"258 585 LINE",
"257 497 LINE",
"389 498 LINE SMOOTH",
"421 498 OFFCURVE",
"437 497 OFFCURVE",
"437 351 CURVE SMOOTH",
"437 241 OFFCURVE",
"436 58 OFFCURVE",
"436 0 CURVE"
);
},
{
closed = 1;
nodes = (
"220 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"225 87 CURVE",
"199 87 LINE",
"173 86 LINE SMOOTH",
"140 85 OFFCURVE",
"125 87 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 301 OFFCURVE",
"125 444 OFFCURVE",
"126 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 519;
}
);
},
{
glyphname = "rwa_ggu-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -29, 0}";
},
{
name = "ggu-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1619;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"482 0 LINE",
"482 437 LINE SMOOTH",
"482 541 OFFCURVE",
"461 584 OFFCURVE",
"434 584 CURVE SMOOTH",
"357 584 LINE",
"357 757 LINE",
"421 757 LINE",
"421 800 LINE",
"286 800 LINE",
"286 757 LINE",
"336 757 LINE",
"336 585 LINE",
"258 585 LINE",
"257 497 LINE",
"389 498 LINE SMOOTH",
"421 498 OFFCURVE",
"437 497 OFFCURVE",
"437 351 CURVE SMOOTH",
"437 241 OFFCURVE",
"436 58 OFFCURVE",
"436 0 CURVE"
);
},
{
closed = 1;
nodes = (
"220 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"225 87 CURVE",
"199 87 LINE",
"173 86 LINE SMOOTH",
"140 85 OFFCURVE",
"125 87 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 301 OFFCURVE",
"125 444 OFFCURVE",
"126 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 519;
}
);
},
{
glyphname = "rwa_ggi-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -39, 0}";
},
{
name = "ggi-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1611;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"538 0 LINE",
"538 61 LINE",
"469 61 LINE",
"469 437 LINE SMOOTH",
"469 541 OFFCURVE",
"447 584 OFFCURVE",
"421 584 CURVE SMOOTH",
"350 584 LINE",
"350 750 LINE",
"403 750 LINE",
"403 800 LINE",
"276 800 LINE",
"276 750 LINE",
"327 750 LINE",
"327 585 LINE",
"246 585 LINE",
"245 497 LINE",
"376 498 LINE SMOOTH",
"413 498 OFFCURVE",
"423 497 OFFCURVE",
"423 351 CURVE SMOOTH",
"423 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"125 86 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 575;
}
);
},
{
glyphname = "rwa_ggaa-ethiopic.liga";
lastChange = "2020-08-10 02:53:49 +0000";
layers = (
{
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 773, 0}";
},
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -55, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1563;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
components = (
{
name = "ggaa-ethiopic";
transform = "{1, 0, 0, 1, 246, 0}";
}
);
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 249 OFFCURVE",
"203 204 OFFCURVE",
"209 177 CURVE SMOOTH",
"214 152 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"199 87 LINE",
"172 86 LINE SMOOTH",
"131 84 OFFCURVE",
"125 90 OFFCURVE",
"125 233 CURVE SMOOTH",
"125 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"187 526 LINE",
"187 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 671;
}
);
},
{
glyphname = "rwa_ggee-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -49, 0}";
},
{
name = "ggee-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1671;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"488 -4 LINE SMOOTH",
"505 -4 OFFCURVE",
"516 10 OFFCURVE",
"526 34 CURVE SMOOTH",
"533 51 OFFCURVE",
"537 79 OFFCURVE",
"537 117 CURVE SMOOTH",
"537 140 OFFCURVE",
"535 166 OFFCURVE",
"531 185 CURVE SMOOTH",
"521 232 OFFCURVE",
"506 244 OFFCURVE",
"488 244 CURVE SMOOTH",
"473 244 LINE",
"473 432 LINE SMOOTH",
"473 532 OFFCURVE",
"452 579 OFFCURVE",
"423 579 CURVE SMOOTH",
"345 579 LINE",
"345 750 LINE",
"406 750 LINE",
"406 800 LINE",
"278 800 LINE",
"278 750 LINE",
"324 750 LINE",
"324 580 LINE",
"249 580 LINE",
"248 492 LINE",
"379 492 LINE SMOOTH",
"416 492 OFFCURVE",
"428 492 OFFCURVE",
"428 347 CURVE SMOOTH",
"428 237 OFFCURVE",
"425 53 OFFCURVE",
"425 -4 CURVE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"477 217 LINE",
"477 217 OFFCURVE",
"482 216 OFFCURVE",
"486 212 CURVE",
"496 204 OFFCURVE",
"500 197 OFFCURVE",
"502 186 CURVE SMOOTH",
"509 153 OFFCURVE",
"506 163 OFFCURVE",
"509 147 CURVE",
"510 139 OFFCURVE",
"511 129 OFFCURVE",
"511 121 CURVE SMOOTH",
"511 96 OFFCURVE",
"510 74 OFFCURVE",
"502 49 CURVE SMOOTH",
"495 28 OFFCURVE",
"480 24 OFFCURVE",
"480 24 CURVE"
);
}
);
width = 574;
}
);
},
{
glyphname = "rwa_gge-ethiopic.liga";
lastChange = "2020-11-26 05:45:43 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -39, 0}";
},
{
name = "gge-ethiopic";
transform = "{1, 0, 0, 1, 640, 90}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1595;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"436 584 LINE",
"436 750 LINE",
"497 750 LINE",
"497 800 LINE",
"331 800 LINE",
"331 750 LINE",
"410 750 LINE",
"410 584 LINE",
"304 585 LINE",
"303 497 LINE",
"304 497 LINE",
"304 462 LINE SMOOTH",
"304 425 OFFCURVE",
"311 399 OFFCURVE",
"319 385 CURVE SMOOTH",
"330 365 OFFCURVE",
"344 358 OFFCURVE",
"361 358 CURVE SMOOTH",
"375 358 OFFCURVE",
"384 362 OFFCURVE",
"394 371 CURVE SMOOTH",
"415 390 OFFCURVE",
"422 426 OFFCURVE",
"422 462 CURVE SMOOTH",
"422 498 LINE",
"432 498 LINE SMOOTH",
"469 498 OFFCURVE",
"481 498 OFFCURVE",
"481 351 CURVE SMOOTH",
"481 241 OFFCURVE",
"480 58 OFFCURVE",
"480 0 CURVE",
"527 0 LINE",
"527 437 LINE SMOOTH",
"527 540 OFFCURVE",
"505 584 OFFCURVE",
"477 584 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"126 0 CURVE SMOOTH",
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"409 483 OFFCURVE",
"408 473 OFFCURVE",
"407 464 CURVE",
"402 445 OFFCURVE",
"399 439 OFFCURVE",
"394 431 CURVE",
"393 430 OFFCURVE",
"383 421 OFFCURVE",
"375 417 CURVE SMOOTH",
"369 414 OFFCURVE",
"367 414 OFFCURVE",
"362 414 CURVE SMOOTH",
"348 414 OFFCURVE",
"335 421 OFFCURVE",
"328 431 CURVE SMOOTH",
"321 441 OFFCURVE",
"317 462 OFFCURVE",
"317 492 CURVE SMOOTH",
"317 497 LINE",
"409 498 LINE",
"409 491 LINE SMOOTH"
);
}
);
width = 564;
}
);
},
{
glyphname = "rwa_ggo-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -49, 0}";
},
{
name = "ggo-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1417;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"474 0 LINE",
"474 437 LINE SMOOTH",
"474 542 OFFCURVE",
"452 584 OFFCURVE",
"426 584 CURVE SMOOTH",
"402 584 LINE",
"402 667 LINE SMOOTH",
"402 699 OFFCURVE",
"398 729 OFFCURVE",
"389 747 CURVE",
"456 747 LINE",
"456 800 LINE",
"281 800 LINE",
"281 747 LINE",
"324 747 LINE",
"323 745 LINE",
"315 726 OFFCURVE",
"308 700 OFFCURVE",
"308 667 CURVE SMOOTH",
"308 585 LINE",
"251 585 LINE",
"251 497 LINE",
"381 498 LINE SMOOTH",
"418 498 OFFCURVE",
"430 497 OFFCURVE",
"430 351 CURVE SMOOTH",
"430 241 OFFCURVE",
"428 58 OFFCURVE",
"428 0 CURVE"
);
},
{
closed = 1;
nodes = (
"320 585 LINE",
"320 636 LINE SMOOTH",
"320 662 OFFCURVE",
"322 686 OFFCURVE",
"329 697 CURVE",
"334 708 OFFCURVE",
"347 714 OFFCURVE",
"356 714 CURVE SMOOTH",
"358 714 OFFCURVE",
"363 713 OFFCURVE",
"367 710 CURVE SMOOTH",
"375 704 OFFCURVE",
"376 702 OFFCURVE",
"381 697 CURVE",
"387 690 OFFCURVE",
"388 682 OFFCURVE",
"391 664 CURVE",
"393 657 OFFCURVE",
"392 646 OFFCURVE",
"392 637 CURVE SMOOTH",
"392 584 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"267 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"231 205 OFFCURVE",
"231 235 CURVE SMOOTH",
"231 282 OFFCURVE",
"245 240 OFFCURVE",
"309 241 CURVE",
"309 320 LINE",
"295 320 LINE SMOOTH",
"238 320 OFFCURVE",
"194 326 OFFCURVE",
"194 266 CURVE SMOOTH",
"194 247 OFFCURVE",
"202 204 OFFCURVE",
"208 177 CURVE",
"211 160 OFFCURVE",
"232 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"141 85 OFFCURVE",
"124 87 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"100 0 OFFCURVE",
"126 0 CURVE SMOOTH"
);
}
);
width = 511;
}
);
},
{
glyphname = "rwa_ggwaa-ethiopic.liga";
lastChange = "2020-08-10 02:54:44 +0000";
layers = (
{
components = (
{
name = "rwa-ethiopic";
transform = "{1, 0, 0, 1, -49, 0}";
},
{
name = "ggwaa-ethiopic";
transform = "{1, 0, 0, 1, 750, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1497;
},
{
associatedMasterId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
layerId = "CBA2E3C4-6E62-469B-BD2C-D62FAD87CF88";
name = Light;
paths = (
{
closed = 1;
nodes = (
"496 -200 LINE",
"496 -8 LINE",
"495 -8 LINE",
"495 7 LINE",
"459 7 LINE",
"459 437 LINE SMOOTH",
"459 539 OFFCURVE",
"437 584 OFFCURVE",
"409 584 CURVE SMOOTH",
"333 584 LINE",
"333 750 LINE",
"385 750 LINE",
"385 800 LINE",
"260 800 LINE",
"260 750 LINE",
"310 750 LINE",
"310 585 LINE",
"235 585 LINE",
"234 497 LINE",
"365 498 LINE SMOOTH",
"402 498 OFFCURVE",
"414 497 OFFCURVE",
"414 351 CURVE SMOOTH",
"414 245 OFFCURVE",
"412 73 OFFCURVE",
"412 7 CURVE",
"322 7 LINE",
"322 -20 LINE",
"453 -20 LINE",
"453 -200 LINE"
);
},
{
closed = 1;
nodes = (
"219 0 LINE SMOOTH",
"268 0 OFFCURVE",
"272 0 OFFCURVE",
"272 61 CURVE SMOOTH",
"272 95 OFFCURVE",
"232 205 OFFCURVE",
"232 235 CURVE SMOOTH",
"232 282 OFFCURVE",
"245 240 OFFCURVE",
"310 241 CURVE",
"310 320 LINE",
"294 320 LINE SMOOTH",
"239 320 OFFCURVE",
"195 326 OFFCURVE",
"195 266 CURVE SMOOTH",
"195 248 OFFCURVE",
"202 206 OFFCURVE",
"208 178 CURVE SMOOTH",
"212 159 OFFCURVE",
"231 96 OFFCURVE",
"224 87 CURVE",
"198 87 LINE",
"172 86 LINE SMOOTH",
"142 85 OFFCURVE",
"124 86 OFFCURVE",
"124 233 CURVE SMOOTH",
"124 318 OFFCURVE",
"126 444 OFFCURVE",
"125 526 CURVE",
"186 526 LINE",
"186 584 LINE",
"37 584 LINE",
"37 526 LINE",
"79 526 LINE",
"79 147 LINE SMOOTH",
"79 43 OFFCURVE",
"101 0 OFFCURVE",
"127 0 CURVE SMOOTH"
);
}
);
width = 533;
}
);
},
{
glyphname = "one-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -76, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"683 1273 LINE SMOOTH",
"343 1268 OFFCURVE",
"170 1051 OFFCURVE",
"170 648 CURVE SMOOTH",
"170 594 LINE SMOOTH",
"170 341 OFFCURVE",
"314 163 OFFCURVE",
"523 163 CURVE SMOOTH",
"728 163 OFFCURVE",
"861 310 OFFCURVE",
"861 535 CURVE SMOOTH",
"861 747 OFFCURVE",
"739 896 OFFCURVE",
"548 896 CURVE SMOOTH",
"449 896 OFFCURVE",
"370 863 OFFCURVE",
"312 796 CURVE",
"332 1021 OFFCURVE",
"466 1151 OFFCURVE",
"682 1155 CURVE SMOOTH",
"707 1155 LINE",
"707 1273 LINE"
);
},
{
closed = 1;
nodes = (
"645 780 OFFCURVE",
"724 679 OFFCURVE",
"724 528 CURVE SMOOTH",
"724 379 OFFCURVE",
"647 278 OFFCURVE",
"523 278 CURVE SMOOTH",
"402 278 OFFCURVE",
"310 398 OFFCURVE",
"310 578 CURVE SMOOTH",
"310 630 LINE",
"341 715 OFFCURVE",
"429 780 OFFCURVE",
"525 780 CURVE SMOOTH"
);
}
);
width = 1031;
}
);
unicode = 1369;
},
{
glyphname = "two-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -57, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"322 702 LINE",
"323 735 OFFCURVE",
"325 768 OFFCURVE",
"327 800 CURVE",
"716 800 LINE",
"754 798 OFFCURVE",
"840 872 OFFCURVE",
"840 989 CURVE SMOOTH",
"840 1174 OFFCURVE",
"710 1290 OFFCURVE",
"518 1290 CURVE SMOOTH",
"325 1290 OFFCURVE",
"205 1174 OFFCURVE",
"196 989 CURVE SMOOTH",
"170 476 LINE",
"170 288 OFFCURVE",
"307 166 OFFCURVE",
"518 166 CURVE SMOOTH",
"726 166 OFFCURVE",
"866 287 OFFCURVE",
"866 476 CURVE SMOOTH",
"866 564 OFFCURVE",
"835 699 OFFCURVE",
"718 700 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 1176 OFFCURVE",
"701 1099 OFFCURVE",
"701 988 CURVE SMOOTH",
"701 960 OFFCURVE",
"697 935 OFFCURVE",
"688 912 CURVE",
"332 912 LINE",
"334 947 OFFCURVE",
"335 974 OFFCURVE",
"335 987 CURVE SMOOTH",
"335 1103 OFFCURVE",
"409 1176 OFFCURVE",
"518 1176 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"387 279 OFFCURVE",
"309 355 OFFCURVE",
"309 479 CURVE SMOOTH",
"309 481 OFFCURVE",
"312 527 OFFCURVE",
"315 590 CURVE",
"699 590 LINE",
"718 558 OFFCURVE",
"727 521 OFFCURVE",
"727 479 CURVE SMOOTH",
"727 356 OFFCURVE",
"649 279 OFFCURVE",
"518 279 CURVE SMOOTH"
);
}
);
width = 1037;
}
);
unicode = 136A;
},
{
glyphname = "three-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -30, 0}";
},
{
name = seven;
transform = "{-0.7513, 0, 0, 0.7513, 967, 181}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1079;
}
);
unicode = 136B;
},
{
glyphname = "four-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -58, 0}";
},
{
name = zero;
transform = "{0.7513, 0, 0, 0.7513, 84, 181}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1036;
}
);
unicode = 136C;
},
{
glyphname = "five-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -30, 0}";
},
{
name = seven;
transform = "{-0.7513, 0, 0, -0.7513, 967, 1275}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"504 855 LINE",
"874 855 LINE",
"874 956 LINE",
"504 956 LINE"
);
}
);
width = 1079;
}
);
unicode = 136D;
},
{
glyphname = "six-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -30, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"677 606 OFFCURVE",
"660 604 OFFCURVE",
"643 600 CURVE",
"909 1197 LINE",
"909 1275 LINE",
"170 1275 LINE",
"170 1161 LINE",
"762 1161 LINE",
"478 536 LINE SMOOTH",
"415 397 OFFCURVE",
"450 194 OFFCURVE",
"696 194 CURVE SMOOTH",
"817 194 OFFCURVE",
"911 282 OFFCURVE",
"911 398 CURVE SMOOTH",
"911 513 OFFCURVE",
"819 606 OFFCURVE",
"696 606 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"631 283 OFFCURVE",
"580 335 OFFCURVE",
"580 398 CURVE SMOOTH",
"580 473 OFFCURVE",
"629 516 OFFCURVE",
"696 516 CURVE SMOOTH",
"851 516 OFFCURVE",
"847 283 OFFCURVE",
"696 283 CURVE SMOOTH"
);
}
);
width = 1081;
}
);
unicode = 136E;
},
{
glyphname = "seven-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -30, 0}";
},
{
name = seven;
transform = "{0.7513, 0, 0, 0.7513, 112, 181}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"385 182 LINE",
"762 182 LINE",
"762 283 LINE",
"385 283 LINE"
);
}
);
width = 1079;
}
);
unicode = 136F;
},
{
glyphname = "eight-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -79, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 0;
nodes = (
"261 1262 LINE",
"261 1135 LINE"
);
},
{
closed = 1;
nodes = (
"581 322 LINE",
"581 1140 LINE",
"751 1134 LINE",
"751 1261 LINE",
"581 1273 LINE",
"431 1273 LINE",
"261 1262 LINE",
"261 1135 LINE",
"441 1141 LINE",
"441 322 LINE",
"261 328 LINE",
"261 201 LINE",
"431 190 LINE",
"581 190 LINE",
"761 201 LINE",
"761 328 LINE"
);
}
);
width = 1015;
}
);
unicode = 1370;
},
{
glyphname = "nine-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -58, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"703 1248 LINE",
"716 1248 OFFCURVE",
"722 911 OFFCURVE",
"722 838 CURVE SMOOTH",
"722 610 LINE SMOOTH",
"719 382 OFFCURVE",
"654 279 OFFCURVE",
"517 279 CURVE SMOOTH",
"377 279 OFFCURVE",
"309 389 OFFCURVE",
"309 626 CURVE SMOOTH",
"309 848 LINE SMOOTH",
"310 915 OFFCURVE",
"316 1248 OFFCURVE",
"329 1248 CURVE",
"189 1248 LINE",
"176 1248 OFFCURVE",
"170 892 OFFCURVE",
"170 814 CURVE SMOOTH",
"170 629 LINE SMOOTH",
"174 321 OFFCURVE",
"284 166 OFFCURVE",
"517 166 CURVE SMOOTH",
"753 166 OFFCURVE",
"861 321 OFFCURVE",
"861 648 CURVE SMOOTH",
"861 828 LINE SMOOTH",
"860 901 OFFCURVE",
"854 1248 OFFCURVE",
"842 1248 CURVE"
);
},
{
closed = 1;
nodes = (
"227 759 LINE",
"769 759 LINE",
"769 860 LINE",
"227 860 LINE"
);
}
);
width = 1036;
}
);
unicode = 1371;
},
{
glyphname = "ten-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -79, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"581 1281 LINE",
"559 1281 LINE",
"441 1262 LINE",
"441 1135 LINE",
"441 1141 LINE",
"441 182 LINE",
"581 182 LINE"
);
}
);
width = 1015;
}
);
unicode = 1372;
},
{
glyphname = "twenty-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -76, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"856 143 LINE",
"859 166 OFFCURVE",
"861 510 OFFCURVE",
"861 535 CURVE SMOOTH",
"861 747 OFFCURVE",
"739 896 OFFCURVE",
"548 896 CURVE SMOOTH",
"449 896 OFFCURVE",
"370 863 OFFCURVE",
"312 796 CURVE",
"332 1021 OFFCURVE",
"466 1151 OFFCURVE",
"682 1155 CURVE SMOOTH",
"707 1155 LINE",
"707 1157 LINE",
"796 1157 LINE",
"796 1272 LINE",
"707 1272 LINE",
"707 1273 LINE",
"683 1273 LINE SMOOTH",
"673 1273 OFFCURVE",
"663 1273 OFFCURVE",
"654 1272 CURVE",
"262 1272 LINE",
"262 1157 LINE",
"344 1157 LINE",
"228 1054 OFFCURVE",
"170 882 OFFCURVE",
"170 648 CURVE SMOOTH",
"170 594 LINE SMOOTH",
"170 554 OFFCURVE",
"173 188 OFFCURVE",
"180 142 CURVE",
"324 142 LINE",
"315 177 OFFCURVE",
"310 536 OFFCURVE",
"310 578 CURVE SMOOTH",
"310 630 LINE",
"341 715 OFFCURVE",
"429 780 OFFCURVE",
"525 780 CURVE SMOOTH",
"645 780 OFFCURVE",
"724 679 OFFCURVE",
"724 528 CURVE SMOOTH",
"724 505 OFFCURVE",
"722 163 OFFCURVE",
"719 143 CURVE"
);
}
);
width = 1031;
}
);
unicode = 1373;
},
{
glyphname = "thirty-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, 21, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"170 900 LINE",
"170 214 LINE",
"281 214 LINE",
"281 900 LINE"
);
},
{
closed = 1;
nodes = (
"663 1157 OFFCURVE",
"524 1253 OFFCURVE",
"428 1253 CURVE SMOOTH",
"270 1253 OFFCURVE",
"170 1079 OFFCURVE",
"170 893 CURVE SMOOTH",
"170 893 OFFCURVE",
"170 893 OFFCURVE",
"170 892 CURVE",
"281 891 LINE",
"281 892 OFFCURVE",
"281 892 OFFCURVE",
"281 893 CURVE SMOOTH",
"281 1014 OFFCURVE",
"321 1107 OFFCURVE",
"426 1107 CURVE SMOOTH",
"524 1107 OFFCURVE",
"562 1059 OFFCURVE",
"566 932 CURVE",
"664 931 LINE",
"663 1100 LINE"
);
},
{
closed = 1;
nodes = (
"566 940 LINE",
"566 365 LINE",
"655 356 LINE",
"663 931 LINE"
);
},
{
closed = 1;
nodes = (
"1047 567 LINE",
"1047 1253 LINE",
"936 1253 LINE",
"936 567 LINE"
);
},
{
closed = 1;
nodes = (
"568 310 OFFCURVE",
"693 214 OFFCURVE",
"789 214 CURVE SMOOTH",
"947 214 OFFCURVE",
"1047 388 OFFCURVE",
"1047 574 CURVE SMOOTH",
"1047 574 OFFCURVE",
"1047 574 OFFCURVE",
"1047 575 CURVE",
"936 576 LINE",
"936 575 OFFCURVE",
"936 575 OFFCURVE",
"936 574 CURVE SMOOTH",
"936 453 OFFCURVE",
"896 344 OFFCURVE",
"791 344 CURVE SMOOTH",
"693 344 OFFCURVE",
"645 409 OFFCURVE",
"641 535 CURVE",
"567 536 LINE",
"568 367 LINE"
);
}
);
width = 1201;
}
);
unicode = 1374;
},
{
glyphname = "forty-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -41, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"701 1085 LINE",
"701 548 LINE",
"401 548 LINE",
"278 435 LINE",
"701 435 LINE",
"701 181 LINE",
"841 181 LINE",
"841 1275 LINE",
"702 1275 LINE"
);
},
{
closed = 1;
nodes = (
"451 1085 LINE",
"451 548 LINE",
"303 548 LINE",
"303 1275 LINE",
"170 1275 LINE",
"170 435 LINE",
"581 435 LINE",
"591 1275 LINE",
"452 1275 LINE"
);
}
);
width = 1053;
}
);
unicode = 1375;
},
{
glyphname = "fifty-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -79, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"603 1085 LINE",
"603 548 LINE",
"313 548 LINE",
"313 1275 LINE",
"180 1275 LINE",
"180 435 LINE",
"603 435 LINE",
"603 181 LINE",
"743 181 LINE",
"743 1275 LINE",
"604 1275 LINE"
);
}
);
width = 1015;
}
);
unicode = 1376;
},
{
glyphname = "sixty-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -79, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 0;
nodes = (
"261 1262 LINE",
"261 1135 LINE"
);
},
{
closed = 1;
nodes = (
"481 730 LINE",
"481 322 LINE",
"311 328 LINE",
"311 201 LINE",
"481 190 LINE",
"631 190 LINE",
"811 201 LINE",
"811 328 LINE",
"621 322 LINE",
"621 732 LINE"
);
},
{
closed = 1;
nodes = (
"491 732 LINE",
"491 1140 LINE",
"661 1134 LINE",
"661 1261 LINE",
"491 1273 LINE",
"341 1273 LINE",
"171 1262 LINE",
"171 1135 LINE",
"353 1141 LINE",
"353 730 LINE"
);
},
{
closed = 1;
nodes = (
"353 683 LINE",
"621 683 LINE",
"621 798 LINE",
"353 798 LINE"
);
}
);
width = 1015;
}
);
unicode = 1377;
},
{
glyphname = "seventy-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -79, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"775 163 LINE",
"775 282 LINE",
"552 282 LINE SMOOTH",
"350 282 OFFCURVE",
"348 363 OFFCURVE",
"348 496 CURVE SMOOTH",
"348 660 LINE",
"402 628 OFFCURVE",
"441 609 OFFCURVE",
"552 613 CURVE SMOOTH",
"721 619 OFFCURVE",
"874 787 OFFCURVE",
"874 948 CURVE SMOOTH",
"874 1185 OFFCURVE",
"750 1272 OFFCURVE",
"531 1272 CURVE SMOOTH",
"338 1272 OFFCURVE",
"209 1094 OFFCURVE",
"210 969 CURVE SMOOTH",
"213 366 LINE SMOOTH",
"214 249 OFFCURVE",
"306 163 OFFCURVE",
"423 163 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"356 737 OFFCURVE",
"341 823 OFFCURVE",
"341 969 CURVE SMOOTH",
"341 1091 OFFCURVE",
"451 1159 OFFCURVE",
"531 1159 CURVE SMOOTH",
"660 1159 OFFCURVE",
"738 1099 OFFCURVE",
"738 950 CURVE SMOOTH",
"738 827 OFFCURVE",
"652 737 OFFCURVE",
"520 737 CURVE SMOOTH"
);
}
);
width = 1044;
}
);
unicode = 1378;
},
{
glyphname = "eighty-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"779 1281 LINE",
"757 1281 LINE",
"639 1262 LINE",
"639 1135 LINE",
"639 1141 LINE",
"639 182 LINE",
"779 182 LINE"
);
},
{
closed = 1;
nodes = (
"409 1281 LINE",
"387 1281 LINE",
"269 1262 LINE",
"269 1135 LINE",
"269 1141 LINE",
"269 182 LINE",
"409 182 LINE"
);
},
{
closed = 1;
nodes = (
"899 1172 LINE",
"899 1194 LINE",
"900 1312 LINE",
"170 1312 LINE",
"170 1172 LINE"
);
}
);
width = 1073;
}
);
unicode = 1379;
},
{
glyphname = "ninety-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -79, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 0;
nodes = (
"351 1262 LINE",
"351 1135 LINE"
);
},
{
closed = 1;
nodes = (
"571 730 LINE",
"571 322 LINE",
"571 190 LINE",
"711 190 LINE",
"711 322 LINE",
"711 732 LINE"
);
},
{
closed = 1;
nodes = (
"581 732 LINE",
"581 1140 LINE",
"581 1273 LINE",
"431 1273 LINE",
"261 1262 LINE",
"261 1135 LINE",
"443 1141 LINE",
"443 730 LINE"
);
},
{
closed = 1;
nodes = (
"443 683 LINE",
"711 683 LINE",
"711 798 LINE",
"443 798 LINE"
);
}
);
width = 1015;
}
);
unicode = 137A;
},
{
glyphname = "hundred-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, -76, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"707 281 LINE",
"682 281 LINE SMOOTH",
"466 285 OFFCURVE",
"332 415 OFFCURVE",
"312 640 CURVE",
"370 573 OFFCURVE",
"449 540 OFFCURVE",
"548 540 CURVE SMOOTH",
"739 540 OFFCURVE",
"861 689 OFFCURVE",
"861 901 CURVE SMOOTH",
"861 1126 OFFCURVE",
"728 1273 OFFCURVE",
"523 1273 CURVE SMOOTH",
"314 1273 OFFCURVE",
"170 1095 OFFCURVE",
"170 842 CURVE SMOOTH",
"170 788 LINE SMOOTH",
"170 385 OFFCURVE",
"343 168 OFFCURVE",
"683 163 CURVE SMOOTH",
"707 163 LINE"
);
},
{
closed = 1;
nodes = (
"429 656 OFFCURVE",
"341 721 OFFCURVE",
"310 806 CURVE",
"310 858 LINE SMOOTH",
"310 1038 OFFCURVE",
"402 1158 OFFCURVE",
"523 1158 CURVE SMOOTH",
"647 1158 OFFCURVE",
"724 1057 OFFCURVE",
"724 908 CURVE SMOOTH",
"724 757 OFFCURVE",
"645 656 OFFCURVE",
"525 656 CURVE SMOOTH"
);
}
);
width = 1031;
}
);
unicode = 137B;
},
{
glyphname = "tenthousand-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = _numBar;
transform = "{1, 0, 0, 1, 324, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"707 281 LINE",
"682 281 LINE SMOOTH",
"466 281 OFFCURVE",
"332 415 OFFCURVE",
"312 640 CURVE",
"370 573 OFFCURVE",
"449 540 OFFCURVE",
"548 540 CURVE SMOOTH",
"739 540 OFFCURVE",
"861 689 OFFCURVE",
"861 901 CURVE SMOOTH",
"861 1126 OFFCURVE",
"728 1273 OFFCURVE",
"523 1273 CURVE SMOOTH",
"314 1273 OFFCURVE",
"170 1095 OFFCURVE",
"170 842 CURVE SMOOTH",
"170 788 LINE SMOOTH",
"170 385 OFFCURVE",
"343 163 OFFCURVE",
"683 163 CURVE SMOOTH",
"707 163 LINE"
);
},
{
closed = 1;
nodes = (
"429 656 OFFCURVE",
"341 721 OFFCURVE",
"310 806 CURVE",
"310 858 LINE SMOOTH",
"310 1038 OFFCURVE",
"402 1158 OFFCURVE",
"523 1158 CURVE SMOOTH",
"647 1158 OFFCURVE",
"724 1057 OFFCURVE",
"724 908 CURVE SMOOTH",
"724 757 OFFCURVE",
"645 656 OFFCURVE",
"525 656 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1465 281 LINE",
"1440 281 LINE SMOOTH",
"1224 281 OFFCURVE",
"1090 415 OFFCURVE",
"1070 640 CURVE",
"1128 573 OFFCURVE",
"1207 540 OFFCURVE",
"1306 540 CURVE SMOOTH",
"1497 540 OFFCURVE",
"1619 689 OFFCURVE",
"1619 901 CURVE SMOOTH",
"1619 1126 OFFCURVE",
"1486 1273 OFFCURVE",
"1281 1273 CURVE SMOOTH",
"1072 1273 OFFCURVE",
"928 1095 OFFCURVE",
"928 842 CURVE SMOOTH",
"928 788 LINE SMOOTH",
"928 385 OFFCURVE",
"1101 163 OFFCURVE",
"1441 163 CURVE SMOOTH",
"1465 163 LINE"
);
},
{
closed = 1;
nodes = (
"1187 656 OFFCURVE",
"1099 721 OFFCURVE",
"1068 806 CURVE",
"1068 858 LINE SMOOTH",
"1068 1038 OFFCURVE",
"1160 1158 OFFCURVE",
"1281 1158 CURVE SMOOTH",
"1405 1158 OFFCURVE",
"1482 1057 OFFCURVE",
"1482 908 CURVE SMOOTH",
"1482 757 OFFCURVE",
"1403 656 OFFCURVE",
"1283 656 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 385 LINE",
"1027 385 LINE",
"1027 476 LINE",
"294 476 LINE"
);
}
);
width = 1789;
}
);
unicode = 137C;
},
{
glyphname = zero.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"667 628 OFFCURVE",
"515 800 OFFCURVE",
"374 800 QCURVE SMOOTH",
"235 800 OFFCURVE",
"80 626 OFFCURVE",
"80 463 QCURVE SMOOTH",
"80 321 LINE SMOOTH",
"81 161 OFFCURVE",
"237 -11 OFFCURVE",
"376 -11 QCURVE SMOOTH",
"517 -11 OFFCURVE",
"669 163 OFFCURVE",
"669 325 QCURVE SMOOTH",
"669 471 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"508 117 OFFCURVE",
"376 117 QCURVE SMOOTH",
"237 117 OFFCURVE",
"237 311 QCURVE SMOOTH",
"237 490 LINE SMOOTH",
"241 670 OFFCURVE",
"374 670 QCURVE SMOOTH",
"512 670 OFFCURVE",
"512 478 QCURVE SMOOTH",
"512 298 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00455;
},
{
glyphname = one.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"477 789 LINE",
"122 672 LINE",
"122 544 LINE",
"338 601 LINE",
"338 0 LINE",
"495 0 LINE",
"495 789 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 5 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00454;
},
{
glyphname = two.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"284 128 LINE",
"460 273 LINE",
"544 352 LINE SMOOTH",
"651 459 OFFCURVE",
"651 563 QCURVE SMOOTH",
"651 673 OFFCURVE",
"497 800 OFFCURVE",
"233 800 OFFCURVE",
"66 652 OFFCURVE",
"66 538 QCURVE",
"223 538 LINE",
"223 595 OFFCURVE",
"294 671 OFFCURVE",
"369 671 QCURVE SMOOTH",
"429 671 OFFCURVE",
"493 610 OFFCURVE",
"493 561 QCURVE SMOOTH",
"493 492 OFFCURVE",
"384 390 QCURVE SMOOTH",
"84 108 LINE",
"84 0 LINE",
"683 0 LINE",
"683 128 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 21 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 14 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00453;
},
{
glyphname = three.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"353 343 LINE SMOOTH",
"509 341 OFFCURVE",
"509 228 QCURVE SMOOTH",
"509 177 OFFCURVE",
"436 117 OFFCURVE",
"366 117 QCURVE SMOOTH",
"299 117 OFFCURVE",
"220 177 OFFCURVE",
"220 222 QCURVE",
"62 222 LINE",
"62 115 OFFCURVE",
"228 -11 OFFCURVE",
"360 -11 QCURVE SMOOTH",
"496 -11 OFFCURVE",
"666 114 OFFCURVE",
"666 220 QCURVE SMOOTH",
"666 363 OFFCURVE",
"517 404 QCURVE",
"583 429 OFFCURVE",
"653 520 OFFCURVE",
"653 575 QCURVE SMOOTH",
"653 679 OFFCURVE",
"497 800 OFFCURVE",
"360 800 QCURVE SMOOTH",
"236 800 OFFCURVE",
"73 677 OFFCURVE",
"73 579 QCURVE",
"230 579 LINE",
"230 620 OFFCURVE",
"305 671 OFFCURVE",
"362 671 QCURVE SMOOTH",
"432 671 OFFCURVE",
"495 613 OFFCURVE",
"495 568 QCURVE SMOOTH",
"495 520 OFFCURVE",
"423 459 OFFCURVE",
"349 459 QCURVE SMOOTH",
"265 459 LINE",
"265 343 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00543;
},
{
glyphname = four.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"431 789 LINE",
"54 271 LINE",
"60 169 LINE",
"435 169 LINE",
"435 0 LINE",
"592 0 LINE",
"592 169 LINE",
"699 169 LINE",
"699 299 LINE",
"592 299 LINE",
"592 789 LINE"
);
},
{
closed = 1;
nodes = (
"435 588 LINE",
"435 299 LINE",
"212 299 LINE",
"418 560 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 11 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00544;
},
{
glyphname = five.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"297 399 OFFCURVE",
"370 399 QCURVE SMOOTH",
"444 399 OFFCURVE",
"522 322 OFFCURVE",
"522 260 QCURVE SMOOTH",
"522 192 OFFCURVE",
"450 117 OFFCURVE",
"385 117 QCURVE SMOOTH",
"256 117 OFFCURVE",
"246 216 QCURVE",
"91 216 LINE",
"97 115 OFFCURVE",
"264 -11 OFFCURVE",
"385 -11 QCURVE SMOOTH",
"519 -11 OFFCURVE",
"679 134 OFFCURVE",
"679 258 QCURVE SMOOTH",
"679 379 OFFCURVE",
"536 516 OFFCURVE",
"408 516 QCURVE SMOOTH",
"334 516 OFFCURVE",
"269 487 QCURVE",
"291 657 LINE",
"640 657 LINE",
"640 789 LINE",
"162 789 LINE",
"112 387 LINE",
"238 356 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00545;
},
{
glyphname = six.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"308 793 OFFCURVE",
"86 565 OFFCURVE",
"86 357 QCURVE SMOOTH",
"86 306 LINE SMOOTH",
"86 155 OFFCURVE",
"253 -11 OFFCURVE",
"392 -11 QCURVE SMOOTH",
"524 -11 OFFCURVE",
"683 143 OFFCURVE",
"683 259 QCURVE SMOOTH",
"683 378 OFFCURVE",
"548 523 OFFCURVE",
"430 523 QCURVE SMOOTH",
"316 523 OFFCURVE",
"244 446 QCURVE",
"267 665 OFFCURVE",
"535 667 QCURVE SMOOTH",
"552 667 LINE",
"552 798 LINE",
"513 798 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"527 320 OFFCURVE",
"527 196 OFFCURVE",
"449 117 OFFCURVE",
"388 117 QCURVE SMOOTH",
"325 117 OFFCURVE",
"242 202 OFFCURVE",
"242 286 QCURVE SMOOTH",
"242 320 LINE",
"259 352 OFFCURVE",
"336 396 OFFCURVE",
"387 396 QCURVE SMOOTH",
"456 396 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00546;
},
{
glyphname = seven.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"58 789 LINE",
"58 659 LINE",
"511 659 LINE",
"162 0 LINE",
"328 0 LINE",
"677 699 LINE",
"677 789 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00547;
},
{
glyphname = eight.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"500 800 OFFCURVE",
"374 800 QCURVE SMOOTH",
"249 800 OFFCURVE",
"98 682 OFFCURVE",
"98 579 QCURVE SMOOTH",
"98 461 OFFCURVE",
"217 406 QCURVE",
"153 379 OFFCURVE",
"79 282 OFFCURVE",
"79 216 QCURVE SMOOTH",
"79 110 OFFCURVE",
"239 -11 OFFCURVE",
"511 -11 OFFCURVE",
"671 110 OFFCURVE",
"671 216 QCURVE SMOOTH",
"671 347 OFFCURVE",
"532 406 QCURVE",
"651 461 OFFCURVE",
"651 579 QCURVE SMOOTH",
"651 682 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"438 117 OFFCURVE",
"312 117 OFFCURVE",
"236 175 OFFCURVE",
"236 228 QCURVE SMOOTH",
"236 280 OFFCURVE",
"311 338 OFFCURVE",
"374 338 QCURVE SMOOTH",
"436 338 OFFCURVE",
"514 280 OFFCURVE",
"514 228 QCURVE SMOOTH",
"514 175 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"494 616 OFFCURVE",
"494 524 OFFCURVE",
"431 468 OFFCURVE",
"319 468 OFFCURVE",
"256 524 OFFCURVE",
"256 570 QCURVE SMOOTH",
"256 618 OFFCURVE",
"319 671 OFFCURVE",
"374 671 QCURVE SMOOTH",
"430 671 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
36 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
223 36 239 36 255 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 7 values pushed */
15 36 31 36 47 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 36 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 36 31 36 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
23 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 36 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 23 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00548;
},
{
glyphname = nine.frac0;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"359 120 OFFCURVE",
"209 120 QCURVE",
"209 -7 LINE",
"264 -6 LINE SMOOTH",
"661 14 OFFCURVE",
"661 426 QCURVE SMOOTH",
"661 487 LINE SMOOTH",
"658 635 OFFCURVE",
"502 800 OFFCURVE",
"365 800 QCURVE SMOOTH",
"236 800 OFFCURVE",
"73 640 OFFCURVE",
"73 519 QCURVE SMOOTH",
"73 393 OFFCURVE",
"214 255 OFFCURVE",
"332 255 QCURVE SMOOTH",
"433 255 OFFCURVE",
"502 320 QCURVE",
"491 218 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"230 454 OFFCURVE",
"230 519 QCURVE SMOOTH",
"230 586 OFFCURVE",
"306 670 OFFCURVE",
"365 670 QCURVE SMOOTH",
"425 670 OFFCURVE",
"504 590 OFFCURVE",
"504 507 QCURVE SMOOTH",
"504 447 LINE",
"462 376 OFFCURVE",
"368 376 QCURVE SMOOTH",
"304 376 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00549;
},
{
glyphname = six.lnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1170;
}
);
note = glyph01169;
},
{
glyphname = eight.lnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = eight;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1190;
}
);
note = glyph01170;
},
{
glyphname = six.tnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, -6, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00603;
},
{
glyphname = eight.tnum;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = eight;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
}
);
note = glyph00605;
},
{
glyphname = "colon-ethiopic";
lastChange = "2020-06-26 00:17:28 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"154 512 LINE",
"383 512 LINE",
"383 641 LINE",
"154 641 LINE"
);
}
);
width = 556;
}
);
unicode = 1365;
},
{
glyphname = "comma-ethiopic";
lastChange = "2020-06-26 00:17:28 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"178 1312 LINE",
"377 1312 LINE",
"377 1439 LINE",
"178 1439 LINE"
);
}
);
width = 556;
}
);
unicode = 1363;
},
{
glyphname = "paragraphseparator-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 416, 0}";
},
{
name = colon;
transform = "{0.64279, -0.76604, 0.76604, 0.64279, 91, 384}";
},
{
name = colon;
transform = "{-0.48481, -0.87462, 0.87462, -0.48481, 314, 1020}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 396, -804}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1337;
}
);
unicode = 1368;
},
{
glyphname = "period-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 30, 0}";
},
{
name = colon;
transform = "{1, 0, 0, 1, 430, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 965;
}
);
unicode = 1362;
},
{
glyphname = "prefacecolon-ethiopic";
lastChange = "2020-06-26 00:17:28 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"383 507 LINE",
"613 507 LINE",
"613 615 LINE",
"383 615 LINE"
);
}
);
width = 730;
}
);
unicode = 1366;
},
{
glyphname = "question-ethiopic";
lastChange = "2020-06-26 00:17:28 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 30, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 31, -787}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 556;
}
);
unicode = 1367;
},
{
glyphname = "sectionmark-ethiopic";
lastChange = "2020-11-26 06:17:30 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 335, 0}";
},
{
name = colon;
transform = "{0, -1, 0.7823, 0, 179, 790}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1203;
}
);
unicode = 1360;
},
{
glyphname = "semicolon-ethiopic";
lastChange = "2020-06-26 00:17:28 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"148 1215 LINE",
"388 1215 LINE",
"388 1353 LINE",
"148 1353 LINE"
);
},
{
closed = 1;
nodes = (
"150 -342 LINE",
"414 -342 LINE",
"414 -204 LINE",
"150 -204 LINE"
);
}
);
width = 556;
}
);
unicode = 1364;
},
{
glyphname = "wordspace-ethiopic";
lastChange = "2020-06-26 00:17:28 +0000";
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 556;
}
);
unicode = 1361;
},
{
glyphname = "chiret-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1396;
},
{
glyphname = "deret-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1391;
},
{
glyphname = "deretHidet-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1398;
},
{
glyphname = "difat-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1394;
},
{
glyphname = "hidet-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1397;
},
{
glyphname = "kenat-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1395;
},
{
glyphname = "kurt-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1399;
},
{
glyphname = "rikrik-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1392;
},
{
glyphname = "shortRikrik-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 1393;
},
{
glyphname = "yizet-ethiopic";
lastChange = "2020-11-27 19:35:07 +0000";
layers = (
{
components = (
{
name = hyphenationpoint;
transform = "{1, 0, 0, 1, -18, -486}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 382;
}
);
unicode = 1390;
},
{
glyphname = cross.mulat;
lastChange = "2020-05-21 03:14:42 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-331 -288 LINE",
"-180 -288 LINE",
"-142 6 LINE",
"-322 6 LINE"
);
},
{
closed = 1;
nodes = (
"-49 -268 LINE",
"-548 -268 LINE",
"-548 -368 LINE",
"-49 -368 LINE"
);
}
);
width = 642;
}
);
userData = {
lsb = 123;
rsb = 102;
};
},
{
glyphname = bar.mulat;
lastChange = "2020-05-21 03:59:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1388 -288 LINE",
"1537 -288 LINE",
"1567 6 LINE",
"1381 6 LINE"
);
}
);
width = 642;
}
);
userData = {
lsb = 123;
rsb = 102;
};
},
{
glyphname = nose.part;
lastChange = "2020-05-21 03:06:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-200 -157 OFFCURVE",
"30 -158 OFFCURVE",
"30 -12 CURVE SMOOTH",
"30 139 OFFCURVE",
"-200 139 OFFCURVE",
"-200 -12 CURVE"
);
}
);
width = 0;
}
);
},
{
glyphname = leg.part;
lastChange = "2020-11-27 19:46:39 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-80 -408 LINE",
"39 -408 LINE",
"57 -54 LINE",
"-97 -54 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = ampersand.smcp;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"865 97 QCURVE",
"959 0 LINE",
"1169 0 LINE",
"970 210 LINE",
"1097 376 OFFCURVE",
"1097 600 QCURVE",
"929 600 LINE",
"929 443 OFFCURVE",
"860 327 QCURVE",
"592 612 LINE",
"665 664 LINE SMOOTH",
"820 775 OFFCURVE",
"820 919 QCURVE SMOOTH",
"820 1031 OFFCURVE",
"643 1181 OFFCURVE",
"509 1181 QCURVE SMOOTH",
"365 1181 OFFCURVE",
"192 1033 OFFCURVE",
"192 918 QCURVE SMOOTH",
"192 810 OFFCURVE",
"285 706 QCURVE SMOOTH",
"360 627 LINE",
"285 573 LINE SMOOTH",
"181 498 OFFCURVE",
"103 364 OFFCURVE",
"103 278 QCURVE SMOOTH",
"103 149 OFFCURVE",
"317 -16 OFFCURVE",
"488 -16 QCURVE SMOOTH",
"714 -16 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"287 230 OFFCURVE",
"287 303 QCURVE SMOOTH",
"287 387 OFFCURVE",
"363 446 QCURVE SMOOTH",
"463 519 LINE",
"756 212 LINE",
"650 137 OFFCURVE",
"505 137 QCURVE SMOOTH",
"394 137 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"445 1026 OFFCURVE",
"501 1026 QCURVE SMOOTH",
"567 1026 OFFCURVE",
"639 957 OFFCURVE",
"639 905 QCURVE SMOOTH",
"639 828 OFFCURVE",
"556 768 QCURVE SMOOTH",
"490 720 LINE",
"436 777 LINE SMOOTH",
"373 847 OFFCURVE",
"373 905 QCURVE SMOOTH",
"373 956 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
44 51 52 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 28 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
42 13 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
33 13 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 42 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 33 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
30 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 30 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
28 0 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 20 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
32 30 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
48 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1238;
}
);
note = glyph00625;
},
{
glyphname = bar.mulat.001;
lastChange = "2020-11-27 23:57:27 +0000";
layers = (
{
components = (
{
name = bar.mulat;
transform = "{1, 0, 0, 1, -868, 1700}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1033;
}
);
},
{
glyphname = "geminVowellengthcomb-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 135D;
},
{
glyphname = "geminationcomb-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 135F;
},
{
glyphname = "vowellengthcomb-ethiopic";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
}
);
unicode = 135E;
},
{
glyphname = glyph00443;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = f;
},
{
name = f;
transform = "{1, 0, 0, 1, 556, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
}
);
note = glyph00443;
},
{
glyphname = glyph00449;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1413 1082 LINE",
"1413 1159 LINE SMOOTH",
"1413 1354 OFFCURVE",
"1212 1553 OFFCURVE",
"1027 1553 QCURVE SMOOTH",
"872 1553 OFFCURVE",
"670 1388 OFFCURVE",
"670 1264 QCURVE SMOOTH",
"670 1182 OFFCURVE",
"714 1072 QCURVE",
"628 1102 OFFCURVE",
"532 1102 QCURVE SMOOTH",
"357 1102 OFFCURVE",
"132 918 OFFCURVE",
"132 785 QCURVE SMOOTH",
"132 705 OFFCURVE",
"211 589 OFFCURVE",
"376 505 OFFCURVE",
"657 445 OFFCURVE",
"770 362 OFFCURVE",
"770 287 QCURVE SMOOTH",
"770 216 OFFCURVE",
"643 131 OFFCURVE",
"538 131 QCURVE SMOOTH",
"424 131 OFFCURVE",
"285 240 OFFCURVE",
"280 333 QCURVE",
"95 333 LINE",
"95 237 OFFCURVE",
"208 72 OFFCURVE",
"408 -20 OFFCURVE",
"538 -20 QCURVE SMOOTH",
"723 -20 OFFCURVE",
"955 155 OFFCURVE",
"955 300 QCURVE SMOOTH",
"955 387 OFFCURVE",
"872 508 OFFCURVE",
"700 594 OFFCURVE",
"423 656 OFFCURVE",
"317 724 OFFCURVE",
"317 791 QCURVE SMOOTH",
"317 862 OFFCURVE",
"431 950 OFFCURVE",
"532 950 QCURVE SMOOTH",
"630 950 OFFCURVE",
"759 840 OFFCURVE",
"759 764 QCURVE",
"945 764 LINE",
"945 840 OFFCURVE",
"915 964 OFFCURVE",
"878 1076 OFFCURVE",
"847 1181 OFFCURVE",
"847 1240 QCURVE SMOOTH",
"847 1310 OFFCURVE",
"939 1398 OFFCURVE",
"1027 1398 QCURVE SMOOTH",
"1125 1398 OFFCURVE",
"1227 1281 OFFCURVE",
"1227 1167 QCURVE SMOOTH",
"1227 1082 LINE",
"1039 1082 LINE",
"1039 939 LINE",
"1227 939 LINE",
"1227 297 LINE SMOOTH",
"1227 146 OFFCURVE",
"1359 -20 OFFCURVE",
"1477 -20 QCURVE SMOOTH",
"1543 -20 OFFCURVE",
"1620 0 QCURVE",
"1619 150 LINE",
"1567 138 OFFCURVE",
"1532 138 QCURVE SMOOTH",
"1413 138 OFFCURVE",
"1413 297 QCURVE SMOOTH",
"1413 939 LINE",
"1615 939 LINE",
"1615 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
22 77 78 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
71 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
75 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
64 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
44 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 64 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
64 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
58 44 64 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
49 44 64 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
52 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1691;
}
);
leftKerningGroup = s;
note = glyph00449;
},
{
glyphname = glyph01173;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = acute;
transform = "{1, 0, 0, 1, 446, 343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1395;
}
);
note = glyph01173;
},
{
glyphname = glyph01174;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = acute;
transform = "{1, 0, 0, 1, 331, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
note = glyph01174;
},
{
glyphname = glyph01175;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = grave;
transform = "{1, 0, 0, 1, 358, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = glyph01175;
},
{
glyphname = glyph01176;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = grave;
transform = "{1, 0, 0, 1, 204, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = m;
note = glyph01176;
rightKerningGroup = h;
},
{
glyphname = glyph01177;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1133, 306}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1336;
}
);
leftKerningGroup = A;
note = glyph01177;
},
{
glyphname = glyph01178;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1042, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
}
);
leftKerningGroup = a;
note = glyph01178;
},
{
glyphname = glyph01179;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1080, 318}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1164;
}
);
note = glyph01179;
},
{
glyphname = glyph01180;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1026, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1085;
}
);
leftKerningGroup = c;
note = glyph01180;
},
{
glyphname = glyph01181;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 739, 318}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 557;
}
);
note = glyph01181;
},
{
glyphname = glyph01182;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 713, -5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 506;
}
);
note = glyph01182;
},
{
glyphname = glyph01183;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1167, 308}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = glyph01183;
},
{
glyphname = glyph01184;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1036, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1168;
}
);
leftKerningGroup = o;
note = glyph01184;
},
{
glyphname = glyph01185;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1070, 306}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1261;
}
);
note = glyph01185;
},
{
glyphname = glyph01186;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 868, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 693;
}
);
note = glyph01186;
},
{
glyphname = glyph01187;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1128, 306}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
note = glyph01187;
},
{
glyphname = glyph01188;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1028, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1129;
}
);
leftKerningGroup = u;
note = glyph01188;
},
{
glyphname = glyph01190;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = B;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1210, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1275;
}
);
note = glyph01190;
},
{
glyphname = glyph01191;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = b;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1195, -9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
note = glyph01191;
},
{
glyphname = glyph01192;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1209, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1343;
}
);
note = glyph01192;
},
{
glyphname = glyph01193;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1213, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1155;
}
);
leftKerningGroup = c;
note = glyph01193;
},
{
glyphname = glyph01194;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 357, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1343;
}
);
note = glyph01194;
},
{
glyphname = glyph01195;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = uniF6C3;
transform = "{1, 0, 0, 1, 361, -352}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1155;
}
);
leftKerningGroup = c;
note = glyph01195;
},
{
glyphname = glyph01196;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1311, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = glyph01196;
},
{
glyphname = glyph01197;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1185, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1128;
}
);
note = glyph01197;
rightKerningGroup = h;
},
{
glyphname = glyph01198;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = acute;
transform = "{1, 0, 0, 1, 379, 304}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1284;
}
);
note = glyph01198;
},
{
glyphname = glyph01199;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = acute;
transform = "{1, 0, 0, 1, 324, 321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1038;
}
);
note = glyph01199;
},
{
glyphname = glyph01200;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1256, 89}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1284;
}
);
note = glyph01200;
},
{
glyphname = glyph01201;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1125, 70}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1038;
}
);
note = glyph01201;
},
{
glyphname = glyph01202;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1216, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1102;
}
);
note = glyph01202;
},
{
glyphname = glyph01203;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 846, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 497;
}
);
note = glyph01203;
},
{
glyphname = glyph01204;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = M;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1490, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1788;
}
);
note = glyph01204;
},
{
glyphname = glyph01205;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = m;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1494, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1795;
}
);
leftKerningGroup = m;
note = glyph01205;
rightKerningGroup = h;
},
{
glyphname = glyph01206;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1316, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1460;
}
);
note = glyph01206;
},
{
glyphname = glyph01207;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1159, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1130;
}
);
leftKerningGroup = m;
note = glyph01207;
rightKerningGroup = h;
},
{
glyphname = glyph01208;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = glyph00566;
transform = "{1, 0, 0, 1, 1291, 339}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1408;
}
);
leftKerningGroup = C;
note = glyph01208;
},
{
glyphname = glyph01209;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = P;
},
{
name = acute;
transform = "{1, 0, 0, 1, 380, 322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1292;
}
);
note = glyph01209;
},
{
glyphname = glyph01210;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = p;
},
{
name = acute;
transform = "{1, 0, 0, 1, 403, -9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1149;
}
);
note = glyph01210;
},
{
glyphname = glyph01211;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1207, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1261;
}
);
note = glyph01211;
},
{
glyphname = glyph01212;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 842, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 693;
}
);
note = glyph01212;
},
{
glyphname = glyph01213;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1225, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1215;
}
);
leftKerningGroup = S;
note = glyph01213;
},
{
glyphname = glyph01214;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1159, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1056;
}
);
leftKerningGroup = s;
note = glyph01214;
},
{
glyphname = glyph01215;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1210, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1222;
}
);
leftKerningGroup = T;
note = glyph01215;
},
{
glyphname = glyph01216;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1049, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 669;
}
);
note = glyph01216;
},
{
glyphname = glyph01217;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = glyph00566;
transform = "{1, 0, 0, 1, 1252, 337}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
leftKerningGroup = U;
note = glyph01217;
},
{
glyphname = glyph01218;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = V;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 180, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1303;
}
);
leftKerningGroup = V;
note = glyph01218;
},
{
glyphname = glyph01219;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = v;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 29, -5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 992;
}
);
leftKerningGroup = v;
note = glyph01219;
},
{
glyphname = glyph01220;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = V;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1252, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1303;
}
);
leftKerningGroup = V;
note = glyph01220;
},
{
glyphname = glyph01221;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = v;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1101, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 992;
}
);
leftKerningGroup = v;
note = glyph01221;
},
{
glyphname = glyph01222;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1519, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1817;
}
);
leftKerningGroup = W;
note = glyph01222;
},
{
glyphname = glyph01223;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1363, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1539;
}
);
note = glyph01223;
},
{
glyphname = glyph01224;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1210, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1226;
}
);
leftKerningGroup = Z;
note = glyph01224;
},
{
glyphname = glyph01225;
lastChange = "2020-11-27 18:56:15 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 1122, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1015;
}
);
leftKerningGroup = z;
note = glyph01225;
},
{
glyphname = ba.base;
lastChange = "2020-05-21 05:16:48 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"140 748 CURVE SMOOTH",
"140 0 LINE",
"325 0 LINE",
"325 716 LINE SMOOTH",
"325 862 OFFCURVE",
"427 945 OFFCURVE",
"589 945 CURVE SMOOTH",
"737 945 OFFCURVE",
"805 872 OFFCURVE",
"806 716 CURVE SMOOTH",
"806 0 LINE",
"991 0 LINE",
"991 715 LINE SMOOTH",
"989 973 OFFCURVE",
"812 1102 OFFCURVE",
"583 1102 CURVE SMOOTH",
"319 1102 OFFCURVE",
"140 957 OFFCURVE"
);
}
);
width = 1130;
}
);
userData = {
lsb = 140;
rsb = 139;
};
},
{
glyphname = belt.part;
lastChange = "2020-05-21 02:30:09 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"980 630 LINE",
"145 630 LINE",
"145 479 LINE",
"980 479 LINE",
"980 479 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = cap.part;
lastChange = "2020-06-26 08:33:18 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"483 280 LINE",
"16 280 LINE",
"16 220 LINE",
"483 220 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = da.part;
lastChange = "2020-08-20 18:04:41 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"308 132 LINE",
"-442 132 LINE",
"-442 -1 LINE",
"308 -1 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = ears.accent;
lastChange = "2020-05-21 17:12:14 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-30 832 OFFCURVE",
"200 831 OFFCURVE",
"200 977 CURVE SMOOTH",
"200 1128 OFFCURVE",
"-30 1128 OFFCURVE",
"-30 977 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"944 842 OFFCURVE",
"1174 841 OFFCURVE",
"1174 987 CURVE SMOOTH",
"1174 1138 OFFCURVE",
"944 1138 OFFCURVE",
"944 987 CURVE"
);
}
);
width = 1083;
}
);
},
{
glyphname = fa.part;
lastChange = "2020-11-26 03:32:06 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"248 754 LINE",
"258 637 LINE",
"418 636 LINE SMOOTH",
"488 636 OFFCURVE",
"508 614 OFFCURVE",
"508 480 CURVE SMOOTH",
"508 12 LINE",
"577 12 LINE",
"578 595 LINE SMOOTH",
"578 731 OFFCURVE",
"549 754 OFFCURVE",
"356 754 CURVE SMOOTH"
);
}
);
width = 883;
}
);
},
{
glyphname = ga.base;
lastChange = "2020-08-19 13:23:15 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"111 903 LINE",
"174 935 OFFCURVE",
"260 950 OFFCURVE",
"333 950 CURVE SMOOTH",
"484 950 OFFCURVE",
"525 811 OFFCURVE",
"530 564 CURVE",
"529 564 LINE",
"529 -1 LINE",
"715 -1 LINE",
"715 557 LINE SMOOTH",
"715 894 OFFCURVE",
"626 1101 OFFCURVE",
"333 1101 CURVE SMOOTH",
"258 1101 OFFCURVE",
"174 1090 OFFCURVE",
"97 1064 CURVE"
);
}
);
width = 1015;
}
);
userData = {
lsb = 9;
rsb = 71;
};
},
{
glyphname = ha.base;
lastChange = "2020-06-26 07:39:09 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"320 -20 OFFCURVE",
"584 -20 CURVE SMOOTH",
"813 -20 OFFCURVE",
"992 109 OFFCURVE",
"992 367 CURVE SMOOTH",
"992 1082 LINE",
"807 1082 LINE",
"807 366 LINE SMOOTH",
"807 210 OFFCURVE",
"738 137 OFFCURVE",
"590 137 CURVE SMOOTH",
"428 137 OFFCURVE",
"326 220 OFFCURVE",
"326 366 CURVE SMOOTH",
"326 1082 LINE",
"141 1082 LINE",
"141 334 LINE SMOOTH",
"141 125 OFFCURVE"
);
}
);
width = 1129;
}
);
userData = {
lsb = 136;
rsb = 141;
};
},
{
glyphname = ha0.accent;
lastChange = "2020-11-27 18:49:18 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-315 -378 LINE",
"-166 -378 LINE",
"-136 66 LINE",
"-322 66 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = ha1.accent;
lastChange = "2020-05-21 05:53:16 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-409 -288 LINE",
"-260 -288 LINE",
"-230 6 LINE",
"-416 6 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = ha2.accent;
lastChange = "2020-08-21 00:04:50 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-300 -384 LINE",
"-138 -384 LINE",
"200 0 LINE",
"16 0 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = hat.part;
lastChange = "2020-08-20 17:21:26 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"210 340 LINE",
"-255 340 LINE",
"-255 219 LINE",
"210 219 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = he0.accent;
lastChange = "2020-08-21 00:01:43 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"251 -19 LINE",
"360 -19 LINE",
"384 275 LINE",
"238 275 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = he1.accent;
lastChange = "2020-08-19 13:26:53 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"106 -298 LINE",
"255 -298 LINE",
"285 146 LINE",
"99 146 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = he2.accent;
lastChange = "2020-05-21 01:40:54 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"0 -208 LINE",
"0 -93.333 OFFCURVE",
"-92.333 0 OFFCURVE",
"-215 0 CURVE SMOOTH",
"-276.333 0 OFFCURVE",
"-327.5 -20.333 OFFCURVE",
"-368.5 -61 CURVE SMOOTH",
"-450.005 -141.843 OFFCURVE",
"-450.356 -274.472 OFFCURVE",
"-368.5 -353 CURVE SMOOTH",
"-327.5 -392.333 OFFCURVE",
"-276.333 -412 OFFCURVE",
"-215 -412 CURVE SMOOTH",
"-93.667 -412 OFFCURVE",
"0 -324 OFFCURVE",
"0 -208 CURVE",
"0 -208 LINE"
);
},
{
closed = 1;
nodes = (
"-331 -208 LINE",
"-331 -144 OFFCURVE",
"-281.667 -90 OFFCURVE",
"-215 -90 CURVE SMOOTH",
"-60.091 -90 OFFCURVE",
"-63.879 -323 OFFCURVE",
"-215 -323 CURVE SMOOTH",
"-280.333 -323 OFFCURVE",
"-331 -270.667 OFFCURVE",
"-331 -208 CURVE",
"-331 -208 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = hee0.accent;
lastChange = "2020-11-26 03:17:33 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-19 -137 OFFCURVE",
"-111 -44 OFFCURVE",
"-234 -44 CURVE SMOOTH",
"-295 -44 OFFCURVE",
"-347 -64 OFFCURVE",
"-388 -105 CURVE SMOOTH",
"-469 -186 OFFCURVE",
"-469 -318 OFFCURVE",
"-388 -397 CURVE SMOOTH",
"-347 -437 OFFCURVE",
"-295 -456 OFFCURVE",
"-234 -456 CURVE SMOOTH",
"-113 -456 OFFCURVE",
"-19 -368 OFFCURVE",
"-19 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-343 -192 OFFCURVE",
"-297 -141 OFFCURVE",
"-234 -141 CURVE SMOOTH",
"-88 -141 OFFCURVE",
"-92 -360 OFFCURVE",
"-234 -360 CURVE SMOOTH",
"-295 -360 OFFCURVE",
"-343 -311 OFFCURVE",
"-343 -252 CURVE SMOOTH"
);
}
);
width = 685;
}
);
},
{
glyphname = hee1.accent;
lastChange = "2020-08-20 17:12:07 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-119 -136 OFFCURVE",
"-211 -43 OFFCURVE",
"-334 -43 CURVE SMOOTH",
"-395 -43 OFFCURVE",
"-447 -63 OFFCURVE",
"-488 -104 CURVE SMOOTH",
"-569 -185 OFFCURVE",
"-569 -317 OFFCURVE",
"-488 -396 CURVE SMOOTH",
"-447 -435 OFFCURVE",
"-395 -455 OFFCURVE",
"-334 -455 CURVE SMOOTH",
"-213 -455 OFFCURVE",
"-119 -367 OFFCURVE",
"-119 -251 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-450 -187 OFFCURVE",
"-401 -133 OFFCURVE",
"-334 -133 CURVE SMOOTH",
"-179 -133 OFFCURVE",
"-183 -366 OFFCURVE",
"-334 -366 CURVE SMOOTH",
"-399 -366 OFFCURVE",
"-450 -314 OFFCURVE",
"-450 -251 CURVE SMOOTH"
);
}
);
width = 685;
}
);
},
{
glyphname = hee2.accent;
lastChange = "2020-09-26 15:43:43 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"550 319 OFFCURVE",
"459 411 OFFCURVE",
"336 411 CURVE SMOOTH",
"275 411 OFFCURVE",
"223 391 OFFCURVE",
"183 351 CURVE SMOOTH",
"101 269 OFFCURVE",
"100 138 OFFCURVE",
"183 59 CURVE SMOOTH",
"224 20 OFFCURVE",
"275 1 OFFCURVE",
"336 1 CURVE SMOOTH",
"456 1 OFFCURVE",
"550 89 OFFCURVE",
"550 204 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"204 277 OFFCURVE",
"259 338 OFFCURVE",
"336 338 CURVE SMOOTH",
"513 338 OFFCURVE",
"508 73 OFFCURVE",
"336 73 CURVE SMOOTH",
"262 73 OFFCURVE",
"204 132 OFFCURVE",
"204 203 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = hha.base;
lastChange = "2020-06-26 07:29:49 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"224 0 LINE",
"214 709 LINE SMOOTH",
"211 893 OFFCURVE",
"326 945 OFFCURVE",
"443 945 CURVE SMOOTH",
"597 945 OFFCURVE",
"674 866 OFFCURVE",
"674 709 CURVE SMOOTH",
"674 0 LINE",
"860 0 LINE",
"860 718 LINE",
"875 857 OFFCURVE",
"973 945 OFFCURVE",
"1110 945 CURVE SMOOTH",
"1277 945 OFFCURVE",
"1341 869 OFFCURVE",
"1341 714 CURVE SMOOTH",
"1341 0 LINE",
"1526 0 LINE",
"1526 725 LINE SMOOTH",
"1526 976 OFFCURVE",
"1401 1102 OFFCURVE",
"1164 1102 CURVE SMOOTH",
"1007 1102 OFFCURVE",
"891 1032 OFFCURVE",
"819 928 CURVE",
"724 1044 OFFCURVE",
"656 1107 OFFCURVE",
"420 1102 CURVE SMOOTH",
"243 1098 OFFCURVE",
"25 968 OFFCURVE",
"29 709 CURVE SMOOTH",
"39 0 LINE"
);
}
);
width = 1765;
}
);
userData = {
lsb = 139;
rsb = 139;
};
},
{
glyphname = hi0.accent;
lastChange = "2020-08-16 08:31:33 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-114 -78 OFFCURVE",
"164 -79 OFFCURVE",
"164 98 CURVE SMOOTH",
"164 280 OFFCURVE",
"-114 280 OFFCURVE",
"-114 98 CURVE"
);
}
);
width = 0;
}
);
},
{
glyphname = hi1.accent;
lastChange = "2020-05-21 05:52:57 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-240 -38 OFFCURVE",
"-10 -39 OFFCURVE",
"-10 107 CURVE SMOOTH",
"-10 258 OFFCURVE",
"-240 258 OFFCURVE",
"-240 107 CURVE"
);
}
);
width = 0;
}
);
},
{
glyphname = hi2.accent;
lastChange = "2020-05-21 05:02:34 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"176 64 OFFCURVE",
"233 2 OFFCURVE",
"347 2 OFFCURVE",
"406 64 OFFCURVE",
"406 110 QCURVE SMOOTH",
"406 158 OFFCURVE",
"347 222 OFFCURVE",
"233 222 OFFCURVE",
"176 158 OFFCURVE",
"176 110 QCURVE"
);
}
);
width = 539;
}
);
},
{
glyphname = ho0.accent;
lastChange = "2020-11-27 18:45:42 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"147 -372 LINE",
"296 -372 LINE",
"326 6 LINE",
"140 6 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = ho1.accent;
lastChange = "2020-11-27 19:51:55 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"54 -385 LINE",
"203 -385 LINE",
"233 6 LINE",
"47 6 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = ho2.accent;
lastChange = "2020-05-21 01:40:54 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"0 -208 LINE",
"0 -93.333 OFFCURVE",
"-92.333 0 OFFCURVE",
"-215 0 CURVE SMOOTH",
"-276.333 0 OFFCURVE",
"-327.5 -20.333 OFFCURVE",
"-368.5 -61 CURVE SMOOTH",
"-450.005 -141.843 OFFCURVE",
"-450.356 -274.472 OFFCURVE",
"-368.5 -353 CURVE SMOOTH",
"-327.5 -392.333 OFFCURVE",
"-276.333 -412 OFFCURVE",
"-215 -412 CURVE SMOOTH",
"-93.667 -412 OFFCURVE",
"0 -324 OFFCURVE",
"0 -208 CURVE",
"0 -208 LINE"
);
},
{
closed = 1;
nodes = (
"-331 -208 LINE",
"-331 -144 OFFCURVE",
"-281.667 -90 OFFCURVE",
"-215 -90 CURVE SMOOTH",
"-60.091 -90 OFFCURVE",
"-63.879 -323 OFFCURVE",
"-215 -323 CURVE SMOOTH",
"-280.333 -323 OFFCURVE",
"-331 -270.667 OFFCURVE",
"-331 -208 CURVE",
"-331 -208 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = hu0.accent;
lastChange = "2020-08-16 08:30:40 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-125 -82 OFFCURVE",
"127 -83 OFFCURVE",
"127 78 CURVE SMOOTH",
"127 244 OFFCURVE",
"-125 244 OFFCURVE",
"-125 78 CURVE"
);
}
);
width = 0;
}
);
},
{
glyphname = hu1.accent;
lastChange = "2020-05-21 05:52:35 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-268 -97 OFFCURVE",
"-38 -98 OFFCURVE",
"-38 48 CURVE SMOOTH",
"-38 199 OFFCURVE",
"-268 199 OFFCURVE",
"-268 48 CURVE"
);
}
);
width = 0;
}
);
},
{
glyphname = hu2.accent;
lastChange = "2020-05-21 05:55:06 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-230 -167 OFFCURVE",
"0 -168 OFFCURVE",
"0 -22 CURVE SMOOTH",
"0 129 OFFCURVE",
"-230 129 OFFCURVE",
"-230 -22 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = hwa0.accent;
lastChange = "2020-11-27 19:45:40 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-144 -318 LINE",
"-140 116 LINE",
"-325 116 LINE",
"-323 -318 LINE"
);
},
{
closed = 1;
nodes = (
"-548 -314 LINE",
"-548 -404 LINE",
"-49 -404 LINE",
"-49 -294 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = hwa1.accent;
lastChange = "2020-08-20 23:56:12 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-415 -438 LINE",
"-229 -438 LINE",
"-228 6 LINE",
"-415 6 LINE"
);
},
{
closed = 1;
nodes = (
"-139 -418 LINE",
"-638 -418 LINE",
"-638 -498 LINE",
"-139 -498 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = hwa2.accent;
lastChange = "2020-06-26 08:32:08 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-51 -28 LINE",
"20 -28 LINE",
"58 256 LINE",
"-42 256 LINE"
);
},
{
closed = 1;
nodes = (
"151 -8 LINE",
"-348 -8 LINE",
"-348 -88 LINE",
"151 -88 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = ka.part;
lastChange = "2020-06-26 08:50:42 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"352 277 LINE",
"156 277 LINE",
"156 -12 LINE",
"157 -53 LINE",
"586 -43 LINE",
"586 19 LINE",
"309 19 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = la.base;
lastChange = "2020-05-21 01:40:54 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"325 951 LINE",
"325 1536 LINE",
"140 1536 LINE",
"140 0 LINE",
"325 0 LINE",
"325 771 LINE",
"375.667 875 OFFCURVE",
"469 945 OFFCURVE",
"589 945 CURVE SMOOTH",
"737 945 OFFCURVE",
"804.667 872 OFFCURVE",
"806 716 CURVE SMOOTH",
"806 0 LINE",
"991 0 LINE",
"991 715 LINE SMOOTH",
"989 973 OFFCURVE",
"873.667 1102 OFFCURVE",
"645 1102 CURVE SMOOTH",
"513.667 1102 OFFCURVE",
"407 1051.667 OFFCURVE",
"325 951 CURVE",
"325 951 LINE"
);
}
);
width = 1128;
}
);
userData = {
lsb = 140;
rsb = 137;
};
},
{
glyphname = ma.base;
lastChange = "2020-11-26 16:36:41 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"560 0 LINE SMOOTH",
"763 0 OFFCURVE",
"846 133 OFFCURVE",
"846 240 CURVE SMOOTH",
"846 747 LINE",
"901 656 LINE",
"945 747 LINE",
"945 234 LINE SMOOTH",
"945 128 OFFCURVE",
"1016 0 OFFCURVE",
"1228 0 CURVE SMOOTH",
"1487 0 LINE SMOOTH",
"1575 0 OFFCURVE",
"1656 68 OFFCURVE",
"1656 169 CURVE SMOOTH",
"1656 725 LINE SMOOTH",
"1656 976 OFFCURVE",
"1531 1102 OFFCURVE",
"1294 1102 CURVE SMOOTH",
"1137 1102 OFFCURVE",
"975 1032 OFFCURVE",
"903 928 CURVE",
"826 1026 OFFCURVE",
"692 1099 OFFCURVE",
"548 1098 CURVE SMOOTH",
"212 1096 OFFCURVE",
"139 966 OFFCURVE",
"139 800 CURVE SMOOTH",
"138 166 LINE SMOOTH",
"138 33 OFFCURVE",
"219 0 OFFCURVE",
"292 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"324 717 LINE SMOOTH",
"324 902 OFFCURVE",
"395 945 OFFCURVE",
"573 945 CURVE SMOOTH",
"727 945 OFFCURVE",
"705 866 OFFCURVE",
"710 718 CURVE",
"710 329 LINE SMOOTH",
"710 177 OFFCURVE",
"630 143 OFFCURVE",
"435 143 CURVE SMOOTH",
"324 143 LINE"
);
},
{
closed = 1;
nodes = (
"1214 142 OFFCURVE",
"1074 148 OFFCURVE",
"1074 361 CURVE SMOOTH",
"1074 718 LINE SMOOTH",
"1074 857 OFFCURVE",
"1103 945 OFFCURVE",
"1240 945 CURVE SMOOTH",
"1407 945 OFFCURVE",
"1471 869 OFFCURVE",
"1471 714 CURVE SMOOTH",
"1471 142 LINE",
"1351 142 LINE SMOOTH"
);
}
);
width = 1795;
}
);
userData = {
lsb = 91;
rsb = 92;
};
},
{
glyphname = na.base;
lastChange = "2020-08-19 07:18:50 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"852 950 LINE",
"852 1101 LINE",
"563 1102 LINE SMOOTH",
"366 1102 OFFCURVE",
"218 1007 OFFCURVE",
"140 843 CURVE SMOOTH",
"101 761 OFFCURVE",
"82 667 OFFCURVE",
"82 562 CURVE SMOOTH",
"82 531 LINE SMOOTH",
"82 191 OFFCURVE",
"268 -20 OFFCURVE",
"562 -20 CURVE SMOOTH",
"903 -20 LINE",
"903 131 LINE",
"564 131 LINE SMOOTH",
"373 131 OFFCURVE",
"267 271 OFFCURVE",
"267 520 CURVE SMOOTH",
"267 555 LINE SMOOTH",
"267 811 OFFCURVE",
"375 950 OFFCURVE",
"563 950 CURVE SMOOTH"
);
}
);
width = 949;
}
);
userData = {
lsb = 92;
rsb = 68;
};
},
{
glyphname = neck.part;
lastChange = "2020-08-20 17:22:07 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-111 -24 LINE",
"58 -24 LINE",
"56 340 LINE",
"-108 340 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = pa.base;
lastChange = "2020-05-21 07:19:51 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"439 0 LINE",
"439 939 LINE",
"641 939 LINE",
"641 1082 LINE",
"439 1082 LINE",
"254 1082 LINE",
"57 1082 LINE",
"57 939 LINE",
"254 939 LINE",
"254 0 LINE"
);
}
);
width = 679;
}
);
userData = {
lsb = 9;
rsb = 71;
};
},
{
glyphname = ra.base;
lastChange = "2020-08-19 13:52:47 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"816 180 OFFCURVE",
"606 131 OFFCURVE",
"474 131 CURVE SMOOTH",
"323 131 OFFCURVE",
"282 270 OFFCURVE",
"277 517 CURVE",
"278 517 LINE",
"278 1082 LINE",
"92 1082 LINE",
"92 524 LINE SMOOTH",
"95 187 OFFCURVE",
"181 -20 OFFCURVE",
"474 -20 CURVE SMOOTH",
"676 -20 OFFCURVE",
"913 61 OFFCURVE",
"954 295 CURVE",
"816 296 LINE"
);
}
);
width = 829;
}
);
userData = {
lsb = 136;
rsb = 141;
};
},
{
glyphname = sa.base;
lastChange = "2020-06-26 07:42:58 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1441 1082 LINE",
"1451 373 LINE SMOOTH",
"1454 189 OFFCURVE",
"1339 137 OFFCURVE",
"1222 137 CURVE SMOOTH",
"1068 137 OFFCURVE",
"991 216 OFFCURVE",
"991 373 CURVE SMOOTH",
"991 1082 LINE",
"805 1082 LINE",
"805 364 LINE",
"790 225 OFFCURVE",
"692 137 OFFCURVE",
"555 137 CURVE SMOOTH",
"388 137 OFFCURVE",
"324 213 OFFCURVE",
"324 368 CURVE SMOOTH",
"324 1082 LINE",
"139 1082 LINE",
"139 357 LINE SMOOTH",
"139 106 OFFCURVE",
"264 -20 OFFCURVE",
"501 -20 CURVE SMOOTH",
"658 -20 OFFCURVE",
"774 50 OFFCURVE",
"846 154 CURVE",
"941 38 OFFCURVE",
"1009 -25 OFFCURVE",
"1245 -20 CURVE SMOOTH",
"1422 -16 OFFCURVE",
"1640 114 OFFCURVE",
"1636 373 CURVE SMOOTH",
"1626 1082 LINE"
);
}
);
width = 1795;
}
);
userData = {
lsb = 43;
rsb = 48;
};
},
{
glyphname = shoes.part;
lastChange = "2020-05-21 06:47:17 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-670 -38 OFFCURVE",
"-440 -39 OFFCURVE",
"-440 107 CURVE SMOOTH",
"-440 258 OFFCURVE",
"-670 258 OFFCURVE",
"-670 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 -38 OFFCURVE",
"510 -39 OFFCURVE",
"510 107 CURVE SMOOTH",
"510 258 OFFCURVE",
"280 258 OFFCURVE",
"280 107 CURVE"
);
}
);
width = 0;
}
);
},
{
glyphname = shoulder.part;
lastChange = "2020-05-21 02:33:36 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"23 -64 LINE",
"172 -64 LINE",
"200 230 LINE",
"6 230 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = tsa.base;
lastChange = "2020-05-21 05:57:21 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"974 608 OFFCURVE",
"1024 683 OFFCURVE",
"1024 788 CURVE SMOOTH",
"1024 965 OFFCURVE",
"857 1105 OFFCURVE",
"624 1105 CURVE SMOOTH",
"541 1105 OFFCURVE",
"466 1089 OFFCURVE",
"404 1059 CURVE SMOOTH",
"286 1002 OFFCURVE",
"211 903 OFFCURVE",
"211 785 CURVE SMOOTH",
"211 676 OFFCURVE",
"266 605 OFFCURVE",
"365 551 CURVE",
"254 494 OFFCURVE",
"201 417 OFFCURVE",
"201 303 CURVE",
"203 0 LINE",
"388 0 LINE",
"386 290 LINE",
"386 385 OFFCURVE",
"445 469 OFFCURVE",
"611 508 CURVE SMOOTH",
"787 549 OFFCURVE",
"849 384 OFFCURVE",
"849 287 CURVE",
"847 0 LINE",
"1032 0 LINE",
"1034 300 LINE",
"1034 416 OFFCURVE",
"980 494 OFFCURVE",
"865 551 CURVE"
);
},
{
closed = 1;
nodes = (
"397 693 OFFCURVE",
"397 772 CURVE SMOOTH",
"397 872 OFFCURVE",
"497 950 OFFCURVE",
"611 950 CURVE SMOOTH",
"738 950 OFFCURVE",
"838 870 OFFCURVE",
"838 774 CURVE SMOOTH",
"838 698 OFFCURVE",
"773 632 OFFCURVE",
"611 632 CURVE SMOOTH",
"477 632 OFFCURVE"
);
}
);
width = 1075;
}
);
userData = {
lsb = 41;
rsb = 45;
};
},
{
glyphname = wa.base;
lastChange = "2020-08-19 13:25:45 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"753 1095 OFFCURVE",
"705 1102 OFFCURVE",
"652 1102 CURVE SMOOTH",
"397 1102 OFFCURVE",
"225 882 OFFCURVE",
"225 550 CURVE SMOOTH",
"225 536 LINE SMOOTH",
"225 205 OFFCURVE",
"399 -20 OFFCURVE",
"650 -20 CURVE SMOOTH",
"704 -20 OFFCURVE",
"752 -12 OFFCURVE",
"796 4 CURVE",
"796 0 LINE",
"899 0 LINE",
"981 79 LINE",
"981 1082 LINE",
"796 1082 LINE",
"796 1080 LINE"
);
},
{
closed = 1;
nodes = (
"1093 1102 OFFCURVE",
"1048 1095 OFFCURVE",
"1007 1082 CURVE",
"865 1082 LINE",
"865 86 LINE",
"898 0 LINE",
"1011 0 LINE",
"1051 -13 OFFCURVE",
"1095 -20 OFFCURVE",
"1145 -20 CURVE SMOOTH",
"1396 -20 OFFCURVE",
"1570 205 OFFCURVE",
"1570 536 CURVE SMOOTH",
"1570 550 LINE SMOOTH",
"1570 882 OFFCURVE",
"1398 1102 OFFCURVE",
"1143 1102 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"517 137 OFFCURVE",
"410 284 OFFCURVE",
"410 529 CURVE SMOOTH",
"410 804 OFFCURVE",
"517 945 OFFCURVE",
"698 945 CURVE SMOOTH",
"733 945 OFFCURVE",
"786 940 OFFCURVE",
"816 931 CURVE",
"816 163 LINE",
"783 147 OFFCURVE",
"729 137 OFFCURVE",
"696 137 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1041 135 OFFCURVE",
"1005 151 OFFCURVE",
"989 156 CURVE",
"989 942 LINE",
"1004 944 OFFCURVE",
"1040 945 OFFCURVE",
"1056 945 CURVE SMOOTH",
"1237 945 OFFCURVE",
"1385 804 OFFCURVE",
"1385 529 CURVE SMOOTH",
"1385 284 OFFCURVE",
"1236 158 OFFCURVE",
"1058 137 CURVE SMOOTH"
);
}
);
width = 1484;
}
);
userData = {
lsb = 91;
rsb = 92;
};
},
{
glyphname = ya.base;
lastChange = "2020-11-26 03:06:26 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"926 949 OFFCURVE",
"763 1112 OFFCURVE",
"547 1112 CURVE SMOOTH",
"439 1112 OFFCURVE",
"349 1076 OFFCURVE",
"277 1005 CURVE SMOOTH",
"198 928 OFFCURVE",
"163 820 OFFCURVE",
"169 715 CURVE",
"169 0 LINE",
"354 0 LINE",
"354 434 LINE",
"410 402 OFFCURVE",
"475 387 OFFCURVE",
"547 387 CURVE SMOOTH",
"760 387 OFFCURVE",
"926 542 OFFCURVE",
"926 746 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"432 543 OFFCURVE",
"343 635 OFFCURVE",
"343 746 CURVE SMOOTH",
"343 859 OFFCURVE",
"430 954 OFFCURVE",
"547 954 CURVE SMOOTH",
"820 954 OFFCURVE",
"812 542 OFFCURVE",
"547 543 CURVE SMOOTH"
);
}
);
width = 1102;
}
);
userData = {
lsb = 93;
rsb = 74;
};
},
{
glyphname = za.base;
lastChange = "2020-05-21 05:56:17 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"989 0 LINE",
"989 1082 LINE",
"804 1082 LINE",
"804 0 LINE",
"989 0 LINE",
"989 0 LINE"
);
},
{
closed = 1;
nodes = (
"369 0 LINE",
"369 1082 LINE",
"184 1082 LINE",
"184 0 LINE",
"369 0 LINE",
"369 0 LINE"
);
},
{
closed = 1;
nodes = (
"979 672 LINE",
"214 672 LINE",
"214 521 LINE",
"979 521 LINE"
);
}
);
width = 1115;
}
);
userData = {
lsb = 141;
rsb = 137;
};
},
{
export = 0;
glyphname = _numBar;
lastChange = "2020-05-21 08:02:04 +0000";
layers = (
{
components = (
{
name = minus;
transform = "{0.8078, 0, 0, 0.5815, 113, 980}";
},
{
name = minus;
transform = "{0.8078, 0, 0, 0.5815, 114, -381}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1150;
}
);
},
{
export = 0;
glyphname = _NYA.HAT;
lastChange = "2020-11-28 01:04:35 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-93 1582 LINE",
"553 1582 LINE",
"553 1653 LINE",
"-93 1653 LINE"
);
}
);
width = 980;
}
);
},
{
export = 0;
glyphname = _ZHA.HATS;
lastChange = "2020-11-27 23:15:13 +0000";
layers = (
{
components = (
{
name = hat.part;
transform = "{1, 0, 0, 1, 337, 1115}";
},
{
name = hat.part;
transform = "{-1, 0, 0, 1, 1122, 1116}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1485;
}
);
},
{
export = 0;
glyphname = _he.inside;
lastChange = "2020-09-24 20:01:39 +0000";
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 220, -679}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1193;
}
);
},
{
export = 0;
glyphname = _ka.hat;
lastChange = "2020-11-27 22:56:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"371 1732 LINE",
"175 1732 LINE",
"175 1443 LINE",
"176 1402 LINE",
"605 1412 LINE",
"605 1474 LINE",
"328 1474 LINE"
);
}
);
width = 1190;
}
);
},
{
export = 0;
glyphname = _qa.neck;
lastChange = "2020-11-27 22:16:05 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"830 1299 LINE",
"999 1299 LINE",
"997 1663 LINE",
"833 1663 LINE"
);
}
);
width = 1810;
}
);
},
{
export = 0;
glyphname = _qha.neck;
lastChange = "2020-11-27 22:18:14 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"603 1600 LINE",
"1219 1600 LINE",
"1219 1662 LINE",
"603 1662 LINE"
);
}
);
width = 1810;
}
);
},
{
export = 0;
glyphname = _ro.part;
lastChange = "2020-08-20 17:20:38 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"901 733 OFFCURVE",
"809 826 OFFCURVE",
"686 826 CURVE SMOOTH",
"625 826 OFFCURVE",
"574 806 OFFCURVE",
"533 765 CURVE SMOOTH",
"451 683 OFFCURVE",
"450 552 OFFCURVE",
"533 473 CURVE SMOOTH",
"574 434 OFFCURVE",
"625 414 OFFCURVE",
"686 414 CURVE SMOOTH",
"807 414 OFFCURVE",
"901 502 OFFCURVE",
"901 618 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"570 682 OFFCURVE",
"619 736 OFFCURVE",
"686 736 CURVE SMOOTH",
"841 736 OFFCURVE",
"837 503 OFFCURVE",
"686 503 CURVE SMOOTH",
"621 503 OFFCURVE",
"570 555 OFFCURVE",
"570 618 CURVE SMOOTH"
);
}
);
width = 685;
}
);
},
{
export = 0;
glyphname = _sha.caps;
lastChange = "2020-11-27 21:56:36 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"314 1456 LINE",
"976 1456 LINE",
"976 1536 LINE",
"314 1536 LINE"
);
}
);
width = 1328;
}
);
},
{
export = 0;
glyphname = _va.hat;
lastChange = "2020-11-27 22:27:12 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"346 1535 LINE",
"962 1535 LINE",
"962 1597 LINE",
"346 1597 LINE"
);
}
);
width = 1359;
}
);
},
{
export = 0;
glyphname = _gga.hat.caps;
lastChange = "2020-11-27 23:45:27 +0000";
layers = (
{
components = (
{
name = _va.hat;
transform = "{1, 0, 0, 1, -140, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"414 1422 LINE",
"595 1422 LINE",
"595 1568 LINE",
"414 1568 LINE"
);
}
);
width = 836;
}
);
},
{
export = 0;
glyphname = _qha.neck.001;
lastChange = "2020-11-27 22:43:01 +0000";
layers = (
{
components = (
{
name = _qha.neck;
transform = "{1, 0, 0, 1, -310, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 886;
}
);
},
{
export = 0;
glyphname = _sha.caps.001;
lastChange = "2020-11-27 23:38:06 +0000";
layers = (
{
components = (
{
name = _sha.caps;
transform = "{1, 0, 0, 1, 0, 100}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1103;
}
);
},
{
export = 0;
glyphname = _tsa.belt.cap;
lastChange = "2020-11-27 23:09:07 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"215 633 LINE",
"1203 633 LINE",
"1203 768 LINE",
"215 768 LINE"
);
}
);
width = 1158;
}
);
},
{
export = 0;
glyphname = _va.hat.001;
lastChange = "2020-11-27 22:58:49 +0000";
layers = (
{
components = (
{
name = _va.hat;
transform = "{1, 0, 0, 1, -310, 140}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1328;
}
);
}
);
instances = (
{
customParameters = (
{
name = fileName;
value = MulatAbay;
},
{
name = familyName;
value = "Mulat Abay";
}
);
instanceInterpolations = {
"A9B054E9-1A63-4AEF-9EE1-561B1DFE8422" = 1;
};
name = Regular;
}
);
kerning = {
"A9B054E9-1A63-4AEF-9EE1-561B1DFE8422" = {
"@MMK_L_A" = {
"@MMK_R_C" = -11;
"@MMK_R_Che-cy" = -55;
"@MMK_R_Lje-cy" = 17;
"@MMK_R_Q.c2sc" = -11;
"@MMK_R_T" = -129;
"@MMK_R_T.c2sc" = -57;
"@MMK_R_U" = -17;
"@MMK_R_U.c2sc" = -15;
"@MMK_R_V" = -87;
"@MMK_R_W" = -69;
"@MMK_R_W.c2sc" = -35;
"@MMK_R_Y" = -94;
"@MMK_R_Y.c2sc" = -60;
"@MMK_R_che-cy" = -113;
"@MMK_R_el-cy" = 18;
"@MMK_R_o" = -12;
"@MMK_R_quotedbl" = -120;
"@MMK_R_u" = -11;
"@MMK_R_v" = -50;
"@MMK_R_z" = 12;
};
"@MMK_L_B" = {
"@MMK_R_T" = -27;
"@MMK_R_U-cy" = -13;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -55;
};
"@MMK_L_C" = {
"@MMK_R_T" = -29;
};
"@MMK_L_D" = {
"@MMK_R_A" = -21;
"@MMK_R_Delta.c2sc" = -19;
"@MMK_R_Lje-cy" = -31;
"@MMK_R_T" = -27;
"@MMK_R_V" = -22;
"@MMK_R_X" = -22;
"@MMK_R_X.c2sc" = -11;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -23;
"@MMK_R_comma" = -102;
};
"@MMK_L_Delta.c2sc" = {
"@MMK_R_Q.c2sc" = -14;
"@MMK_R_T.c2sc" = -64;
"@MMK_R_U.c2sc" = -20;
"@MMK_R_W.c2sc" = -40;
"@MMK_R_Y.c2sc" = -65;
};
"@MMK_L_E" = {
"@MMK_R_T" = 20;
"@MMK_R_W.c2sc" = -19;
"@MMK_R_Y.c2sc" = -16;
"@MMK_R_c" = -19;
"@MMK_R_o" = -19;
"@MMK_R_u" = -17;
"@MMK_R_v" = -26;
};
"@MMK_L_Gamma" = {
"@MMK_R_A" = -194;
"@MMK_R_C" = -67;
"@MMK_R_Lje-cy" = -110;
"@MMK_R_S" = -47;
"@MMK_R_T" = 7;
"@MMK_R_V" = 7;
"@MMK_R_W" = 5;
"@MMK_R_Y" = 7;
"@MMK_R_a" = -212;
"@MMK_R_c" = -188;
"@MMK_R_che-cy" = -244;
"@MMK_R_comma" = -390;
"@MMK_R_el-cy" = -241;
"@MMK_R_hyphen" = -414;
"@MMK_R_m" = -205;
"@MMK_R_o" = -188;
"@MMK_R_s" = -217;
"@MMK_R_u" = -181;
"@MMK_R_v" = -142;
"@MMK_R_x" = -150;
"@MMK_R_z" = -122;
};
"@MMK_L_H" = {
"@MMK_R_A" = 18;
"@MMK_R_Che-cy" = -28;
"@MMK_R_Lje-cy" = 17;
"@MMK_R_T" = -29;
"@MMK_R_X" = 17;
"@MMK_R_Y" = -28;
"@MMK_R_che-cy" = -27;
"@MMK_R_el-cy" = 17;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
"@MMK_R_Delta.c2sc" = -21;
};
"@MMK_L_K" = {
"@MMK_R_C" = -31;
"@MMK_R_Q.c2sc" = -25;
"@MMK_R_c" = -26;
"@MMK_R_che-cy" = -93;
"@MMK_R_hyphen" = -64;
"@MMK_R_m" = -23;
"@MMK_R_o" = -27;
"@MMK_R_u" = -23;
"@MMK_R_v" = -40;
};
"@MMK_L_K.c2sc" = {
"@MMK_R_Q.c2sc" = -21;
};
"@MMK_L_L" = {
"@MMK_R_A" = 19;
"@MMK_R_C" = -65;
"@MMK_R_Delta.c2sc" = 19;
"@MMK_R_Q.c2sc" = -14;
"@MMK_R_T" = -275;
"@MMK_R_T.c2sc" = -197;
"@MMK_R_U" = -54;
"@MMK_R_U.c2sc" = -38;
"@MMK_R_V" = -175;
"@MMK_R_W" = -143;
"@MMK_R_W.c2sc" = -111;
"@MMK_R_Y" = -239;
"@MMK_R_Y.c2sc" = -193;
"@MMK_R_quotedbl" = -336;
"@MMK_R_u" = -44;
"@MMK_R_v" = -133;
};
"@MMK_L_L.c2sc" = {
"@MMK_R_Q.c2sc" = -17;
"@MMK_R_T.c2sc" = -69;
"@MMK_R_U.c2sc" = -20;
"@MMK_R_W.c2sc" = -43;
"@MMK_R_Y.c2sc" = -76;
};
"@MMK_L_Lje-cy" = {
"@MMK_R_Che-cy" = -25;
"@MMK_R_Lje-cy" = -11;
"@MMK_R_T" = -267;
"@MMK_R_U-cy" = -21;
"@MMK_R_V" = -56;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -83;
"@MMK_R_quotedbl" = -64;
"@MMK_R_x" = -55;
};
"@MMK_L_O.c2sc" = {
"@MMK_R_T.c2sc" = -18;
"@MMK_R_X.c2sc" = -20;
"@MMK_R_Y.c2sc" = -22;
};
"@MMK_L_P" = {
"@MMK_R_A" = -138;
"@MMK_R_Delta.c2sc" = -58;
"@MMK_R_J" = -200;
"@MMK_R_Lje-cy" = -55;
"@MMK_R_X" = -31;
"@MMK_R_Z" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -324;
"@MMK_R_el-cy" = -39;
"@MMK_R_o" = -13;
"@MMK_R_v" = 15;
};
"@MMK_L_T" = {
"@MMK_R_A" = -79;
"@MMK_R_C" = -28;
"@MMK_R_Delta.c2sc" = -81;
"@MMK_R_J" = -240;
"@MMK_R_Lje-cy" = -53;
"@MMK_R_Q.c2sc" = -71;
"@MMK_R_S" = -16;
"@MMK_R_S.c2sc" = -68;
"@MMK_R_T" = 16;
"@MMK_R_T.c2sc" = -15;
"@MMK_R_V" = 16;
"@MMK_R_W" = 15;
"@MMK_R_W.c2sc" = -15;
"@MMK_R_X.c2sc" = -19;
"@MMK_R_Y" = 16;
"@MMK_R_a" = -113;
"@MMK_R_c" = -99;
"@MMK_R_che-cy" = -132;
"@MMK_R_comma" = -218;
"@MMK_R_el-cy" = -130;
"@MMK_R_hyphen" = -232;
"@MMK_R_m" = -109;
"@MMK_R_o" = -99;
"@MMK_R_s" = -116;
"@MMK_R_u" = -95;
"@MMK_R_v" = -72;
"@MMK_R_x" = -77;
"@MMK_R_z" = -60;
};
"@MMK_L_T.c2sc" = {
"@MMK_R_Y.c2sc" = 13;
};
"@MMK_L_U-cy" = {
"@MMK_R_A" = -91;
"@MMK_R_C" = -23;
"@MMK_R_Lje-cy" = -54;
"@MMK_R_T" = 18;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -111;
"@MMK_R_c" = -67;
"@MMK_R_che-cy" = -23;
"@MMK_R_comma" = -403;
"@MMK_R_el-cy" = -69;
"@MMK_R_hyphen" = -119;
"@MMK_R_m" = -102;
"@MMK_R_o" = -67;
"@MMK_R_s" = -46;
};
"@MMK_L_V" = {
"@MMK_R_A" = -75;
"@MMK_R_C" = -13;
"@MMK_R_Delta.c2sc" = -76;
"@MMK_R_Q.c2sc" = -39;
"@MMK_R_a" = -46;
"@MMK_R_c" = -44;
"@MMK_R_comma" = -225;
"@MMK_R_hyphen" = -37;
"@MMK_R_o" = -46;
"@MMK_R_u" = -28;
"@MMK_R_v" = -11;
};
"@MMK_L_W" = {
"@MMK_R_A" = -43;
"@MMK_R_Delta.c2sc" = -53;
"@MMK_R_Q.c2sc" = -25;
"@MMK_R_T" = 14;
"@MMK_R_a" = -33;
"@MMK_R_c" = -31;
"@MMK_R_comma" = -123;
"@MMK_R_hyphen" = -60;
"@MMK_R_o" = -31;
"@MMK_R_u" = -19;
};
"@MMK_L_X" = {
"@MMK_R_C" = -25;
"@MMK_R_Lje-cy" = 17;
"@MMK_R_Q.c2sc" = -25;
"@MMK_R_V" = 14;
"@MMK_R_c" = -26;
"@MMK_R_che-cy" = -47;
"@MMK_R_el-cy" = 17;
"@MMK_R_hyphen" = -46;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -31;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -29;
"@MMK_R_Delta.c2sc" = -85;
"@MMK_R_J" = -96;
"@MMK_R_Q.c2sc" = -53;
"@MMK_R_S" = -16;
"@MMK_R_T" = 17;
"@MMK_R_T.c2sc" = -13;
"@MMK_R_U" = -96;
"@MMK_R_V" = 18;
"@MMK_R_W" = 17;
"@MMK_R_W.c2sc" = -13;
"@MMK_R_X" = 13;
"@MMK_R_X.c2sc" = -17;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -73;
"@MMK_R_c" = -65;
"@MMK_R_comma" = -211;
"@MMK_R_hyphen" = -52;
"@MMK_R_m" = -40;
"@MMK_R_o" = -65;
"@MMK_R_s" = -58;
"@MMK_R_u" = -39;
"@MMK_R_v" = -20;
"@MMK_R_x" = -23;
"@MMK_R_z" = -30;
};
"@MMK_L_Z" = {
"@MMK_R_A" = 13;
"@MMK_R_C" = -26;
"@MMK_R_Delta.c2sc" = 13;
"@MMK_R_Q.c2sc" = -20;
"@MMK_R_c" = -21;
"@MMK_R_o" = -21;
"@MMK_R_u" = -19;
"@MMK_R_v" = -27;
};
"@MMK_L_a" = {
"@MMK_R_quotedbl" = -67;
"@MMK_R_v" = -15;
};
"@MMK_L_b" = {
"@MMK_R_el-cy" = -14;
"@MMK_R_quotedbl" = -29;
"@MMK_R_v" = -11;
"@MMK_R_x" = -15;
"@MMK_R_z" = -15;
};
"@MMK_L_c" = {
"@MMK_R_quotedbl" = -11;
};
"@MMK_L_comma" = {
"@MMK_R_quotedbl" = -170;
};
"@MMK_L_e" = {
"@MMK_R_quotedbl" = -14;
"@MMK_R_v" = -13;
};
"@MMK_L_ge-cy" = {
"@MMK_R_c" = -20;
"@MMK_R_el-cy" = -40;
"@MMK_R_o" = -20;
};
"@MMK_L_h" = {
"@MMK_R_quotedbl" = -104;
};
"@MMK_L_hardsign-cy" = {
"@MMK_R_che-cy" = -39;
"@MMK_R_quotedbl" = -135;
"@MMK_R_v" = -35;
"@MMK_R_x" = -11;
};
"@MMK_L_o" = {
"@MMK_R_el-cy" = -16;
"@MMK_R_quotedbl" = -136;
"@MMK_R_v" = -15;
"@MMK_R_x" = -21;
"@MMK_R_z" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_A" = -120;
"@MMK_R_a" = -50;
"@MMK_R_c" = -59;
"@MMK_R_m" = -20;
"@MMK_R_o" = -61;
"@MMK_R_quotedbl" = -107;
"@MMK_R_s" = -80;
};
"@MMK_L_r" = {
"@MMK_R_a" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -123;
"@MMK_R_o" = -20;
"@MMK_R_quotedbl" = 16;
"@MMK_R_v" = 18;
};
"@MMK_L_v" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -107;
"@MMK_R_el-cy" = -41;
"@MMK_R_o" = -15;
"@MMK_R_quotedbl" = 15;
};
"@MMK_L_x" = {
"@MMK_R_c" = -20;
"@MMK_R_o" = -20;
};
"@MMK_L_z" = {
"@MMK_R_c" = -16;
"@MMK_R_o" = -16;
};
A = {
G.c2sc = -11;
Phi = -27;
Psi = -47;
Uhorn = -18;
V.c2sc = -51;
lambda = 17;
question = -61;
t = -17;
tau = -56;
w = -33;
};
A.c2sc = {
C.c2sc = -14;
G.c2sc = -14;
Q.c2sc = -14;
V.c2sc = -57;
};
C = {
braceright = -17;
bracketright = -12;
parenright = -26;
};
C.ss06 = {
braceright = -17;
bracketright = -12;
parenright = -26;
};
D = {
AE = -33;
Sigma = -16;
Xi = -13;
lambda = -22;
};
D.c2sc = {
V.c2sc = -18;
W.c2sc = -11;
};
D.ss06 = {
AE = -33;
Sigma = -16;
Xi = -13;
lambda = -22;
};
Delta = {
G.c2sc = -11;
Phi = -27;
Psi = -47;
Uhorn = -18;
V.c2sc = -51;
lambda = 17;
question = -61;
t = -17;
tau = -56;
w = -33;
};
Delta.c2sc = {
C.c2sc = -14;
G.c2sc = -14;
Q.c2sc = -14;
V.c2sc = -57;
};
E = {
V.c2sc = -16;
f = -18;
w = -22;
};
F = {
A = -170;
A.c2sc = -64;
Delta = -170;
Delta.c2sc = -64;
J = -264;
Lambda = -170;
Lambda.c2sc = -64;
T = 20;
a = -34;
alpha = -21;
c = -21;
comma = -234;
d = -21;
e = -21;
ellipsis = -234;
g = -21;
gamma = -24;
o = -21;
oe = -21;
ohorn = -21;
period = -234;
q = -21;
quotedblbase = -234;
quotesinglbase = -234;
r = -26;
sigma = -21;
sigmafinal = -21;
twodotenleader = -234;
u = -22;
uhorn = -22;
uni047D = -21;
upsilon = -22;
v = -24;
y = -24;
};
Gamma = {
AE = -324;
Phi = -159;
ae = -213;
delta = -113;
epsilon = -241;
guillemetleft = -577;
guillemetright = -387;
iota = -280;
omega = -295;
oslash = -181;
phi = -275;
pi = -225;
psi = -259;
r = -147;
rho = -283;
tau = -186;
uni047B = -196;
uni047F = -84;
w = -116;
};
K = {
C.c2sc = -24;
G.c2sc = -26;
Phi = -59;
Q.c2sc = -25;
tau = -76;
uni047B = -46;
uni047F = -56;
w = -63;
};
K.c2sc = {
Q.c2sc = -21;
};
L = {
C.c2sc = -13;
G.c2sc = -15;
Q.c2sc = -15;
V.c2sc = -172;
w = -92;
};
L.c2sc = {
Q.c2sc = -16;
V.c2sc = -73;
};
Lambda = {
G.c2sc = -11;
Phi = -27;
Psi = -47;
Uhorn = -18;
V.c2sc = -51;
lambda = 17;
question = -61;
t = -17;
tau = -56;
w = -33;
};
Lambda.c2sc = {
C.c2sc = -14;
G.c2sc = -14;
Q.c2sc = -14;
V.c2sc = -57;
};
O = {
AE = -33;
Sigma = -16;
Xi = -13;
lambda = -22;
};
O.c2sc = {
V.c2sc = -15;
};
O.ss06 = {
AE = -33;
Sigma = -16;
Xi = -13;
lambda = -22;
};
P = {
AE = -97;
delta = -11;
lambda = -34;
rho = -27;
t = 14;
};
Phi = {
A = -28;
Delta = -28;
Lambda = -28;
X = -46;
Y = -45;
lambda = -30;
};
Psi = {
A = -51;
Delta = -51;
Lambda = -51;
comma = -226;
ellipsis = -226;
period = -226;
quotedblbase = -226;
quotesinglbase = -226;
rho = -14;
twodotenleader = -226;
};
Q = {
A.c2sc = 14;
Delta.c2sc = 14;
Lambda.c2sc = 14;
T = -43;
V = -28;
W = -20;
Y = -35;
};
Q.c2sc = {
T.c2sc = -23;
V.c2sc = -21;
W.c2sc = -15;
Y.c2sc = -27;
};
R = {
T = -80;
V = -19;
Y = -48;
};
R.c2sc = {
T.c2sc = -14;
V.c2sc = -15;
W.c2sc = -11;
Y.c2sc = -18;
};
Schwa = {
AE = -33;
Sigma = -16;
Xi = -13;
lambda = -22;
};
Sigma = {
C = -26;
C.ss06 = -26;
G = -26;
G.ss06 = -26;
O = -26;
O.ss06 = -26;
OE = -26;
Ohorn = -26;
Oslash = -26;
Phi = -62;
Q = -26;
Q.ss06 = -26;
Theta = -26;
lambda = 16;
uni047A = -26;
uni047C = -26;
uni047E = -26;
};
T = {
AE = -179;
C.c2sc = -71;
G.c2sc = -71;
Phi = -82;
Q.c2sc = -71;
ae = -114;
delta = -55;
epsilon = -130;
guillemetleft = -328;
guillemetright = -216;
iota = -153;
omega = -162;
oslash = -95;
phi = -150;
pi = -121;
psi = -141;
r = -75;
rho = -155;
space = -40;
tau = -98;
uni047B = -104;
uni047F = -38;
w = -57;
};
T.c2sc = {
V.c2sc = 13;
};
Theta = {
AE = -33;
Sigma = -16;
Xi = -13;
lambda = -22;
};
Theta.c2sc = {
V.c2sc = -15;
};
V = {
C.c2sc = -39;
G.c2sc = -39;
Q.c2sc = -39;
braceright = 19;
bracketright = 17;
parenright = 20;
r = -30;
};
W = {
C.c2sc = -23;
G.c2sc = -25;
Q.c2sc = -25;
braceright = 14;
bracketright = 12;
parenright = 15;
r = -21;
};
X = {
C.c2sc = -23;
G.c2sc = -25;
Phi = -44;
Q.c2sc = -23;
delta = -16;
lambda = 17;
omega = -18;
phi = -25;
psi = -27;
tau = -32;
theta = -19;
};
Xi = {
C = -13;
C.ss06 = -13;
G = -13;
G.ss06 = -13;
O = -13;
O.ss06 = -13;
OE = -13;
Ohorn = -13;
Oslash = -13;
Q = -13;
Q.ss06 = -13;
Theta = -13;
lambda = 13;
uni047A = -13;
uni047C = -13;
uni047E = -13;
};
Y = {
AE = -96;
C.c2sc = -51;
G.c2sc = -53;
Phi = -48;
Q.c2sc = -53;
ae = -63;
ampersand = -30;
asterisk = -49;
beta = -22;
braceright = 19;
bracketright = 18;
bullet = -45;
delta = -18;
epsilon = -58;
f = -22;
guillemetleft = -82;
guillemetright = -51;
iota = -42;
omega = -57;
oslash = -64;
parenright = 20;
phi = -53;
pi = -24;
psi = -38;
r = -40;
rho = -70;
t = -22;
tau = -23;
theta = -23;
zeta = 13;
};
Z = {
C.c2sc = -19;
G.c2sc = -21;
Phi = -53;
Q.c2sc = -20;
psi = -28;
w = -27;
};
a = {
uni047F = -13;
};
alpha = {
lambda = 14;
};
b = {
tau = -22;
};
braceleft = {
J = -20;
U = -20;
};
bracketleft = {
J = -18;
U = -18;
};
delta = {
tau = -19;
};
e = {
quoteright = -80;
};
eta = {
quoteright = -80;
};
f = {
alpha = -24;
braceright = 19;
bracketright = 18;
c = -24;
d = -24;
e = -24;
g = -24;
oe = -24;
ohorn = -24;
parenright = 20;
q = -24;
quotedbl = 16;
quotedblleft = 16;
quotedblright = 16;
quoteleft = 16;
quotereversed = 16;
quoteright = 16;
quotesingle = 16;
sigma = -24;
sigmafinal = -24;
uni047D = -24;
};
gamma = {
delta = -11;
f = 13;
pi = 11;
rho = -22;
tau = 12;
uni047B = -15;
};
h = {
quoteright = -80;
};
iota = {
alpha = -16;
c = -16;
d = -16;
e = -16;
g = -16;
gamma = -36;
lambda = 15;
oe = -16;
ohorn = -16;
phi = -25;
pi = -22;
q = -16;
quotedbl = -38;
quotedblleft = -38;
quotedblright = -38;
quoteleft = -38;
quotereversed = -38;
quoteright = -38;
quotesingle = -38;
sigma = -16;
sigmafinal = -16;
tau = -60;
theta = -20;
u = -17;
uhorn = -17;
uni047D = -16;
upsilon = -17;
v = -36;
y = -36;
};
k = {
alpha = -20;
c = -20;
d = -20;
e = -20;
g = -20;
oe = -20;
ohorn = -20;
q = -20;
sigma = -20;
sigmafinal = -20;
uni047D = -20;
};
lambda = {
f = -23;
gamma = -59;
lambda = 16;
pi = -20;
quotedbl = -96;
quotedblleft = -96;
quotedblright = -96;
quoteleft = -96;
quotereversed = -96;
quoteright = -96;
quotesingle = -96;
tau = -224;
theta = -18;
u = -15;
uhorn = -15;
upsilon = -15;
v = -59;
y = -59;
};
m = {
quoteright = -80;
};
n = {
quoteright = -80;
};
o = {
quoteright = -80;
tau = -22;
uni047F = -15;
};
omega = {
gamma = -12;
v = -12;
x = -14;
y = -12;
z = -13;
};
p = {
tau = -22;
};
parenleft = {
V = 20;
W = 18;
Y = 22;
};
phi = {
x = -19;
z = -19;
};
psi = {
x = -14;
z = -14;
};
quotedbl = {
w = 11;
};
quotedblleft = {
w = 11;
};
quotedblright = {
w = 11;
};
quoteleft = {
w = 11;
};
quotereversed = {
w = 11;
};
quoteright = {
h = 32;
k = 32;
l = 32;
o = -128;
s = -112;
s_t = -112;
w = 11;
};
quotesingle = {
w = 11;
};
r = {
f = 15;
t = 50;
w = 17;
};
rho = {
tau = -22;
};
schwa = {
gamma = -13;
quotedbl = -14;
quotedblleft = -14;
quotedblright = -14;
quoteleft = -14;
quotereversed = -14;
quoteright = -14;
quotesingle = -14;
v = -13;
y = -13;
};
sigma = {
tau = 11;
};
slash = {
slash = -224;
};
space = {
T = -40;
};
t = {
o = -20;
};
tau = {
A.c2sc = -65;
C.c2sc = -18;
Delta.c2sc = -65;
G.c2sc = -20;
Lambda.c2sc = -65;
O.c2sc = -19;
Q.c2sc = -20;
S.c2sc = -11;
T.c2sc = 14;
Theta.c2sc = -19;
V.c2sc = 13;
Y.c2sc = 13;
alpha = -24;
c = -24;
d = -24;
delta = -19;
e = -24;
f = 12;
g = -24;
gamma = 11;
o = -22;
oe = -24;
ohorn = -24;
pi = 11;
q = -24;
quotedbl = 12;
quotedblleft = 12;
quotedblright = 12;
quoteleft = 12;
quotereversed = 12;
quoteright = 12;
quotesingle = 12;
sigma = -24;
sigmafinal = -24;
tau = 12;
uni047D = -24;
v = 11;
y = 11;
};
thorn = {
tau = -22;
};
v = {
delta = -11;
f = 13;
pi = 11;
rho = -22;
tau = 12;
uni047B = -15;
};
w = {
comma = -124;
ellipsis = -124;
period = -124;
quotedblbase = -124;
quotesinglbase = -124;
twodotenleader = -124;
};
x = {
uni047B = -15;
};
xi = {
alpha = -25;
c = -25;
d = -25;
e = -25;
g = -25;
lambda = 15;
oe = -25;
ohorn = -25;
q = -25;
sigma = -25;
sigmafinal = -25;
uni047D = -25;
};
y = {
delta = -11;
f = 13;
pi = 11;
rho = -22;
tau = 12;
uni047B = -15;
};
zeta = {
alpha = -36;
c = -36;
d = -36;
delta = -18;
e = -36;
epsilon = -26;
eta = -13;
g = -36;
gamma = -31;
iota = -23;
m = -13;
n = -13;
o = -42;
oe = -36;
ohorn = -36;
omega = -37;
p = -13;
phi = -50;
pi = -25;
psi = -44;
q = -36;
sigma = -36;
sigmafinal = -36;
tau = -29;
theta = -21;
u = -35;
uhorn = -35;
uni047D = -36;
upsilon = -35;
v = -31;
xi = -16;
y = -31;
};
};
};
manufacturer = mulat;
unitsPerEm = 2048;
userData = {
GSDimensionPlugin.Dimensions = {
"A9B054E9-1A63-4AEF-9EE1-561B1DFE8422" = {
};
};
};
versionMajor = 1;
versionMinor = 0;
}
