{
.appVersion = "3039";
DisplayStrings = (
"/longs_t",
"/ba.base/sa-ethiopic",
"/ya-ethiopic",
"/ba.base/kxu-ethiopic",
"/ga.base",
"/ma.base",
"/ra.base/fee-ethiopic",
"/ra.base/fee-ethiopic",
"/ra.base/fee-ethiopic",
"/ga.base/ge-ethiopic",
"/gge-ethiopic",
"/ree-ethiopic",
"/ree-ethiopic.liga",
"/ga.base/ge-ethiopic",
"/abesha.base/waGlottal-ethiopic",
"/abesha.base/waGlottal-ethiopic"
);
classes = (
{
code = "yo-ethiopic yoa-ethiopic de-ethiopic dde-ethiopic je-ethiopic hu-ethiopic lu-ethiopic hhu-ethiopic mu-ethiopic szu-ethiopic su-ethiopic shu-ethiopic qu-ethiopic qhu-ethiopic bu-ethiopic vu-ethiopic xu-ethiopic nu-ethiopic nyu-ethiopic ku-ethiopic kxu-ethiopic wu-ethiopic zu-ethiopic zhu-ethiopic yu-ethiopic du-ethiopic ddu-ethiopic ju-ethiopic gu-ethiopic ggu-ethiopic thu-ethiopic chu-ethiopic phu-ethiopic tsu-ethiopic tzu-ethiopic hu-ethiopic.liga hhu-ethiopic.liga mu-ethiopic.liga su-ethiopic.liga shu-ethiopic.liga qu-ethiopic.liga qhu-ethiopic.liga bu-ethiopic.liga vu-ethiopic.liga xu-ethiopic.liga nu-ethiopic.liga nyu-ethiopic.liga ku-ethiopic.liga kxu-ethiopic.liga wu-ethiopic.liga zu-ethiopic.liga zhu-ethiopic.liga du-ethiopic.liga ddu-ethiopic.liga ju-ethiopic.liga gu-ethiopic.liga ggu-ethiopic.liga thu-ethiopic.liga chu-ethiopic.liga phu-ethiopic.liga tsu-ethiopic.liga tzu-ethiopic.liga we-ethiopic de-ethiopic dde-ethiopic je-ethiopic we-ethiopic.liga de-ethiopic.liga dde-ethiopic.liga je-ethiopic.liga phe-ethiopic.liga tse-ethiopic.liga yo-ethiopic yoa-ethiopic phe-ethiopic tse-ethiopic uGlottal-ethiopic uGlottal-ethiopic.liga";
name = Hu;
},
{
code = "ha-ethiopic hu-ethiopic hi-ethiopic haa-ethiopic hee-ethiopic he-ethiopic ho-ethiopic hoa-ethiopic la-ethiopic lu-ethiopic li-ethiopic laa-ethiopic lee-ethiopic le-ethiopic lo-ethiopic lwa-ethiopic hha-ethiopic hhu-ethiopic hhi-ethiopic hhaa-ethiopic hhee-ethiopic hhe-ethiopic hho-ethiopic hhwa-ethiopic ma-ethiopic mu-ethiopic mi-ethiopic maa-ethiopic mee-ethiopic me-ethiopic mo-ethiopic mwa-ethiopic sza-ethiopic szu-ethiopic szi-ethiopic szaa-ethiopic szee-ethiopic sze-ethiopic szo-ethiopic szwa-ethiopic ra-ethiopic ru-ethiopic ri-ethiopic raa-ethiopic ree-ethiopic re-ethiopic ro-ethiopic rwa-ethiopic sa-ethiopic su-ethiopic si-ethiopic saa-ethiopic see-ethiopic se-ethiopic so-ethiopic swa-ethiopic sha-ethiopic shu-ethiopic shi-ethiopic shaa-ethiopic shee-ethiopic she-ethiopic sho-ethiopic shwa-ethiopic qa-ethiopic qu-ethiopic qi-ethiopic qaa-ethiopic qee-ethiopic qe-ethiopic qo-ethiopic qoa-ethiopic qwa-ethiopic qwi-ethiopic qwaa-ethiopic qwee-ethiopic qwe-ethiopic qha-ethiopic qhu-ethiopic qhi-ethiopic qhaa-ethiopic qhee-ethiopic qhe-ethiopic qho-ethiopic qhwa-ethiopic qhwi-ethiopic qhwaa-ethiopic qhwee-ethiopic qhwe-ethiopic ba-ethiopic bu-ethiopic bi-ethiopic baa-ethiopic bee-ethiopic be-ethiopic bo-ethiopic bwa-ethiopic va-ethiopic vu-ethiopic vi-ethiopic vaa-ethiopic vee-ethiopic ve-ethiopic vo-ethiopic vwa-ethiopic ta-ethiopic tu-ethiopic ti-ethiopic taa-ethiopic tee-ethiopic te-ethiopic to-ethiopic twa-ethiopic ca-ethiopic cu-ethiopic ci-ethiopic caa-ethiopic cee-ethiopic ce-ethiopic co-ethiopic cwa-ethiopic xa-ethiopic xu-ethiopic xi-ethiopic xaa-ethiopic xee-ethiopic xe-ethiopic xo-ethiopic xoa-ethiopic xwa-ethiopic xwi-ethiopic xwaa-ethiopic xwee-ethiopic xwe-ethiopic na-ethiopic nu-ethiopic ni-ethiopic naa-ethiopic nee-ethiopic ne-ethiopic no-ethiopic nwa-ethiopic nya-ethiopic nyu-ethiopic nyi-ethiopic nyaa-ethiopic nyee-ethiopic nye-ethiopic nyo-ethiopic nywa-ethiopic aGlottal-ethiopic uGlottal-ethiopic iGlottal-ethiopic aaGlottal-ethiopic eeGlottal-ethiopic eGlottal-ethiopic oGlottal-ethiopic waGlottal-ethiopic ka-ethiopic ku-ethiopic ki-ethiopic kaa-ethiopic kee-ethiopic ke-ethiopic ko-ethiopic koa-ethiopic kwa-ethiopic kwi-ethiopic kwaa-ethiopic kwee-ethiopic kwe-ethiopic kxa-ethiopic kxu-ethiopic kxi-ethiopic kxaa-ethiopic kxee-ethiopic kxe-ethiopic kxo-ethiopic kxwa-ethiopic kxwi-ethiopic kxwaa-ethiopic kxwee-ethiopic kxwe-ethiopic wa-ethiopic wu-ethiopic wi-ethiopic waa-ethiopic wee-ethiopic we-ethiopic wo-ethiopic woa-ethiopic aPharyngeal-ethiopic uPharyngeal-ethiopic iPharyngeal-ethiopic aaPharyngeal-ethiopic eePharyngeal-ethiopic ePharyngeal-ethiopic oPharyngeal-ethiopic za-ethiopic zu-ethiopic zi-ethiopic zaa-ethiopic zee-ethiopic ze-ethiopic zo-ethiopic zwa-ethiopic zha-ethiopic zhu-ethiopic zhi-ethiopic zhaa-ethiopic zhee-ethiopic zhe-ethiopic zho-ethiopic zhwa-ethiopic ya-ethiopic yu-ethiopic yi-ethiopic yaa-ethiopic yee-ethiopic ye-ethiopic yo-ethiopic yoa-ethiopic da-ethiopic du-ethiopic di-ethiopic daa-ethiopic dee-ethiopic de-ethiopic do-ethiopic dwa-ethiopic dda-ethiopic ddu-ethiopic ddi-ethiopic ddaa-ethiopic ddee-ethiopic dde-ethiopic ddo-ethiopic ddwa-ethiopic ja-ethiopic ju-ethiopic ji-ethiopic jaa-ethiopic jee-ethiopic je-ethiopic jo-ethiopic jwa-ethiopic ga-ethiopic gu-ethiopic gi-ethiopic gaa-ethiopic gee-ethiopic ge-ethiopic go-ethiopic goa-ethiopic gwa-ethiopic gwi-ethiopic gwaa-ethiopic gwee-ethiopic gwe-ethiopic gga-ethiopic ggu-ethiopic ggi-ethiopic ggaa-ethiopic ggee-ethiopic gge-ethiopic ggo-ethiopic ggwaa-ethiopic tha-ethiopic thu-ethiopic thi-ethiopic thaa-ethiopic thee-ethiopic the-ethiopic tho-ethiopic thwa-ethiopic cha-ethiopic chu-ethiopic chi-ethiopic chaa-ethiopic chee-ethiopic che-ethiopic cho-ethiopic chwa-ethiopic pha-ethiopic phu-ethiopic phi-ethiopic phaa-ethiopic phee-ethiopic phe-ethiopic pho-ethiopic phwa-ethiopic tsa-ethiopic tsu-ethiopic tsi-ethiopic tsaa-ethiopic tsee-ethiopic tse-ethiopic tso-ethiopic tswa-ethiopic tza-ethiopic tzu-ethiopic tzi-ethiopic tzaa-ethiopic tzee-ethiopic tze-ethiopic tzo-ethiopic tzoa-ethiopic fa-ethiopic fu-ethiopic fi-ethiopic faa-ethiopic fee-ethiopic fe-ethiopic fo-ethiopic fwa-ethiopic pa-ethiopic pu-ethiopic pi-ethiopic paa-ethiopic pee-ethiopic pe-ethiopic po-ethiopic pwa-ethiopic rya-ethiopic ha-ethiopic.liga hu-ethiopic.liga hi-ethiopic.liga haa-ethiopic.liga hee-ethiopic.liga he-ethiopic.liga ho-ethiopic.liga hoa-ethiopic.liga la-ethiopic.liga lu-ethiopic.liga li-ethiopic.liga laa-ethiopic.liga lee-ethiopic.liga le-ethiopic.liga lo-ethiopic.liga lwa-ethiopic.liga hha-ethiopic.liga hhu-ethiopic.liga hhi-ethiopic.liga hhaa-ethiopic.liga hhee-ethiopic.liga hhe-ethiopic.liga hho-ethiopic.liga hhwa-ethiopic.liga ma-ethiopic.liga mu-ethiopic.liga mi-ethiopic.liga maa-ethiopic.liga mee-ethiopic.liga me-ethiopic.liga mo-ethiopic.liga mwa-ethiopic.liga sza-ethiopic.liga szu-ethiopic.liga szi-ethiopic.liga szaa-ethiopic.liga szee-ethiopic.liga sze-ethiopic.liga szo-ethiopic.liga szwa-ethiopic.liga ra-ethiopic.liga ru-ethiopic.liga ri-ethiopic.liga raa-ethiopic.liga ree-ethiopic.liga re-ethiopic.liga ro-ethiopic.liga rwa-ethiopic.liga sa-ethiopic.liga su-ethiopic.liga si-ethiopic.liga saa-ethiopic.liga see-ethiopic.liga se-ethiopic.liga so-ethiopic.liga swa-ethiopic.liga sha-ethiopic.liga shu-ethiopic.liga shi-ethiopic.liga shaa-ethiopic.liga shee-ethiopic.liga she-ethiopic.liga sho-ethiopic.liga shwa-ethiopic.liga qa-ethiopic.liga qu-ethiopic.liga qi-ethiopic.liga qaa-ethiopic.liga qee-ethiopic.liga qe-ethiopic.liga qo-ethiopic.liga qwaa-ethiopic.liga qha-ethiopic.liga qhu-ethiopic.liga qhi-ethiopic.liga qhaa-ethiopic.liga qhee-ethiopic.liga qhe-ethiopic.liga qho-ethiopic.liga qhwaa-ethiopic.liga ba-ethiopic.liga bu-ethiopic.liga bi-ethiopic.liga baa-ethiopic.liga bee-ethiopic.liga be-ethiopic.liga bo-ethiopic.liga bwa-ethiopic.liga va-ethiopic.liga vu-ethiopic.liga vi-ethiopic.liga vaa-ethiopic.liga vee-ethiopic.liga ve-ethiopic.liga vo-ethiopic.liga vwa-ethiopic.liga ta-ethiopic.liga tu-ethiopic.liga ti-ethiopic.liga taa-ethiopic.liga tee-ethiopic.liga te-ethiopic.liga to-ethiopic.liga twa-ethiopic.liga ca-ethiopic.liga cu-ethiopic.liga ci-ethiopic.liga caa-ethiopic.liga cee-ethiopic.liga ce-ethiopic.liga co-ethiopic.liga cwa-ethiopic.liga xa-ethiopic.liga xu-ethiopic.liga xi-ethiopic.liga xaa-ethiopic.liga xee-ethiopic.liga xe-ethiopic.liga xo-ethiopic.liga xwaa-ethiopic.liga na-ethiopic.liga nu-ethiopic.liga ni-ethiopic.liga naa-ethiopic.liga nee-ethiopic.liga ne-ethiopic.liga no-ethiopic.liga nwa-ethiopic.liga nya-ethiopic.liga nyu-ethiopic.liga nyi-ethiopic.liga nyaa-ethiopic.liga nyee-ethiopic.liga nye-ethiopic.liga nyo-ethiopic.liga nywa-ethiopic.liga aGlottal-ethiopic.liga uGlottal-ethiopic.liga iGlottal-ethiopic.liga aaGlottal-ethiopic.liga eeGlottal-ethiopic.liga eGlottal-ethiopic.liga oGlottal-ethiopic.liga waGlottal-ethiopic.liga ka-ethiopic.liga ku-ethiopic.liga ki-ethiopic.liga kaa-ethiopic.liga kee-ethiopic.liga ke-ethiopic.liga ko-ethiopic.liga kwaa-ethiopic.liga kxa-ethiopic.liga kxu-ethiopic.liga kxi-ethiopic.liga kxaa-ethiopic.liga kxee-ethiopic.liga kxe-ethiopic.liga kxo-ethiopic.liga kxwaa-ethiopic.liga wa-ethiopic.liga wu-ethiopic.liga wi-ethiopic.liga waa-ethiopic.liga wee-ethiopic.liga we-ethiopic.liga wo-ethiopic.liga woa-ethiopic.liga aPharyngeal-ethiopic.liga uPharyngeal-ethiopic.liga iPharyngeal-ethiopic.liga aaPharyngeal-ethiopic.liga eePharyngeal-ethiopic.liga ePharyngeal-ethiopic.liga oPharyngeal-ethiopic.liga za-ethiopic.liga zu-ethiopic.liga zi-ethiopic.liga zaa-ethiopic.liga zee-ethiopic.liga ze-ethiopic.liga zo-ethiopic.liga zwa-ethiopic.liga zha-ethiopic.liga zhu-ethiopic.liga zhi-ethiopic.liga zhaa-ethiopic.liga zhee-ethiopic.liga zhe-ethiopic.liga zho-ethiopic.liga zhwa-ethiopic.liga ya-ethiopic.liga yu-ethiopic.liga yi-ethiopic.liga yaa-ethiopic.liga yee-ethiopic.liga ye-ethiopic.liga yo-ethiopic.liga yoa-ethiopic.liga da-ethiopic.liga du-ethiopic.liga di-ethiopic.liga daa-ethiopic.liga dee-ethiopic.liga de-ethiopic.liga do-ethiopic.liga dwa-ethiopic.liga dda-ethiopic.liga ddu-ethiopic.liga ddi-ethiopic.liga ddaa-ethiopic.liga ddee-ethiopic.liga dde-ethiopic.liga ddo-ethiopic.liga ddwa-ethiopic.liga ja-ethiopic.liga ju-ethiopic.liga ji-ethiopic.liga jaa-ethiopic.liga jee-ethiopic.liga je-ethiopic.liga jo-ethiopic.liga jwa-ethiopic.liga ga-ethiopic.liga gu-ethiopic.liga gi-ethiopic.liga gaa-ethiopic.liga gee-ethiopic.liga ge-ethiopic.liga go-ethiopic.liga gwaa-ethiopic.liga gga-ethiopic.liga ggu-ethiopic.liga ggi-ethiopic.liga ggaa-ethiopic.liga ggee-ethiopic.liga gge-ethiopic.liga ggo-ethiopic.liga ggwaa-ethiopic.liga tha-ethiopic.liga thu-ethiopic.liga thi-ethiopic.liga thaa-ethiopic.liga thee-ethiopic.liga the-ethiopic.liga tho-ethiopic.liga thwa-ethiopic.liga cha-ethiopic.liga chu-ethiopic.liga chi-ethiopic.liga chaa-ethiopic.liga chee-ethiopic.liga che-ethiopic.liga cho-ethiopic.liga chwa-ethiopic.liga pha-ethiopic.liga phu-ethiopic.liga phi-ethiopic.liga phaa-ethiopic.liga phee-ethiopic.liga phe-ethiopic.liga pho-ethiopic.liga phwa-ethiopic.liga tsa-ethiopic.liga tsu-ethiopic.liga tsi-ethiopic.liga tsaa-ethiopic.liga tsee-ethiopic.liga tse-ethiopic.liga tso-ethiopic.liga tswa-ethiopic.liga tza-ethiopic.liga tzu-ethiopic.liga tzi-ethiopic.liga tzaa-ethiopic.liga tzee-ethiopic.liga tze-ethiopic.liga tzo-ethiopic.liga tzoa-ethiopic.liga fa-ethiopic.liga fu-ethiopic.liga fi-ethiopic.liga faa-ethiopic.liga fee-ethiopic.liga fe-ethiopic.liga fo-ethiopic.liga fwa-ethiopic.liga pa-ethiopic.liga pu-ethiopic.liga pi-ethiopic.liga paa-ethiopic.liga pee-ethiopic.liga pe-ethiopic.liga po-ethiopic.liga pwa-ethiopic.liga one-ethiopic two-ethiopic three-ethiopic four-ethiopic five-ethiopic six-ethiopic seven-ethiopic eight-ethiopic nine-ethiopic ten-ethiopic twenty-ethiopic thirty-ethiopic forty-ethiopic fifty-ethiopic sixty-ethiopic seventy-ethiopic eighty-ethiopic ninety-ethiopic hundred-ethiopic tenthousand-ethiopic colon-ethiopic comma-ethiopic paragraphseparator-ethiopic period-ethiopic prefacecolon-ethiopic question-ethiopic sectionmark-ethiopic semicolon-ethiopic wordspace-ethiopic shortRikrik-ethiopic yizet-ethiopic ";
name = Ethiopic;
},
{
code = "ha-ethiopic hu-ethiopic hi-ethiopic haa-ethiopic hee-ethiopic he-ethiopic ho-ethiopic hoa-ethiopic la-ethiopic lu-ethiopic li-ethiopic laa-ethiopic lee-ethiopic le-ethiopic lo-ethiopic lwa-ethiopic hha-ethiopic hhu-ethiopic hhi-ethiopic hhaa-ethiopic hhee-ethiopic hhe-ethiopic hho-ethiopic hhwa-ethiopic ma-ethiopic mu-ethiopic mi-ethiopic maa-ethiopic mee-ethiopic me-ethiopic mo-ethiopic mwa-ethiopic sza-ethiopic szu-ethiopic szi-ethiopic szaa-ethiopic szee-ethiopic sze-ethiopic szo-ethiopic szwa-ethiopic ra-ethiopic ru-ethiopic ri-ethiopic raa-ethiopic ree-ethiopic re-ethiopic ro-ethiopic rwa-ethiopic sa-ethiopic su-ethiopic si-ethiopic saa-ethiopic see-ethiopic se-ethiopic so-ethiopic swa-ethiopic sha-ethiopic shu-ethiopic shi-ethiopic shaa-ethiopic shee-ethiopic she-ethiopic sho-ethiopic shwa-ethiopic qa-ethiopic qu-ethiopic qi-ethiopic qaa-ethiopic qee-ethiopic qe-ethiopic qo-ethiopic qwaa-ethiopic qha-ethiopic qhu-ethiopic qhi-ethiopic qhaa-ethiopic qhee-ethiopic qhe-ethiopic qho-ethiopic qhwaa-ethiopic ba-ethiopic bu-ethiopic bi-ethiopic baa-ethiopic bee-ethiopic be-ethiopic bo-ethiopic bwa-ethiopic va-ethiopic vu-ethiopic vi-ethiopic vaa-ethiopic vee-ethiopic ve-ethiopic vo-ethiopic vwa-ethiopic ta-ethiopic tu-ethiopic ti-ethiopic taa-ethiopic tee-ethiopic te-ethiopic to-ethiopic twa-ethiopic ca-ethiopic cu-ethiopic ci-ethiopic caa-ethiopic cee-ethiopic ce-ethiopic co-ethiopic cwa-ethiopic xa-ethiopic xu-ethiopic xi-ethiopic xaa-ethiopic xee-ethiopic xe-ethiopic xo-ethiopic xwaa-ethiopic na-ethiopic nu-ethiopic ni-ethiopic naa-ethiopic nee-ethiopic ne-ethiopic no-ethiopic nwa-ethiopic nya-ethiopic nyu-ethiopic nyi-ethiopic nyaa-ethiopic nyee-ethiopic nye-ethiopic nyo-ethiopic nywa-ethiopic aGlottal-ethiopic uGlottal-ethiopic iGlottal-ethiopic aaGlottal-ethiopic eeGlottal-ethiopic eGlottal-ethiopic oGlottal-ethiopic waGlottal-ethiopic ka-ethiopic ku-ethiopic ki-ethiopic kaa-ethiopic kee-ethiopic ke-ethiopic ko-ethiopic kwaa-ethiopic kxa-ethiopic kxu-ethiopic kxi-ethiopic kxaa-ethiopic kxee-ethiopic kxe-ethiopic kxo-ethiopic kxwaa-ethiopic wa-ethiopic wu-ethiopic wi-ethiopic waa-ethiopic wee-ethiopic we-ethiopic wo-ethiopic woa-ethiopic aPharyngeal-ethiopic uPharyngeal-ethiopic iPharyngeal-ethiopic aaPharyngeal-ethiopic eePharyngeal-ethiopic ePharyngeal-ethiopic oPharyngeal-ethiopic za-ethiopic zu-ethiopic zi-ethiopic zaa-ethiopic zee-ethiopic ze-ethiopic zo-ethiopic zwa-ethiopic zha-ethiopic zhu-ethiopic zhi-ethiopic zhaa-ethiopic zhee-ethiopic zhe-ethiopic zho-ethiopic zhwa-ethiopic ya-ethiopic yu-ethiopic yi-ethiopic yaa-ethiopic yee-ethiopic ye-ethiopic yo-ethiopic yoa-ethiopic da-ethiopic du-ethiopic di-ethiopic daa-ethiopic dee-ethiopic de-ethiopic do-ethiopic dwa-ethiopic dda-ethiopic ddu-ethiopic ddi-ethiopic ddaa-ethiopic ddee-ethiopic dde-ethiopic ddo-ethiopic ddwa-ethiopic ja-ethiopic ju-ethiopic ji-ethiopic jaa-ethiopic jee-ethiopic je-ethiopic jo-ethiopic jwa-ethiopic ga-ethiopic gu-ethiopic gi-ethiopic gaa-ethiopic gee-ethiopic ge-ethiopic go-ethiopic gwaa-ethiopic gga-ethiopic ggu-ethiopic ggi-ethiopic ggaa-ethiopic ggee-ethiopic gge-ethiopic ggo-ethiopic ggwaa-ethiopic tha-ethiopic thu-ethiopic thi-ethiopic thaa-ethiopic thee-ethiopic the-ethiopic tho-ethiopic thwa-ethiopic cha-ethiopic chu-ethiopic chi-ethiopic chaa-ethiopic chee-ethiopic che-ethiopic cho-ethiopic chwa-ethiopic pha-ethiopic phu-ethiopic phi-ethiopic phaa-ethiopic phee-ethiopic phe-ethiopic pho-ethiopic phwa-ethiopic tsa-ethiopic tsu-ethiopic tsi-ethiopic tsaa-ethiopic tsee-ethiopic tse-ethiopic tso-ethiopic tswa-ethiopic tza-ethiopic tzu-ethiopic tzi-ethiopic tzaa-ethiopic tzee-ethiopic tze-ethiopic tzo-ethiopic tzoa-ethiopic fa-ethiopic fu-ethiopic fi-ethiopic faa-ethiopic fee-ethiopic fe-ethiopic fo-ethiopic fwa-ethiopic pa-ethiopic pu-ethiopic pi-ethiopic paa-ethiopic pee-ethiopic pe-ethiopic po-ethiopic pwa-ethiopic ";
name = Ethsmall;
},
{
code = "ha-ethiopic.liga hu-ethiopic.liga hi-ethiopic.liga haa-ethiopic.liga hee-ethiopic.liga he-ethiopic.liga ho-ethiopic.liga hoa-ethiopic.liga la-ethiopic.liga lu-ethiopic.liga li-ethiopic.liga laa-ethiopic.liga lee-ethiopic.liga le-ethiopic.liga lo-ethiopic.liga lwa-ethiopic.liga hha-ethiopic.liga hhu-ethiopic.liga hhi-ethiopic.liga hhaa-ethiopic.liga hhee-ethiopic.liga hhe-ethiopic.liga hho-ethiopic.liga hhwa-ethiopic.liga ma-ethiopic.liga mu-ethiopic.liga mi-ethiopic.liga maa-ethiopic.liga mee-ethiopic.liga me-ethiopic.liga mo-ethiopic.liga mwa-ethiopic.liga sza-ethiopic.liga szu-ethiopic.liga szi-ethiopic.liga szaa-ethiopic.liga szee-ethiopic.liga sze-ethiopic.liga szo-ethiopic.liga szwa-ethiopic.liga ra-ethiopic.liga ru-ethiopic.liga ri-ethiopic.liga raa-ethiopic.liga ree-ethiopic.liga re-ethiopic.liga ro-ethiopic.liga rwa-ethiopic.liga sa-ethiopic.liga su-ethiopic.liga si-ethiopic.liga saa-ethiopic.liga see-ethiopic.liga se-ethiopic.liga so-ethiopic.liga swa-ethiopic.liga sha-ethiopic.liga shu-ethiopic.liga shi-ethiopic.liga shaa-ethiopic.liga shee-ethiopic.liga she-ethiopic.liga sho-ethiopic.liga shwa-ethiopic.liga qa-ethiopic.liga qu-ethiopic.liga qi-ethiopic.liga qaa-ethiopic.liga qee-ethiopic.liga qe-ethiopic.liga qo-ethiopic.liga qwaa-ethiopic.liga qha-ethiopic.liga qhu-ethiopic.liga qhi-ethiopic.liga qhaa-ethiopic.liga qhee-ethiopic.liga qhe-ethiopic.liga qho-ethiopic.liga qhwaa-ethiopic.liga ba-ethiopic.liga bu-ethiopic.liga bi-ethiopic.liga baa-ethiopic.liga bee-ethiopic.liga be-ethiopic.liga bo-ethiopic.liga bwa-ethiopic.liga va-ethiopic.liga vu-ethiopic.liga vi-ethiopic.liga vaa-ethiopic.liga vee-ethiopic.liga ve-ethiopic.liga vo-ethiopic.liga vwa-ethiopic.liga ta-ethiopic.liga tu-ethiopic.liga ti-ethiopic.liga taa-ethiopic.liga tee-ethiopic.liga te-ethiopic.liga to-ethiopic.liga twa-ethiopic.liga ca-ethiopic.liga cu-ethiopic.liga ci-ethiopic.liga caa-ethiopic.liga cee-ethiopic.liga ce-ethiopic.liga co-ethiopic.liga cwa-ethiopic.liga xa-ethiopic.liga xu-ethiopic.liga xi-ethiopic.liga xaa-ethiopic.liga xee-ethiopic.liga xe-ethiopic.liga xo-ethiopic.liga xwaa-ethiopic.liga na-ethiopic.liga nu-ethiopic.liga ni-ethiopic.liga naa-ethiopic.liga nee-ethiopic.liga ne-ethiopic.liga no-ethiopic.liga nwa-ethiopic.liga nya-ethiopic.liga nyu-ethiopic.liga nyi-ethiopic.liga nyaa-ethiopic.liga nyee-ethiopic.liga nye-ethiopic.liga nyo-ethiopic.liga nywa-ethiopic.liga aGlottal-ethiopic.liga uGlottal-ethiopic.liga iGlottal-ethiopic.liga aaGlottal-ethiopic.liga eeGlottal-ethiopic.liga eGlottal-ethiopic.liga oGlottal-ethiopic.liga waGlottal-ethiopic.liga ka-ethiopic.liga ku-ethiopic.liga ki-ethiopic.liga kaa-ethiopic.liga kee-ethiopic.liga ke-ethiopic.liga ko-ethiopic.liga kwaa-ethiopic.liga kxa-ethiopic.liga kxu-ethiopic.liga kxi-ethiopic.liga kxaa-ethiopic.liga kxee-ethiopic.liga kxe-ethiopic.liga kxo-ethiopic.liga kxwaa-ethiopic.liga wa-ethiopic.liga wu-ethiopic.liga wi-ethiopic.liga waa-ethiopic.liga wee-ethiopic.liga we-ethiopic.liga wo-ethiopic.liga woa-ethiopic.liga aPharyngeal-ethiopic.liga uPharyngeal-ethiopic.liga iPharyngeal-ethiopic.liga aaPharyngeal-ethiopic.liga eePharyngeal-ethiopic.liga ePharyngeal-ethiopic.liga oPharyngeal-ethiopic.liga za-ethiopic.liga zu-ethiopic.liga zi-ethiopic.liga zaa-ethiopic.liga zee-ethiopic.liga ze-ethiopic.liga zo-ethiopic.liga zwa-ethiopic.liga zha-ethiopic.liga zhu-ethiopic.liga zhi-ethiopic.liga zhaa-ethiopic.liga zhee-ethiopic.liga zhe-ethiopic.liga zho-ethiopic.liga zhwa-ethiopic.liga ya-ethiopic.liga yu-ethiopic.liga yi-ethiopic.liga yaa-ethiopic.liga yee-ethiopic.liga ye-ethiopic.liga yo-ethiopic.liga yoa-ethiopic.liga da-ethiopic.liga du-ethiopic.liga di-ethiopic.liga daa-ethiopic.liga dee-ethiopic.liga de-ethiopic.liga do-ethiopic.liga dwa-ethiopic.liga dda-ethiopic.liga ddu-ethiopic.liga ddi-ethiopic.liga ddaa-ethiopic.liga ddee-ethiopic.liga dde-ethiopic.liga ddo-ethiopic.liga ddwa-ethiopic.liga ja-ethiopic.liga ju-ethiopic.liga ji-ethiopic.liga jaa-ethiopic.liga jee-ethiopic.liga je-ethiopic.liga jo-ethiopic.liga jwa-ethiopic.liga ga-ethiopic.liga gu-ethiopic.liga gi-ethiopic.liga gaa-ethiopic.liga gee-ethiopic.liga ge-ethiopic.liga go-ethiopic.liga gwaa-ethiopic.liga gga-ethiopic.liga ggu-ethiopic.liga ggi-ethiopic.liga ggaa-ethiopic.liga ggee-ethiopic.liga gge-ethiopic.liga ggo-ethiopic.liga ggwaa-ethiopic.liga tha-ethiopic.liga thu-ethiopic.liga thi-ethiopic.liga thaa-ethiopic.liga thee-ethiopic.liga the-ethiopic.liga tho-ethiopic.liga thwa-ethiopic.liga cha-ethiopic.liga chu-ethiopic.liga chi-ethiopic.liga chaa-ethiopic.liga chee-ethiopic.liga che-ethiopic.liga cho-ethiopic.liga chwa-ethiopic.liga pha-ethiopic.liga phu-ethiopic.liga phi-ethiopic.liga phaa-ethiopic.liga phee-ethiopic.liga phe-ethiopic.liga pho-ethiopic.liga phwa-ethiopic.liga tsa-ethiopic.liga tsu-ethiopic.liga tsi-ethiopic.liga tsaa-ethiopic.liga tsee-ethiopic.liga tse-ethiopic.liga tso-ethiopic.liga tswa-ethiopic.liga tza-ethiopic.liga tzu-ethiopic.liga tzi-ethiopic.liga tzaa-ethiopic.liga tzee-ethiopic.liga tze-ethiopic.liga tzo-ethiopic.liga tzoa-ethiopic.liga fa-ethiopic.liga fu-ethiopic.liga fi-ethiopic.liga faa-ethiopic.liga fee-ethiopic.liga fe-ethiopic.liga fo-ethiopic.liga fwa-ethiopic.liga pa-ethiopic.liga pu-ethiopic.liga pi-ethiopic.liga paa-ethiopic.liga pee-ethiopic.liga pe-ethiopic.liga po-ethiopic.liga pwa-ethiopic.liga ";
name = Ethcap;
},
{
code = "hhi-ethiopic ni-ethiopic iGlottal-ethiopic.liga li-ethiopic.liga chi-ethiopic.liga kxi-ethiopic si-ethiopic.liga gi-ethiopic bi-ethiopic.liga zi-ethiopic ddi-ethiopic.liga ggi-ethiopic ggi-ethiopic.liga li-ethiopic phi-ethiopic.liga di-ethiopic.liga thi-ethiopic phi-ethiopic shi-ethiopic iGlottal-ethiopic vi-ethiopic.liga xi-ethiopic fee-ethiopic.liga shi-ethiopic.liga kxi-ethiopic.liga si-ethiopic xwi-ethiopic nyi-ethiopic.liga xi-ethiopic.liga gwi-ethiopic ni-ethiopic.liga ki-ethiopic thi-ethiopic.liga fee-ethiopic ki-ethiopic.liga tsi-ethiopic zhi-ethiopic.liga tsi-ethiopic.liga zi-ethiopic.liga chi-ethiopic zhi-ethiopic hhi-ethiopic.liga ji-ethiopic.liga gi-ethiopic.liga nyi-ethiopic";
name = Hi;
},
{
code = "ra-ethiopic ru-ethiopic ri-ethiopic raa-ethiopic rwa-ethiopic rya-ethiopic ra-ethiopic.liga ru-ethiopic.liga ri-ethiopic.liga raa-ethiopic.liga ree-ethiopic.liga fa-ethiopic fu-ethiopic fi-ethiopic faa-ethiopic fa-ethiopic.liga fu-ethiopic.liga fi-ethiopic.liga faa-ethiopic.liga fee-ethiopic.liga pa-ethiopic.liga pu-ethiopic.liga pi-ethiopic.liga paa-ethiopic.liga pee-ethiopic.liga pe-ethiopic.liga po-ethiopic.liga pwa-ethiopic.liga ";
name = Ethleft;
},
{
code = "xa-ethiopic xu-ethiopic xi-ethiopic xaa-ethiopic xee-ethiopic xe-ethiopic xoa-ethiopic xwa-ethiopic xwi-ethiopic xwaa-ethiopic xwee-ethiopic xwe-ethiopic na-ethiopic nu-ethiopic ni-ethiopic naa-ethiopic nee-ethiopic ne-ethiopic nya-ethiopic nyu-ethiopic nyi-ethiopic nyee-ethiopic nye-ethiopic ga-ethiopic gu-ethiopic gi-ethiopic gaa-ethiopic gee-ethiopic go-ethiopic goa-ethiopic gwa-ethiopic gwi-ethiopic gwaa-ethiopic gwee-ethiopic gwe-ethiopic gga-ethiopic ggu-ethiopic ggi-ethiopic ggaa-ethiopic ggee-ethiopic ggo-ethiopic ggwaa-ethiopic xa-ethiopic.liga xu-ethiopic.liga xi-ethiopic.liga xaa-ethiopic.liga xee-ethiopic.liga xe-ethiopic.liga xwaa-ethiopic.liga na-ethiopic.liga nu-ethiopic.liga ni-ethiopic.liga nee-ethiopic.liga ne-ethiopic.liga nya-ethiopic.liga nyu-ethiopic.liga nyi-ethiopic.liga nyee-ethiopic.liga nye-ethiopic.liga ga-ethiopic.liga gu-ethiopic.liga gi-ethiopic.liga gaa-ethiopic.liga gee-ethiopic.liga ge-ethiopic.liga go-ethiopic.liga gwaa-ethiopic.liga gga-ethiopic.liga ggu-ethiopic.liga ggi-ethiopic.liga ggaa-ethiopic.liga ggee-ethiopic.liga gge-ethiopic.liga ggo-ethiopic.liga ggwaa-ethiopic.liga pa-ethiopic.liga pu-ethiopic.liga pi-ethiopic.liga paa-ethiopic.liga pee-ethiopic.liga pe-ethiopic.liga po-ethiopic.liga pwa-ethiopic.liga";
name = Ethright;
notes = s;
},
{
code = "zha-ethiopic zhu-ethiopic zhi-ethiopic zhaa-ethiopic zhee-ethiopic zhe-ethiopic zho-ethiopic zhwa-ethiopic zha-ethiopic.liga zhu-ethiopic.liga zhi-ethiopic.liga zhaa-ethiopic.liga zhee-ethiopic.liga zhe-ethiopic.liga zho-ethiopic.liga zhwa-ethiopic.liga";
name = zha;
},
{
code = "xa-ethiopic xu-ethiopic xi-ethiopic xaa-ethiopic xee-ethiopic xe-ethiopic xoa-ethiopic xwa-ethiopic xwi-ethiopic xwaa-ethiopic xwee-ethiopic xwe-ethiopic xa-ethiopic.liga xu-ethiopic.liga xi-ethiopic.liga xaa-ethiopic.liga xee-ethiopic.liga xe-ethiopic.liga xwaa-ethiopic.liga";
name = xa;
},
{
automatic = 1;
code = "CR space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde exclamdown cent sterling currency yen brokenbar section dieresis copyright ordfeminine guillemetleft logicalnot registered macron degree plusminus twosuperior threesuperior acute micro paragraph periodcentered cedilla onesuperior ordmasculine guillemetright onequarter onehalf threequarters questiondown AE multiply Oslash Thorn germandbls ae eth divide oslash thorn idotless OE oe circumflex caron firsttonechinese breve dotaccent ring ogonek tilde hungarumlaut lowringmod gravecomb acutecomb tildecomb dblgravecomb dotbelowcomb tonos dieresistonos anoteleia enquad emquad enspace emspace threeperemspace fourperemspace sixperemspace figurespace punctuationspace thinspace thinspace.locl hairspace zerowidthspace hyphentwo nonbreakinghyphen endash emdash underscoredbl quoteleft quoteright quotesinglbase quotereversed quotedblleft quotedblright quotedblbase dagger daggerdbl bullet twodotenleader ellipsis hyphenationpoint perthousand guilsinglleft guilsinglright fraction foursuperior euro partialdiff product summation minus radical infinity integral approxequal notequal lessequal greaterequal lozenge uniEE01 uniEE02 uniF6C3 longs_t nbspace softhyphen Eth Agrave Aacute Acircumflex Atilde Adieresis Aring Ccedilla Egrave Eacute Ecircumflex Edieresis Igrave Iacute Icircumflex Idieresis Ntilde Ograve Oacute Ocircumflex Otilde Odieresis Ugrave Uacute Ucircumflex Udieresis Yacute agrave aacute acircumflex atilde adieresis aring ccedilla egrave eacute ecircumflex edieresis igrave iacute icircumflex idieresis ntilde ograve oacute ocircumflex otilde odieresis ugrave uacute ucircumflex udieresis yacute ydieresis f_f_i.liga f_f_l.liga fi.liga fl.liga ha-ethiopic hu-ethiopic hi-ethiopic haa-ethiopic hee-ethiopic he-ethiopic ho-ethiopic hoa-ethiopic la-ethiopic lu-ethiopic li-ethiopic laa-ethiopic lee-ethiopic le-ethiopic lo-ethiopic lwa-ethiopic hha-ethiopic hhu-ethiopic hhi-ethiopic hhaa-ethiopic hhee-ethiopic hhe-ethiopic hho-ethiopic hhwa-ethiopic ma-ethiopic mu-ethiopic mi-ethiopic maa-ethiopic mee-ethiopic me-ethiopic mo-ethiopic mwa-ethiopic sza-ethiopic szu-ethiopic szi-ethiopic szaa-ethiopic szee-ethiopic sze-ethiopic szo-ethiopic szwa-ethiopic ra-ethiopic ru-ethiopic ri-ethiopic raa-ethiopic ree-ethiopic re-ethiopic ro-ethiopic rwa-ethiopic sa-ethiopic su-ethiopic si-ethiopic saa-ethiopic see-ethiopic se-ethiopic so-ethiopic swa-ethiopic sha-ethiopic shu-ethiopic shi-ethiopic shaa-ethiopic shee-ethiopic she-ethiopic sho-ethiopic shwa-ethiopic qa-ethiopic qu-ethiopic qi-ethiopic qaa-ethiopic qee-ethiopic qe-ethiopic qo-ethiopic qoa-ethiopic qwa-ethiopic qwi-ethiopic qwaa-ethiopic qwee-ethiopic qwe-ethiopic qha-ethiopic qhu-ethiopic qhi-ethiopic qhaa-ethiopic qhee-ethiopic qhe-ethiopic qho-ethiopic qhwa-ethiopic qhwi-ethiopic qhwaa-ethiopic qhwee-ethiopic qhwe-ethiopic ba-ethiopic bu-ethiopic bi-ethiopic baa-ethiopic bee-ethiopic be-ethiopic bo-ethiopic bwa-ethiopic va-ethiopic vu-ethiopic vi-ethiopic vaa-ethiopic vee-ethiopic ve-ethiopic vo-ethiopic vwa-ethiopic ta-ethiopic tu-ethiopic ti-ethiopic taa-ethiopic tee-ethiopic te-ethiopic to-ethiopic twa-ethiopic ca-ethiopic cu-ethiopic ci-ethiopic caa-ethiopic cee-ethiopic ce-ethiopic co-ethiopic cwa-ethiopic xa-ethiopic xu-ethiopic xi-ethiopic xaa-ethiopic xee-ethiopic xe-ethiopic xo-ethiopic xoa-ethiopic xwa-ethiopic xwi-ethiopic xwaa-ethiopic xwee-ethiopic xwe-ethiopic na-ethiopic nu-ethiopic ni-ethiopic naa-ethiopic nee-ethiopic ne-ethiopic no-ethiopic nwa-ethiopic nya-ethiopic nyu-ethiopic nyi-ethiopic nyaa-ethiopic nyee-ethiopic nye-ethiopic nyo-ethiopic nywa-ethiopic aGlottal-ethiopic uGlottal-ethiopic iGlottal-ethiopic aaGlottal-ethiopic eeGlottal-ethiopic eGlottal-ethiopic oGlottal-ethiopic waGlottal-ethiopic ka-ethiopic ku-ethiopic ki-ethiopic kaa-ethiopic kee-ethiopic ke-ethiopic ko-ethiopic koa-ethiopic kwa-ethiopic kwi-ethiopic kwaa-ethiopic kwee-ethiopic kwe-ethiopic kxa-ethiopic kxu-ethiopic kxi-ethiopic kxaa-ethiopic kxee-ethiopic kxe-ethiopic kxo-ethiopic kxwa-ethiopic kxwi-ethiopic kxwaa-ethiopic kxwee-ethiopic kxwe-ethiopic wa-ethiopic wu-ethiopic wi-ethiopic waa-ethiopic wee-ethiopic we-ethiopic wo-ethiopic woa-ethiopic aPharyngeal-ethiopic uPharyngeal-ethiopic iPharyngeal-ethiopic aaPharyngeal-ethiopic eePharyngeal-ethiopic ePharyngeal-ethiopic oPharyngeal-ethiopic za-ethiopic zu-ethiopic zi-ethiopic zaa-ethiopic zee-ethiopic ze-ethiopic zo-ethiopic zwa-ethiopic zha-ethiopic zhu-ethiopic zhi-ethiopic zhaa-ethiopic zhee-ethiopic zhe-ethiopic zho-ethiopic zhwa-ethiopic ya-ethiopic yu-ethiopic yi-ethiopic yaa-ethiopic yee-ethiopic ye-ethiopic yo-ethiopic yoa-ethiopic da-ethiopic du-ethiopic di-ethiopic daa-ethiopic dee-ethiopic de-ethiopic do-ethiopic dwa-ethiopic dda-ethiopic ddu-ethiopic ddi-ethiopic ddaa-ethiopic ddee-ethiopic dde-ethiopic ddo-ethiopic ddwa-ethiopic ja-ethiopic ju-ethiopic ji-ethiopic jaa-ethiopic jee-ethiopic je-ethiopic jo-ethiopic jwa-ethiopic ga-ethiopic gu-ethiopic gi-ethiopic gaa-ethiopic gee-ethiopic ge-ethiopic go-ethiopic goa-ethiopic gwa-ethiopic gwi-ethiopic gwaa-ethiopic gwee-ethiopic gwe-ethiopic gga-ethiopic ggu-ethiopic ggi-ethiopic ggaa-ethiopic ggee-ethiopic gge-ethiopic ggo-ethiopic ggwaa-ethiopic tha-ethiopic thu-ethiopic thi-ethiopic thaa-ethiopic thee-ethiopic the-ethiopic tho-ethiopic thwa-ethiopic cha-ethiopic chu-ethiopic chi-ethiopic chaa-ethiopic chee-ethiopic che-ethiopic cho-ethiopic chwa-ethiopic pha-ethiopic phu-ethiopic phi-ethiopic phaa-ethiopic phee-ethiopic phe-ethiopic pho-ethiopic phwa-ethiopic tsa-ethiopic tsu-ethiopic tsi-ethiopic tsaa-ethiopic tsee-ethiopic tse-ethiopic tso-ethiopic tswa-ethiopic tza-ethiopic tzu-ethiopic tzi-ethiopic tzaa-ethiopic tzee-ethiopic tze-ethiopic tzo-ethiopic tzoa-ethiopic fa-ethiopic fu-ethiopic fi-ethiopic faa-ethiopic fee-ethiopic fe-ethiopic fo-ethiopic fwa-ethiopic pa-ethiopic pu-ethiopic pi-ethiopic paa-ethiopic pee-ethiopic pe-ethiopic po-ethiopic pwa-ethiopic rya-ethiopic ha-ethiopic.liga hu-ethiopic.liga hi-ethiopic.liga haa-ethiopic.liga hee-ethiopic.liga he-ethiopic.liga ho-ethiopic.liga hoa-ethiopic.liga la-ethiopic.liga lu-ethiopic.liga li-ethiopic.liga laa-ethiopic.liga lee-ethiopic.liga le-ethiopic.liga lo-ethiopic.liga lwa-ethiopic.liga hha-ethiopic.liga hhu-ethiopic.liga hhi-ethiopic.liga hhaa-ethiopic.liga hhee-ethiopic.liga hhe-ethiopic.liga hho-ethiopic.liga hhwa-ethiopic.liga ma-ethiopic.liga mu-ethiopic.liga mi-ethiopic.liga maa-ethiopic.liga mee-ethiopic.liga me-ethiopic.liga mo-ethiopic.liga mwa-ethiopic.liga sza-ethiopic.liga szu-ethiopic.liga szi-ethiopic.liga szaa-ethiopic.liga szee-ethiopic.liga sze-ethiopic.liga szo-ethiopic.liga szwa-ethiopic.liga ra-ethiopic.liga ru-ethiopic.liga ri-ethiopic.liga raa-ethiopic.liga ree-ethiopic.liga re-ethiopic.liga ro-ethiopic.liga rwa-ethiopic.liga sa-ethiopic.liga su-ethiopic.liga si-ethiopic.liga saa-ethiopic.liga see-ethiopic.liga se-ethiopic.liga so-ethiopic.liga swa-ethiopic.liga sha-ethiopic.liga shu-ethiopic.liga shi-ethiopic.liga shaa-ethiopic.liga shee-ethiopic.liga she-ethiopic.liga sho-ethiopic.liga shwa-ethiopic.liga qa-ethiopic.liga qu-ethiopic.liga qi-ethiopic.liga qaa-ethiopic.liga qee-ethiopic.liga qe-ethiopic.liga qo-ethiopic.liga qwaa-ethiopic.liga qha-ethiopic.liga qhu-ethiopic.liga qhi-ethiopic.liga qhaa-ethiopic.liga qhee-ethiopic.liga qhe-ethiopic.liga qho-ethiopic.liga qhwaa-ethiopic.liga ba-ethiopic.liga bu-ethiopic.liga bi-ethiopic.liga baa-ethiopic.liga bee-ethiopic.liga be-ethiopic.liga bo-ethiopic.liga bwa-ethiopic.liga va-ethiopic.liga vu-ethiopic.liga vi-ethiopic.liga vaa-ethiopic.liga vee-ethiopic.liga ve-ethiopic.liga vo-ethiopic.liga vwa-ethiopic.liga ta-ethiopic.liga tu-ethiopic.liga ti-ethiopic.liga taa-ethiopic.liga tee-ethiopic.liga te-ethiopic.liga to-ethiopic.liga twa-ethiopic.liga ca-ethiopic.liga cu-ethiopic.liga ci-ethiopic.liga caa-ethiopic.liga cee-ethiopic.liga ce-ethiopic.liga co-ethiopic.liga cwa-ethiopic.liga xa-ethiopic.liga xu-ethiopic.liga xi-ethiopic.liga xaa-ethiopic.liga xee-ethiopic.liga xe-ethiopic.liga xo-ethiopic.liga xwaa-ethiopic.liga na-ethiopic.liga nu-ethiopic.liga ni-ethiopic.liga naa-ethiopic.liga nee-ethiopic.liga ne-ethiopic.liga no-ethiopic.liga nwa-ethiopic.liga nya-ethiopic.liga nyu-ethiopic.liga nyi-ethiopic.liga nyaa-ethiopic.liga nyee-ethiopic.liga nye-ethiopic.liga nyo-ethiopic.liga nywa-ethiopic.liga aGlottal-ethiopic.liga uGlottal-ethiopic.liga iGlottal-ethiopic.liga aaGlottal-ethiopic.liga eeGlottal-ethiopic.liga eGlottal-ethiopic.liga oGlottal-ethiopic.liga waGlottal-ethiopic.liga ka-ethiopic.liga ku-ethiopic.liga ki-ethiopic.liga kaa-ethiopic.liga kee-ethiopic.liga ke-ethiopic.liga ko-ethiopic.liga kwaa-ethiopic.liga kxa-ethiopic.liga kxu-ethiopic.liga kxi-ethiopic.liga kxaa-ethiopic.liga kxee-ethiopic.liga kxe-ethiopic.liga kxo-ethiopic.liga kxwaa-ethiopic.liga wa-ethiopic.liga wu-ethiopic.liga wi-ethiopic.liga waa-ethiopic.liga wee-ethiopic.liga we-ethiopic.liga wo-ethiopic.liga woa-ethiopic.liga aPharyngeal-ethiopic.liga uPharyngeal-ethiopic.liga iPharyngeal-ethiopic.liga aaPharyngeal-ethiopic.liga eePharyngeal-ethiopic.liga ePharyngeal-ethiopic.liga oPharyngeal-ethiopic.liga za-ethiopic.liga zu-ethiopic.liga zi-ethiopic.liga zaa-ethiopic.liga zee-ethiopic.liga ze-ethiopic.liga zo-ethiopic.liga zwa-ethiopic.liga zha-ethiopic.liga zhu-ethiopic.liga zhi-ethiopic.liga zhaa-ethiopic.liga zhee-ethiopic.liga zhe-ethiopic.liga zho-ethiopic.liga zhwa-ethiopic.liga ya-ethiopic.liga yu-ethiopic.liga yi-ethiopic.liga yaa-ethiopic.liga yee-ethiopic.liga ye-ethiopic.liga yo-ethiopic.liga yoa-ethiopic.liga da-ethiopic.liga du-ethiopic.liga di-ethiopic.liga daa-ethiopic.liga dee-ethiopic.liga de-ethiopic.liga do-ethiopic.liga dwa-ethiopic.liga dda-ethiopic.liga ddu-ethiopic.liga ddi-ethiopic.liga ddaa-ethiopic.liga ddee-ethiopic.liga dde-ethiopic.liga ddo-ethiopic.liga ddwa-ethiopic.liga ja-ethiopic.liga ju-ethiopic.liga ji-ethiopic.liga jaa-ethiopic.liga jee-ethiopic.liga je-ethiopic.liga jo-ethiopic.liga jwa-ethiopic.liga ga-ethiopic.liga gu-ethiopic.liga gi-ethiopic.liga gaa-ethiopic.liga gee-ethiopic.liga ge-ethiopic.liga go-ethiopic.liga gwaa-ethiopic.liga gga-ethiopic.liga ggu-ethiopic.liga ggi-ethiopic.liga ggaa-ethiopic.liga ggee-ethiopic.liga gge-ethiopic.liga ggo-ethiopic.liga ggwaa-ethiopic.liga tha-ethiopic.liga thu-ethiopic.liga thi-ethiopic.liga thaa-ethiopic.liga thee-ethiopic.liga the-ethiopic.liga tho-ethiopic.liga thwa-ethiopic.liga cha-ethiopic.liga chu-ethiopic.liga chi-ethiopic.liga chaa-ethiopic.liga chee-ethiopic.liga che-ethiopic.liga cho-ethiopic.liga chwa-ethiopic.liga pha-ethiopic.liga phu-ethiopic.liga phi-ethiopic.liga phaa-ethiopic.liga phee-ethiopic.liga phe-ethiopic.liga pho-ethiopic.liga phwa-ethiopic.liga tsa-ethiopic.liga tsu-ethiopic.liga tsi-ethiopic.liga tsaa-ethiopic.liga tsee-ethiopic.liga tse-ethiopic.liga tso-ethiopic.liga tswa-ethiopic.liga tza-ethiopic.liga tzu-ethiopic.liga tzi-ethiopic.liga tzaa-ethiopic.liga tzee-ethiopic.liga tze-ethiopic.liga tzo-ethiopic.liga tzoa-ethiopic.liga fa-ethiopic.liga fu-ethiopic.liga fi-ethiopic.liga faa-ethiopic.liga fee-ethiopic.liga fe-ethiopic.liga fo-ethiopic.liga fwa-ethiopic.liga pa-ethiopic.liga pu-ethiopic.liga pi-ethiopic.liga paa-ethiopic.liga pee-ethiopic.liga pe-ethiopic.liga po-ethiopic.liga pwa-ethiopic.liga one-ethiopic two-ethiopic three-ethiopic four-ethiopic five-ethiopic six-ethiopic seven-ethiopic eight-ethiopic nine-ethiopic ten-ethiopic twenty-ethiopic thirty-ethiopic forty-ethiopic fifty-ethiopic sixty-ethiopic seventy-ethiopic eighty-ethiopic ninety-ethiopic hundred-ethiopic tenthousand-ethiopic zero.frac0 one.frac0 two.frac0 three.frac0 four.frac0 five.frac0 six.frac0 seven.frac0 eight.frac0 nine.frac0 colon-ethiopic comma-ethiopic paragraphseparator-ethiopic period-ethiopic prefacecolon-ethiopic question-ethiopic sectionmark-ethiopic semicolon-ethiopic wordspace-ethiopic chiret-ethiopic deret-ethiopic deretHidet-ethiopic difat-ethiopic hidet-ethiopic kenat-ethiopic kurt-ethiopic rikrik-ethiopic shortRikrik-ethiopic yizet-ethiopic divisionslash geminVowellengthcomb-ethiopic geminationcomb-ethiopic vowellengthcomb-ethiopic acute.yu exclaxmdouble shift _num.bar _smart.cha _smart.da _smart.di _smart.du _smart.fa _smart.haa _smart.hat _smart.he _smart.hee _smart.hi _smart.ho _smart.hu _smart.hwa _smart.ka _smart.neck _smart.nose _smart.raa _smart.ri _smart.ye _smart.zha abesha.base ba.base ga.base ha.base hha.base la.base ma.base na.base newGlyph.001 newGlyph.002 oPh.base pa.base ra.base sa.base tsa.base wa.base ya.base za.base _cha.shoes.cap _smart.cha.caps _smart.da.caps _smart.haa.acute _smart.hat.002 _smart.hat.cap _smart.hat.caps _smart.hat.left _smart.ho.ring _smart.ka.caps _smart.neck.caps _smart.neck.left _smart.tsa.belt _smart.zha.caps _zha.ears.caps aGl.base.cap ba.base.cap ga.base.cap ha.base.cap hha.base.cap la.base.cap ma.base.cap na.base.cap oPh.base.cap pa.base.cap ra.base.cap sa.base.cap tsa.base.cap tsa.belt.cap wa.base.cap ya.base.cap za.base.cap _smart.hat.caps.old _smart.he.acute.bottom _smart.he.acute.top _smart.he.left.inner _smart.he.left.outer _smart.ho.ring.uniq _smart.neck.hha.caps _smart.neck.left.caps _smart.tsa.belt.caps";
name = All;
}
);
copyright = "Copyright 2020 The Mulat  Project Authors (fasilx)";
customParameters = (
{
name = unicodeRanges;
value = (
0,
4,
5,
6,
7,
31,
32,
33,
35,
36,
38,
62,
75
);
},
{
name = glyphOrder;
value = (
.notdef,
uni0000,
uni0002,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
currency,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemetleft,
logicalnot,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
micro,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemetright,
onequarter,
onehalf,
threequarters,
questiondown,
AE,
multiply,
Oslash,
Thorn,
germandbls,
ae,
eth,
divide,
oslash,
thorn,
dcroat,
Hbar,
idotless,
kgreenlandic,
Lslash,
lslash,
Eng,
eng,
OE,
oe,
longs,
Schwa,
florin,
Ohorn,
ohorn,
Uhorn,
uhorn,
jdotless,
schwa,
circumflex,
caron,
firsttonechinese,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
lowringmod,
gravecomb,
acutecomb,
tildecomb,
hookabovecomb,
dblgravecomb,
dotbelowcomb,
tonos,
dieresistonos,
anoteleia,
Gamma,
Delta,
Theta,
Lambda,
Xi,
Pi,
Sigma,
Phi,
Psi,
Ohm,
alpha,
beta,
gamma,
delta,
epsilon,
zeta,
eta,
theta,
iota,
lambda,
xi,
pi,
rho,
sigmafinal,
sigma,
tau,
upsilon,
phi,
psi,
omega,
thetaSymbol,
UpsilonhookSymbol,
piSymbol,
"Dje-cy",
"E-cy",
"Lje-cy",
"Nje-cy",
"Tshe-cy",
"Dzhe-cy",
"Be-cy",
"De-cy",
"Zhe-cy",
"Ze-cy",
"Ii-cy",
"El-cy",
"U-cy",
"Ef-cy",
"Tse-cy",
"Che-cy",
"Sha-cy",
"Shcha-cy",
"Hardsign-cy",
"Yeru-cy",
"Softsign-cy",
"Ereversed-cy",
"Iu-cy",
"Ia-cy",
"be-cy",
"ve-cy",
"ge-cy",
"de-cy",
"zhe-cy",
"ze-cy",
"ii-cy",
"ka-cy",
"el-cy",
"em-cy",
"en-cy",
"pe-cy",
"te-cy",
"ef-cy",
"tse-cy",
"che-cy",
"sha-cy",
"shcha-cy",
"hardsign-cy",
"yeru-cy",
"softsign-cy",
"ereversed-cy",
"iu-cy",
"ia-cy",
"dje-cy",
"e-cy",
"lje-cy",
"nje-cy",
"tshe-cy",
"dzhe-cy",
"Omega-cy",
"omega-cy",
"yat-cy",
"Eiotified-cy",
"eiotified-cy",
"Yuslittle-cy",
"yuslittle-cy",
"Yuslittleiotified-cy",
"yuslittleiotified-cy",
"Yusbig-cy",
"yusbig-cy",
"Yusbigiotified-cy",
"yusbigiotified-cy",
"Ksi-cy",
"ksi-cy",
"Fita-cy",
"fita-cy",
"Izhitsa-cy",
"izhitsa-cy",
uni047A,
uni047B,
uni047C,
uni047D,
uni047E,
uni047F,
"Koppa-cy",
"koppa-cy",
"thousand-cy",
"titlocomb-cy",
"palatalizationcomb-cy",
"dasiapneumatacomb-cy",
"psilipneumatacomb-cy",
"hundredthousandssigncomb-cy",
"millionssigncomb-cy",
"Iishorttail-cy",
"iishorttail-cy",
"semisoftsign-cy",
"Ertick-cy",
"ertick-cy",
"Gheupturn-cy",
"gheupturn-cy",
"Ghemiddlehook-cy",
"ghemiddlehook-cy",
"Zhedescender-cy",
"zhedescender-cy",
"Kadescender-cy",
"kadescender-cy",
"Kaverticalstroke-cy",
"kaverticalstroke-cy",
"Kabashkir-cy",
"kabashkir-cy",
"Endescender-cy",
"endescender-cy",
"Enghe-cy",
"enghe-cy",
"Pemiddlehook-cy",
"pemiddlehook-cy",
"Haabkhasian-cy",
"haabkhasian-cy",
"Hadescender-cy",
"hadescender-cy",
"Tetse-cy",
"tetse-cy",
"Chedescender-cy",
"chedescender-cy",
"Cheverticalstroke-cy",
"cheverticalstroke-cy",
"Shha-cy",
"Cheabkhasian-cy",
"cheabkhasian-cy",
"Kahook-cy",
"kahook-cy",
"Eltail-cy",
"eltail-cy",
"Enhook-cy",
"enhook-cy",
"Entail-cy",
"entail-cy",
"Emtail-cy",
"emtail-cy",
"Schwa-cy",
"Dzeabkhasian-cy",
"dzeabkhasian-cy",
"Gestrokehook-cy",
"gestrokehook-cy",
"Hahook-cy",
"hahook-cy",
"Komide-cy",
"Komidje-cy",
"komidje-cy",
"Komizje-cy",
"komizje-cy",
"Komidzje-cy",
"komidzje-cy",
"Komilje-cy",
"komilje-cy",
"Kominje-cy",
"kominje-cy",
"Komisje-cy",
"komisje-cy",
"Komitje-cy",
"komitje-cy",
"Reversedze-cy",
"Elhook-cy",
"elhook-cy",
glyph00369,
enquad,
emquad,
enspace,
emspace,
threeperemspace,
fourperemspace,
sixperemspace,
figurespace,
punctuationspace,
thinspace,
thinspace.locl,
hairspace,
zerowidthspace,
hyphentwo,
nonbreakinghyphen,
endash,
emdash,
underscoredbl,
quoteleft,
quoteright,
quotesinglbase,
quotereversed,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
twodotenleader,
ellipsis,
hyphenationpoint,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
foursuperior,
nmod,
lira,
naira,
peseta,
rupee,
won,
sheqel,
euro,
peso,
rupeeIndian,
liraTurkish,
manat,
ruble,
careof,
literSign,
numero,
trademark,
estimated,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
partialdiff,
product,
summation,
minus,
radical,
infinity,
integral,
approxequal,
notequal,
lessequal,
greaterequal,
lozenge,
uniEE01,
uniEE02,
uniF6C3,
f_f,
fi,
fl,
f_f_i,
f_f_l,
longs_t,
s_t,
zeroWidthNoBreakSpace,
objectReplacementCharacter,
replacementCharacter,
two.dnom,
one.dnom,
zero.dnom,
nine.c2sc,
eight.c2sc,
seven.c2sc,
six.c2sc,
five.c2sc,
four.c2sc,
three.c2sc,
two.c2sc,
one.c2sc,
zero.c2sc,
Z.c2sc,
Y.c2sc,
X.c2sc,
W.c2sc,
V.c2sc,
U.c2sc,
T.c2sc,
S.c2sc,
R.c2sc,
Q.c2sc,
P.c2sc,
O.c2sc,
N.c2sc,
M.c2sc,
L.c2sc,
K.c2sc,
J.c2sc,
I.c2sc,
H.c2sc,
G.c2sc,
F.c2sc,
dollar.c2sc,
sterling.c2sc,
yen.c2sc,
Gamma.c2sc,
Delta.c2sc,
Theta.c2sc,
Lambda.c2sc,
Xi.c2sc,
Pi.c2sc,
Sigma.c2sc,
Phi.c2sc,
Psi.c2sc,
Ohm.c2sc,
"Dje-cy.c2sc",
"E-cy.c2sc",
"Lje-cy.c2sc",
"Nje-cy.c2sc",
"Tshe-cy.c2sc",
"Dzhe-cy.c2sc",
"Be-cy.c2sc",
"De-cy.c2sc",
"Zhe-cy.c2sc",
"Ze-cy.c2sc",
"Ii-cy.c2sc",
"Ka-cy.c2sc",
"El-cy.c2sc",
"U-cy.c2sc",
"Tse-cy.c2sc",
"Che-cy.c2sc",
"Sha-cy.c2sc",
"Shcha-cy.c2sc",
"Hardsign-cy.c2sc",
"Yeru-cy.c2sc",
"Softsign-cy.c2sc",
"Ereversed-cy.c2sc",
"Iu-cy.c2sc",
"Ia-cy.c2sc",
"Ghestroke-cy.c2sc",
"Zhedescender-cy.c2sc",
"Kadescender-cy.c2sc",
"Kaverticalstroke-cy.c2sc",
"Kabashkir-cy.c2sc",
"Haabkhasian-cy.c2sc",
"Ustraightstroke-cy.c2sc",
"Hadescender-cy.c2sc",
"Tetse-cy.c2sc",
"Cheverticalstroke-cy.c2sc",
"Shha-cy.c2sc",
"Cheabkhasian-cy.c2sc",
"Schwa-cy.c2sc",
"Dzeabkhasian-cy.c2sc",
"Obarred-cy.c2sc",
lira.c2sc,
euro.c2sc,
numero.c2sc,
ruble.c2sc,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
glyph00550,
glyph00551,
E.c2sc,
g.ss01,
alpha.ss02,
R.ss03,
K.ss04,
k.ss04,
K.ss05,
k.ss05,
D.c2sc,
C.c2sc,
B.c2sc,
A.c2sc,
glyph00564,
glyph00565,
glyph00566,
glyph00567,
glyph00568,
glyph00569,
glyph00570,
"Gheupturn-cy.c2sc",
glyph00572,
glyph00573,
zero.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
C.ss06,
G.ss06,
D.ss06,
O.ss06,
Q.ss06,
glyph00586,
glyph00587,
glyph00588,
glyph00589,
glyph00590,
glyph00591,
glyph00592,
glyph00593,
OE.c2sc,
glyph00595,
glyph00596,
three.onum,
five.onum,
four.onum,
two.onum,
seven.onum,
zero.onum,
six.onum,
nine.onum,
eight.onum,
one.onum,
j.ccmp0,
"je-cy.ccmp0",
i.ccmp0,
iogonek.ccmp0,
"i-cy.ccmp0",
germandbls.smcp,
glyph00613,
seven.pnum,
b.ss06,
c.ss06,
d.ss06,
g.ss06,
o.ss06,
p.ss06,
q.ss06,
e.ss07,
g.ss07,
one.pnum,
ampersand.c2sc,
Lslash.c2sc,
AE.c2sc,
Thorn.c2sc,
Oslash.c2sc,
Hbar.c2sc,
Eng.c2sc,
nbspace,
softhyphen,
Dcroat,
Eth,
hbar,
Tbar,
tbar,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
Aringacute,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
aringacute,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
ydieresis,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
Cdotaccent,
cdotaccent,
Ccaron,
ccaron,
Dcaron,
dcaron,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
Gdotaccent,
gdotaccent,
Gcommaaccent,
gcommaaccent,
Hcircumflex,
hcircumflex,
Itilde,
itilde,
Imacron,
imacron,
Ibreve,
ibreve,
Iogonek,
iogonek,
Idotaccent,
IJ,
ij,
Jcircumflex,
jcircumflex,
Kcommaaccent,
kcommaaccent,
Lacute,
lacute,
Lcommaaccent,
lcommaaccent,
Lcaron,
lcaron,
Ldot,
ldot,
Nacute,
nacute,
Ncommaaccent,
ncommaaccent,
Ncaron,
ncaron,
napostrophe,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
Racute,
racute,
Rcommaaccent,
rcommaaccent,
Rcaron,
rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
Scommaaccent,
scommaaccent,
Scaron,
scaron,
Tcommaaccent,
tcommaaccent,
Tcedilla,
tcedilla,
Tcaron,
tcaron,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
Ydieresis,
Zacute,
zacute,
Zdotaccent,
zdotaccent,
Zcaron,
zcaron,
AEacute,
aeacute,
Oslashacute,
oslashacute,
Dcroat.c2sc,
Eth.c2sc,
Tbar.c2sc,
Agrave.c2sc,
Aacute.c2sc,
Acircumflex.c2sc,
Atilde.c2sc,
Adieresis.c2sc,
Aring.c2sc,
Aringacute.c2sc,
Ccedilla.c2sc,
Egrave.c2sc,
Eacute.c2sc,
Ecircumflex.c2sc,
Edieresis.c2sc,
Igrave.c2sc,
Iacute.c2sc,
Icircumflex.c2sc,
Idieresis.c2sc,
Ntilde.c2sc,
Ograve.c2sc,
Oacute.c2sc,
Ocircumflex.c2sc,
Otilde.c2sc,
Odieresis.c2sc,
Ugrave.c2sc,
Uacute.c2sc,
Ucircumflex.c2sc,
Udieresis.c2sc,
Yacute.c2sc,
Amacron.c2sc,
Abreve.c2sc,
Aogonek.c2sc,
Cacute.c2sc,
Ccircumflex.c2sc,
Cdotaccent.c2sc,
Ccaron.c2sc,
Dcaron.c2sc,
Emacron.c2sc,
Ebreve.c2sc,
Edotaccent.c2sc,
Eogonek.c2sc,
Ecaron.c2sc,
Gcircumflex.c2sc,
Gbreve.c2sc,
Gdotaccent.c2sc,
Gcommaaccent.c2sc,
Hcircumflex.c2sc,
Itilde.c2sc,
Imacron.c2sc,
Ibreve.c2sc,
Iogonek.c2sc,
Idotaccent.c2sc,
Jcircumflex.c2sc,
Kcommaaccent.c2sc,
Lacute.c2sc,
Lcommaaccent.c2sc,
Lcaron.c2sc,
Ldot.c2sc,
Nacute.c2sc,
Ncommaaccent.c2sc,
Ncaron.c2sc,
Omacron.c2sc,
Obreve.c2sc,
Ohungarumlaut.c2sc,
Racute.c2sc,
Rcommaaccent.c2sc,
Rcaron.c2sc,
Sacute.c2sc,
Scircumflex.c2sc,
Scedilla.c2sc,
Scaron.c2sc,
Tcommaaccent.c2sc,
Tcaron.c2sc,
Tcedilla.c2sc,
Utilde.c2sc,
Umacron.c2sc,
Ubreve.c2sc,
Uring.c2sc,
Uhungarumlaut.c2sc,
Uogonek.c2sc,
Wcircumflex.c2sc,
Ycircumflex.c2sc,
Ydieresis.c2sc,
Zacute.c2sc,
Zdotaccent.c2sc,
Zcaron.c2sc,
Alphatonos,
Epsilontonos,
Etatonos,
Iotatonos,
Omicrontonos,
Upsilontonos,
Omegatonos,
iotadieresistonos,
Alpha,
Beta,
Epsilon,
Zeta,
Eta,
Iota,
Kappa,
Mu,
Nu,
Omicron,
Rho,
Tau,
Upsilon,
Chi,
Iotadieresis,
Upsilondieresis,
alphatonos,
epsilontonos,
etatonos,
iotatonos,
upsilondieresistonos,
kappa,
omicron,
mu,
nu,
chi,
iotadieresis,
upsilondieresis,
omicrontonos,
upsilontonos,
omegatonos,
"Io-cy",
"Gje-cy",
"Dze-cy",
"I-cy",
"Yi-cy",
"Je-cy",
"Ka-cy",
"Kje-cy",
"Ushort-cy",
"A-cy",
"Ve-cy",
"Ge-cy",
"Ie-cy",
"Iishort-cy",
"Em-cy",
"En-cy",
"O-cy",
"Pe-cy",
"Er-cy",
"Es-cy",
"Te-cy",
"Ha-cy",
"a-cy",
"ie-cy",
"iishort-cy",
"o-cy",
"er-cy",
"es-cy",
"u-cy",
"ha-cy",
"io-cy",
"gje-cy",
"dze-cy",
"i-cy",
"yi-cy",
"je-cy",
"kje-cy",
"ushort-cy",
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Ygrave,
ygrave,
minute,
second,
exclamdouble,
jcaron,
apostrophemod,
Macute,
macute,
Aringbelow,
aringbelow,
"Iegrave-cy",
"Iigrave-cy",
"iegrave-cy",
"iigrave-cy",
"Psi-cy",
"psi-cy",
"Izhitsadblgrave-cy",
"izhitsadblgrave-cy",
"uk-cy",
"Uk-cy",
"Zedescender-cy",
"zedescender-cy",
"Esdescender-cy",
"esdescender-cy",
"Ustraight-cy",
"ustraight-cy",
"Palochka-cy",
"Zhebreve-cy",
"zhebreve-cy",
"palochka-cy",
"Abreve-cy",
"abreve-cy",
"Adieresis-cy",
"adieresis-cy",
"Aie-cy",
"aie-cy",
"Iebreve-cy",
"iebreve-cy",
"Schwadieresis-cy",
"schwa-cy",
"schwadieresis-cy",
"Zhedieresis-cy",
"zhedieresis-cy",
"Zedieresis-cy",
"zedieresis-cy",
"Imacron-cy",
"imacron-cy",
"Idieresis-cy",
"idieresis-cy",
"Odieresis-cy",
"odieresis-cy",
"Obarred-cy",
"obarred-cy",
"Obarreddieresis-cy",
"obarreddieresis-cy",
"Edieresis-cy",
"edieresis-cy",
"Umacron-cy",
"umacron-cy",
"Udieresis-cy",
"udieresis-cy",
"Uhungarumlaut-cy",
"uhungarumlaut-cy",
"Chedieresis-cy",
"chedieresis-cy",
"Yerudieresis-cy",
"yerudieresis-cy",
"komide-cy",
Adotbelow,
adotbelow,
Ahookabove,
ahookabove,
Acircumflexacute,
acircumflexacute,
Acircumflexgrave,
acircumflexgrave,
Acircumflexhookabove,
acircumflexhookabove,
Acircumflextilde,
acircumflextilde,
Acircumflexdotbelow,
acircumflexdotbelow,
Abreveacute,
abreveacute,
Abrevegrave,
abrevegrave,
Abrevehookabove,
abrevehookabove,
Abrevetilde,
abrevetilde,
Abrevedotbelow,
abrevedotbelow,
Edotbelow,
edotbelow,
Ehookabove,
ehookabove,
Etilde,
etilde,
Ecircumflexacute,
ecircumflexacute,
Ecircumflexgrave,
ecircumflexgrave,
Ecircumflexhookabove,
ecircumflexhookabove,
Ecircumflextilde,
ecircumflextilde,
Ecircumflexdotbelow,
ecircumflexdotbelow,
Ihookabove,
ihookabove,
Idotbelow,
idotbelow,
Odotbelow,
odotbelow,
Ohookabove,
ohookabove,
Ocircumflexacute,
ocircumflexacute,
Ocircumflexgrave,
ocircumflexgrave,
Ocircumflexhookabove,
ocircumflexhookabove,
Ocircumflextilde,
ocircumflextilde,
Ocircumflexdotbelow,
ocircumflexdotbelow,
Ohornacute,
ohornacute,
Ohorngrave,
ohorngrave,
Ohornhookabove,
ohornhookabove,
Ohorntilde,
ohorntilde,
Ohorndotbelow,
ohorndotbelow,
Udotbelow,
udotbelow,
Uhookabove,
uhookabove,
Uhornacute,
uhornacute,
Uhorngrave,
uhorngrave,
Uhornhookabove,
uhornhookabove,
Uhorntilde,
uhorntilde,
Uhorndotbelow,
uhorndotbelow,
Ydotbelow,
ydotbelow,
Yhookabove,
yhookabove,
Ytilde,
ytilde,
dong,
"Tedescender-cy",
"tedescender-cy",
"Chekhakassian-cy",
"chekhakassian-cy",
"Gedescender-cy",
"gedescender-cy",
"Chedescenderabkhasian-cy",
"chedescenderabkhasian-cy",
"shha-cy",
"Semisoftsign-cy",
"Yat-cy",
"Ghestroke-cy",
"ghestroke-cy",
"Kastroke-cy",
"kastroke-cy",
"Ustraightstroke-cy",
"ustraightstroke-cy",
"Hastroke-cy",
"hastroke-cy",
"reversedze-cy",
franc,
horizontalbar,
two.pnum,
three.pnum,
four.pnum,
five.pnum,
six.pnum,
eight.pnum,
nine.pnum,
zero.pnum,
G_acutecomb.c2sc,
g_acutecomb,
N_gravecomb.c2sc,
n_gravecomb,
A_dblgravecomb.c2sc,
a_dblgravecomb,
E_dblgravecomb.c2sc,
e_dblgravecomb,
I_dblgravecomb.c2sc,
idotless_dblgravecomb,
O_dblgravecomb.c2sc,
o_dblgravecomb,
R_dblgravecomb.c2sc,
r_dblgravecomb,
U_dblgravecomb.c2sc,
u_dblgravecomb,
UpsilonhookSymbol_acutecomb,
B_dotbelowcomb.c2sc,
b_dotbelowcomb,
D_dotbelowcomb.c2sc,
d_dotbelowcomb,
D_uniF6C3.c2sc,
d_uniF6C3,
H_dotbelowcomb.c2sc,
h_dotbelowcomb,
K_acutecomb.c2sc,
k_acutecomb,
K_dotbelowcomb.c2sc,
k_dotbelowcomb,
L_dotbelowcomb.c2sc,
l_dotbelowcomb,
M_dotbelowcomb.c2sc,
m_dotbelowcomb,
N_dotbelowcomb.c2sc,
n_dotbelowcomb,
O_tildecomb_acutecomb.c2sc,
P_acutecomb.c2sc,
p_acutecomb,
R_dotbelowcomb.c2sc,
r_dotbelowcomb,
S_dotbelowcomb.c2sc,
s_dotbelowcomb,
T_dotbelowcomb.c2sc,
t_dotbelowcomb,
U_tildecomb_acutecomb.c2sc,
V_tildecomb.c2sc,
v_tildecomb,
V_dotbelowcomb.c2sc,
v_dotbelowcomb,
W_dotbelowcomb.c2sc,
w_dotbelowcomb,
Z_dotbelowcomb.c2sc,
z_dotbelowcomb,
Omicrondasiaoxia,
Alphatonos.c2sc,
Epsilontonos.c2sc,
Etatonos.c2sc,
Iotatonos.c2sc,
Omicrontonos.c2sc,
Upsilontonos.c2sc,
Omegatonos.c2sc,
Alpha.c2sc,
Beta.c2sc,
Epsilon.c2sc,
Zeta.c2sc,
Eta.c2sc,
Iota.c2sc,
Kappa.c2sc,
Mu.c2sc,
Nu.c2sc,
Omicron.c2sc,
Rho.c2sc,
Tau.c2sc,
Upsilon.c2sc,
Chi.c2sc,
Iotadieresis.c2sc,
Upsilondieresis.c2sc,
"Io-cy.c2sc",
"Gje-cy.c2sc",
"Dze-cy.c2sc",
"I-cy.c2sc",
"Yi-cy.c2sc",
"Je-cy.c2sc",
"Kje-cy.c2sc",
"Ushort-cy.c2sc",
"A-cy.c2sc",
"Ve-cy.c2sc",
"Ge-cy.c2sc",
"Ie-cy.c2sc",
"Iishort-cy.c2sc",
"Em-cy.c2sc",
"En-cy.c2sc",
"O-cy.c2sc",
"Pe-cy.c2sc",
"Er-cy.c2sc",
"Es-cy.c2sc",
"Te-cy.c2sc",
"Ha-cy.c2sc",
"Zedescender-cy.c2sc",
"Endescender-cy.c2sc",
"Esdescender-cy.c2sc",
"Ustraight-cy.c2sc",
"Chedescenderabkhasian-cy.c2sc",
"Imacron-cy.c2sc",
"Umacron-cy.c2sc",
"Ef-cy.c2sc",
IJ.c2sc,
AEacute.c2sc,
Oslashacute.c2sc,
Scommaaccent.c2sc,
Wgrave.c2sc,
Wacute.c2sc,
Wdieresis.c2sc,
Ygrave.c2sc,
Aogonek.locl,
aogonek.locl,
Eogonek.locl,
eogonek.locl,
glyph01291,
glyph01292,
idotbelow.ccmp0
);
},
{
name = "Axis Mappings";
value = {
wght = {
100 = 100;
700 = 700;
};
};
},
{
name = fsType;
value = (
);
},
{
name = "Get Hints From Master";
value = m002;
},
{
name = vendorID;
value = MULT;
},
{
name = familyName;
value = "Mulat Abay";
},
{
name = license;
value = SIL;
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
},
{
Name = Width;
Tag = wdth;
}
);
},
{
name = note;
value = "base on Roboto by google\012\012# adds weight class to fonts, to pass test in gftools check-googlefonts\012font = Glyphs.font\012for m in font.masters:\012	if m.name == 'Thin':\012		m.customParameters['weightClass'] = 100\012	if m.name == 'Thin Italic':\012		m.customParameters['weightClass'] = 100\012	if m.name == 'Bold':\012		m.customParameters['weightClass'] = 700\012	\012\012# auto makes liga for ra-ethiopic and ga-ethiopic\012font = Glyphs.font\012\012for layer in font.selectedLayers:\012	print(layer.parent.name)\012	name = layer.parent.name[:-5]\012	print(name)\012	names = name.split('_')\012	print(names)\012	re = names[0] + '-ethiopic'\012	other = names[1]\012	comp1 = GSComponent(re)\012	comp2 = GSComponent(other)\012	layer.components.append(comp1)\012	layer.components.append(comp2)\012#	gap = 100\012#	layer.components[1].transform = ((\012#                       	1, # x scale factor\012#                        0.0, # x skew factor\012#                        0.0, # y skew factor\012#                        1, # y scale factor\012#                        gap, # x position\012#                        0.0  # y position\012#                        ))\012	\012\012\012# copies all componets across layers, one instance must be open from makkeblue script menju\012\012font = Glyphs.font\012for layer in font.selectedLayers:\012	lyrs = layer.parent.layers\012	regular = lyrs[1]\012	bold = lyrs[0]\012	thin = lyrs[2]\012	CopyLayerToLayer().copyComponentsFromLayerToLayer(regular, bold)\012	CopyLayerToLayer().copyComponentsFromLayerToLayer(regular, thin)\012\012\012\012\012\012\012\012# if needed disable autoalignment and fix bearings\012# dont forgetto set these values, newRSB, newLSB, low, top\012font = Glyphs.font\012	\012newRSB = 60\012newLSB = 60\012low = 0\012top = 133\012for layer in font.selectedLayers:\012#	print(layer.LSB, layer.RSB, layer.parent.name )\012	if (layer.RSB < low):\012		name = layer.parent.name\012		comp = GSComponent(name)\012		isAutoAligned = comp.automaticAlignment\012		print('fix low rsb......: ', name)\012		if isAutoAligned:		\012			for comp in layer.components:\012				comp.setDisableAlignment_(True)\012				print(comp)\012		layer.RSB = newRSB\012		\012	if (layer.LSB < low):\012		name = layer.parent.name\012		comp = GSComponent(name)\012		isAutoAligned = comp.automaticAlignment\012		print('fix low LSB...: ', name)\012		if isAutoAligned:		\012			for comp in layer.components:\012				comp.setDisableAlignment_(True)\012				print(comp)\012		layer.LSB = newLSB	\012		\012	if (layer.LSB > top):\012		name = layer.parent.name\012		comp = GSComponent(name)\012		isAutoAligned = comp.automaticAlignment\012		print('fix top LSB...: ', name)\012		if isAutoAligned:		\012			for comp in layer.components:\012				comp.setDisableAlignment_(True)\012				print(comp)\012		layer.LSB = top\012		\012	if (layer.RSB > top):\012		name = layer.parent.name\012		comp = GSComponent(name)\012		isAutoAligned = comp.automaticAlignment\012		print('fix top RSB...: ', name)\012		if isAutoAligned:		\012			for comp in layer.components:\012				comp.setDisableAlignment_(True)\012				print(comp)\012		layer.RSB = top\012		\012\012						\012		\012# Important Forum answers.\012https://forum.glyphsapp.com/t/font-bakery-hinting-error-message-bit-3-of-head-table/16210\012kedar\012Oct 29\012For anyone having the same issue, here’s the solution summary:\012\012Get gftools 1\012\012Run gftools fix-hinting font-name.ttf\012This will generate a file: font-name.ttf.fix\012\012Discard the font-name.ttf file and rename font-name.ttf.fix to font-name.ttf\012\012To automate this for multiple files, here’s a bash script:\012\012echo \"Fixing Hinting\"\012for font in *.ttf\012do\012	gftools fix-hinting $font;\012	if [ -f \"$font.fix\" ]; then mv \"$font.fix\" $font; fi\012done\012Be sure to be inside the same folder as the *.ttf files to avoid chmod issues.\012\012\012# adds bases and parts\012font = Glyphs.font\012#for layer in font.selectedLayers:\012#	name = layer.parent.name\012#	ucode = layer.parent.unicode\012#	print(name, ucode)\012	\012anchors = ['hu', 'hi', 'haa', 'haa.acute', 'hee', 'he',\012           'ho',  'he.dot', 'he.acute.top', 'he.acute.bottom', 'ho.ring',\012           'hwa',\012           'nose',\012           'neck', 'neck.caps', 'hat', 'hat.caps',\012           'cha', 'cha.caps', 'zha', 'zha.caps',\012           'da', 'da.caps', 'aGl', 'aGl.caps', 'ka', 'ka.caps']\012           \012ethiopics = {\012    \"1200\": \"ha.base\",\012    \"1201\": \"ha.base\",\012    \"1202\": \"ha.base\",\012    \"1203\": \"ha.base\",\012    \"1204\": \"ha.base\",\012    \"1205\": \"ha.base\",\012    \"1206\": \"ha.base\",\012    \"1207\": \"ha.base\",\012    \"1208\": \"la.base\",\012    \"1209\": \"la.base\",\012    \"120a\": \"la.base\",\012    \"120b\": \"la.base\",\012    \"120c\": \"la.base\",\012    \"120d\": \"la.base\",\012    \"120e\": \"la.base\",\012    \"120f\": \"la.base\",\012    \"1210\": \"hha.base\",\012    \"1211\": \"hha.base\",\012    \"1212\": \"hha.base\",\012    \"1213\": \"hha.base\",\012    \"1214\": \"hha.base\",\012    \"1215\": \"hha.base\",\012    \"1216\": \"hha.base\",\012    \"1217\": \"hha.base\",\012    \"1218\": \"ma.base\",\012    \"1219\": \"ma.base\",\012    \"121a\": \"ma.base\",\012    \"121b\": \"ma.base\",\012    \"121c\": \"ma.base\",\012    \"121d\": \"ma.base\",\012    \"121e\": \"ma.base\",\012    \"121f\": \"ma.base\",\012    \"1220\": \"sa.base\",\012    \"1221\": \"sa.base\",\012    \"1222\": \"sa.base\",\012    \"1223\": \"sa.base\",\012    \"1224\": \"sa.base\",\012    \"1225\": \"sa.base\",\012    \"1226\": \"sa.base\",\012    \"1227\": \"sa.base\",\012    \"1228\": \"ra.base\",\012    \"1229\": \"ra.base\",\012    \"122a\": \"ra.base\",\012    \"122b\": \"ra.base\",\012    \"122c\": \"ra.base\",\012    \"122d\": \"na.base\",\012    \"122e\": \"na.base\",\012    \"122f\": \"ra.base\",\012    \"1230\": \"ba.base\",\012    \"1231\": \"ba.base\",\012    \"1232\": \"ba.base\",\012    \"1233\": \"ba.base\",\012    \"1234\": \"ba.base\",\012    \"1235\": \"ba.base\",\012    \"1236\": \"ba.base\",\012    \"1237\": \"ba.base\",\012    \"1238\": \"ba.base\",\012    \"1239\": \"ba.base\",\012    \"123a\": \"ba.base\",\012    \"123b\": \"ba.base\",\012    \"123c\": \"ba.base\",\012    \"123d\": \"ba.base\",\012    \"123e\": \"ba.base\",\012    \"123f\": \"ba.base\",\012    \"1240\": \"wa.base\",\012    \"1241\": \"wa.base\",\012    \"1242\": \"wa.base\",\012    \"1243\": \"wa.base\",\012    \"1244\": \"wa.base\",\012    \"1245\": \"wa.base\",\012    \"1246\": \"wa.base\",\012    \"124b\": \"wa.base\",\012    \"1250\": \"wa.base\",\012    \"1251\": \"wa.base\",\012    \"1252\": \"wa.base\",\012    \"1253\": \"wa.base\",\012    \"1254\": \"wa.base\",\012    \"1255\": \"wa.base\",\012    \"1256\": \"wa.base\",\012    \"125b\": \"wa.base\",\012    \"1260\": \"ba.base\",\012    \"1261\": \"ba.base\",\012    \"1262\": \"ba.base\",\012    \"1263\": \"ba.base\",\012    \"1264\": \"ba.base\",\012    \"1265\": \"ba.base\",\012    \"1266\": \"ba.base\",\012    \"1267\": \"ba.base\",\012    \"1268\": \"ba.base\",\012    \"1269\": \"ba.base\",\012    \"126a\": \"ba.base\",\012    \"126b\": \"ba.base\",\012    \"126c\": \"ba.base\",\012    \"126d\": \"ba.base\",\012    \"126e\": \"ba.base\",\012    \"126f\": \"ba.base\",\012    \"1270\": \"pa.base\",\012    \"1271\": \"pa.base\",\012    \"1272\": \"pa.base\",\012    \"1273\": \"pa.base\",\012    \"1274\": \"pa.base\",\012    \"1275\": \"pa.base\",\012    \"1276\": \"pa.base\",\012    \"1277\": \"pa.base\",\012    \"1278\": \"pa.base\",\012    \"1279\": \"pa.base\",\012    \"127a\": \"pa.base\",\012    \"127b\": \"pa.base\",\012    \"127c\": \"pa.base\",\012    \"127d\": \"pa.base\",\012    \"127e\": \"pa.base\",\012    \"127f\": \"pa.base\",\012    \"1280\": \"ga.base\",\012    \"1281\": \"ga.base\",\012    \"1282\": \"ga.base\",\012    \"1283\": \"ga.base\",\012    \"1284\": \"ga.base\",\012    \"1285\": \"ga.base\",\012    \"1286\": \"na.base\",\012    \"128b\": \"ga.base\",\012    \"1290\": \"ga.base\",\012    \"1291\": \"ga.base\",\012    \"1292\": \"ga.base\",\012    \"1293\": \"ga.base\",\012    \"1294\": \"ga.base\",\012    \"1295\": \"ga.base\",\012    \"1296\": \"na.base\",\012    \"1297\": \"na.base\",\012    \"1298\": \"ga.base\",\012    \"1299\": \"ga.base\",\012    \"129a\": \"ga.base\",\012    \"129b\": \"ga.base\",\012    \"129c\": \"ga.base\",\012    \"129d\": \"ga.base\",\012    \"129e\": \"na.base\",\012    \"129f\": \"na.base\",\012    \"12a0\": \"ba.base\",\012    \"12a1\": \"ba.base\",\012    \"12a2\": \"ba.base\",\012    \"12a3\": \"ba.base\",\012    \"12a4\": \"ba.base\",\012    \"12a5\": \"ba.base\",\012    \"12a6\": \"ba.base\",\012    \"12a7\": \"ba.base\",\012    \"12a8\": \"ba.base\",\012    \"12a9\": \"ba.base\",\012    \"12aa\": \"ba.base\",\012    \"12ab\": \"ba.base\",\012    \"12ac\": \"ba.base\",\012    \"12ad\": \"ba.base\",\012    \"12ae\": \"ba.base\",\012    \"12b3\": \"ba.base\",\012    \"12b8\": \"ba.base\",\012    \"12b9\": \"ba.base\",\012    \"12ba\": \"ba.base\",\012    \"12bb\": \"ba.base\",\012    \"12bc\": \"ba.base\",\012    \"12bd\": \"ba.base\",\012    \"12be\": \"ba.base\",\012    \"12c3\": \"ba.base\",\012    \"12c8\": \"wa.base\",\012    \"12c9\": \"wa.base\",\012    \"12ca\": \"wa.base\",\012    \"12cb\": \"wa.base\",\012    \"12cc\": \"wa.base\",\012    \"12cd\": \"wa.base\",\012    \"12ce\": \"wa.base\",\012    \"12cf\": \"wa.base\",\012    \"12d0\": \"oPh.base\",\012    \"12d1\": \"oPh.base\",\012    \"12d2\": \"oPh.base\",\012    \"12d3\": \"oPh.base\",\012    \"12d4\": \"oPh.base\",\012    \"12d5\": \"oPh.base\",\012    \"12d6\": \"oPh.base\",\012    \"12d8\": \"za.base\",\012    \"12d9\": \"za.base\",\012    \"12da\": \"za.base\",\012    \"12db\": \"za.base\",\012    \"12dc\": \"za.base\",\012    \"12dd\": \"za.base\",\012    \"12de\": \"za.base\",\012    \"12df\": \"za.base\",\012    \"12e0\": \"za.base\",\012    \"12e1\": \"za.base\",\012    \"12e2\": \"za.base\",\012    \"12e3\": \"za.base\",\012    \"12e4\": \"za.base\",\012    \"12e5\": \"za.base\",\012    \"12e6\": \"za.base\",\012    \"12e7\": \"za.base\",\012    \"12e8\": \"ya.base\",\012    \"12e9\": \"ya.base\",\012    \"12ea\": \"ya.base\",\012    \"12eb\": \"ya.base\",\012    \"12ec\": \"ya.base\",\012    \"12ed\": \"ya.base\",\012    \"12ee\": \"ya.base\",\012    \"12ef\": \"ya.base\",\012    \"12f0\": \"ya.base\",\012    \"12f1\": \"ya.base\",\012    \"12f2\": \"ya.base\",\012    \"12f3\": \"ya.base\",\012    \"12f4\": \"ya.base\",\012    \"12f5\": \"ya.base\",\012    \"12f6\": \"ya.base\",\012    \"12f7\": \"ya.base\",\012    \"12f8\": \"ya.base\",\012    \"12f9\": \"ya.base\",\012    \"12fa\": \"ya.base\",\012    \"12fb\": \"ya.base\",\012    \"12fc\": \"ya.base\",\012    \"12fd\": \"ya.base\",\012    \"12fe\": \"ya.base\",\012    \"12ff\": \"ya.base\",\012    \"1300\": \"ya.base\",\012    \"1301\": \"ya.base\",\012    \"1302\": \"ya.base\",\012    \"1303\": \"ya.base\",\012    \"1304\": \"ya.base\",\012    \"1305\": \"ya.base\",\012    \"1306\": \"ya.base\",\012    \"1307\": \"ya.base\",\012    \"1308\": \"ga.base\",\012    \"1309\": \"ga.base\",\012    \"130a\": \"ga.base\",\012    \"130b\": \"ga.base\",\012    \"130c\": \"ga.base\",\012    \"130d\": \"ga.base\",\012    \"130e\": \"ga.base\",\012    \"1313\": \"ga.base\",\012    \"1318\": \"ga.base\",\012    \"1319\": \"ga.base\",\012    \"131a\": \"ga.base\",\012    \"131b\": \"ga.base\",\012    \"131c\": \"ga.base\",\012    \"131d\": \"ga.base\",\012    \"131e\": \"ga.base\",\012    \"131f\": \"ga.base\",\012    \"1320\": \"hha.base\",\012    \"1321\": \"hha.base\",\012    \"1322\": \"hha.base\",\012    \"1323\": \"hha.base\",\012    \"1324\": \"hha.base\",\012    \"1325\": \"hha.base\",\012    \"1326\": \"hha.base\",\012    \"1327\": \"hha.base\",\012    \"1328\": \"hha.base\",\012    \"1329\": \"hha.base\",\012    \"132a\": \"hha.base\",\012    \"132b\": \"hha.base\",\012    \"132c\": \"hha.base\",\012    \"132d\": \"hha.base\",\012    \"132e\": \"hha.base\",\012    \"132f\": \"hha.base\",\012    \"1330\": \"tsa.base\",\012    \"1331\": \"tsa.base\",\012    \"1332\": \"tsa.base\",\012    \"1333\": \"tsa.base\",\012    \"1334\": \"tsa.base\",\012    \"1335\": \"tsa.base\",\012    \"1336\": \"tsa.base\",\012    \"1337\": \"tsa.base\",\012    \"1338\": \"tsa.base\",\012    \"1339\": \"tsa.base\",\012    \"133a\": \"tsa.base\",\012    \"133b\": \"tsa.base\",\012    \"133c\": \"tsa.base\",\012    \"133d\": \"tsa.base\",\012    \"133e\": \"tsa.base\",\012    \"133f\": \"tsa.base\",\012    \"1340\": \"oPh.base\",\012    \"1341\": \"oPh.base\",\012    \"1342\": \"oPh.base\",\012    \"1343\": \"oPh.base\",\012    \"1344\": \"oPh.base\",\012    \"1345\": \"oPh.base\",\012    \"1346\": \"oPh.base\",\012    \"1347\": \"oPh.base\",\012    \"1348\": \"ra.base\",\012    \"1349\": \"ra.base\",\012    \"134a\": \"ra.base\",\012    \"134b\": \"ra.base\",\012    \"134c\": \"ra.base\",\012    \"134d\": \"ra.base\",\012    \"134e\": \"ra.base\",\012    \"134f\": \"ra.base\",\012    \"1350\": \"pa.base\",\012    \"1351\": \"pa.base\",\012    \"1352\": \"pa.base\",\012    \"1353\": \"pa.base\",\012    \"1354\": \"pa.base\",\012    \"1355\": \"pa.base\",\012    \"1356\": \"pa.base\",\012    \"1357\": \"pa.base\",\012}\012\012\012def add_base():\012	for layer in font.selectedLayers:\012		layers = layer.parent.layers\012		for lyr in layers:\012			try:\012				ucode = layer.parent.unicode.lower()\012				base_name = ethiopics[ucode]\012				part = GSComponent(base_name)\012				if len(lyr.components) is 0:\012					lyr.components.append(part)\012					print('added: ', base_name, 'in ', lyr.name)\012				else:\012					print(base_name, ' already in this layer')\012			except:\012				print('error ocurred')\012		\012def cleanup():\012	for layer in font.selectedLayers:\012		layers = layer.parent.layers\012		for lyr in layers:\012			print(\"cleaning \", lyr.name)\012			if lyr.anchors:\012				for i, a in enumerate(lyr.anchors):\012					try:\012						del lyr.anchors[i]\012					except:\012						print(\"no anchor at this index\", i)\012			if lyr.shapes:\012				for i, s in enumerate(lyr.shapes):	\012					try:	\012						del lyr.shapes[i]\012					except:\012						print(\"no shape at this index\", i)\012		 		\012		\012def add_base_cap(cap):\012	cleanup()\012	for layer in font.selectedLayers:\012		layers = layer.parent.layers\012		for lyr in layers:\012			base_name = cap\012			part = GSComponent(base_name)\012			if len(lyr.components) is 0:\012				lyr.components.append(part)\012				print('added: ', base_name, 'in ', lyr.name)\012			\012		\012\012def add_part(part, cap):\012		for layer in font.selectedLayers:\012			layers = layer.parent.layers\012			for lyr in layers:\012				comp = GSComponent(part)\012				key = part\012				if cap:\012					key = key + '.cap'\012				exists = lyr.userData[key]\012				print(exists)\012				if not exists:\012					key = part\012					if cap:\012						key = key + '.cap'\012					exists = lyr.userData[key] = True\012					lyr.components.append(comp)\012					print('added: ', part, 'on ', layer.parent.name, lyr.name)\012				else: \012					print(lyr.components)\012					print(part, ' not added xxxx')\012					\012\012add_part('_smart.hi', True)\012#add_base()\012#add_base_cap('la.base.cap')\012\012	";
}
);
date = "2020-05-19 20:45:52 +0000";
designer = "fasil fikreab";
disablesNiceNames = 1;
familyName = "Mulat Abay";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature sups;\012feature frac;\012feature ordn;\012feature calt;\012feature calt;\012feature calt;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb dblgravecomb gravecomb tildecomb];\012	@CombiningNonTopAccents = [dotbelowcomb];\012	sub [i]' @CombiningTopAccents by [idotless];\012	sub [i]' @CombiningNonTopAccents @CombiningTopAccents by [idotless];\012} ccmp_Other_1;\012";
name = ccmp;
},
{
code = "# BEGIN ITALIC-SHIFT-CASE\012lookup italicShift_case {\012	pos [exclamdown questiondown] <0 100 0 0>;\012	pos [parenleft parenright braceleft braceright bracketleft bracketright] <0 50 0 0>;\012} italicShift_case;\012# END ITALIC-SHIFT-CASE\012";
name = case;
notes = "# BEGIN ITALIC-SHIFT-CASE\012lookup italicShift_case {\012	pos [exclamdown questiondown] <0 100 0 0>;\012	pos [parenleft parenright braceleft braceright bracketleft bracketright] <0 50 0 0>;\012} italicShift_case;\012# END ITALIC-SHIFT-CASE\012";
},
{
automatic = 1;
code = "sub two by twosuperior;\012sub three by threesuperior;\012sub one by onesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
code = "# after abesha period, capitalize\012sub period-ethiopic space @Ethsmall' by @Ethcap;\012# after english period, capitalize\012sub period space @Ethsmall' by @Ethcap;\012# when 4 to 8 spaces, capitalize\012sub space space space space @Ethsmall' by @Ethcap;\012sub space space space space space @Ethsmall' by @Ethcap;\012sub space space space space space space @Ethsmall' by @Ethcap;\012sub space space space space space space space @Ethsmall' by @Ethcap;\012sub space space space space space space space space @Ethsmall' by @Ethcap;\012\012\012\012\012#sub period-ethiopic space hu-ethiopic' by hu-ethiopic.liga;\012#sub period-ethiopic space hi-ethiopic' by hi-ethiopic.liga;\012#sub period-ethiopic space haa-ethiopic' by haa-ethiopic.liga;\012#sub period-ethiopic space hee-ethiopic' by hee-ethiopic.liga;\012#sub period-ethiopic space he-ethiopic' by he-ethiopic.liga;\012#sub period-ethiopic space ho-ethiopic' by ho-ethiopic.liga;\012#sub period-ethiopic space hoa-ethiopic' by hoa-ethiopic.liga;\012#sub period-ethiopic space la-ethiopic' by la-ethiopic.liga;\012#sub period-ethiopic space lu-ethiopic' by lu-ethiopic.liga;\012#sub period-ethiopic space li-ethiopic' by li-ethiopic.liga;\012#sub period-ethiopic space laa-ethiopic' by laa-ethiopic.liga;\012#sub period-ethiopic space lee-ethiopic' by lee-ethiopic.liga;\012#sub period-ethiopic space le-ethiopic' by le-ethiopic.liga;\012#sub period-ethiopic space lo-ethiopic' by lo-ethiopic.liga;\012#sub period-ethiopic space lwa-ethiopic' by lwa-ethiopic.liga;\012#sub period-ethiopic space hha-ethiopic' by hha-ethiopic.liga;\012#sub period-ethiopic space hhu-ethiopic' by hhu-ethiopic.liga;\012#sub period-ethiopic space hhi-ethiopic' by hhi-ethiopic.liga;\012#sub period-ethiopic space hhaa-ethiopic' by hhaa-ethiopic.liga;\012#sub period-ethiopic space hhee-ethiopic' by hhee-ethiopic.liga;\012#sub period-ethiopic space hhe-ethiopic' by hhe-ethiopic.liga;\012#sub period-ethiopic space hho-ethiopic' by hho-ethiopic.liga;\012#sub period-ethiopic space hhwa-ethiopic' by hhwa-ethiopic.liga;\012#sub period-ethiopic space ma-ethiopic' by ma-ethiopic.liga;\012#sub period-ethiopic space mu-ethiopic' by mu-ethiopic.liga;\012#sub period-ethiopic space mi-ethiopic' by mi-ethiopic.liga;\012#sub period-ethiopic space maa-ethiopic' by maa-ethiopic.liga;\012#sub period-ethiopic space mee-ethiopic' by mee-ethiopic.liga;\012#sub period-ethiopic space me-ethiopic' by me-ethiopic.liga;\012#sub period-ethiopic space mo-ethiopic' by mo-ethiopic.liga;\012#sub period-ethiopic space mwa-ethiopic' by mwa-ethiopic.liga;\012#sub period-ethiopic space sza-ethiopic' by sza-ethiopic.liga;\012#sub period-ethiopic space szu-ethiopic' by szu-ethiopic.liga;\012#sub period-ethiopic space szi-ethiopic' by szi-ethiopic.liga;\012#sub period-ethiopic space szaa-ethiopic' by szaa-ethiopic.liga;\012#sub period-ethiopic space szee-ethiopic' by szee-ethiopic.liga;\012#sub period-ethiopic space sze-ethiopic' by sze-ethiopic.liga;\012#sub period-ethiopic space szo-ethiopic' by szo-ethiopic.liga;\012#sub period-ethiopic space szwa-ethiopic' by szwa-ethiopic.liga;\012#sub period-ethiopic space ra-ethiopic' by ra-ethiopic.liga;\012#sub period-ethiopic space ru-ethiopic' by ru-ethiopic.liga;\012#sub period-ethiopic space ri-ethiopic' by ri-ethiopic.liga;\012#sub period-ethiopic space raa-ethiopic' by raa-ethiopic.liga;\012#sub period-ethiopic space ree-ethiopic' by ree-ethiopic.liga;\012#sub period-ethiopic space re-ethiopic' by re-ethiopic.liga;\012#sub period-ethiopic space ro-ethiopic' by ro-ethiopic.liga;\012#sub period-ethiopic space rwa-ethiopic' by rwa-ethiopic.liga;\012#sub period-ethiopic space sa-ethiopic' by sa-ethiopic.liga;\012#sub period-ethiopic space su-ethiopic' by su-ethiopic.liga;\012#sub period-ethiopic space si-ethiopic' by si-ethiopic.liga;\012#sub period-ethiopic space saa-ethiopic' by saa-ethiopic.liga;\012#sub period-ethiopic space see-ethiopic' by see-ethiopic.liga;\012#sub period-ethiopic space se-ethiopic' by se-ethiopic.liga;\012#sub period-ethiopic space so-ethiopic' by so-ethiopic.liga;\012#sub period-ethiopic space swa-ethiopic' by swa-ethiopic.liga;\012#sub period-ethiopic space sha-ethiopic' by sha-ethiopic.liga;\012#sub period-ethiopic space shu-ethiopic' by shu-ethiopic.liga;\012#sub period-ethiopic space shi-ethiopic' by shi-ethiopic.liga;\012#sub period-ethiopic space shaa-ethiopic' by shaa-ethiopic.liga;\012#sub period-ethiopic space shee-ethiopic' by shee-ethiopic.liga;\012#sub period-ethiopic space she-ethiopic' by she-ethiopic.liga;\012#sub period-ethiopic space sho-ethiopic' by sho-ethiopic.liga;\012#sub period-ethiopic space shwa-ethiopic' by shwa-ethiopic.liga;\012#sub period-ethiopic space qa-ethiopic' by qa-ethiopic.liga;\012#sub period-ethiopic space qu-ethiopic' by qu-ethiopic.liga;\012#sub period-ethiopic space qi-ethiopic' by qi-ethiopic.liga;\012#sub period-ethiopic space qaa-ethiopic' by qaa-ethiopic.liga;\012#sub period-ethiopic space qee-ethiopic' by qee-ethiopic.liga;\012#sub period-ethiopic space qe-ethiopic' by qe-ethiopic.liga;\012#sub period-ethiopic space qo-ethiopic' by qo-ethiopic.liga;\012##sub period-ethiopic space qwaa-ethiopic' by qwaa-ethiopic.liga;\012#sub period-ethiopic space qha-ethiopic' by qha-ethiopic.liga;\012#sub period-ethiopic space qhu-ethiopic' by qhu-ethiopic.liga;\012#sub period-ethiopic space qhi-ethiopic' by qhi-ethiopic.liga;\012#sub period-ethiopic space qhaa-ethiopic' by qhaa-ethiopic.liga;\012#sub period-ethiopic space qhee-ethiopic' by qhee-ethiopic.liga;\012#sub period-ethiopic space qhe-ethiopic' by qhe-ethiopic.liga;\012#sub period-ethiopic space qho-ethiopic' by qho-ethiopic.liga;\012#sub period-ethiopic space qhwaa-ethiopic' by qhwaa-ethiopic.liga;\012#sub period-ethiopic space ba-ethiopic' by ba-ethiopic.liga;\012#sub period-ethiopic space bu-ethiopic' by bu-ethiopic.liga;\012#sub period-ethiopic space bi-ethiopic' by bi-ethiopic.liga;\012#sub period-ethiopic space baa-ethiopic' by baa-ethiopic.liga;\012#sub period-ethiopic space bee-ethiopic' by bee-ethiopic.liga;\012#sub period-ethiopic space be-ethiopic' by be-ethiopic.liga;\012#sub period-ethiopic space bo-ethiopic' by bo-ethiopic.liga;\012#sub period-ethiopic space bwa-ethiopic' by bwa-ethiopic.liga;\012#sub period-ethiopic space va-ethiopic' by va-ethiopic.liga;\012#sub period-ethiopic space vu-ethiopic' by vu-ethiopic.liga;\012#sub period-ethiopic space vi-ethiopic' by vi-ethiopic.liga;\012#sub period-ethiopic space vaa-ethiopic' by vaa-ethiopic.liga;\012#sub period-ethiopic space vee-ethiopic' by vee-ethiopic.liga;\012#sub period-ethiopic space ve-ethiopic' by ve-ethiopic.liga;\012#sub period-ethiopic space vo-ethiopic' by vo-ethiopic.liga;\012#sub period-ethiopic space vwa-ethiopic' by vwa-ethiopic.liga;\012#sub period-ethiopic space ta-ethiopic' by ta-ethiopic.liga;\012#sub period-ethiopic space tu-ethiopic' by tu-ethiopic.liga;\012#sub period-ethiopic space ti-ethiopic' by ti-ethiopic.liga;\012#sub period-ethiopic space taa-ethiopic' by taa-ethiopic.liga;\012#sub period-ethiopic space tee-ethiopic' by tee-ethiopic.liga;\012#sub period-ethiopic space te-ethiopic' by te-ethiopic.liga;\012#sub period-ethiopic space to-ethiopic' by to-ethiopic.liga;\012#sub period-ethiopic space twa-ethiopic' by twa-ethiopic.liga;\012#sub period-ethiopic space ca-ethiopic' by ca-ethiopic.liga;\012#sub period-ethiopic space cu-ethiopic' by cu-ethiopic.liga;\012#sub period-ethiopic space ci-ethiopic' by ci-ethiopic.liga;\012#sub period-ethiopic space caa-ethiopic' by caa-ethiopic.liga;\012#sub period-ethiopic space cee-ethiopic' by cee-ethiopic.liga;\012#sub period-ethiopic space ce-ethiopic' by ce-ethiopic.liga;\012#sub period-ethiopic space co-ethiopic' by co-ethiopic.liga;\012#sub period-ethiopic space cwa-ethiopic' by cwa-ethiopic.liga;\012#sub period-ethiopic space xa-ethiopic' by xa-ethiopic.liga;\012#sub period-ethiopic space xu-ethiopic' by xu-ethiopic.liga;\012#sub period-ethiopic space xi-ethiopic' by xi-ethiopic.liga;\012#sub period-ethiopic space xaa-ethiopic' by xaa-ethiopic.liga;\012#sub period-ethiopic space xee-ethiopic' by xee-ethiopic.liga;\012#sub period-ethiopic space xe-ethiopic' by xe-ethiopic.liga;\012#sub period-ethiopic space xo-ethiopic' by xo-ethiopic.liga;\012#sub period-ethiopic space xwaa-ethiopic' by xwaa-ethiopic.liga;\012#sub period-ethiopic space na-ethiopic' by na-ethiopic.liga;\012#sub period-ethiopic space nu-ethiopic' by nu-ethiopic.liga;\012#sub period-ethiopic space ni-ethiopic' by ni-ethiopic.liga;\012#sub period-ethiopic space naa-ethiopic' by naa-ethiopic.liga;\012#sub period-ethiopic space nee-ethiopic' by nee-ethiopic.liga;\012#sub period-ethiopic space ne-ethiopic' by ne-ethiopic.liga;\012#sub period-ethiopic space no-ethiopic' by no-ethiopic.liga;\012#sub period-ethiopic space nwa-ethiopic' by nwa-ethiopic.liga;\012#sub period-ethiopic space nya-ethiopic' by nya-ethiopic.liga;\012#sub period-ethiopic space nyu-ethiopic' by nyu-ethiopic.liga;\012#sub period-ethiopic space nyi-ethiopic' by nyi-ethiopic.liga;\012#sub period-ethiopic space nyaa-ethiopic' by nyaa-ethiopic.liga;\012#sub period-ethiopic space nyee-ethiopic' by nyee-ethiopic.liga;\012#sub period-ethiopic space nye-ethiopic' by nye-ethiopic.liga;\012#sub period-ethiopic space nyo-ethiopic' by nyo-ethiopic.liga;\012#sub period-ethiopic space nywa-ethiopic' by nywa-ethiopic.liga;\012#sub period-ethiopic space aGlottal-ethiopic' by aGlottal-ethiopic.liga;\012#sub period-ethiopic space uGlottal-ethiopic' by uGlottal-ethiopic.liga;\012#sub period-ethiopic space iGlottal-ethiopic' by iGlottal-ethiopic.liga;\012#sub period-ethiopic space aaGlottal-ethiopic' by aaGlottal-ethiopic.liga;\012#sub period-ethiopic space eeGlottal-ethiopic' by eeGlottal-ethiopic.liga;\012#sub period-ethiopic space eGlottal-ethiopic' by eGlottal-ethiopic.liga;\012#sub period-ethiopic space oGlottal-ethiopic' by oGlottal-ethiopic.liga;\012#sub period-ethiopic space waGlottal-ethiopic' by waGlottal-ethiopic.liga;\012#sub period-ethiopic space ka-ethiopic' by ka-ethiopic.liga;\012#sub period-ethiopic space ku-ethiopic' by ku-ethiopic.liga;\012#sub period-ethiopic space ki-ethiopic' by ki-ethiopic.liga;\012#sub period-ethiopic space kaa-ethiopic' by kaa-ethiopic.liga;\012#sub period-ethiopic space kee-ethiopic' by kee-ethiopic.liga;\012#sub period-ethiopic space ke-ethiopic' by ke-ethiopic.liga;\012#sub period-ethiopic space ko-ethiopic' by ko-ethiopic.liga;\012#sub period-ethiopic space kwaa-ethiopic' by kwaa-ethiopic.liga;\012#sub period-ethiopic space kxa-ethiopic' by kxa-ethiopic.liga;\012#sub period-ethiopic space kxu-ethiopic' by kxu-ethiopic.liga;\012#sub period-ethiopic space kxi-ethiopic' by kxi-ethiopic.liga;\012#sub period-ethiopic space kxaa-ethiopic' by kxaa-ethiopic.liga;\012#sub period-ethiopic space kxee-ethiopic' by kxee-ethiopic.liga;\012#sub period-ethiopic space kxe-ethiopic' by kxe-ethiopic.liga;\012#sub period-ethiopic space kxo-ethiopic' by kxo-ethiopic.liga;\012#sub period-ethiopic space kxwaa-ethiopic' by kxwaa-ethiopic.liga;\012#sub period-ethiopic space wa-ethiopic' by wa-ethiopic.liga;\012#sub period-ethiopic space wu-ethiopic' by wu-ethiopic.liga;\012#sub period-ethiopic space wi-ethiopic' by wi-ethiopic.liga;\012#sub period-ethiopic space waa-ethiopic' by waa-ethiopic.liga;\012#sub period-ethiopic space wee-ethiopic' by wee-ethiopic.liga;\012#sub period-ethiopic space we-ethiopic' by we-ethiopic.liga;\012#sub period-ethiopic space wo-ethiopic' by wo-ethiopic.liga;\012#sub period-ethiopic space woa-ethiopic' by woa-ethiopic.liga;\012#sub period-ethiopic space aPharyngeal-ethiopic' by aPharyngeal-ethiopic.liga;\012#sub period-ethiopic space uPharyngeal-ethiopic' by uPharyngeal-ethiopic.liga;\012#sub period-ethiopic space iPharyngeal-ethiopic' by iPharyngeal-ethiopic.liga;\012#sub period-ethiopic space aaPharyngeal-ethiopic' by aaPharyngeal-ethiopic.liga;\012#sub period-ethiopic space eePharyngeal-ethiopic' by eePharyngeal-ethiopic.liga;\012#sub period-ethiopic space ePharyngeal-ethiopic' by ePharyngeal-ethiopic.liga;\012#sub period-ethiopic space oPharyngeal-ethiopic' by oPharyngeal-ethiopic.liga;\012#sub period-ethiopic space za-ethiopic' by za-ethiopic.liga;\012#sub period-ethiopic space zu-ethiopic' by zu-ethiopic.liga;\012#sub period-ethiopic space zi-ethiopic' by zi-ethiopic.liga;\012#sub period-ethiopic space zaa-ethiopic' by zaa-ethiopic.liga;\012#sub period-ethiopic space zee-ethiopic' by zee-ethiopic.liga;\012#sub period-ethiopic space ze-ethiopic' by ze-ethiopic.liga;\012#sub period-ethiopic space zo-ethiopic' by zo-ethiopic.liga;\012#sub period-ethiopic space zwa-ethiopic' by zwa-ethiopic.liga;\012#sub period-ethiopic space zha-ethiopic' by zha-ethiopic.liga;\012#sub period-ethiopic space zhu-ethiopic' by zhu-ethiopic.liga;\012#sub period-ethiopic space zhi-ethiopic' by zhi-ethiopic.liga;\012#sub period-ethiopic space zhaa-ethiopic' by zhaa-ethiopic.liga;\012#sub period-ethiopic space zhee-ethiopic' by zhee-ethiopic.liga;\012#sub period-ethiopic space zhe-ethiopic' by zhe-ethiopic.liga;\012#sub period-ethiopic space zho-ethiopic' by zho-ethiopic.liga;\012#sub period-ethiopic space zhwa-ethiopic' by zhwa-ethiopic.liga;\012#sub period-ethiopic space ya-ethiopic' by ya-ethiopic.liga;\012#sub period-ethiopic space yu-ethiopic' by yu-ethiopic.liga;\012#sub period-ethiopic space yi-ethiopic' by yi-ethiopic.liga;\012#sub period-ethiopic space yaa-ethiopic' by yaa-ethiopic.liga;\012#sub period-ethiopic space yee-ethiopic' by yee-ethiopic.liga;\012#sub period-ethiopic space ye-ethiopic' by ye-ethiopic.liga;\012#sub period-ethiopic space yo-ethiopic' by yo-ethiopic.liga;\012#sub period-ethiopic space yoa-ethiopic' by yoa-ethiopic.liga;\012#sub period-ethiopic space da-ethiopic' by da-ethiopic.liga;\012#sub period-ethiopic space du-ethiopic' by du-ethiopic.liga;\012#sub period-ethiopic space di-ethiopic' by di-ethiopic.liga;\012#sub period-ethiopic space daa-ethiopic' by daa-ethiopic.liga;\012#sub period-ethiopic space dee-ethiopic' by dee-ethiopic.liga;\012#sub period-ethiopic space de-ethiopic' by de-ethiopic.liga;\012#sub period-ethiopic space do-ethiopic' by do-ethiopic.liga;\012#sub period-ethiopic space dwa-ethiopic' by dwa-ethiopic.liga;\012#sub period-ethiopic space dda-ethiopic' by dda-ethiopic.liga;\012#sub period-ethiopic space ddu-ethiopic' by ddu-ethiopic.liga;\012#sub period-ethiopic space ddi-ethiopic' by ddi-ethiopic.liga;\012#sub period-ethiopic space ddaa-ethiopic' by ddaa-ethiopic.liga;\012#sub period-ethiopic space ddee-ethiopic' by ddee-ethiopic.liga;\012#sub period-ethiopic space dde-ethiopic' by dde-ethiopic.liga;\012#sub period-ethiopic space ddo-ethiopic' by ddo-ethiopic.liga;\012#sub period-ethiopic space ddwa-ethiopic' by ddwa-ethiopic.liga;\012#sub period-ethiopic space ja-ethiopic' by ja-ethiopic.liga;\012#sub period-ethiopic space ju-ethiopic' by ju-ethiopic.liga;\012#sub period-ethiopic space ji-ethiopic' by ji-ethiopic.liga;\012#sub period-ethiopic space jaa-ethiopic' by jaa-ethiopic.liga;\012#sub period-ethiopic space jee-ethiopic' by jee-ethiopic.liga;\012#sub period-ethiopic space je-ethiopic' by je-ethiopic.liga;\012#sub period-ethiopic space jo-ethiopic' by jo-ethiopic.liga;\012#sub period-ethiopic space jwa-ethiopic' by jwa-ethiopic.liga;\012#sub period-ethiopic space ga-ethiopic' by ga-ethiopic.liga;\012#sub period-ethiopic space gu-ethiopic' by gu-ethiopic.liga;\012#sub period-ethiopic space gi-ethiopic' by gi-ethiopic.liga;\012#sub period-ethiopic space gaa-ethiopic' by gaa-ethiopic.liga;\012#sub period-ethiopic space gee-ethiopic' by gee-ethiopic.liga;\012#sub period-ethiopic space ge-ethiopic' by ge-ethiopic.liga;\012#sub period-ethiopic space go-ethiopic' by go-ethiopic.liga;\012#sub period-ethiopic space gwaa-ethiopic' by gwaa-ethiopic.liga;\012#sub period-ethiopic space gga-ethiopic' by gga-ethiopic.liga;\012#sub period-ethiopic space ggu-ethiopic' by ggu-ethiopic.liga;\012#sub period-ethiopic space ggi-ethiopic' by ggi-ethiopic.liga;\012#sub period-ethiopic space ggaa-ethiopic' by ggaa-ethiopic.liga;\012#sub period-ethiopic space ggee-ethiopic' by ggee-ethiopic.liga;\012#sub period-ethiopic space gge-ethiopic' by gge-ethiopic.liga;\012#sub period-ethiopic space ggo-ethiopic' by ggo-ethiopic.liga;\012#sub period-ethiopic space ggwaa-ethiopic' by ggwaa-ethiopic.liga;\012#sub period-ethiopic space tha-ethiopic' by tha-ethiopic.liga;\012#sub period-ethiopic space thu-ethiopic' by thu-ethiopic.liga;\012#sub period-ethiopic space thi-ethiopic' by thi-ethiopic.liga;\012#sub period-ethiopic space thaa-ethiopic' by thaa-ethiopic.liga;\012#sub period-ethiopic space thee-ethiopic' by thee-ethiopic.liga;\012#sub period-ethiopic space the-ethiopic' by the-ethiopic.liga;\012#sub period-ethiopic space tho-ethiopic' by tho-ethiopic.liga;\012#sub period-ethiopic space thwa-ethiopic' by thwa-ethiopic.liga;\012#sub period-ethiopic space cha-ethiopic' by cha-ethiopic.liga;\012#sub period-ethiopic space chu-ethiopic' by chu-ethiopic.liga;\012#sub period-ethiopic space chi-ethiopic' by chi-ethiopic.liga;\012#sub period-ethiopic space chaa-ethiopic' by chaa-ethiopic.liga;\012#sub period-ethiopic space chee-ethiopic' by chee-ethiopic.liga;\012#sub period-ethiopic space che-ethiopic' by che-ethiopic.liga;\012#sub period-ethiopic space cho-ethiopic' by cho-ethiopic.liga;\012#sub period-ethiopic space chwa-ethiopic' by chwa-ethiopic.liga;\012#sub period-ethiopic space pha-ethiopic' by pha-ethiopic.liga;\012#sub period-ethiopic space phu-ethiopic' by phu-ethiopic.liga;\012#sub period-ethiopic space phi-ethiopic' by phi-ethiopic.liga;\012#sub period-ethiopic space phaa-ethiopic' by phaa-ethiopic.liga;\012#sub period-ethiopic space phee-ethiopic' by phee-ethiopic.liga;\012#sub period-ethiopic space phe-ethiopic' by phe-ethiopic.liga;\012#sub period-ethiopic space pho-ethiopic' by pho-ethiopic.liga;\012#sub period-ethiopic space phwa-ethiopic' by phwa-ethiopic.liga;\012#sub period-ethiopic space tsa-ethiopic' by tsa-ethiopic.liga;\012#sub period-ethiopic space tsu-ethiopic' by tsu-ethiopic.liga;\012#sub period-ethiopic space tsi-ethiopic' by tsi-ethiopic.liga;\012#sub period-ethiopic space tsaa-ethiopic' by tsaa-ethiopic.liga;\012#sub period-ethiopic space tsee-ethiopic' by tsee-ethiopic.liga;\012#sub period-ethiopic space tse-ethiopic' by tse-ethiopic.liga;\012#sub period-ethiopic space tso-ethiopic' by tso-ethiopic.liga;\012#sub period-ethiopic space tswa-ethiopic' by tswa-ethiopic.liga;\012#sub period-ethiopic space tza-ethiopic' by tza-ethiopic.liga;\012#sub period-ethiopic space tzu-ethiopic' by tzu-ethiopic.liga;\012#sub period-ethiopic space tzi-ethiopic' by tzi-ethiopic.liga;\012#sub period-ethiopic space tzaa-ethiopic' by tzaa-ethiopic.liga;\012#sub period-ethiopic space tzee-ethiopic' by tzee-ethiopic.liga;\012#sub period-ethiopic space tze-ethiopic' by tze-ethiopic.liga;\012#sub period-ethiopic space tzo-ethiopic' by tzo-ethiopic.liga;\012#sub period-ethiopic space tzoa-ethiopic' by tzoa-ethiopic.liga;\012#sub period-ethiopic space fa-ethiopic' by fa-ethiopic.liga;\012#sub period-ethiopic space fu-ethiopic' by fu-ethiopic.liga;\012#sub period-ethiopic space fi-ethiopic' by fi-ethiopic.liga;\012#sub period-ethiopic space faa-ethiopic' by faa-ethiopic.liga;\012#sub period-ethiopic space fee-ethiopic' by fee-ethiopic.liga;\012#sub period-ethiopic space fe-ethiopic' by fe-ethiopic.liga;\012#sub period-ethiopic space fo-ethiopic' by fo-ethiopic.liga;\012#sub period-ethiopic space fwa-ethiopic' by fwa-ethiopic.liga;\012#sub period-ethiopic space pa-ethiopic' by pa-ethiopic.liga;\012#sub period-ethiopic space pu-ethiopic' by pu-ethiopic.liga;\012#sub period-ethiopic space pi-ethiopic' by pi-ethiopic.liga;\012#sub period-ethiopic space paa-ethiopic' by paa-ethiopic.liga;\012#sub period-ethiopic space pee-ethiopic' by pee-ethiopic.liga;\012#sub period-ethiopic space pe-ethiopic' by pe-ethiopic.liga;\012#sub period-ethiopic space po-ethiopic' by po-ethiopic.liga;\012#sub period-ethiopic space pwa-ethiopic' by pwa-ethiopic.liga;\012";
name = calt;
notes = "name: ethperiodCap";
},
{
code = "sub slash ha-ethiopic by ha-ethiopic.liga;\012sub slash hu-ethiopic by hu-ethiopic.liga;\012sub slash hi-ethiopic by hi-ethiopic.liga;\012sub slash haa-ethiopic by haa-ethiopic.liga;\012sub slash hee-ethiopic by hee-ethiopic.liga;\012sub slash he-ethiopic by he-ethiopic.liga;\012sub slash ho-ethiopic by ho-ethiopic.liga;\012sub slash hoa-ethiopic by hoa-ethiopic.liga;\012sub slash la-ethiopic by la-ethiopic.liga;\012sub slash lu-ethiopic by lu-ethiopic.liga;\012sub slash li-ethiopic by li-ethiopic.liga;\012sub slash laa-ethiopic by laa-ethiopic.liga;\012sub slash lee-ethiopic by lee-ethiopic.liga;\012sub slash le-ethiopic by le-ethiopic.liga;\012sub slash lo-ethiopic by lo-ethiopic.liga;\012sub slash lwa-ethiopic by lwa-ethiopic.liga;\012sub slash hha-ethiopic by hha-ethiopic.liga;\012sub slash hhu-ethiopic by hhu-ethiopic.liga;\012sub slash hhi-ethiopic by hhi-ethiopic.liga;\012sub slash hhaa-ethiopic by hhaa-ethiopic.liga;\012sub slash hhee-ethiopic by hhee-ethiopic.liga;\012sub slash hhe-ethiopic by hhe-ethiopic.liga;\012sub slash hho-ethiopic by hho-ethiopic.liga;\012sub slash hhwa-ethiopic by hhwa-ethiopic.liga;\012sub slash ma-ethiopic by ma-ethiopic.liga;\012sub slash mu-ethiopic by mu-ethiopic.liga;\012sub slash mi-ethiopic by mi-ethiopic.liga;\012sub slash maa-ethiopic by maa-ethiopic.liga;\012sub slash mee-ethiopic by mee-ethiopic.liga;\012sub slash me-ethiopic by me-ethiopic.liga;\012sub slash mo-ethiopic by mo-ethiopic.liga;\012sub slash mwa-ethiopic by mwa-ethiopic.liga;\012sub slash sza-ethiopic by sza-ethiopic.liga;\012sub slash szu-ethiopic by szu-ethiopic.liga;\012sub slash szi-ethiopic by szi-ethiopic.liga;\012sub slash szaa-ethiopic by szaa-ethiopic.liga;\012sub slash szee-ethiopic by szee-ethiopic.liga;\012sub slash sze-ethiopic by sze-ethiopic.liga;\012sub slash szo-ethiopic by szo-ethiopic.liga;\012sub slash szwa-ethiopic by szwa-ethiopic.liga;\012sub slash ra-ethiopic by ra-ethiopic.liga;\012sub slash ru-ethiopic by ru-ethiopic.liga;\012sub slash ri-ethiopic by ri-ethiopic.liga;\012sub slash raa-ethiopic by raa-ethiopic.liga;\012sub slash ree-ethiopic by ree-ethiopic.liga;\012sub slash re-ethiopic by re-ethiopic.liga;\012sub slash ro-ethiopic by ro-ethiopic.liga;\012sub slash rwa-ethiopic by rwa-ethiopic.liga;\012sub slash sa-ethiopic by sa-ethiopic.liga;\012sub slash su-ethiopic by su-ethiopic.liga;\012sub slash si-ethiopic by si-ethiopic.liga;\012sub slash saa-ethiopic by saa-ethiopic.liga;\012sub slash see-ethiopic by see-ethiopic.liga;\012sub slash se-ethiopic by se-ethiopic.liga;\012sub slash so-ethiopic by so-ethiopic.liga;\012sub slash swa-ethiopic by swa-ethiopic.liga;\012sub slash sha-ethiopic by sha-ethiopic.liga;\012sub slash shu-ethiopic by shu-ethiopic.liga;\012sub slash shi-ethiopic by shi-ethiopic.liga;\012sub slash shaa-ethiopic by shaa-ethiopic.liga;\012sub slash shee-ethiopic by shee-ethiopic.liga;\012sub slash she-ethiopic by she-ethiopic.liga;\012sub slash sho-ethiopic by sho-ethiopic.liga;\012sub slash shwa-ethiopic by shwa-ethiopic.liga;\012sub slash qa-ethiopic by qa-ethiopic.liga;\012sub slash qu-ethiopic by qu-ethiopic.liga;\012sub slash qi-ethiopic by qi-ethiopic.liga;\012sub slash qaa-ethiopic by qaa-ethiopic.liga;\012sub slash qee-ethiopic by qee-ethiopic.liga;\012sub slash qe-ethiopic by qe-ethiopic.liga;\012sub slash qo-ethiopic by qo-ethiopic.liga;\012#sub slash qwaa-ethiopic by qwaa-ethiopic.liga;\012sub slash qha-ethiopic by qha-ethiopic.liga;\012sub slash qhu-ethiopic by qhu-ethiopic.liga;\012sub slash qhi-ethiopic by qhi-ethiopic.liga;\012sub slash qhaa-ethiopic by qhaa-ethiopic.liga;\012sub slash qhee-ethiopic by qhee-ethiopic.liga;\012sub slash qhe-ethiopic by qhe-ethiopic.liga;\012sub slash qho-ethiopic by qho-ethiopic.liga;\012sub slash qhwaa-ethiopic by qhwaa-ethiopic.liga;\012sub slash ba-ethiopic by ba-ethiopic.liga;\012sub slash bu-ethiopic by bu-ethiopic.liga;\012sub slash bi-ethiopic by bi-ethiopic.liga;\012sub slash baa-ethiopic by baa-ethiopic.liga;\012sub slash bee-ethiopic by bee-ethiopic.liga;\012sub slash be-ethiopic by be-ethiopic.liga;\012sub slash bo-ethiopic by bo-ethiopic.liga;\012sub slash bwa-ethiopic by bwa-ethiopic.liga;\012sub slash va-ethiopic by va-ethiopic.liga;\012sub slash vu-ethiopic by vu-ethiopic.liga;\012sub slash vi-ethiopic by vi-ethiopic.liga;\012sub slash vaa-ethiopic by vaa-ethiopic.liga;\012sub slash vee-ethiopic by vee-ethiopic.liga;\012sub slash ve-ethiopic by ve-ethiopic.liga;\012sub slash vo-ethiopic by vo-ethiopic.liga;\012sub slash vwa-ethiopic by vwa-ethiopic.liga;\012sub slash ta-ethiopic by ta-ethiopic.liga;\012sub slash tu-ethiopic by tu-ethiopic.liga;\012sub slash ti-ethiopic by ti-ethiopic.liga;\012sub slash taa-ethiopic by taa-ethiopic.liga;\012sub slash tee-ethiopic by tee-ethiopic.liga;\012sub slash te-ethiopic by te-ethiopic.liga;\012sub slash to-ethiopic by to-ethiopic.liga;\012sub slash twa-ethiopic by twa-ethiopic.liga;\012sub slash ca-ethiopic by ca-ethiopic.liga;\012sub slash cu-ethiopic by cu-ethiopic.liga;\012sub slash ci-ethiopic by ci-ethiopic.liga;\012sub slash caa-ethiopic by caa-ethiopic.liga;\012sub slash cee-ethiopic by cee-ethiopic.liga;\012sub slash ce-ethiopic by ce-ethiopic.liga;\012sub slash co-ethiopic by co-ethiopic.liga;\012sub slash cwa-ethiopic by cwa-ethiopic.liga;\012sub slash xa-ethiopic by xa-ethiopic.liga;\012sub slash xu-ethiopic by xu-ethiopic.liga;\012sub slash xi-ethiopic by xi-ethiopic.liga;\012sub slash xaa-ethiopic by xaa-ethiopic.liga;\012sub slash xee-ethiopic by xee-ethiopic.liga;\012sub slash xe-ethiopic by xe-ethiopic.liga;\012sub slash xo-ethiopic by xo-ethiopic.liga;\012sub slash xwaa-ethiopic by xwaa-ethiopic.liga;\012sub slash na-ethiopic by na-ethiopic.liga;\012sub slash nu-ethiopic by nu-ethiopic.liga;\012sub slash ni-ethiopic by ni-ethiopic.liga;\012sub slash naa-ethiopic by naa-ethiopic.liga;\012sub slash nee-ethiopic by nee-ethiopic.liga;\012sub slash ne-ethiopic by ne-ethiopic.liga;\012sub slash no-ethiopic by no-ethiopic.liga;\012sub slash nwa-ethiopic by nwa-ethiopic.liga;\012sub slash nya-ethiopic by nya-ethiopic.liga;\012sub slash nyu-ethiopic by nyu-ethiopic.liga;\012sub slash nyi-ethiopic by nyi-ethiopic.liga;\012sub slash nyaa-ethiopic by nyaa-ethiopic.liga;\012sub slash nyee-ethiopic by nyee-ethiopic.liga;\012sub slash nye-ethiopic by nye-ethiopic.liga;\012sub slash nyo-ethiopic by nyo-ethiopic.liga;\012sub slash nywa-ethiopic by nywa-ethiopic.liga;\012sub slash aGlottal-ethiopic by aGlottal-ethiopic.liga;\012sub slash uGlottal-ethiopic by uGlottal-ethiopic.liga;\012sub slash iGlottal-ethiopic by iGlottal-ethiopic.liga;\012sub slash aaGlottal-ethiopic by aaGlottal-ethiopic.liga;\012sub slash eeGlottal-ethiopic by eeGlottal-ethiopic.liga;\012sub slash eGlottal-ethiopic by eGlottal-ethiopic.liga;\012sub slash oGlottal-ethiopic by oGlottal-ethiopic.liga;\012sub slash waGlottal-ethiopic by waGlottal-ethiopic.liga;\012sub slash ka-ethiopic by ka-ethiopic.liga;\012sub slash ku-ethiopic by ku-ethiopic.liga;\012sub slash ki-ethiopic by ki-ethiopic.liga;\012sub slash kaa-ethiopic by kaa-ethiopic.liga;\012sub slash kee-ethiopic by kee-ethiopic.liga;\012sub slash ke-ethiopic by ke-ethiopic.liga;\012sub slash ko-ethiopic by ko-ethiopic.liga;\012sub slash kwaa-ethiopic by kwaa-ethiopic.liga;\012sub slash kxa-ethiopic by kxa-ethiopic.liga;\012sub slash kxu-ethiopic by kxu-ethiopic.liga;\012sub slash kxi-ethiopic by kxi-ethiopic.liga;\012sub slash kxaa-ethiopic by kxaa-ethiopic.liga;\012sub slash kxee-ethiopic by kxee-ethiopic.liga;\012sub slash kxe-ethiopic by kxe-ethiopic.liga;\012sub slash kxo-ethiopic by kxo-ethiopic.liga;\012sub slash kxwaa-ethiopic by kxwaa-ethiopic.liga;\012sub slash wa-ethiopic by wa-ethiopic.liga;\012sub slash wu-ethiopic by wu-ethiopic.liga;\012sub slash wi-ethiopic by wi-ethiopic.liga;\012sub slash waa-ethiopic by waa-ethiopic.liga;\012sub slash wee-ethiopic by wee-ethiopic.liga;\012sub slash we-ethiopic by we-ethiopic.liga;\012sub slash wo-ethiopic by wo-ethiopic.liga;\012sub slash woa-ethiopic by woa-ethiopic.liga;\012sub slash aPharyngeal-ethiopic by aPharyngeal-ethiopic.liga;\012sub slash uPharyngeal-ethiopic by uPharyngeal-ethiopic.liga;\012sub slash iPharyngeal-ethiopic by iPharyngeal-ethiopic.liga;\012sub slash aaPharyngeal-ethiopic by aaPharyngeal-ethiopic.liga;\012sub slash eePharyngeal-ethiopic by eePharyngeal-ethiopic.liga;\012sub slash ePharyngeal-ethiopic by ePharyngeal-ethiopic.liga;\012sub slash oPharyngeal-ethiopic by oPharyngeal-ethiopic.liga;\012sub slash za-ethiopic by za-ethiopic.liga;\012sub slash zu-ethiopic by zu-ethiopic.liga;\012sub slash zi-ethiopic by zi-ethiopic.liga;\012sub slash zaa-ethiopic by zaa-ethiopic.liga;\012sub slash zee-ethiopic by zee-ethiopic.liga;\012sub slash ze-ethiopic by ze-ethiopic.liga;\012sub slash zo-ethiopic by zo-ethiopic.liga;\012sub slash zwa-ethiopic by zwa-ethiopic.liga;\012sub slash zha-ethiopic by zha-ethiopic.liga;\012sub slash zhu-ethiopic by zhu-ethiopic.liga;\012sub slash zhi-ethiopic by zhi-ethiopic.liga;\012sub slash zhaa-ethiopic by zhaa-ethiopic.liga;\012sub slash zhee-ethiopic by zhee-ethiopic.liga;\012sub slash zhe-ethiopic by zhe-ethiopic.liga;\012sub slash zho-ethiopic by zho-ethiopic.liga;\012sub slash zhwa-ethiopic by zhwa-ethiopic.liga;\012sub slash ya-ethiopic by ya-ethiopic.liga;\012sub slash yu-ethiopic by yu-ethiopic.liga;\012sub slash yi-ethiopic by yi-ethiopic.liga;\012sub slash yaa-ethiopic by yaa-ethiopic.liga;\012sub slash yee-ethiopic by yee-ethiopic.liga;\012sub slash ye-ethiopic by ye-ethiopic.liga;\012sub slash yo-ethiopic by yo-ethiopic.liga;\012sub slash yoa-ethiopic by yoa-ethiopic.liga;\012sub slash da-ethiopic by da-ethiopic.liga;\012sub slash du-ethiopic by du-ethiopic.liga;\012sub slash di-ethiopic by di-ethiopic.liga;\012sub slash daa-ethiopic by daa-ethiopic.liga;\012sub slash dee-ethiopic by dee-ethiopic.liga;\012sub slash de-ethiopic by de-ethiopic.liga;\012sub slash do-ethiopic by do-ethiopic.liga;\012sub slash dwa-ethiopic by dwa-ethiopic.liga;\012sub slash dda-ethiopic by dda-ethiopic.liga;\012sub slash ddu-ethiopic by ddu-ethiopic.liga;\012sub slash ddi-ethiopic by ddi-ethiopic.liga;\012sub slash ddaa-ethiopic by ddaa-ethiopic.liga;\012sub slash ddee-ethiopic by ddee-ethiopic.liga;\012sub slash dde-ethiopic by dde-ethiopic.liga;\012sub slash ddo-ethiopic by ddo-ethiopic.liga;\012sub slash ddwa-ethiopic by ddwa-ethiopic.liga;\012sub slash ja-ethiopic by ja-ethiopic.liga;\012sub slash ju-ethiopic by ju-ethiopic.liga;\012sub slash ji-ethiopic by ji-ethiopic.liga;\012sub slash jaa-ethiopic by jaa-ethiopic.liga;\012sub slash jee-ethiopic by jee-ethiopic.liga;\012sub slash je-ethiopic by je-ethiopic.liga;\012sub slash jo-ethiopic by jo-ethiopic.liga;\012sub slash jwa-ethiopic by jwa-ethiopic.liga;\012sub slash ga-ethiopic by ga-ethiopic.liga;\012sub slash gu-ethiopic by gu-ethiopic.liga;\012sub slash gi-ethiopic by gi-ethiopic.liga;\012sub slash gaa-ethiopic by gaa-ethiopic.liga;\012sub slash gee-ethiopic by gee-ethiopic.liga;\012sub slash ge-ethiopic by ge-ethiopic.liga;\012sub slash go-ethiopic by go-ethiopic.liga;\012sub slash gwaa-ethiopic by gwaa-ethiopic.liga;\012sub slash gga-ethiopic by gga-ethiopic.liga;\012sub slash ggu-ethiopic by ggu-ethiopic.liga;\012sub slash ggi-ethiopic by ggi-ethiopic.liga;\012sub slash ggaa-ethiopic by ggaa-ethiopic.liga;\012sub slash ggee-ethiopic by ggee-ethiopic.liga;\012sub slash gge-ethiopic by gge-ethiopic.liga;\012sub slash ggo-ethiopic by ggo-ethiopic.liga;\012sub slash ggwaa-ethiopic by ggwaa-ethiopic.liga;\012sub slash tha-ethiopic by tha-ethiopic.liga;\012sub slash thu-ethiopic by thu-ethiopic.liga;\012sub slash thi-ethiopic by thi-ethiopic.liga;\012sub slash thaa-ethiopic by thaa-ethiopic.liga;\012sub slash thee-ethiopic by thee-ethiopic.liga;\012sub slash the-ethiopic by the-ethiopic.liga;\012sub slash tho-ethiopic by tho-ethiopic.liga;\012sub slash thwa-ethiopic by thwa-ethiopic.liga;\012sub slash cha-ethiopic by cha-ethiopic.liga;\012sub slash chu-ethiopic by chu-ethiopic.liga;\012sub slash chi-ethiopic by chi-ethiopic.liga;\012sub slash chaa-ethiopic by chaa-ethiopic.liga;\012sub slash chee-ethiopic by chee-ethiopic.liga;\012sub slash che-ethiopic by che-ethiopic.liga;\012sub slash cho-ethiopic by cho-ethiopic.liga;\012sub slash chwa-ethiopic by chwa-ethiopic.liga;\012sub slash pha-ethiopic by pha-ethiopic.liga;\012sub slash phu-ethiopic by phu-ethiopic.liga;\012sub slash phi-ethiopic by phi-ethiopic.liga;\012sub slash phaa-ethiopic by phaa-ethiopic.liga;\012sub slash phee-ethiopic by phee-ethiopic.liga;\012sub slash phe-ethiopic by phe-ethiopic.liga;\012sub slash pho-ethiopic by pho-ethiopic.liga;\012sub slash phwa-ethiopic by phwa-ethiopic.liga;\012sub slash tsa-ethiopic by tsa-ethiopic.liga;\012sub slash tsu-ethiopic by tsu-ethiopic.liga;\012sub slash tsi-ethiopic by tsi-ethiopic.liga;\012sub slash tsaa-ethiopic by tsaa-ethiopic.liga;\012sub slash tsee-ethiopic by tsee-ethiopic.liga;\012sub slash tse-ethiopic by tse-ethiopic.liga;\012sub slash tso-ethiopic by tso-ethiopic.liga;\012sub slash tswa-ethiopic by tswa-ethiopic.liga;\012sub slash tza-ethiopic by tza-ethiopic.liga;\012sub slash tzu-ethiopic by tzu-ethiopic.liga;\012sub slash tzi-ethiopic by tzi-ethiopic.liga;\012sub slash tzaa-ethiopic by tzaa-ethiopic.liga;\012sub slash tzee-ethiopic by tzee-ethiopic.liga;\012sub slash tze-ethiopic by tze-ethiopic.liga;\012sub slash tzo-ethiopic by tzo-ethiopic.liga;\012sub slash tzoa-ethiopic by tzoa-ethiopic.liga;\012sub slash fa-ethiopic by fa-ethiopic.liga;\012sub slash fu-ethiopic by fu-ethiopic.liga;\012sub slash fi-ethiopic by fi-ethiopic.liga;\012sub slash faa-ethiopic by faa-ethiopic.liga;\012sub slash fee-ethiopic by fee-ethiopic.liga;\012sub slash fe-ethiopic by fe-ethiopic.liga;\012sub slash fo-ethiopic by fo-ethiopic.liga;\012sub slash fwa-ethiopic by fwa-ethiopic.liga;\012sub slash pa-ethiopic by pa-ethiopic.liga;\012sub slash pu-ethiopic by pu-ethiopic.liga;\012sub slash pi-ethiopic by pi-ethiopic.liga;\012sub slash paa-ethiopic by paa-ethiopic.liga;\012sub slash pee-ethiopic by pee-ethiopic.liga;\012sub slash pe-ethiopic by pe-ethiopic.liga;\012sub slash po-ethiopic by po-ethiopic.liga;\012sub slash pwa-ethiopic by pwa-ethiopic.liga;\012\012";
name = calt;
notes = "name: manualCap";
},
{
code = "sub f f i by f_f_i.liga;\012sub f f l by f_f_l.liga;\012sub f i by fi.liga;\012sub f l by fl.liga;\012";
name = calt;
},
{
code = "#pos @Hu' [ge-ethiopic gge-ethiopic] 400;\012pos @All' [ge-ethiopic gge-ethiopic] 200; \012pos [fee-ethiopic ree-ethiopic]' @All 200;\012pos @Ethleft' @Ethright -300;\012pos @zha' @All 200;\012pos @All' @zha 200;\012pos @All' @xa 200;\012#pos @All '[ge-ethiopic gge-ethiopic] 200; \012#pos @Hu' [ge-ethiopic gge-ethiopic] -350;\012# pos @Hi' @All 200;\012#pos @Hu' [ge-ethiopic gge-ethiopic] 250;\012#pos ge-ethiopic' @All 250;\012#pos gge-ethiopic' @All 250;";
name = kern;
},
{
code = "sub ha-ethiopic by ha-ethiopic.liga;\012sub hu-ethiopic by hu-ethiopic.liga;\012sub hi-ethiopic by hi-ethiopic.liga;\012sub haa-ethiopic by haa-ethiopic.liga;\012sub hee-ethiopic by hee-ethiopic.liga;\012sub he-ethiopic by he-ethiopic.liga;\012sub ho-ethiopic by ho-ethiopic.liga;\012sub hoa-ethiopic by hoa-ethiopic.liga;\012sub la-ethiopic by la-ethiopic.liga;\012sub lu-ethiopic by lu-ethiopic.liga;\012sub li-ethiopic by li-ethiopic.liga;\012sub laa-ethiopic by laa-ethiopic.liga;\012sub lee-ethiopic by lee-ethiopic.liga;\012sub le-ethiopic by le-ethiopic.liga;\012sub lo-ethiopic by lo-ethiopic.liga;\012sub lwa-ethiopic by lwa-ethiopic.liga;\012sub hha-ethiopic by hha-ethiopic.liga;\012sub hhu-ethiopic by hhu-ethiopic.liga;\012sub hhi-ethiopic by hhi-ethiopic.liga;\012sub hhaa-ethiopic by hhaa-ethiopic.liga;\012sub hhee-ethiopic by hhee-ethiopic.liga;\012sub hhe-ethiopic by hhe-ethiopic.liga;\012sub hho-ethiopic by hho-ethiopic.liga;\012sub hhwa-ethiopic by hhwa-ethiopic.liga;\012sub ma-ethiopic by ma-ethiopic.liga;\012sub mu-ethiopic by mu-ethiopic.liga;\012sub mi-ethiopic by mi-ethiopic.liga;\012sub maa-ethiopic by maa-ethiopic.liga;\012sub mee-ethiopic by mee-ethiopic.liga;\012sub me-ethiopic by me-ethiopic.liga;\012sub mo-ethiopic by mo-ethiopic.liga;\012sub mwa-ethiopic by mwa-ethiopic.liga;\012sub sza-ethiopic by sza-ethiopic.liga;\012sub szu-ethiopic by szu-ethiopic.liga;\012sub szi-ethiopic by szi-ethiopic.liga;\012sub szaa-ethiopic by szaa-ethiopic.liga;\012sub szee-ethiopic by szee-ethiopic.liga;\012sub sze-ethiopic by sze-ethiopic.liga;\012sub szo-ethiopic by szo-ethiopic.liga;\012sub szwa-ethiopic by szwa-ethiopic.liga;\012sub ra-ethiopic by ra-ethiopic.liga;\012sub ru-ethiopic by ru-ethiopic.liga;\012sub ri-ethiopic by ri-ethiopic.liga;\012sub raa-ethiopic by raa-ethiopic.liga;\012sub ree-ethiopic by ree-ethiopic.liga;\012sub re-ethiopic by re-ethiopic.liga;\012sub ro-ethiopic by ro-ethiopic.liga;\012sub rwa-ethiopic by rwa-ethiopic.liga;\012sub sa-ethiopic by sa-ethiopic.liga;\012sub su-ethiopic by su-ethiopic.liga;\012sub si-ethiopic by si-ethiopic.liga;\012sub saa-ethiopic by saa-ethiopic.liga;\012sub see-ethiopic by see-ethiopic.liga;\012sub se-ethiopic by se-ethiopic.liga;\012sub so-ethiopic by so-ethiopic.liga;\012sub swa-ethiopic by swa-ethiopic.liga;\012sub sha-ethiopic by sha-ethiopic.liga;\012sub shu-ethiopic by shu-ethiopic.liga;\012sub shi-ethiopic by shi-ethiopic.liga;\012sub shaa-ethiopic by shaa-ethiopic.liga;\012sub shee-ethiopic by shee-ethiopic.liga;\012sub she-ethiopic by she-ethiopic.liga;\012sub sho-ethiopic by sho-ethiopic.liga;\012sub shwa-ethiopic by shwa-ethiopic.liga;\012sub qa-ethiopic by qa-ethiopic.liga;\012sub qu-ethiopic by qu-ethiopic.liga;\012sub qi-ethiopic by qi-ethiopic.liga;\012sub qaa-ethiopic by qaa-ethiopic.liga;\012sub qee-ethiopic by qee-ethiopic.liga;\012sub qe-ethiopic by qe-ethiopic.liga;\012sub qo-ethiopic by qo-ethiopic.liga;\012#sub qwaa-ethiopic by qwaa-ethiopic.liga;\012sub qha-ethiopic by qha-ethiopic.liga;\012sub qhu-ethiopic by qhu-ethiopic.liga;\012sub qhi-ethiopic by qhi-ethiopic.liga;\012sub qhaa-ethiopic by qhaa-ethiopic.liga;\012sub qhee-ethiopic by qhee-ethiopic.liga;\012sub qhe-ethiopic by qhe-ethiopic.liga;\012sub qho-ethiopic by qho-ethiopic.liga;\012sub qhwaa-ethiopic by qhwaa-ethiopic.liga;\012sub ba-ethiopic by ba-ethiopic.liga;\012sub bu-ethiopic by bu-ethiopic.liga;\012sub bi-ethiopic by bi-ethiopic.liga;\012sub baa-ethiopic by baa-ethiopic.liga;\012sub bee-ethiopic by bee-ethiopic.liga;\012sub be-ethiopic by be-ethiopic.liga;\012sub bo-ethiopic by bo-ethiopic.liga;\012sub bwa-ethiopic by bwa-ethiopic.liga;\012sub va-ethiopic by va-ethiopic.liga;\012sub vu-ethiopic by vu-ethiopic.liga;\012sub vi-ethiopic by vi-ethiopic.liga;\012sub vaa-ethiopic by vaa-ethiopic.liga;\012sub vee-ethiopic by vee-ethiopic.liga;\012sub ve-ethiopic by ve-ethiopic.liga;\012sub vo-ethiopic by vo-ethiopic.liga;\012sub vwa-ethiopic by vwa-ethiopic.liga;\012sub ta-ethiopic by ta-ethiopic.liga;\012sub tu-ethiopic by tu-ethiopic.liga;\012sub ti-ethiopic by ti-ethiopic.liga;\012sub taa-ethiopic by taa-ethiopic.liga;\012sub tee-ethiopic by tee-ethiopic.liga;\012sub te-ethiopic by te-ethiopic.liga;\012sub to-ethiopic by to-ethiopic.liga;\012sub twa-ethiopic by twa-ethiopic.liga;\012sub ca-ethiopic by ca-ethiopic.liga;\012sub cu-ethiopic by cu-ethiopic.liga;\012sub ci-ethiopic by ci-ethiopic.liga;\012sub caa-ethiopic by caa-ethiopic.liga;\012sub cee-ethiopic by cee-ethiopic.liga;\012sub ce-ethiopic by ce-ethiopic.liga;\012sub co-ethiopic by co-ethiopic.liga;\012sub cwa-ethiopic by cwa-ethiopic.liga;\012sub xa-ethiopic by xa-ethiopic.liga;\012sub xu-ethiopic by xu-ethiopic.liga;\012sub xi-ethiopic by xi-ethiopic.liga;\012sub xaa-ethiopic by xaa-ethiopic.liga;\012sub xee-ethiopic by xee-ethiopic.liga;\012sub xe-ethiopic by xe-ethiopic.liga;\012sub xo-ethiopic by xo-ethiopic.liga;\012sub xwaa-ethiopic by xwaa-ethiopic.liga;\012sub na-ethiopic by na-ethiopic.liga;\012sub nu-ethiopic by nu-ethiopic.liga;\012sub ni-ethiopic by ni-ethiopic.liga;\012sub naa-ethiopic by naa-ethiopic.liga;\012sub nee-ethiopic by nee-ethiopic.liga;\012sub ne-ethiopic by ne-ethiopic.liga;\012sub no-ethiopic by no-ethiopic.liga;\012sub nwa-ethiopic by nwa-ethiopic.liga;\012sub nya-ethiopic by nya-ethiopic.liga;\012sub nyu-ethiopic by nyu-ethiopic.liga;\012sub nyi-ethiopic by nyi-ethiopic.liga;\012sub nyaa-ethiopic by nyaa-ethiopic.liga;\012sub nyee-ethiopic by nyee-ethiopic.liga;\012sub nye-ethiopic by nye-ethiopic.liga;\012sub nyo-ethiopic by nyo-ethiopic.liga;\012sub nywa-ethiopic by nywa-ethiopic.liga;\012sub aGlottal-ethiopic by aGlottal-ethiopic.liga;\012sub uGlottal-ethiopic by uGlottal-ethiopic.liga;\012sub iGlottal-ethiopic by iGlottal-ethiopic.liga;\012sub aaGlottal-ethiopic by aaGlottal-ethiopic.liga;\012sub eeGlottal-ethiopic by eeGlottal-ethiopic.liga;\012sub eGlottal-ethiopic by eGlottal-ethiopic.liga;\012sub oGlottal-ethiopic by oGlottal-ethiopic.liga;\012sub waGlottal-ethiopic by waGlottal-ethiopic.liga;\012sub ka-ethiopic by ka-ethiopic.liga;\012sub ku-ethiopic by ku-ethiopic.liga;\012sub ki-ethiopic by ki-ethiopic.liga;\012sub kaa-ethiopic by kaa-ethiopic.liga;\012sub kee-ethiopic by kee-ethiopic.liga;\012sub ke-ethiopic by ke-ethiopic.liga;\012sub ko-ethiopic by ko-ethiopic.liga;\012sub kwaa-ethiopic by kwaa-ethiopic.liga;\012sub kxa-ethiopic by kxa-ethiopic.liga;\012sub kxu-ethiopic by kxu-ethiopic.liga;\012sub kxi-ethiopic by kxi-ethiopic.liga;\012sub kxaa-ethiopic by kxaa-ethiopic.liga;\012sub kxee-ethiopic by kxee-ethiopic.liga;\012sub kxe-ethiopic by kxe-ethiopic.liga;\012sub kxo-ethiopic by kxo-ethiopic.liga;\012sub kxwaa-ethiopic by kxwaa-ethiopic.liga;\012sub wa-ethiopic by wa-ethiopic.liga;\012sub wu-ethiopic by wu-ethiopic.liga;\012sub wi-ethiopic by wi-ethiopic.liga;\012sub waa-ethiopic by waa-ethiopic.liga;\012sub wee-ethiopic by wee-ethiopic.liga;\012sub we-ethiopic by we-ethiopic.liga;\012sub wo-ethiopic by wo-ethiopic.liga;\012sub woa-ethiopic by woa-ethiopic.liga;\012sub aPharyngeal-ethiopic by aPharyngeal-ethiopic.liga;\012sub uPharyngeal-ethiopic by uPharyngeal-ethiopic.liga;\012sub iPharyngeal-ethiopic by iPharyngeal-ethiopic.liga;\012sub aaPharyngeal-ethiopic by aaPharyngeal-ethiopic.liga;\012sub eePharyngeal-ethiopic by eePharyngeal-ethiopic.liga;\012sub ePharyngeal-ethiopic by ePharyngeal-ethiopic.liga;\012sub oPharyngeal-ethiopic by oPharyngeal-ethiopic.liga;\012sub za-ethiopic by za-ethiopic.liga;\012sub zu-ethiopic by zu-ethiopic.liga;\012sub zi-ethiopic by zi-ethiopic.liga;\012sub zaa-ethiopic by zaa-ethiopic.liga;\012sub zee-ethiopic by zee-ethiopic.liga;\012sub ze-ethiopic by ze-ethiopic.liga;\012sub zo-ethiopic by zo-ethiopic.liga;\012sub zwa-ethiopic by zwa-ethiopic.liga;\012sub zha-ethiopic by zha-ethiopic.liga;\012sub zhu-ethiopic by zhu-ethiopic.liga;\012sub zhi-ethiopic by zhi-ethiopic.liga;\012sub zhaa-ethiopic by zhaa-ethiopic.liga;\012sub zhee-ethiopic by zhee-ethiopic.liga;\012sub zhe-ethiopic by zhe-ethiopic.liga;\012sub zho-ethiopic by zho-ethiopic.liga;\012sub zhwa-ethiopic by zhwa-ethiopic.liga;\012sub ya-ethiopic by ya-ethiopic.liga;\012sub yu-ethiopic by yu-ethiopic.liga;\012sub yi-ethiopic by yi-ethiopic.liga;\012sub yaa-ethiopic by yaa-ethiopic.liga;\012sub yee-ethiopic by yee-ethiopic.liga;\012sub ye-ethiopic by ye-ethiopic.liga;\012sub yo-ethiopic by yo-ethiopic.liga;\012sub yoa-ethiopic by yoa-ethiopic.liga;\012sub da-ethiopic by da-ethiopic.liga;\012sub du-ethiopic by du-ethiopic.liga;\012sub di-ethiopic by di-ethiopic.liga;\012sub daa-ethiopic by daa-ethiopic.liga;\012sub dee-ethiopic by dee-ethiopic.liga;\012sub de-ethiopic by de-ethiopic.liga;\012sub do-ethiopic by do-ethiopic.liga;\012sub dwa-ethiopic by dwa-ethiopic.liga;\012sub dda-ethiopic by dda-ethiopic.liga;\012sub ddu-ethiopic by ddu-ethiopic.liga;\012sub ddi-ethiopic by ddi-ethiopic.liga;\012sub ddaa-ethiopic by ddaa-ethiopic.liga;\012sub ddee-ethiopic by ddee-ethiopic.liga;\012sub dde-ethiopic by dde-ethiopic.liga;\012sub ddo-ethiopic by ddo-ethiopic.liga;\012sub ddwa-ethiopic by ddwa-ethiopic.liga;\012sub ja-ethiopic by ja-ethiopic.liga;\012sub ju-ethiopic by ju-ethiopic.liga;\012sub ji-ethiopic by ji-ethiopic.liga;\012sub jaa-ethiopic by jaa-ethiopic.liga;\012sub jee-ethiopic by jee-ethiopic.liga;\012sub je-ethiopic by je-ethiopic.liga;\012sub jo-ethiopic by jo-ethiopic.liga;\012sub jwa-ethiopic by jwa-ethiopic.liga;\012sub ga-ethiopic by ga-ethiopic.liga;\012sub gu-ethiopic by gu-ethiopic.liga;\012sub gi-ethiopic by gi-ethiopic.liga;\012sub gaa-ethiopic by gaa-ethiopic.liga;\012sub gee-ethiopic by gee-ethiopic.liga;\012sub ge-ethiopic by ge-ethiopic.liga;\012sub go-ethiopic by go-ethiopic.liga;\012sub gwaa-ethiopic by gwaa-ethiopic.liga;\012sub gga-ethiopic by gga-ethiopic.liga;\012sub ggu-ethiopic by ggu-ethiopic.liga;\012sub ggi-ethiopic by ggi-ethiopic.liga;\012sub ggaa-ethiopic by ggaa-ethiopic.liga;\012sub ggee-ethiopic by ggee-ethiopic.liga;\012sub gge-ethiopic by gge-ethiopic.liga;\012sub ggo-ethiopic by ggo-ethiopic.liga;\012sub ggwaa-ethiopic by ggwaa-ethiopic.liga;\012sub tha-ethiopic by tha-ethiopic.liga;\012sub thu-ethiopic by thu-ethiopic.liga;\012sub thi-ethiopic by thi-ethiopic.liga;\012sub thaa-ethiopic by thaa-ethiopic.liga;\012sub thee-ethiopic by thee-ethiopic.liga;\012sub the-ethiopic by the-ethiopic.liga;\012sub tho-ethiopic by tho-ethiopic.liga;\012sub thwa-ethiopic by thwa-ethiopic.liga;\012sub cha-ethiopic by cha-ethiopic.liga;\012sub chu-ethiopic by chu-ethiopic.liga;\012sub chi-ethiopic by chi-ethiopic.liga;\012sub chaa-ethiopic by chaa-ethiopic.liga;\012sub chee-ethiopic by chee-ethiopic.liga;\012sub che-ethiopic by che-ethiopic.liga;\012sub cho-ethiopic by cho-ethiopic.liga;\012sub chwa-ethiopic by chwa-ethiopic.liga;\012sub pha-ethiopic by pha-ethiopic.liga;\012sub phu-ethiopic by phu-ethiopic.liga;\012sub phi-ethiopic by phi-ethiopic.liga;\012sub phaa-ethiopic by phaa-ethiopic.liga;\012sub phee-ethiopic by phee-ethiopic.liga;\012sub phe-ethiopic by phe-ethiopic.liga;\012sub pho-ethiopic by pho-ethiopic.liga;\012sub phwa-ethiopic by phwa-ethiopic.liga;\012sub tsa-ethiopic by tsa-ethiopic.liga;\012sub tsu-ethiopic by tsu-ethiopic.liga;\012sub tsi-ethiopic by tsi-ethiopic.liga;\012sub tsaa-ethiopic by tsaa-ethiopic.liga;\012sub tsee-ethiopic by tsee-ethiopic.liga;\012sub tse-ethiopic by tse-ethiopic.liga;\012sub tso-ethiopic by tso-ethiopic.liga;\012sub tswa-ethiopic by tswa-ethiopic.liga;\012sub tza-ethiopic by tza-ethiopic.liga;\012sub tzu-ethiopic by tzu-ethiopic.liga;\012sub tzi-ethiopic by tzi-ethiopic.liga;\012sub tzaa-ethiopic by tzaa-ethiopic.liga;\012sub tzee-ethiopic by tzee-ethiopic.liga;\012sub tze-ethiopic by tze-ethiopic.liga;\012sub tzo-ethiopic by tzo-ethiopic.liga;\012sub tzoa-ethiopic by tzoa-ethiopic.liga;\012sub fa-ethiopic by fa-ethiopic.liga;\012sub fu-ethiopic by fu-ethiopic.liga;\012sub fi-ethiopic by fi-ethiopic.liga;\012sub faa-ethiopic by faa-ethiopic.liga;\012sub fee-ethiopic by fee-ethiopic.liga;\012sub fe-ethiopic by fe-ethiopic.liga;\012sub fo-ethiopic by fo-ethiopic.liga;\012sub fwa-ethiopic by fwa-ethiopic.liga;\012sub pa-ethiopic by pa-ethiopic.liga;\012sub pu-ethiopic by pu-ethiopic.liga;\012sub pi-ethiopic by pi-ethiopic.liga;\012sub paa-ethiopic by paa-ethiopic.liga;\012sub pee-ethiopic by pee-ethiopic.liga;\012sub pe-ethiopic by pe-ethiopic.liga;\012sub po-ethiopic by po-ethiopic.liga;\012sub pwa-ethiopic by pwa-ethiopic.liga;\012\012";
name = dlig;
}
);
fontMaster = (
{
ascender = 1536;
capHeight = 1456;
customParameters = (
{
name = typoAscender;
value = 1900;
},
{
name = typoDescender;
value = -500;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2163;
},
{
name = winDescent;
value = 800;
},
{
name = hheaAscender;
value = 1900;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Axis Location";
value = (
{
Axis = Weight;
Location = 700;
},
{
Axis = Width;
Location = 200;
}
);
},
{
name = usWeightClass;
value = 700;
},
{
name = weightClass;
value = 700;
}
);
descender = -512;
id = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
name = Bold;
userData = {
GSCornerRadius = 200;
GSExtrudeAngle = 30;
GSExtrudeOffset = 15;
};
weight = SemiBold;
weightValue = 700;
widthValue = 200;
xHeight = 1082;
},
{
ascender = 1536;
capHeight = 1456;
customParameters = (
{
name = hheaAscender;
value = 1900;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = typoAscender;
value = 1900;
},
{
name = typoDescender;
value = -500;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2163;
},
{
name = winDescent;
value = 800;
}
);
descender = -512;
id = m002;
userData = {
GSCornerRadius = 200;
};
weightValue = 400;
widthValue = 99;
xHeight = 1082;
},
{
ascender = 1536;
capHeight = 1456;
custom = Thin;
customParameters = (
{
name = typoAscender;
value = 1900;
},
{
name = typoDescender;
value = -500;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2163;
},
{
name = winDescent;
value = 800;
},
{
name = hheaAscender;
value = 1900;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Axis Location";
value = (
{
Axis = Weight;
Location = 100;
},
{
Axis = Width;
Location = 50;
}
);
},
{
name = usWeightClass;
value = 100;
},
{
name = weightClass;
value = 100;
}
);
descender = -512;
iconName = Light;
id = m003;
userData = {
GSCornerRadius = 20;
};
widthValue = 49;
xHeight = 1082;
},
{
ascender = 1536;
capHeight = 1456;
custom = Italic;
customParameters = (
{
name = hheaAscender;
value = 1900;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = typoAscender;
value = 1900;
},
{
name = typoDescender;
value = -500;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2163;
},
{
name = winDescent;
value = 800;
}
);
descender = -512;
id = m004;
italicAngle = 10;
userData = {
GSCornerRadius = 100;
};
weightValue = 400;
xHeight = 1082;
},
{
ascender = 1536;
capHeight = 1456;
custom = "Thin Italic";
customParameters = (
{
name = typoAscender;
value = 1900;
},
{
name = typoDescender;
value = -500;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2163;
},
{
name = winDescent;
value = 800;
},
{
name = hheaAscender;
value = 1900;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Axis Location";
value = (
{
Axis = Weight;
Location = 100;
},
{
Axis = Width;
Location = 50;
}
);
},
{
name = usWeightClass;
value = 100;
},
{
name = weightClass;
value = 100;
}
);
descender = -512;
iconName = Light;
id = m005;
italicAngle = 10;
userData = {
GSCornerRadius = 20;
};
widthValue = 50;
xHeight = 1082;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"808 0 LINE",
"808 1456 LINE",
"100 1456 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"451 660 LINE",
"709 54 LINE",
"194 54 LINE"
);
},
{
closed = 1;
nodes = (
"154 1359 LINE",
"422 728 LINE",
"154 96 LINE"
);
},
{
closed = 1;
nodes = (
"480 728 LINE",
"754 1371 LINE",
"754 84 LINE"
);
},
{
closed = 1;
nodes = (
"194 1402 LINE",
"709 1402 LINE",
"451 796 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
10 12 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 3 values pushed */
12 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 12 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 908;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"808 0 LINE",
"808 1456 LINE",
"100 1456 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"451 660 LINE",
"709 54 LINE",
"194 54 LINE"
);
},
{
closed = 1;
nodes = (
"154 1359 LINE",
"422 728 LINE",
"154 96 LINE"
);
},
{
closed = 1;
nodes = (
"480 728 LINE",
"754 1371 LINE",
"754 84 LINE"
);
},
{
closed = 1;
nodes = (
"194 1402 LINE",
"709 1402 LINE",
"451 796 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
10 12 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 3 values pushed */
12 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 12 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 908;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"808 0 LINE",
"808 1456 LINE",
"100 1456 LINE",
"100 0 LINE"
);
},
{
closed = 1;
nodes = (
"451 660 LINE",
"709 54 LINE",
"194 54 LINE"
);
},
{
closed = 1;
nodes = (
"154 1359 LINE",
"422 728 LINE",
"154 96 LINE"
);
},
{
closed = 1;
nodes = (
"480 728 LINE",
"754 1371 LINE",
"754 84 LINE"
);
},
{
closed = 1;
nodes = (
"194 1402 LINE",
"709 1402 LINE",
"451 796 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
10 12 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 3 values pushed */
12 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 12 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 908;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"617 0 LINE",
"874 1456 LINE",
"166 1456 LINE",
"-91 0 LINE"
);
},
{
closed = 1;
nodes = (
"377 660 LINE",
"528 54 LINE",
"13 54 LINE"
);
},
{
closed = 1;
nodes = (
"203 1359 LINE",
"360 728 LINE",
"-20 96 LINE"
);
},
{
closed = 1;
nodes = (
"418 728 LINE",
"805 1371 LINE",
"578 84 LINE"
);
},
{
closed = 1;
nodes = (
"250 1402 LINE",
"765 1402 LINE",
"401 796 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
10 12 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 3 values pushed */
12 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 12 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 908;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"617 0 LINE",
"874 1456 LINE",
"166 1456 LINE",
"-91 0 LINE"
);
},
{
closed = 1;
nodes = (
"377 660 LINE",
"528 54 LINE",
"13 54 LINE"
);
},
{
closed = 1;
nodes = (
"203 1359 LINE",
"360 728 LINE",
"-20 96 LINE"
);
},
{
closed = 1;
nodes = (
"418 728 LINE",
"805 1371 LINE",
"578 84 LINE"
);
},
{
closed = 1;
nodes = (
"250 1402 LINE",
"765 1402 LINE",
"401 796 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
10 12 
MIRP[10100]	/* MoveIndirectRelPt */
PUSHB[ ]	/* 3 values pushed */
12 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 12 
MIRP[10100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 908;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 000D;
},
{
glyphname = space;
lastChange = "2020-12-14 08:55:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 610;
},
{
layerId = m002;
width = 607;
},
{
layerId = m003;
width = 590;
},
{
layerId = m004;
width = 607;
},
{
layerId = m005;
width = 590;
}
);
note = uni0020;
unicode = 0020;
},
{
glyphname = exclam;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"405 447 LINE",
"439 1456 LINE",
"131 1456 LINE",
"165 447 LINE"
);
},
{
closed = 1;
nodes = (
"382.333 -16 OFFCURVE",
"447 48 OFFCURVE",
"447 136 CURVE SMOOTH",
"447 225.333 OFFCURVE",
"382.333 289 OFFCURVE",
"285 289 CURVE SMOOTH",
"189 289 OFFCURVE",
"124 224 OFFCURVE",
"124 136 CURVE SMOOTH",
"124 48 OFFCURVE",
"189 -16 OFFCURVE",
"285 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 6 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 557;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"347 411 LINE",
"361 1456 LINE",
"167 1456 LINE",
"180 411 LINE"
);
},
{
closed = 1;
nodes = (
"341 -11 OFFCURVE",
"379 33 OFFCURVE",
"379 93 CURVE SMOOTH",
"379 153 OFFCURVE",
"341 199 OFFCURVE",
"269 199 CURVE SMOOTH",
"197 199 OFFCURVE",
"160 153 OFFCURVE",
"160 93 CURVE SMOOTH",
"160 33 OFFCURVE",
"197 -11 OFFCURVE",
"269 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 6 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 527;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"221 401 LINE",
"221 1456 LINE",
"167 1456 LINE",
"167 401 LINE"
);
},
{
closed = 1;
nodes = (
"232.667 -6 OFFCURVE",
"258 18.333 OFFCURVE",
"258 49 CURVE SMOOTH",
"258 79.667 OFFCURVE",
"232.667 105 OFFCURVE",
"202 105 CURVE SMOOTH",
"171.333 105 OFFCURVE",
"147 79.667 OFFCURVE",
"147 49 CURVE SMOOTH",
"147 18.333 OFFCURVE",
"171.333 -6 OFFCURVE",
"202 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 6 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 397;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"229 411 LINE",
"427 1456 LINE",
"233 1456 LINE",
"62 411 LINE"
);
},
{
closed = 1;
nodes = (
"148 -11 OFFCURVE",
"194 33 OFFCURVE",
"205 93 CURVE SMOOTH",
"215 153 OFFCURVE",
"185 199 OFFCURVE",
"113 199 CURVE SMOOTH",
"41 199 OFFCURVE",
"-4 153 OFFCURVE",
"-14 93 CURVE SMOOTH",
"-25 33 OFFCURVE",
"4 -11 OFFCURVE",
"76 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 6 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 527;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"101 401 LINE",
"287 1456 LINE",
"233 1456 LINE",
"47 401 LINE"
);
},
{
closed = 1;
nodes = (
"41 -6 OFFCURVE",
"70 18 OFFCURVE",
"76 49 CURVE SMOOTH",
"81 80 OFFCURVE",
"60 105 OFFCURVE",
"30 105 CURVE SMOOTH",
"-1 105 OFFCURVE",
"-30 80 OFFCURVE",
"-35 49 CURVE SMOOTH",
"-41 18 OFFCURVE",
"-21 -6 OFFCURVE",
"10 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 6 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 397;
}
);
note = uni0021;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"216 987 LINE",
"266 1398 LINE",
"266 1536 LINE",
"64 1536 LINE",
"64 987 LINE"
);
},
{
closed = 1;
nodes = (
"542 987 LINE",
"591 1398 LINE",
"591 1536 LINE",
"390 1536 LINE",
"390 987 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 657;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"507 1042 LINE",
"547 1400 LINE",
"547 1536 LINE",
"406 1536 LINE",
"406 1042 LINE"
);
},
{
closed = 1;
nodes = (
"237 1042 LINE",
"277 1400 LINE",
"277 1536 LINE",
"136 1536 LINE",
"136 1042 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 655;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"381 1122 LINE",
"411 1393 LINE",
"411 1536 LINE",
"351 1536 LINE",
"351 1122 LINE"
);
},
{
closed = 1;
nodes = (
"180 1122 LINE",
"210 1393 LINE",
"210 1536 LINE",
"150 1536 LINE",
"150 1122 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 521;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"500 1042 LINE",
"603 1400 LINE",
"627 1536 LINE",
"486 1536 LINE",
"399 1042 LINE"
);
},
{
closed = 1;
nodes = (
"230 1042 LINE",
"333 1400 LINE",
"357 1536 LINE",
"216 1536 LINE",
"129 1042 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 655;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"388 1122 LINE",
"466 1393 LINE",
"491 1536 LINE",
"431 1536 LINE",
"358 1122 LINE"
);
},
{
closed = 1;
nodes = (
"187 1122 LINE",
"265 1393 LINE",
"290 1536 LINE",
"230 1536 LINE",
"157 1122 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 521;
}
);
leftKerningGroup = quotedbl;
note = uni0022;
rightKerningGroup = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"402 0 LINE",
"474 410 LINE",
"667 410 LINE",
"595 0 LINE",
"778 0 LINE",
"850 410 LINE",
"1104 410 LINE",
"1104 582 LINE",
"880 582 LINE",
"930 866 LINE",
"1180 866 LINE",
"1180 1040 LINE",
"961 1040 LINE",
"1034 1456 LINE",
"851 1456 LINE",
"778 1040 LINE",
"584 1040 LINE",
"657 1456 LINE",
"475 1456 LINE",
"402 1040 LINE",
"139 1040 LINE",
"139 866 LINE",
"371 866 LINE",
"321 582 LINE",
"64 582 LINE",
"64 410 LINE",
"291 410 LINE",
"219 0 LINE"
);
},
{
closed = 1;
nodes = (
"553 866 LINE",
"747 866 LINE",
"697 582 LINE",
"504 582 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1220;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"421 0 LINE",
"501 410 LINE",
"765 410 LINE",
"685 0 LINE",
"829 0 LINE",
"909 410 LINE",
"1160 410 LINE",
"1160 547 LINE",
"935 547 LINE",
"1004 901 LINE",
"1235 901 LINE",
"1235 1040 LINE",
"1031 1040 LINE",
"1113 1456 LINE",
"969 1456 LINE",
"887 1040 LINE",
"623 1040 LINE",
"705 1456 LINE",
"562 1456 LINE",
"480 1040 LINE",
"195 1040 LINE",
"195 901 LINE",
"453 901 LINE",
"384 547 LINE",
"119 547 LINE",
"119 410 LINE",
"358 410 LINE",
"278 0 LINE"
);
},
{
closed = 1;
nodes = (
"596 901 LINE",
"860 901 LINE",
"791 547 LINE",
"527 547 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1261;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"304 0 LINE",
"378 410 LINE",
"742 410 LINE",
"667 0 LINE",
"723 0 LINE",
"798 410 LINE",
"1092 410 LINE",
"1092 462 LINE",
"807 462 LINE",
"903 986 LINE",
"1167 986 LINE",
"1167 1040 LINE",
"913 1040 LINE",
"989 1456 LINE",
"933 1456 LINE",
"857 1040 LINE",
"492 1040 LINE",
"568 1456 LINE",
"512 1456 LINE",
"437 1040 LINE",
"127 1040 LINE",
"127 986 LINE",
"427 986 LINE",
"332 462 LINE",
"51 462 LINE",
"51 410 LINE",
"322 410 LINE",
"248 0 LINE"
);
},
{
closed = 1;
nodes = (
"482 986 LINE",
"847 986 LINE",
"751 462 LINE",
"388 462 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"230 0 LINE",
"383 410 LINE",
"647 410 LINE",
"494 0 LINE",
"638 0 LINE",
"791 410 LINE",
"1042 410 LINE",
"1066 547 LINE",
"841 547 LINE",
"972 901 LINE",
"1203 901 LINE",
"1228 1040 LINE",
"1024 1040 LINE",
"1179 1456 LINE",
"1035 1456 LINE",
"880 1040 LINE",
"616 1040 LINE",
"771 1456 LINE",
"628 1456 LINE",
"473 1040 LINE",
"188 1040 LINE",
"163 901 LINE",
"421 901 LINE",
"290 547 LINE",
"25 547 LINE",
"1 410 LINE",
"240 410 LINE",
"87 0 LINE"
);
},
{
closed = 1;
nodes = (
"564 901 LINE",
"828 901 LINE",
"697 547 LINE",
"433 547 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1261;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"113 0 LINE",
"260 410 LINE",
"624 410 LINE",
"476 0 LINE",
"532 0 LINE",
"680 410 LINE",
"974 410 LINE",
"983 462 LINE",
"698 462 LINE",
"886 986 LINE",
"1150 986 LINE",
"1160 1040 LINE",
"906 1040 LINE",
"1055 1456 LINE",
"999 1456 LINE",
"850 1040 LINE",
"485 1040 LINE",
"634 1456 LINE",
"578 1456 LINE",
"430 1040 LINE",
"120 1040 LINE",
"110 986 LINE",
"410 986 LINE",
"223 462 LINE",
"-58 462 LINE",
"-67 410 LINE",
"204 410 LINE",
"57 0 LINE"
);
},
{
closed = 1;
nodes = (
"465 986 LINE",
"830 986 LINE",
"642 462 LINE",
"279 462 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 12 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
8 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0023;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"681 -215 LINE",
"681 -16 LINE",
"929 9.333 OFFCURVE",
"1079 158.333 OFFCURVE",
"1079 385 CURVE SMOOTH",
"1079 566.676 OFFCURVE",
"991.454 677.832 OFFCURVE",
"840 762.5 CURVE SMOOTH",
"718.243 829.704 OFFCURVE",
"557.328 866.158 OFFCURVE",
"480 947 CURVE SMOOTH",
"450.667 977.667 OFFCURVE",
"436 1018.333 OFFCURVE",
"436 1069 CURVE SMOOTH",
"436 1178.333 OFFCURVE",
"498.667 1244 OFFCURVE",
"608 1244 CURVE SMOOTH",
"718.667 1244 OFFCURVE",
"790 1165 OFFCURVE",
"790 1005 CURVE",
"1079 1005 LINE",
"1079 1265 OFFCURVE",
"938 1436.667 OFFCURVE",
"702 1470 CURVE",
"702 1687 LINE",
"542 1687 LINE",
"542 1473 LINE",
"303.333 1449 OFFCURVE",
"147 1295.333 OFFCURVE",
"147 1070 CURVE SMOOTH",
"147 939.333 OFFCURVE",
"191.167 847.5 OFFCURVE",
"266.5 777.5 CURVE SMOOTH",
"304.167 742.5 OFFCURVE",
"349.333 711.5 OFFCURVE",
"402 684.5 CURVE SMOOTH",
"521.019 623.484 OFFCURVE",
"670.965 591.883 OFFCURVE",
"744.5 513.5 CURVE SMOOTH",
"774.833 481.167 OFFCURVE",
"790 437.667 OFFCURVE",
"790 383 CURVE SMOOTH",
"790 277.667 OFFCURVE",
"717.333 211 OFFCURVE",
"600 211 CURVE SMOOTH",
"458.667 211 OFFCURVE",
"381 298.333 OFFCURVE",
"381 457 CURVE",
"92 457 LINE",
"92 183.667 OFFCURVE",
"248.667 12.333 OFFCURVE",
"522 -17 CURVE",
"522 -215 LINE"
);
}
);
};
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"681 -215 LINE",
"681 -16 LINE",
"925 9 OFFCURVE",
"1079 154 OFFCURVE",
"1079 387 CURVE SMOOTH",
"1079 558 OFFCURVE",
"996 678 OFFCURVE",
"839 763 CURVE SMOOTH",
"682 849 OFFCURVE",
"436 882 OFFCURVE",
"436 1069 CURVE SMOOTH",
"436 1179 OFFCURVE",
"500 1244 OFFCURVE",
"605 1244 CURVE SMOOTH",
"720 1244 OFFCURVE",
"790 1165 OFFCURVE",
"790 1005 CURVE",
"1079 1005 LINE",
"1079 1264 OFFCURVE",
"938 1437 OFFCURVE",
"702 1470 CURVE",
"702 1687 LINE",
"542 1687 LINE",
"542 1473 LINE",
"303 1448 OFFCURVE",
"147 1299 OFFCURVE",
"147 1065 CURVE SMOOTH",
"147 872 OFFCURVE",
"255 759 OFFCURVE",
"403 684 CURVE SMOOTH",
"573 598 OFFCURVE",
"790 577 OFFCURVE",
"790 387 CURVE SMOOTH",
"790 275 OFFCURVE",
"717 211 OFFCURVE",
"598 211 CURVE SMOOTH",
"460 211 OFFCURVE",
"381 297 OFFCURVE",
"381 457 CURVE",
"92 457 LINE",
"92 188 OFFCURVE",
"244 13 OFFCURVE",
"522 -17 CURVE",
"522 -215 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"655 -208 LINE",
"655 -17 LINE",
"899 8.333 OFFCURVE",
"1041 151.667 OFFCURVE",
"1041 377 CURVE SMOOTH",
"1041 592.853 OFFCURVE",
"919.514 718.988 OFFCURVE",
"636.5 809.5 CURVE SMOOTH",
"433.167 875.5 OFFCURVE",
"351 946 OFFCURVE",
"351 1082 CURVE SMOOTH",
"351 1228.667 OFFCURVE",
"437.333 1315 OFFCURVE",
"596 1315 CURVE SMOOTH",
"748 1315 OFFCURVE",
"844 1196 OFFCURVE",
"844 1008 CURVE",
"1028 1008 LINE",
"1028 1281.333 OFFCURVE",
"897 1441.333 OFFCURVE",
"673 1472 CURVE",
"673 1692 LINE",
"524 1692 LINE",
"524 1473 LINE",
"301.333 1446.333 OFFCURVE",
"166 1297.667 OFFCURVE",
"166 1079 CURVE SMOOTH",
"166 864.333 OFFCURVE",
"290 730.667 OFFCURVE",
"574 644 CURVE SMOOTH",
"778 576 OFFCURVE",
"856 497.667 OFFCURVE",
"856 375 CURVE SMOOTH",
"856 229.667 OFFCURVE",
"749.667 140 OFFCURVE",
"575 140 CURVE SMOOTH",
"396.333 140 OFFCURVE",
"295 243.667 OFFCURVE",
"295 429 CURVE",
"110 429 LINE",
"110 165 OFFCURVE",
"259 5.667 OFFCURVE",
"507 -17 CURVE",
"507 -208 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"620 -208 LINE",
"620 -20 LINE",
"852 -6.667 OFFCURVE",
"1001 134 OFFCURVE",
"1001 346 CURVE SMOOTH",
"1001 598 OFFCURVE",
"817 677 OFFCURVE",
"575 760 CURVE SMOOTH",
"368 831 OFFCURVE",
"222 893 OFFCURVE",
"222 1112 CURVE SMOOTH",
"222 1296 OFFCURVE",
"363 1424 OFFCURVE",
"579 1424 CURVE SMOOTH",
"801.667 1424 OFFCURVE",
"939 1274 OFFCURVE",
"939 1047 CURVE",
"993 1047 LINE",
"993 1305.667 OFFCURVE",
"854.333 1462.667 OFFCURVE",
"609 1476 CURVE",
"609 1663 LINE",
"554 1663 LINE",
"554 1476 LINE",
"324.667 1468 OFFCURVE",
"168 1327.333 OFFCURVE",
"168 1110 CURVE SMOOTH",
"168 867 OFFCURVE",
"335 785 OFFCURVE",
"553.5 709.5 CURVE SMOOTH",
"765 636 OFFCURVE",
"947 568 OFFCURVE",
"947 344 CURVE SMOOTH",
"947 168 OFFCURVE",
"795.333 32 OFFCURVE",
"586 32 CURVE SMOOTH",
"332.667 32 OFFCURVE",
"175 173 OFFCURVE",
"175 409 CURVE",
"121 409 LINE",
"121 146.333 OFFCURVE",
"282.333 -10.333 OFFCURVE",
"565 -21 CURVE",
"565 -208 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"428 -208 LINE",
"461 -17 LINE",
"710 8 OFFCURVE",
"877 152 OFFCURVE",
"917 377 CURVE SMOOTH",
"955 593 OFFCURVE",
"856 719 OFFCURVE",
"588 810 CURVE SMOOTH",
"397 876 OFFCURVE",
"327 946 OFFCURVE",
"351 1082 CURVE SMOOTH",
"377 1229 OFFCURVE",
"478 1315 OFFCURVE",
"637 1315 CURVE SMOOTH",
"789 1315 OFFCURVE",
"864 1196 OFFCURVE",
"831 1008 CURVE",
"1015 1008 LINE",
"1063 1281 OFFCURVE",
"960 1441 OFFCURVE",
"742 1472 CURVE",
"781 1692 LINE",
"632 1692 LINE",
"593 1473 LINE",
"366 1446 OFFCURVE",
"204 1298 OFFCURVE",
"165 1079 CURVE SMOOTH",
"128 864 OFFCURVE",
"228 731 OFFCURVE",
"497 644 CURVE SMOOTH",
"689 576 OFFCURVE",
"753 498 OFFCURVE",
"731 375 CURVE SMOOTH",
"706 230 OFFCURVE",
"584 140 OFFCURVE",
"409 140 CURVE SMOOTH",
"230 140 OFFCURVE",
"147 244 OFFCURVE",
"180 429 CURVE",
"-5 429 LINE",
"-52 165 OFFCURVE",
"69 6 OFFCURVE",
"313 -17 CURVE",
"280 -208 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"393 -208 LINE",
"426 -20 LINE",
"660 -7 OFFCURVE",
"834 134 OFFCURVE",
"871 346 CURVE SMOOTH",
"916 598 OFFCURVE",
"746 677 OFFCURVE",
"518 760 CURVE SMOOTH",
"324 831 OFFCURVE",
"189 893 OFFCURVE",
"227 1112 CURVE SMOOTH",
"260 1296 OFFCURVE",
"423 1424 OFFCURVE",
"639 1424 CURVE SMOOTH",
"862 1424 OFFCURVE",
"973 1274 OFFCURVE",
"933 1047 CURVE",
"987 1047 LINE",
"1032 1306 OFFCURVE",
"921 1463 OFFCURVE",
"678 1476 CURVE",
"711 1663 LINE",
"656 1663 LINE",
"623 1476 LINE",
"393 1468 OFFCURVE",
"211 1327 OFFCURVE",
"173 1110 CURVE SMOOTH",
"130 867 OFFCURVE",
"283 785 OFFCURVE",
"488 710 CURVE SMOOTH",
"686 636 OFFCURVE",
"856 568 OFFCURVE",
"817 344 CURVE SMOOTH",
"786 168 OFFCURVE",
"610 32 OFFCURVE",
"401 32 CURVE SMOOTH",
"148 32 OFFCURVE",
"15 173 OFFCURVE",
"56 409 CURVE",
"2 409 LINE",
"-44 146 OFFCURVE",
"90 -10 OFFCURVE",
"371 -21 CURVE",
"338 -208 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0024;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1180 1247 LINE",
"1039 1323 LINE",
"328 185 LINE",
"469 109 LINE"
);
},
{
closed = 1;
nodes = (
"1299.667 -20 OFFCURVE",
"1424 100.333 OFFCURVE",
"1424 279 CURVE SMOOTH",
"1424 351 LINE SMOOTH",
"1424 541.667 OFFCURVE",
"1296.333 657 OFFCURVE",
"1107 657 CURVE SMOOTH",
"920.333 657 OFFCURVE",
"791 537 OFFCURVE",
"791 357 CURVE SMOOTH",
"791 283 LINE SMOOTH",
"791 100.333 OFFCURVE",
"917 -20 OFFCURVE",
"1109 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1037 146 OFFCURVE",
"983 205.667 OFFCURVE",
"983 279 CURVE SMOOTH",
"983 354 LINE SMOOTH",
"983 438 OFFCURVE",
"1032.333 490 OFFCURVE",
"1107 490 CURVE SMOOTH",
"1181.667 490 OFFCURVE",
"1231 437 OFFCURVE",
"1231 357 CURVE SMOOTH",
"1231 281 LINE SMOOTH",
"1231 191 OFFCURVE",
"1190.333 146 OFFCURVE",
"1109 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"600 800 OFFCURVE",
"727 919 OFFCURVE",
"727 1099 CURVE SMOOTH",
"727 1171 LINE SMOOTH",
"727 1359 OFFCURVE",
"600.667 1477 OFFCURVE",
"410 1477 CURVE SMOOTH",
"222 1477 OFFCURVE",
"95 1354.667 OFFCURVE",
"95 1176 CURVE SMOOTH",
"95 1105 LINE SMOOTH",
"95 918.333 OFFCURVE",
"222.667 800 OFFCURVE",
"412 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337.333 966 OFFCURVE",
"287 1019 OFFCURVE",
"287 1099 CURVE SMOOTH",
"287 1172 LINE SMOOTH",
"287 1258.667 OFFCURVE",
"336.667 1310 OFFCURVE",
"410 1310 CURVE SMOOTH",
"487.333 1310 OFFCURVE",
"534 1256 OFFCURVE",
"534 1176 CURVE SMOOTH",
"534 1102 LINE SMOOTH",
"534 1019.333 OFFCURVE",
"486.667 966 OFFCURVE",
"412 966 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
17 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
53 35 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
55 3 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1512;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1158 1248 LINE",
"1053 1314 LINE",
"342 176 LINE",
"447 110 LINE"
);
},
{
closed = 1;
nodes = (
"1287.333 -21 OFFCURVE",
"1411 104.333 OFFCURVE",
"1411 279 CURVE SMOOTH",
"1411 350 LINE SMOOTH",
"1411 535.333 OFFCURVE",
"1286.667 657 OFFCURVE",
"1112 657 CURVE SMOOTH",
"937.333 657 OFFCURVE",
"814 531.667 OFFCURVE",
"814 357 CURVE SMOOTH",
"814 285 LINE SMOOTH",
"814 99.667 OFFCURVE",
"940.667 -21 OFFCURVE",
"1114 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1015.333 99 OFFCURVE",
"952 173.667 OFFCURVE",
"952 279 CURVE SMOOTH",
"952 353 LINE SMOOTH",
"952 465 OFFCURVE",
"1017.333 536 OFFCURVE",
"1112 536 CURVE SMOOTH",
"1209.333 536 OFFCURVE",
"1272 462.333 OFFCURVE",
"1272 357 CURVE SMOOTH",
"1272 283 LINE SMOOTH",
"1272 169.667 OFFCURVE",
"1210 99 OFFCURVE",
"1114 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"577 800 OFFCURVE",
"701 923 OFFCURVE",
"701 1099 CURVE SMOOTH",
"701 1170 LINE SMOOTH",
"701 1351.333 OFFCURVE",
"580.333 1477 OFFCURVE",
"403 1477 CURVE SMOOTH",
"228.333 1477 OFFCURVE",
"105 1350.667 OFFCURVE",
"105 1176 CURVE SMOOTH",
"105 1106 LINE SMOOTH",
"105 920.667 OFFCURVE",
"231.667 800 OFFCURVE",
"405 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"306.333 920 OFFCURVE",
"243 995 OFFCURVE",
"243 1099 CURVE SMOOTH",
"243 1172 LINE SMOOTH",
"243 1281.333 OFFCURVE",
"304.333 1356 OFFCURVE",
"403 1356 CURVE SMOOTH",
"501.667 1356 OFFCURVE",
"563 1280 OFFCURVE",
"563 1176 CURVE SMOOTH",
"563 1103 LINE SMOOTH",
"563 989.667 OFFCURVE",
"499.667 920 OFFCURVE",
"405 920 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
17 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
53 35 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
55 3 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1500;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1133 1269 LINE",
"1088 1300 LINE",
"377 162 LINE",
"422 131 LINE"
);
},
{
closed = 1;
nodes = (
"1296.333 -21 OFFCURVE",
"1413 107 OFFCURVE",
"1413 279 CURVE SMOOTH",
"1413 350 LINE SMOOTH",
"1413 531.333 OFFCURVE",
"1297 657 OFFCURVE",
"1141 657 CURVE SMOOTH",
"986.333 657 OFFCURVE",
"870 529 OFFCURVE",
"870 357 CURVE SMOOTH",
"870 284 LINE SMOOTH",
"870 104 OFFCURVE",
"988.333 -21 OFFCURVE",
"1143 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1011 34 OFFCURVE",
"925 136.333 OFFCURVE",
"925 279 CURVE SMOOTH",
"925 353 LINE SMOOTH",
"925 505 OFFCURVE",
"1009 602 OFFCURVE",
"1141 602 CURVE SMOOTH",
"1274.333 602 OFFCURVE",
"1358 507.667 OFFCURVE",
"1358 357 CURVE SMOOTH",
"1358 284 LINE SMOOTH",
"1358 136 OFFCURVE",
"1273.667 34 OFFCURVE",
"1143 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"542.667 800 OFFCURVE",
"657 929.667 OFFCURVE",
"657 1099 CURVE SMOOTH",
"657 1171 LINE SMOOTH",
"657 1348.333 OFFCURVE",
"542 1477 OFFCURVE",
"386 1477 CURVE SMOOTH",
"231.333 1477 OFFCURVE",
"114 1348 OFFCURVE",
"114 1176 CURVE SMOOTH",
"114 1105 LINE SMOOTH",
"114 925 OFFCURVE",
"232 800 OFFCURVE",
"388 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"254.667 855 OFFCURVE",
"169 960.333 OFFCURVE",
"169 1099 CURVE SMOOTH",
"169 1169 LINE SMOOTH",
"169 1322.333 OFFCURVE",
"259.333 1422 OFFCURVE",
"386 1422 CURVE SMOOTH",
"515.333 1422 OFFCURVE",
"602 1320 OFFCURVE",
"602 1176 CURVE SMOOTH",
"602 1104 LINE SMOOTH",
"602 956 OFFCURVE",
"516 855 OFFCURVE",
"388 855 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
17 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
53 35 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
55 3 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1527;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1187 1248 LINE",
"1094 1314 LINE",
"182 176 LINE",
"276 110 LINE"
);
},
{
closed = 1;
nodes = (
"1093 -21 OFFCURVE",
"1239 104 OFFCURVE",
"1269 279 CURVE SMOOTH",
"1282 350 LINE SMOOTH",
"1315 535 OFFCURVE",
"1212 657 OFFCURVE",
"1037 657 CURVE SMOOTH",
"862 657 OFFCURVE",
"717 532 OFFCURVE",
"686 357 CURVE SMOOTH",
"673 285 LINE SMOOTH",
"641 100 OFFCURVE",
"746 -21 OFFCURVE",
"920 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"842 99 OFFCURVE",
"792 174 OFFCURVE",
"810 279 CURVE SMOOTH",
"823 353 LINE SMOOTH",
"843 465 OFFCURVE",
"921 536 OFFCURVE",
"1016 536 CURVE SMOOTH",
"1113 536 OFFCURVE",
"1163 462 OFFCURVE",
"1144 357 CURVE SMOOTH",
"1131 283 LINE SMOOTH",
"1111 170 OFFCURVE",
"1037 99 OFFCURVE",
"941 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"527 800 OFFCURVE",
"673 923 OFFCURVE",
"704 1099 CURVE SMOOTH",
"717 1170 LINE SMOOTH",
"748 1351 OFFCURVE",
"650 1477 OFFCURVE",
"473 1477 CURVE SMOOTH",
"298 1477 OFFCURVE",
"152 1351 OFFCURVE",
"122 1176 CURVE SMOOTH",
"109 1106 LINE SMOOTH",
"77 921 OFFCURVE",
"182 800 OFFCURVE",
"355 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 920 OFFCURVE",
"228 995 OFFCURVE",
"246 1099 CURVE SMOOTH",
"259 1172 LINE SMOOTH",
"278 1281 OFFCURVE",
"353 1356 OFFCURVE",
"451 1356 CURVE SMOOTH",
"550 1356 OFFCURVE",
"598 1280 OFFCURVE",
"580 1176 CURVE SMOOTH",
"567 1103 LINE SMOOTH",
"547 990 OFFCURVE",
"471 920 OFFCURVE",
"376 920 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
17 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
53 35 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
55 3 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1500;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"1166 1269 LINE",
"1126 1300 LINE",
"215 162 LINE",
"254 131 LINE"
);
},
{
closed = 1;
nodes = (
"1102 -21 OFFCURVE",
"1241 107 OFFCURVE",
"1271 279 CURVE SMOOTH",
"1284 350 LINE SMOOTH",
"1316 531 OFFCURVE",
"1222 657 OFFCURVE",
"1066 657 CURVE SMOOTH",
"911 657 OFFCURVE",
"772 529 OFFCURVE",
"742 357 CURVE SMOOTH",
"729 284 LINE SMOOTH",
"698 104 OFFCURVE",
"794 -21 OFFCURVE",
"949 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"826 34 OFFCURVE",
"758 136 OFFCURVE",
"783 279 CURVE SMOOTH",
"796 353 LINE SMOOTH",
"823 505 OFFCURVE",
"924 602 OFFCURVE",
"1056 602 CURVE SMOOTH",
"1190 602 OFFCURVE",
"1257 508 OFFCURVE",
"1230 357 CURVE SMOOTH",
"1217 284 LINE SMOOTH",
"1191 136 OFFCURVE",
"1089 34 OFFCURVE",
"958 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 800 OFFCURVE",
"630 930 OFFCURVE",
"660 1099 CURVE SMOOTH",
"673 1171 LINE SMOOTH",
"704 1348 OFFCURVE",
"612 1477 OFFCURVE",
"456 1477 CURVE SMOOTH",
"301 1477 OFFCURVE",
"161 1348 OFFCURVE",
"131 1176 CURVE SMOOTH",
"118 1105 LINE SMOOTH",
"86 925 OFFCURVE",
"182 800 OFFCURVE",
"338 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"215 855 OFFCURVE",
"148 960 OFFCURVE",
"172 1099 CURVE SMOOTH",
"184 1169 LINE SMOOTH",
"211 1322 OFFCURVE",
"319 1422 OFFCURVE",
"446 1422 CURVE SMOOTH",
"575 1422 OFFCURVE",
"644 1320 OFFCURVE",
"619 1176 CURVE SMOOTH",
"606 1104 LINE SMOOTH",
"580 956 OFFCURVE",
"476 855 OFFCURVE",
"348 855 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
17 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
42 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
53 35 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
55 3 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1527;
}
);
note = uni0025;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"686.333 -20 OFFCURVE",
"809.667 15.333 OFFCURVE",
"917 86 CURVE",
"992 0 LINE",
"1320 0 LINE",
"1102 253 LINE",
"1189.333 370.333 OFFCURVE",
"1233 523.667 OFFCURVE",
"1233 713 CURVE",
"987 713 LINE",
"987 619.667 OFFCURVE",
"967.333 534.333 OFFCURVE",
"928 457 CURVE",
"677 749 LINE",
"789 830 LINE SMOOTH",
"906.333 918.667 OFFCURVE",
"965 1021 OFFCURVE",
"965 1137 CURVE SMOOTH",
"965 1330.333 OFFCURVE",
"810.333 1476 OFFCURVE",
"593 1476 CURVE SMOOTH",
"350.333 1476 OFFCURVE",
"196 1319.667 OFFCURVE",
"196 1093 CURVE SMOOTH",
"196 982.333 OFFCURVE",
"248.333 886 OFFCURVE",
"335 770 CURVE",
"133.667 630 OFFCURVE",
"71 526.667 OFFCURVE",
"71 392 CURVE SMOOTH",
"71 145.333 OFFCURVE",
"259 -20 OFFCURVE",
"547 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"442.333 212 OFFCURVE",
"361 292 OFFCURVE",
"361 408 CURVE SMOOTH",
"361 476.667 OFFCURVE",
"390.667 536.333 OFFCURVE",
"450 587 CURVE",
"471 602 LINE",
"758 270 LINE",
"696 231.333 OFFCURVE",
"630.333 212 OFFCURVE",
"561 212 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"484.333 984 OFFCURVE",
"455 1047 OFFCURVE",
"455 1097 CURVE SMOOTH",
"455 1185 OFFCURVE",
"509.333 1243 OFFCURVE",
"592 1243 CURVE SMOOTH",
"669.333 1243 OFFCURVE",
"724 1185.667 OFFCURVE",
"724 1119 CURVE SMOOTH",
"724 1052.333 OFFCURVE",
"698.667 1009.667 OFFCURVE",
"620 959 CURVE SMOOTH",
"543 908 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
42 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 34 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
16 42 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
17 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 17 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 31 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1344;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"709.333 -20 OFFCURVE",
"849.333 27 OFFCURVE",
"948 115 CURVE",
"1045 0 LINE",
"1267 0 LINE",
"1059 249 LINE",
"1141 361 OFFCURVE",
"1182 502 OFFCURVE",
"1182 672 CURVE",
"1015 672 LINE",
"1015 566 OFFCURVE",
"992.333 469.667 OFFCURVE",
"947 383 CURVE",
"623 770 LINE",
"730 849 LINE SMOOTH",
"878 958.333 OFFCURVE",
"930 1050.667 OFFCURVE",
"930 1168 CURVE SMOOTH",
"930 1345.333 OFFCURVE",
"784 1476 OFFCURVE",
"584 1476 CURVE SMOOTH",
"360 1476 OFFCURVE",
"220 1343.333 OFFCURVE",
"220 1122 CURVE SMOOTH",
"220 1027.333 OFFCURVE",
"253.667 946.333 OFFCURVE",
"383 789 CURVE",
"163 633 OFFCURVE",
"101 531 OFFCURVE",
"101 391 CURVE SMOOTH",
"101 144.333 OFFCURVE",
"288 -20 OFFCURVE",
"572 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"394.667 131 OFFCURVE",
"286 233.667 OFFCURVE",
"286 391 CURVE SMOOTH",
"286 477.667 OFFCURVE",
"341.667 562 OFFCURVE",
"453 644 CURVE SMOOTH",
"486 668 LINE",
"841 243 LINE",
"759.667 168.333 OFFCURVE",
"670 131 OFFCURVE",
"572 131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"444.333 984 OFFCURVE",
"405 1064 OFFCURVE",
"405 1128 CURVE SMOOTH",
"405 1241.333 OFFCURVE",
"473.667 1324 OFFCURVE",
"583 1324 CURVE SMOOTH",
"684.333 1324 OFFCURVE",
"759 1257.333 OFFCURVE",
"759 1168 CURVE SMOOTH",
"759 1085.333 OFFCURVE",
"731.667 1035 OFFCURVE",
"641 971 CURVE SMOOTH",
"523 888 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
42 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 34 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
16 42 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
17 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 17 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 31 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1273;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"700.333 -20 OFFCURVE",
"841.333 45.333 OFFCURVE",
"972 176 CURVE",
"1129 0 LINE",
"1196 0 LINE",
"1006 216 LINE",
"1094.667 335.333 OFFCURVE",
"1139 474 OFFCURVE",
"1139 632 CURVE",
"1084 632 LINE",
"1084 489.333 OFFCURVE",
"1045.667 364.667 OFFCURVE",
"969 258 CURVE",
"494 797 LINE",
"650 921 LINE SMOOTH",
"775.333 1025 OFFCURVE",
"838 1122.333 OFFCURVE",
"838 1213 CURVE SMOOTH",
"838 1369 OFFCURVE",
"728.667 1477 OFFCURVE",
"562 1477 CURVE SMOOTH",
"380.667 1477 OFFCURVE",
"257 1355 OFFCURVE",
"257 1167 CURVE SMOOTH",
"257 1053.667 OFFCURVE",
"304.667 946 OFFCURVE",
"422 802 CURVE",
"180.333 600.667 OFFCURVE",
"115 482.667 OFFCURVE",
"115 352 CURVE SMOOTH",
"115 124 OFFCURVE",
"281 -20 OFFCURVE",
"549 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318.333 34 OFFCURVE",
"169 162.667 OFFCURVE",
"169 352 CURVE SMOOTH",
"169 473.333 OFFCURVE",
"244.667 587 OFFCURVE",
"402 723 CURVE",
"454 764 LINE",
"937 217 LINE",
"835.667 99.667 OFFCURVE",
"697 34 OFFCURVE",
"549 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"362 952 OFFCURVE",
"312 1063.667 OFFCURVE",
"312 1169 CURVE SMOOTH",
"312 1319.667 OFFCURVE",
"411.333 1423 OFFCURVE",
"562 1423 CURVE SMOOTH",
"691.333 1423 OFFCURVE",
"782 1335.667 OFFCURVE",
"782 1213 CURVE SMOOTH",
"782 1133.667 OFFCURVE",
"733.667 1053.667 OFFCURVE",
"637 973 CURVE SMOOTH",
"462 834 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
42 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 34 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
16 42 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
17 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 17 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 31 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1247;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"515 -20 OFFCURVE",
"663 27 OFFCURVE",
"777 115 CURVE",
"854 0 LINE",
"1076 0 LINE",
"912 249 LINE",
"1014 361 OFFCURVE",
"1080 502 OFFCURVE",
"1110 672 CURVE",
"943 672 LINE",
"924 566 OFFCURVE",
"884 470 OFFCURVE",
"824 383 CURVE",
"568 770 LINE",
"689 849 LINE SMOOTH",
"856 958 OFFCURVE",
"924 1051 OFFCURVE",
"945 1168 CURVE SMOOTH",
"976 1345 OFFCURVE",
"853 1476 OFFCURVE",
"653 1476 CURVE SMOOTH",
"429 1476 OFFCURVE",
"266 1343 OFFCURVE",
"227 1122 CURVE SMOOTH",
"210 1027 OFFCURVE",
"230 946 OFFCURVE",
"331 789 CURVE",
"84 633 OFFCURVE",
"4 531 OFFCURVE",
"-21 391 CURVE SMOOTH",
"-64 144 OFFCURVE",
"94 -20 OFFCURVE",
"378 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"227 131 OFFCURVE",
"136 234 OFFCURVE",
"164 391 CURVE SMOOTH",
"179 478 OFFCURVE",
"250 562 OFFCURVE",
"376 644 CURVE SMOOTH",
"413 668 LINE",
"693 243 LINE",
"599 168 OFFCURVE",
"502 131 OFFCURVE",
"404 131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"427 984 OFFCURVE",
"402 1064 OFFCURVE",
"413 1128 CURVE SMOOTH",
"433 1241 OFFCURVE",
"516 1324 OFFCURVE",
"626 1324 CURVE SMOOTH",
"727 1324 OFFCURVE",
"790 1257 OFFCURVE",
"774 1168 CURVE SMOOTH",
"760 1085 OFFCURVE",
"723 1035 OFFCURVE",
"621 971 CURVE SMOOTH",
"489 888 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
42 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 34 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
16 42 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
17 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 17 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 31 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1273;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"506 -20 OFFCURVE",
"659 45 OFFCURVE",
"812 176 CURVE",
"938 0 LINE",
"1005 0 LINE",
"853 216 LINE",
"963 335 OFFCURVE",
"1032 474 OFFCURVE",
"1060 632 CURVE",
"1005 632 LINE",
"979 489 OFFCURVE",
"919 365 OFFCURVE",
"824 258 CURVE",
"444 797 LINE",
"622 921 LINE SMOOTH",
"765 1025 OFFCURVE",
"845 1122 OFFCURVE",
"861 1213 CURVE SMOOTH",
"889 1369 OFFCURVE",
"798 1477 OFFCURVE",
"632 1477 CURVE SMOOTH",
"450 1477 OFFCURVE",
"305 1355 OFFCURVE",
"272 1167 CURVE SMOOTH",
"252 1054 OFFCURVE",
"281 946 OFFCURVE",
"373 802 CURVE",
"95 601 OFFCURVE",
"9 483 OFFCURVE",
"-14 352 CURVE SMOOTH",
"-54 124 OFFCURVE",
"87 -20 OFFCURVE",
"355 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"134 34 OFFCURVE",
"7 163 OFFCURVE",
"40 352 CURVE SMOOTH",
"62 473 OFFCURVE",
"157 587 OFFCURVE",
"339 723 CURVE",
"398 764 LINE",
"784 217 LINE",
"662 100 OFFCURVE",
"512 34 OFFCURVE",
"364 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 952 OFFCURVE",
"309 1064 OFFCURVE",
"327 1169 CURVE SMOOTH",
"354 1320 OFFCURVE",
"471 1423 OFFCURVE",
"622 1423 CURVE SMOOTH",
"751 1423 OFFCURVE",
"827 1336 OFFCURVE",
"805 1213 CURVE SMOOTH",
"791 1134 OFFCURVE",
"729 1054 OFFCURVE",
"618 973 CURVE SMOOTH",
"418 834 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
42 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 34 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
16 42 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
17 9 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
25 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
22 17 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 31 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1247;
}
);
note = uni0026;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"226 985 LINE",
"275 1389 LINE",
"275 1536 LINE",
"63 1536 LINE",
"63 985 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 331;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"212 1057 LINE",
"253 1425 LINE",
"253 1536 LINE",
"103 1536 LINE",
"103 1057 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 357;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"166 1122 LINE",
"200 1367 LINE",
"200 1536 LINE",
"145 1536 LINE",
"136 1122 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 340;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"198 1057 LINE",
"313 1425 LINE",
"333 1536 LINE",
"183 1536 LINE",
"99 1057 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 357;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"173 1122 LINE",
"250 1367 LINE",
"280 1536 LINE",
"225 1536 LINE",
"143 1122 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 340;
}
);
leftKerningGroup = quotedbl;
note = uni0027;
rightKerningGroup = quotedbl;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"679 -302 LINE",
"585 -231 OFFCURVE",
"510 -122 OFFCURVE",
"458 20 CURVE SMOOTH",
"400 175 OFFCURVE",
"369 370 OFFCURVE",
"369 598 CURVE SMOOTH",
"369 785 OFFCURVE",
"394 954 OFFCURVE",
"440 1095 CURVE SMOOTH",
"493 1257 OFFCURVE",
"575 1383 OFFCURVE",
"679 1460 CURVE {name = \"❌\";}",
"623 1616 LINE",
"438 1533 OFFCURVE",
"266 1304 OFFCURVE",
"185 1028 CURVE SMOOTH",
"144 890 OFFCURVE",
"124 745 OFFCURVE",
"124 592 CURVE SMOOTH",
"129 246 OFFCURVE",
"213 -34 OFFCURVE",
"370 -240 CURVE SMOOTH",
"448 -343 OFFCURVE",
"532 -414 OFFCURVE",
"623 -455 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 719;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"661 -357 LINE",
"535 -254 OFFCURVE",
"448 -100 OFFCURVE",
"393 73 CURVE SMOOTH",
"341 234 OFFCURVE",
"318 411 OFFCURVE",
"318 579 CURVE SMOOTH",
"324 782 OFFCURVE",
"353 959 OFFCURVE",
"400 1106 CURVE SMOOTH",
"461 1296 OFFCURVE",
"551 1437 OFFCURVE",
"661 1521 CURVE",
"623 1643 LINE",
"471 1561 OFFCURVE",
"353 1406 OFFCURVE",
"271 1225 CURVE SMOOTH",
"180 1024 OFFCURVE",
"133 790 OFFCURVE",
"133 591 CURVE SMOOTH",
"133 275.667 OFFCURVE",
"211.667 4.667 OFFCURVE",
"369 -222 CURVE SMOOTH",
"449.667 -338 OFFCURVE",
"534.333 -420.667 OFFCURVE",
"623 -470 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"581 -427 LINE",
"414 -316 OFFCURVE",
"301 -36 OFFCURVE",
"252 162.5 CURVE SMOOTH",
"218.667 298.167 OFFCURVE",
"202 432 OFFCURVE",
"202 616 CURVE SMOOTH",
"206 876 OFFCURVE",
"280 1160.333 OFFCURVE",
"396 1363 CURVE SMOOTH",
"454 1464.333 OFFCURVE",
"515.667 1536.667 OFFCURVE",
"581 1580 CURVE",
"562 1623 LINE",
"411 1528 OFFCURVE",
"272 1290 OFFCURVE",
"201 1011 CURVE SMOOTH",
"166 872 OFFCURVE",
"148 730 OFFCURVE",
"148 586 CURVE SMOOTH",
"148 259 OFFCURVE",
"223 -27 OFFCURVE",
"350.5 -238.5 CURVE SMOOTH",
"414.167 -344.167 OFFCURVE",
"484.667 -421.333 OFFCURVE",
"562 -470 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 607;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"407 -357 LINE",
"299 -254 OFFCURVE",
"240 -100 OFFCURVE",
"215 73 CURVE SMOOTH",
"191 234 OFFCURVE",
"200 411 OFFCURVE",
"229 579 CURVE SMOOTH",
"271 782 OFFCURVE",
"331 959 OFFCURVE",
"404 1106 CURVE SMOOTH",
"499 1296 OFFCURVE",
"614 1437 OFFCURVE",
"738 1521 CURVE",
"722 1643 LINE",
"555 1561 OFFCURVE",
"410 1406 OFFCURVE",
"296 1225 CURVE SMOOTH",
"170 1024 OFFCURVE",
"82 790 OFFCURVE",
"46 591 CURVE SMOOTH",
"-9 276 OFFCURVE",
"22 5 OFFCURVE",
"139 -222 CURVE SMOOTH",
"199 -338 OFFCURVE",
"269 -421 OFFCURVE",
"349 -470 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"315 -427 LINE",
"167 -316 OFFCURVE",
"104 -36 OFFCURVE",
"90 163 CURVE SMOOTH",
"80 298 OFFCURVE",
"87 432 OFFCURVE",
"120 616 CURVE SMOOTH",
"170 876 OFFCURVE",
"294 1160 OFFCURVE",
"446 1363 CURVE SMOOTH",
"521 1464 OFFCURVE",
"596 1537 OFFCURVE",
"669 1580 CURVE",
"657 1623 LINE",
"490 1528 OFFCURVE",
"309 1290 OFFCURVE",
"188 1011 CURVE SMOOTH",
"129 872 OFFCURVE",
"86 730 OFFCURVE",
"61 586 CURVE SMOOTH",
"3 259 OFFCURVE",
"27 -27 OFFCURVE",
"118 -239 CURVE SMOOTH",
"163 -344 OFFCURVE",
"220 -421 OFFCURVE",
"288 -470 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 607;
}
);
note = uni0028;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"281.333 -375 OFFCURVE",
"457.333 -144.667 OFFCURVE",
"544 134 CURVE SMOOTH",
"587.333 273.333 OFFCURVE",
"609 418.333 OFFCURVE",
"609 569 CURVE SMOOTH",
"606 793 OFFCURVE",
"566 993 OFFCURVE",
"492 1163 CURVE SMOOTH",
"417 1337 OFFCURVE",
"277 1537 OFFCURVE",
"96 1616 CURVE",
"40 1463 LINE",
"131 1392 OFFCURVE",
"205 1284 OFFCURVE",
"257 1144 CURVE SMOOTH",
"317 984 OFFCURVE",
"349 781 OFFCURVE",
"349 541 CURVE SMOOTH",
"347 341 OFFCURVE",
"315 160 OFFCURVE",
"258 13 CURVE SMOOTH",
"206 -124 OFFCURVE",
"131 -233 OFFCURVE",
"40 -302 CURVE",
"96 -455 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 722;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"253 -372.667 OFFCURVE",
"430.5 -119.167 OFFCURVE",
"508.5 153.5 CURVE SMOOTH",
"547.5 289.833 OFFCURVE",
"567 432.333 OFFCURVE",
"567 581 CURVE SMOOTH",
"567 894.333 OFFCURVE",
"487.833 1171 OFFCURVE",
"328.5 1399 CURVE SMOOTH",
"248.833 1513 OFFCURVE",
"165 1594.333 OFFCURVE",
"77 1643 CURVE",
"38 1530 LINE",
"168.667 1423.333 OFFCURVE",
"278.333 1224.167 OFFCURVE",
"337 983.5 CURVE SMOOTH",
"366.333 863.167 OFFCURVE",
"381 733 OFFCURVE",
"381 593 CURVE SMOOTH",
"380 360 OFFCURVE",
"346 171 OFFCURVE",
"286 12 CURVE SMOOTH",
"227 -149 OFFCURVE",
"141 -278 OFFCURVE",
"38 -357 CURVE",
"77 -470 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 712;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"201.667 -372.667 OFFCURVE",
"336.167 -150.167 OFFCURVE",
"407.5 130.5 CURVE SMOOTH",
"443.167 270.833 OFFCURVE",
"461 416 OFFCURVE",
"461 566 CURVE SMOOTH",
"461 880.667 OFFCURVE",
"387.5 1164.667 OFFCURVE",
"257.5 1386 CURVE SMOOTH",
"192.5 1496.667 OFFCURVE",
"122.333 1575.667 OFFCURVE",
"47 1623 CURVE",
"28 1580 LINE",
"161.333 1492 OFFCURVE",
"288 1266.833 OFFCURVE",
"356 995.5 CURVE SMOOTH",
"390 859.833 OFFCURVE",
"407 724.667 OFFCURVE",
"407 590 CURVE SMOOTH",
"407 292.667 OFFCURVE",
"339.667 21 OFFCURVE",
"221 -195 CURVE SMOOTH",
"161.667 -303 OFFCURVE",
"97.333 -380.333 OFFCURVE",
"28 -427 CURVE",
"47 -470 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 623;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-3 -373 OFFCURVE",
"219 -119 OFFCURVE",
"345 154 CURVE SMOOTH",
"408 290 OFFCURVE",
"452 432 OFFCURVE",
"479 581 CURVE SMOOTH",
"534 894 OFFCURVE",
"504 1171 OFFCURVE",
"384 1399 CURVE SMOOTH",
"325 1513 OFFCURVE",
"255 1594 OFFCURVE",
"176 1643 CURVE",
"117 1530 LINE",
"229 1423 OFFCURVE",
"303 1224 OFFCURVE",
"320 984 CURVE SMOOTH",
"328 863 OFFCURVE",
"319 733 OFFCURVE",
"295 593 CURVE SMOOTH",
"253 360 OFFCURVE",
"185 171 OFFCURVE",
"97 12 CURVE SMOOTH",
"10 -149 OFFCURVE",
"-99 -278 OFFCURVE",
"-216 -357 CURVE",
"-197 -470 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 712;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-55 -373 OFFCURVE",
"119 -150 OFFCURVE",
"240 131 CURVE SMOOTH",
"300 271 OFFCURVE",
"344 416 OFFCURVE",
"370 566 CURVE SMOOTH",
"425 881 OFFCURVE",
"402 1165 OFFCURVE",
"311 1386 CURVE SMOOTH",
"266 1497 OFFCURVE",
"209 1576 OFFCURVE",
"142 1623 CURVE",
"116 1580 LINE",
"234 1492 OFFCURVE",
"321 1267 OFFCURVE",
"341 996 CURVE SMOOTH",
"351 860 OFFCURVE",
"344 725 OFFCURVE",
"320 590 CURVE SMOOTH",
"268 293 OFFCURVE",
"153 21 OFFCURVE",
"-4 -195 CURVE SMOOTH",
"-83 -303 OFFCURVE",
"-161 -380 OFFCURVE",
"-238 -427 CURVE",
"-227 -470 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 623;
}
);
note = uni0029;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"805 685 LINE",
"595 951 LINE",
"915 1040 LINE",
"856 1223 LINE",
"553 1100 LINE",
"573 1456 LINE",
"377 1456 LINE",
"397 1107 LINE",
"86 1232 LINE",
"27 1051 LINE",
"341 962 LINE",
"125 690 LINE",
"284 582 LINE",
"464 864 LINE",
"646 572 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 928;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"744 703 LINE",
"546 974 LINE",
"853 1065 LINE",
"807 1217 LINE",
"510 1107 LINE",
"520 1456 LINE",
"367 1456 LINE",
"376 1112 LINE",
"74 1224 LINE",
"28 1073 LINE",
"330 983 LINE",
"129 707 LINE",
"254 616 LINE",
"434 897 LINE",
"620 609 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 882;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"432 986 LINE",
"674 664 LINE",
"721 697 LINE",
"472 1014 LINE",
"832 1151 LINE",
"812 1204 LINE",
"460 1061 LINE",
"460 1456 LINE",
"410 1456 LINE",
"410 1062 LINE",
"48 1195 LINE",
"30 1141 LINE",
"393 1017 LINE",
"159 693 LINE",
"204 661 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"677 703 LINE",
"527 974 LINE",
"850 1065 LINE",
"831 1217 LINE",
"514 1107 LINE",
"586 1456 LINE",
"433 1456 LINE",
"381 1112 LINE",
"99 1224 LINE",
"26 1073 LINE",
"313 983 LINE",
"63 707 LINE",
"172 616 LINE",
"401 897 LINE",
"537 609 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 882;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"415 986 LINE",
"600 664 LINE",
"653 697 LINE",
"460 1014 LINE",
"844 1151 LINE",
"834 1204 LINE",
"456 1061 LINE",
"526 1456 LINE",
"476 1456 LINE",
"406 1062 LINE",
"68 1195 LINE",
"40 1141 LINE",
"382 1017 LINE",
"90 693 LINE",
"130 661 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
}
);
note = uni002A;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"694 146 LINE",
"694 554 LINE",
"1055 554 LINE",
"1055 815 LINE",
"694 815 LINE",
"694 1206 LINE",
"419 1206 LINE",
"419 815 LINE",
"57 815 LINE",
"57 554 LINE",
"419 554 LINE",
"419 146 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1118;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"670 146 LINE",
"670 606 LINE",
"1076 606 LINE",
"1076 781 LINE",
"670 781 LINE",
"670 1206 LINE",
"484 1206 LINE",
"484 781 LINE",
"78 781 LINE",
"78 606 LINE",
"484 606 LINE",
"484 146 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1161;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"590 146 LINE",
"590 649 LINE",
"1071 649 LINE",
"1071 702 LINE",
"590 702 LINE",
"590 1206 LINE",
"535 1206 LINE",
"535 702 LINE",
"73 702 LINE",
"73 649 LINE",
"535 649 LINE",
"535 146 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1151;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"505 146 LINE",
"586 606 LINE",
"992 606 LINE",
"1023 781 LINE",
"617 781 LINE",
"692 1206 LINE",
"506 1206 LINE",
"431 781 LINE",
"25 781 LINE",
"-6 606 LINE",
"400 606 LINE",
"319 146 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1161;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"425 146 LINE",
"514 649 LINE",
"995 649 LINE",
"1004 702 LINE",
"523 702 LINE",
"612 1206 LINE",
"557 1206 LINE",
"468 702 LINE",
"6 702 LINE",
"-3 649 LINE",
"459 649 LINE",
"370 146 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1151;
}
);
note = uni002B;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"300.667 -266.333 OFFCURVE",
"381.667 -102 OFFCURVE",
"383 46 CURVE SMOOTH",
"383 246 LINE",
"140 246 LINE",
"140 22 LINE SMOOTH",
"138.667 -58.667 OFFCURVE",
"115.667 -139.667 OFFCURVE",
"35 -286 CURVE",
"186 -365 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"234 -208.667 OFFCURVE",
"308 -60.667 OFFCURVE",
"308 74 CURVE SMOOTH",
"308 219 LINE",
"127 219 LINE",
"127 52 LINE SMOOTH",
"124.333 -40.667 OFFCURVE",
"91.667 -130.667 OFFCURVE",
"29 -218 CURVE",
"134 -290 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 402;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"197 -182.333 OFFCURVE",
"232.333 -93 OFFCURVE",
"235 13 CURVE SMOOTH",
"235 159 LINE",
"180 159 LINE",
"180 -8 LINE",
"175.333 -82 OFFCURVE",
"146 -153.667 OFFCURVE",
"92 -223 CURVE",
"129 -255 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 383;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"6 -209 OFFCURVE",
"107 -61 OFFCURVE",
"130 74 CURVE SMOOTH",
"156 219 LINE",
"-25 219 LINE",
"-55 52 LINE SMOOTH",
"-74 -41 OFFCURVE",
"-122 -131 OFFCURVE",
"-200 -218 CURVE",
"-108 -290 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 402;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-26 -182 OFFCURVE",
"25 -93 OFFCURVE",
"47 13 CURVE SMOOTH",
"72 159 LINE",
"17 159 LINE",
"-12 -8 LINE",
"-30 -82 OFFCURVE",
"-72 -154 OFFCURVE",
"-138 -223 CURVE",
"-107 -255 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
4 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 383;
}
);
leftKerningGroup = comma;
note = uni002C;
rightKerningGroup = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"673 507 LINE",
"673 740 LINE",
"110 740 LINE",
"110 507 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 794;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"525 543 LINE",
"525 694 LINE",
"37 694 LINE",
"37 543 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 565;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"531 639 LINE",
"531 693 LINE",
"61 693 LINE",
"61 639 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 607;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"430 543 LINE",
"457 694 LINE",
"-31 694 LINE",
"-58 543 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 565;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"453 639 LINE",
"462 693 LINE",
"-8 693 LINE",
"-17 639 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 607;
}
);
leftKerningGroup = hyphen;
note = uni002D;
unicode = 002D;
},
{
glyphname = period;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"385 -11 OFFCURVE",
"453 51.333 OFFCURVE",
"453 142 CURVE SMOOTH",
"453 234 OFFCURVE",
"383.667 297 OFFCURVE",
"289 297 CURVE SMOOTH",
"195.667 297 OFFCURVE",
"126 234 OFFCURVE",
"126 142 CURVE SMOOTH",
"126 51.333 OFFCURVE",
"194.333 -11 OFFCURVE",
"289 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 595;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"334 -11 OFFCURVE",
"374 35.667 OFFCURVE",
"374 97 CURVE SMOOTH",
"374 161 OFFCURVE",
"334 209 OFFCURVE",
"258 209 CURVE SMOOTH",
"182 209 OFFCURVE",
"144 161 OFFCURVE",
"144 97 CURVE SMOOTH",
"144 35.667 OFFCURVE",
"182 -11 OFFCURVE",
"258 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 539;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"232.667 -6 OFFCURVE",
"258 18.333 OFFCURVE",
"258 49 CURVE SMOOTH",
"258 79.667 OFFCURVE",
"232.667 105 OFFCURVE",
"202 105 CURVE SMOOTH",
"171.333 105 OFFCURVE",
"147 79.667 OFFCURVE",
"147 49 CURVE SMOOTH",
"147 18.333 OFFCURVE",
"171.333 -6 OFFCURVE",
"202 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 439;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"141 -11 OFFCURVE",
"190 36 OFFCURVE",
"200 97 CURVE SMOOTH",
"212 161 OFFCURVE",
"180 209 OFFCURVE",
"104 209 CURVE SMOOTH",
"28 209 OFFCURVE",
"-18 161 OFFCURVE",
"-30 97 CURVE SMOOTH",
"-40 36 OFFCURVE",
"-11 -11 OFFCURVE",
"65 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 539;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"41 -6 OFFCURVE",
"70 18 OFFCURVE",
"76 49 CURVE SMOOTH",
"81 80 OFFCURVE",
"60 105 OFFCURVE",
"30 105 CURVE SMOOTH",
"-1 105 OFFCURVE",
"-30 80 OFFCURVE",
"-35 49 CURVE SMOOTH",
"-41 18 OFFCURVE",
"-21 -6 OFFCURVE",
"10 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 439;
}
);
leftKerningGroup = comma;
note = uni002E;
rightKerningGroup = comma;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"202 -125 LINE",
"738 1456 LINE",
"523 1456 LINE",
"-13 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 765;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"177 -125 LINE",
"784 1456 LINE",
"626 1456 LINE",
"18 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"101 -125 LINE",
"709 1456 LINE",
"650 1456 LINE",
"42 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 782;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-36 -125 LINE",
"850 1456 LINE",
"692 1456 LINE",
"-195 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-112 -125 LINE",
"775 1456 LINE",
"716 1456 LINE",
"-171 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 782;
}
);
note = uni002F;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2020-12-15 23:23:36 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"909.333 -20 OFFCURVE",
"1079 199.333 OFFCURVE",
"1079 602 CURVE SMOOTH",
"1079 870 LINE SMOOTH",
"1079 1261 OFFCURVE",
"903.333 1476 OFFCURVE",
"586 1476 CURVE SMOOTH",
"268.667 1476 OFFCURVE",
"95 1261.667 OFFCURVE",
"95 855 CURVE SMOOTH",
"95 587 LINE SMOOTH",
"95 196 OFFCURVE",
"270.667 -20 OFFCURVE",
"588 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"445.333 213 OFFCURVE",
"384 326.667 OFFCURVE",
"384 564 CURVE SMOOTH",
"384 918 LINE SMOOTH",
"384 1141 OFFCURVE",
"450 1242 OFFCURVE",
"586 1242 CURVE SMOOTH",
"726 1242 OFFCURVE",
"790 1137.333 OFFCURVE",
"790 896 CURVE SMOOTH",
"790 550 LINE SMOOTH",
"790 322 OFFCURVE",
"726 213 OFFCURVE",
"588 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"890.667 -20 OFFCURVE",
"1034 187.667 OFFCURVE",
"1034 621 CURVE SMOOTH",
"1034 861 LINE SMOOTH",
"1030 1279.667 OFFCURVE",
"887.333 1476 OFFCURVE",
"574 1476 CURVE SMOOTH",
"258 1476 OFFCURVE",
"115 1271 OFFCURVE",
"115 843 CURVE SMOOTH",
"115 596 LINE SMOOTH",
"120.333 186.667 OFFCURVE",
"265.333 -20 OFFCURVE",
"576 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"390.667 131 OFFCURVE",
"300 277.333 OFFCURVE",
"300 592 CURVE SMOOTH",
"300 888 LINE SMOOTH",
"302.667 1184 OFFCURVE",
"384.667 1324 OFFCURVE",
"574 1324 CURVE SMOOTH",
"764.667 1324 OFFCURVE",
"849 1187.333 OFFCURVE",
"849 874 CURVE SMOOTH",
"849 571 LINE SMOOTH",
"845 267 OFFCURVE",
"758.667 131 OFFCURVE",
"576 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"836.667 -20 OFFCURVE",
"996 203.333 OFFCURVE",
"996 594 CURVE SMOOTH",
"996 858 LINE SMOOTH",
"996 1250 OFFCURVE",
"836 1477 OFFCURVE",
"560 1477 CURVE SMOOTH",
"285.333 1477 OFFCURVE",
"125 1248.667 OFFCURVE",
"125 862 CURVE SMOOTH",
"125 598 LINE SMOOTH",
"125 206 OFFCURVE",
"288.667 -20 OFFCURVE",
"562 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"320.667 34 OFFCURVE",
"179 244 OFFCURVE",
"179 596 CURVE SMOOTH",
"179 857 LINE SMOOTH",
"179 1215.667 OFFCURVE",
"314.667 1423 OFFCURVE",
"560 1423 CURVE SMOOTH",
"804 1423 OFFCURVE",
"942 1215.333 OFFCURVE",
"942 862 CURVE SMOOTH",
"942 601 LINE SMOOTH",
"942 242.333 OFFCURVE",
"804.667 34 OFFCURVE",
"562 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"696 -20 OFFCURVE",
"876 188 OFFCURVE",
"953 621 CURVE SMOOTH",
"995 861 LINE SMOOTH",
"1065 1280 OFFCURVE",
"957 1476 OFFCURVE",
"643 1476 CURVE SMOOTH",
"327 1476 OFFCURVE",
"148 1271 OFFCURVE",
"73 843 CURVE SMOOTH",
"29 596 LINE SMOOTH",
"-38 187 OFFCURVE",
"71 -20 OFFCURVE",
"382 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"223 131 OFFCURVE",
"158 277 OFFCURVE",
"214 592 CURVE SMOOTH",
"266 888 LINE SMOOTH",
"321 1184 OFFCURVE",
"427 1324 OFFCURVE",
"617 1324 CURVE SMOOTH",
"807 1324 OFFCURVE",
"868 1187 OFFCURVE",
"812 874 CURVE SMOOTH",
"759 571 LINE SMOOTH",
"701 267 OFFCURVE",
"591 131 OFFCURVE",
"408 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"642 -20 OFFCURVE",
"841 203 OFFCURVE",
"910 594 CURVE SMOOTH",
"957 858 LINE SMOOTH",
"1026 1250 OFFCURVE",
"906 1477 OFFCURVE",
"630 1477 CURVE SMOOTH",
"355 1477 OFFCURVE",
"154 1249 OFFCURVE",
"86 862 CURVE SMOOTH",
"40 598 LINE SMOOTH",
"-29 206 OFFCURVE",
"94 -20 OFFCURVE",
"368 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"136 34 OFFCURVE",
"31 244 OFFCURVE",
"93 596 CURVE SMOOTH",
"139 857 LINE SMOOTH",
"203 1216 OFFCURVE",
"375 1423 OFFCURVE",
"620 1423 CURVE SMOOTH",
"864 1423 OFFCURVE",
"966 1215 OFFCURVE",
"903 862 CURVE SMOOTH",
"857 601 LINE SMOOTH",
"794 242 OFFCURVE",
"620 34 OFFCURVE",
"377 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0030;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"801 0 LINE",
"801 1458 LINE {name = \"❌\";}",
"770 1458 LINE {name = \"❌\";}",
"167 1242 LINE",
"167 1007 LINE",
"512 1114 LINE",
"512 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"729 0 LINE",
"729 1463 LINE",
"700 1463 LINE",
"170 1264 LINE",
"170 1096 LINE",
"543 1233 LINE",
"543 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"659 0 LINE",
"659 1460 LINE {name = \"❌\";}",
"648 1460 LINE {name = \"❌\";}",
"187 1290 LINE",
"187 1231 LINE",
"605 1388 LINE",
"605 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"538 0 LINE",
"796 1463 LINE",
"767 1463 LINE",
"202 1264 LINE",
"172 1096 LINE",
"570 1233 LINE",
"352 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"468 0 LINE",
"726 1460 LINE {name = \"❌\";}",
"715 1460 LINE {name = \"❌\";}",
"224 1290 LINE",
"213 1231 LINE",
"659 1388 LINE",
"414 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0031;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1097 0 LINE",
"1097 233 LINE",
"471 233 LINE",
"802 582 LINE SMOOTH",
"983.333 780.667 OFFCURVE",
"1050 919 OFFCURVE",
"1050 1063 CURVE SMOOTH",
"1050 1325.667 OFFCURVE",
"876 1476 OFFCURVE",
"576 1476 CURVE SMOOTH",
"278 1476 OFFCURVE",
"70 1272 OFFCURVE",
"70 998 CURVE",
"360 998 LINE",
"360 1144.667 OFFCURVE",
"440.333 1243 OFFCURVE",
"571 1243 CURVE SMOOTH",
"692.333 1243 OFFCURVE",
"760 1164.333 OFFCURVE",
"760 1035 CURVE SMOOTH",
"760 940.333 OFFCURVE",
"699.333 841.333 OFFCURVE",
"570 700 CURVE SMOOTH",
"99 198 LINE",
"99 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 16 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 23 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1075 0 LINE",
"1075 151 LINE",
"344 151 LINE",
"734 574 LINE SMOOTH",
"916.667 772 OFFCURVE",
"1008 942.667 OFFCURVE",
"1008 1086 CURVE SMOOTH",
"1008 1322 OFFCURVE",
"839.667 1476 OFFCURVE",
"569 1476 CURVE SMOOTH",
"279.667 1476 OFFCURVE",
"93 1295 OFFCURVE",
"93 1027 CURVE",
"278 1027 LINE",
"278 1213.667 OFFCURVE",
"385 1324 OFFCURVE",
"569 1324 CURVE SMOOTH",
"722.333 1324 OFFCURVE",
"822 1216 OFFCURVE",
"822 1064 CURVE SMOOTH",
"822 950.667 OFFCURVE",
"774.333 862.333 OFFCURVE",
"625 693 CURVE SMOOTH",
"121 133 LINE",
"121 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 16 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 23 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1024 0 LINE",
"1024 54 LINE",
"224 54 LINE",
"755 678 LINE",
"882.333 836 OFFCURVE",
"946 971.667 OFFCURVE",
"946 1085 CURVE SMOOTH",
"946 1331.667 OFFCURVE",
"794.667 1476 OFFCURVE",
"536 1476 CURVE SMOOTH",
"289 1476 OFFCURVE",
"117 1282 OFFCURVE",
"117 1045 CURVE",
"171 1045 LINE",
"171 1261 OFFCURVE",
"328 1422 OFFCURVE",
"536 1422 CURVE SMOOTH",
"761.333 1422 OFFCURVE",
"891 1298.333 OFFCURVE",
"891 1085 CURVE SMOOTH",
"891 961 OFFCURVE",
"812.667 817.667 OFFCURVE",
"650 627 CURVE SMOOTH",
"153 54 LINE",
"153 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 16 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 23 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"884 0 LINE",
"911 151 LINE",
"180 151 LINE",
"644 574 LINE SMOOTH",
"862 772 OFFCURVE",
"983 943 OFFCURVE",
"1009 1086 CURVE SMOOTH",
"1050 1322 OFFCURVE",
"909 1476 OFFCURVE",
"638 1476 CURVE SMOOTH",
"349 1476 OFFCURVE",
"131 1295 OFFCURVE",
"83 1027 CURVE",
"268 1027 LINE",
"301 1214 OFFCURVE",
"428 1324 OFFCURVE",
"612 1324 CURVE SMOOTH",
"765 1324 OFFCURVE",
"846 1216 OFFCURVE",
"819 1064 CURVE SMOOTH",
"799 951 OFFCURVE",
"736 862 OFFCURVE",
"556 693 CURVE SMOOTH",
"-46 133 LINE",
"-70 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 16 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 23 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"833 0 LINE",
"843 54 LINE",
"43 54 LINE",
"684 678 LINE",
"839 836 OFFCURVE",
"927 972 OFFCURVE",
"947 1085 CURVE SMOOTH",
"990 1332 OFFCURVE",
"864 1476 OFFCURVE",
"605 1476 CURVE SMOOTH",
"358 1476 OFFCURVE",
"152 1282 OFFCURVE",
"110 1045 CURVE",
"164 1045 LINE",
"203 1261 OFFCURVE",
"388 1422 OFFCURVE",
"596 1422 CURVE SMOOTH",
"821 1422 OFFCURVE",
"929 1298 OFFCURVE",
"892 1085 CURVE SMOOTH",
"870 961 OFFCURVE",
"766 818 OFFCURVE",
"570 627 CURVE SMOOTH",
"-28 54 LINE",
"-38 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 16 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 23 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0032;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"869.667 -20 OFFCURVE",
"1075 149.333 OFFCURVE",
"1075 408 CURVE SMOOTH",
"1075 568 OFFCURVE",
"995 689.333 OFFCURVE",
"831 748 CURVE",
"963 808 OFFCURVE",
"1052 927.667 OFFCURVE",
"1052 1061 CURVE SMOOTH",
"1052 1319.667 OFFCURVE",
"867 1476 OFFCURVE",
"559 1476 CURVE SMOOTH",
"304 1476 OFFCURVE",
"82 1326 OFFCURVE",
"82 1079 CURVE {name = \"❌\";}",
"371 1079 LINE {name = \"❌\";}",
"371 1176.333 OFFCURVE",
"455.333 1243 OFFCURVE",
"566 1243 CURVE SMOOTH",
"688.667 1243 OFFCURVE",
"763 1174.333 OFFCURVE",
"763 1057 CURVE SMOOTH",
"763 935.667 OFFCURVE",
"693.667 856 OFFCURVE",
"547 856 CURVE SMOOTH",
"393 856 LINE",
"393 630 LINE",
"546 630 LINE SMOOTH",
"706 630 OFFCURVE",
"786 557.333 OFFCURVE",
"786 412 CURVE SMOOTH",
"786 292 OFFCURVE",
"703.333 213 OFFCURVE",
"566 213 CURVE SMOOTH",
"446 213 OFFCURVE",
"353 289.667 OFFCURVE",
"353 399 CURVE",
"64 399 LINE",
"64 147 OFFCURVE",
"268.333 -20 OFFCURVE",
"559 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"829.333 -20 OFFCURVE",
"1017 144.667 OFFCURVE",
"1017 406 CURVE SMOOTH",
"1017 575.333 OFFCURVE",
"926 696.333 OFFCURVE",
"766 747 CURVE",
"907.333 805.667 OFFCURVE",
"995 937.333 OFFCURVE",
"995 1064 CURVE SMOOTH",
"995 1322.667 OFFCURVE",
"829.667 1476 OFFCURVE",
"555 1476 CURVE SMOOTH",
"295 1476 OFFCURVE",
"107 1304.667 OFFCURVE",
"107 1074 CURVE",
"292 1074 LINE",
"292 1224.667 OFFCURVE",
"395 1324 OFFCURVE",
"555 1324 CURVE SMOOTH",
"725 1324 OFFCURVE",
"810 1238.667 OFFCURVE",
"810 1068 CURVE SMOOTH",
"810 916 OFFCURVE",
"703.667 820.667 OFFCURVE",
"529 818 CURVE SMOOTH",
"390 818 LINE",
"390 667 LINE",
"529 667 LINE SMOOTH",
"725 664.333 OFFCURVE",
"832 571.333 OFFCURVE",
"832 402 CURVE SMOOTH",
"832 227.333 OFFCURVE",
"734.667 131 OFFCURVE",
"556 131 CURVE SMOOTH",
"388 131 OFFCURVE",
"280 230.667 OFFCURVE",
"280 384 CURVE",
"94 384 LINE",
"94 141.333 OFFCURVE",
"282.667 -20 OFFCURVE",
"556 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"834.333 -20 OFFCURVE",
"1007 138 OFFCURVE",
"1007 386 CURVE SMOOTH",
"1007 578 OFFCURVE",
"893.667 701 OFFCURVE",
"703 745 CURVE",
"869.667 795.667 OFFCURVE",
"975 926.333 OFFCURVE",
"975 1081 CURVE SMOOTH",
"975 1323.667 OFFCURVE",
"816 1476 OFFCURVE",
"564 1476 CURVE SMOOTH",
"186.364 1472.953 OFFCURVE",
"134 1156 OFFCURVE",
"134 1074 CURVE",
"188 1074 LINE",
"188 1282 OFFCURVE",
"345.333 1422 OFFCURVE",
"564 1422 CURVE SMOOTH",
"788 1422 OFFCURVE",
"921 1291.667 OFFCURVE",
"921 1085 CURVE SMOOTH",
"921 903.667 OFFCURVE",
"767 770 OFFCURVE",
"539 770 CURVE SMOOTH",
"417 770 LINE",
"417 714 LINE",
"531 714 LINE SMOOTH",
"807 714 OFFCURVE",
"953 596.667 OFFCURVE",
"953 382 CURVE SMOOTH",
"953 164.667 OFFCURVE",
"811.667 34 OFFCURVE",
"573 34 CURVE SMOOTH",
"333 34 OFFCURVE",
"157 192 OFFCURVE",
"157 405 CURVE",
"103 405 LINE",
"103 138 OFFCURVE",
"322 -20 OFFCURVE",
"573 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"635 -20 OFFCURVE",
"852 145 OFFCURVE",
"898 406 CURVE SMOOTH",
"928 575 OFFCURVE",
"858 696 OFFCURVE",
"707 747 CURVE",
"859 806 OFFCURVE",
"969 937 OFFCURVE",
"992 1064 CURVE SMOOTH",
"1037 1323 OFFCURVE",
"899 1476 OFFCURVE",
"624 1476 CURVE SMOOTH",
"364 1476 OFFCURVE",
"146 1305 OFFCURVE",
"106 1074 CURVE",
"291 1074 LINE",
"317 1225 OFFCURVE",
"438 1324 OFFCURVE",
"598 1324 CURVE SMOOTH",
"768 1324 OFFCURVE",
"838 1239 OFFCURVE",
"808 1068 CURVE SMOOTH",
"781 916 OFFCURVE",
"658 821 OFFCURVE",
"482 818 CURVE SMOOTH",
"343 818 LINE",
"317 667 LINE",
"456 667 LINE SMOOTH",
"651 664 OFFCURVE",
"742 571 OFFCURVE",
"712 402 CURVE SMOOTH",
"681 227 OFFCURVE",
"567 131 OFFCURVE",
"388 131 CURVE SMOOTH",
"220 131 OFFCURVE",
"130 231 OFFCURVE",
"157 384 CURVE",
"-29 384 LINE",
"-72 141 OFFCURVE",
"88 -20 OFFCURVE",
"362 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"640 -20 OFFCURVE",
"841 138 OFFCURVE",
"884 386 CURVE SMOOTH",
"918 578 OFFCURVE",
"826 701 OFFCURVE",
"644 745 CURVE",
"819 796 OFFCURVE",
"948 926 OFFCURVE",
"975 1081 CURVE SMOOTH",
"1018 1324 OFFCURVE",
"885 1476 OFFCURVE",
"633 1476 CURVE SMOOTH",
"255 1473 OFFCURVE",
"139 1157 OFFCURVE",
"133 1074 CURVE",
"187 1074 LINE",
"223 1282 OFFCURVE",
"405 1422 OFFCURVE",
"624 1422 CURVE SMOOTH",
"848 1422 OFFCURVE",
"958 1292 OFFCURVE",
"922 1085 CURVE SMOOTH",
"890 904 OFFCURVE",
"713 770 OFFCURVE",
"484 770 CURVE SMOOTH",
"362 770 LINE",
"352 714 LINE",
"466 714 LINE SMOOTH",
"742 714 OFFCURVE",
"867 597 OFFCURVE",
"830 382 CURVE SMOOTH",
"791 165 OFFCURVE",
"627 34 OFFCURVE",
"388 34 CURVE SMOOTH",
"148 34 OFFCURVE",
"0 192 OFFCURVE",
"38 405 CURVE",
"-16 405 LINE",
"-63 138 OFFCURVE",
"128 -20 OFFCURVE",
"379 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0033;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"954 0 LINE",
"954 315 LINE",
"1119 315 LINE",
"1119 548 LINE",
"954 548 LINE",
"954 1456 LINE",
"662 1456 LINE",
"55 497 LINE",
"68 315 LINE",
"665 315 LINE",
"665 0 LINE"
);
},
{
closed = 1;
nodes = (
"665 1062 LINE",
"665 548 LINE",
"343 548 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 6 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"902 0 LINE",
"902 338 LINE",
"1104 338 LINE",
"1104 489 LINE",
"902 489 LINE",
"902 1456 LINE",
"705 1456 LINE",
"53 447 LINE",
"53 338 LINE",
"716 338 LINE",
"716 0 LINE"
);
},
{
closed = 1;
nodes = (
"716 1203 LINE",
"716 489 LINE",
"263 489 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 6 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"842 0 LINE",
"842 397 LINE",
"1094 397 LINE",
"1094 451 LINE",
"842 451 LINE",
"842 1456 LINE",
"777 1456 LINE",
"82 427 LINE",
"82 397 LINE",
"788 397 LINE",
"788 0 LINE"
);
},
{
closed = 1;
nodes = (
"788 1391 LINE",
"788 451 LINE",
"166 451 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 6 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"711 0 LINE",
"771 338 LINE",
"973 338 LINE",
"999 489 LINE",
"797 489 LINE",
"968 1456 LINE",
"771 1456 LINE",
"-59 447 LINE",
"-78 338 LINE",
"585 338 LINE",
"525 0 LINE"
);
},
{
closed = 1;
nodes = (
"737 1203 LINE",
"611 489 LINE",
"158 489 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 6 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"651 0 LINE",
"721 397 LINE",
"973 397 LINE",
"983 451 LINE",
"731 451 LINE",
"908 1456 LINE",
"843 1456 LINE",
"-33 427 LINE",
"-39 397 LINE",
"667 397 LINE",
"597 0 LINE"
);
},
{
closed = 1;
nodes = (
"842 1391 LINE",
"677 451 LINE",
"55 451 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 6 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0034;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"913 -20 OFFCURVE",
"1090 191 OFFCURVE",
"1090 467 CURVE SMOOTH",
"1090 776.333 OFFCURVE",
"923.333 957 OFFCURVE",
"646 957 CURVE SMOOTH",
"568.667 957 OFFCURVE",
"495.667 938.667 OFFCURVE",
"427 902 CURVE",
"463 1215 LINE",
"1042 1215 LINE",
"1042 1456 LINE",
"226 1456 LINE",
"142 716 LINE",
"372 659 LINE",
"441 723 OFFCURVE",
"498.333 739 OFFCURVE",
"567 739 CURVE SMOOTH",
"716.333 739 OFFCURVE",
"801 648.333 OFFCURVE",
"801 483 CURVE SMOOTH",
"801 311 OFFCURVE",
"727.667 213 OFFCURVE",
"597 213 CURVE SMOOTH",
"479.667 213 OFFCURVE",
"403 283.667 OFFCURVE",
"391 405 CURVE",
"105 405 LINE",
"116.184 29.12 OFFCURVE",
"500 -20 OFFCURVE",
"598 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"898.667 -20 OFFCURVE",
"1069 164 OFFCURVE",
"1069 464 CURVE SMOOTH",
"1069 762.667 OFFCURVE",
"901.333 951 OFFCURVE",
"636 951 CURVE SMOOTH",
"545.333 951 OFFCURVE",
"464.333 930 OFFCURVE",
"393 888 CURVE",
"437 1285 LINE",
"1026 1285 LINE",
"1026 1456 LINE",
"280 1456 LINE",
"206 730 LINE",
"354 692 LINE",
"449 767.333 OFFCURVE",
"512.333 785 OFFCURVE",
"593 785 CURVE SMOOTH",
"769 785 OFFCURVE",
"884 656.667 OFFCURVE",
"884 462 CURVE SMOOTH",
"884 255.333 OFFCURVE",
"780 131 OFFCURVE",
"608 131 CURVE SMOOTH",
"450.667 131 OFFCURVE",
"351.667 216.333 OFFCURVE",
"329 383 CURVE",
"154 383 LINE",
"176.667 131 OFFCURVE",
"350.667 -20 OFFCURVE",
"608 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"878 -20 OFFCURVE",
"1024 148 OFFCURVE",
"1024 464 CURVE SMOOTH",
"1024 736 OFFCURVE",
"855.333 916 OFFCURVE",
"594 916 CURVE SMOOTH",
"484.667 916 OFFCURVE",
"358.333 876.333 OFFCURVE",
"289 819 CURVE",
"348 1403 LINE",
"1009 1403 LINE",
"1009 1456 LINE",
"299 1456 LINE",
"231 762 LINE",
"272 746 LINE",
"354.667 826 OFFCURVE",
"455 862 OFFCURVE",
"595 862 CURVE SMOOTH",
"823 862 OFFCURVE",
"969 704.667 OFFCURVE",
"969 462 CURVE SMOOTH",
"969 180.667 OFFCURVE",
"854 34 OFFCURVE",
"614 34 CURVE SMOOTH",
"388.667 34 OFFCURVE",
"258.333 155 OFFCURVE",
"237 383 CURVE",
"182 383 LINE",
"202 131 OFFCURVE",
"364.667 -20 OFFCURVE",
"614 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"704 -20 OFFCURVE",
"907 164 OFFCURVE",
"960 464 CURVE SMOOTH",
"1013 763 OFFCURVE",
"878 951 OFFCURVE",
"613 951 CURVE SMOOTH",
"522 951 OFFCURVE",
"438 930 OFFCURVE",
"359 888 CURVE",
"473 1285 LINE",
"1062 1285 LINE",
"1092 1456 LINE",
"346 1456 LINE",
"144 730 LINE",
"285 692 LINE",
"394 767 OFFCURVE",
"460 785 OFFCURVE",
"541 785 CURVE SMOOTH",
"717 785 OFFCURVE",
"809 657 OFFCURVE",
"775 462 CURVE SMOOTH",
"738 255 OFFCURVE",
"612 131 OFFCURVE",
"440 131 CURVE SMOOTH",
"283 131 OFFCURVE",
"199 216 OFFCURVE",
"206 383 CURVE",
"31 383 LINE",
"9 131 OFFCURVE",
"156 -20 OFFCURVE",
"414 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"684 -20 OFFCURVE",
"859 148 OFFCURVE",
"915 464 CURVE SMOOTH",
"963 736 OFFCURVE",
"826 916 OFFCURVE",
"565 916 CURVE SMOOTH",
"455 916 OFFCURVE",
"322 876 OFFCURVE",
"243 819 CURVE",
"405 1403 LINE",
"1066 1403 LINE",
"1075 1456 LINE",
"365 1456 LINE",
"175 762 LINE",
"213 746 LINE",
"310 826 OFFCURVE",
"416 862 OFFCURVE",
"556 862 CURVE SMOOTH",
"784 862 OFFCURVE",
"902 705 OFFCURVE",
"860 462 CURVE SMOOTH",
"810 181 OFFCURVE",
"669 34 OFFCURVE",
"429 34 CURVE SMOOTH",
"204 34 OFFCURVE",
"95 155 OFFCURVE",
"114 383 CURVE",
"59 383 LINE",
"34 131 OFFCURVE",
"170 -20 OFFCURVE",
"420 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0035;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2020-12-13 21:53:28 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1038.486 -18.026 OFFCURVE",
"1103 410 OFFCURVE",
"1103 480 CURVE SMOOTH",
"1103 776 OFFCURVE",
"942.333 974 OFFCURVE",
"689 974 CURVE SMOOTH",
"571 974 OFFCURVE",
"473.333 934.667 OFFCURVE",
"396 856 CURVE",
"428 1090.667 OFFCURVE",
"604 1233 OFFCURVE",
"883 1233 CURVE",
"883 1471 LINE",
"378 1469 OFFCURVE",
"100 1144 OFFCURVE",
"100 671 CURVE SMOOTH",
"100 567 LINE SMOOTH",
"100 211 OFFCURVE",
"306.333 -20 OFFCURVE",
"613 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"469.667 213 OFFCURVE",
"390 327.667 OFFCURVE",
"390 521 CURVE SMOOTH",
"390 609 LINE",
"426 689 OFFCURVE",
"507.667 742 OFFCURVE",
"601 742 CURVE SMOOTH",
"731.667 742 OFFCURVE",
"815 635.667 OFFCURVE",
"815 477 CURVE SMOOTH",
"815 321 OFFCURVE",
"731 213 OFFCURVE",
"607 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"875.667 -20 OFFCURVE",
"1052 175 OFFCURVE",
"1052 475 CURVE SMOOTH",
"1052 757.667 OFFCURVE",
"888.333 955 OFFCURVE",
"635 955 CURVE SMOOTH",
"502.333 955 OFFCURVE",
"397.667 911 OFFCURVE",
"321 823 CURVE",
"347.667 1123 OFFCURVE",
"525 1294.667 OFFCURVE",
"847 1300 CURVE",
"847 1457 LINE {name = \"❌\";}",
"362 1450.333 OFFCURVE",
"132 1161 OFFCURVE",
"132 625 CURVE SMOOTH",
"132 554 LINE SMOOTH",
"132 216.667 OFFCURVE",
"322.333 -20 OFFCURVE",
"601 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"439.667 133 OFFCURVE",
"318 293 OFFCURVE",
"318 533 CURVE SMOOTH",
"318 601 LINE",
"359.333 715.667 OFFCURVE",
"477.333 801 OFFCURVE",
"604 801 CURVE SMOOTH",
"764 801 OFFCURVE",
"869 666 OFFCURVE",
"869 466 CURVE SMOOTH",
"869 267.333 OFFCURVE",
"767.667 133 OFFCURVE",
"601 133 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"860 -20 OFFCURVE",
"1013 217 OFFCURVE",
"1013 480 CURVE SMOOTH",
"1013 766.667 OFFCURVE",
"848 957 OFFCURVE",
"592 957 CURVE SMOOTH",
"417.333 957 OFFCURVE",
"260.333 870.333 OFFCURVE",
"183 733 CURVE",
"200 1153 OFFCURVE",
"416 1404 OFFCURVE",
"840 1422 CURVE",
"840 1476 LINE",
"379 1476 OFFCURVE",
"128 1177 OFFCURVE",
"128 660 CURVE SMOOTH",
"128 481 LINE SMOOTH",
"136.071 47.139 OFFCURVE",
"533 -20 OFFCURVE",
"602 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"354 33 OFFCURVE",
"182 218.333 OFFCURVE",
"182 493 CURVE SMOOTH",
"182 621 LINE",
"222 782.333 OFFCURVE",
"398.333 903 OFFCURVE",
"585 903 CURVE SMOOTH",
"817 903 OFFCURVE",
"959 738.667 OFFCURVE",
"959 480 CURVE SMOOTH",
"959 229.333 OFFCURVE",
"808.667 33 OFFCURVE",
"602 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"681 -20 OFFCURVE",
"892 175 OFFCURVE",
"945 475 CURVE SMOOTH",
"995 758 OFFCURVE",
"866 955 OFFCURVE",
"613 955 CURVE SMOOTH",
"480 955 OFFCURVE",
"368 911 OFFCURVE",
"275 823 CURVE",
"355 1123 OFFCURVE",
"562 1295 OFFCURVE",
"885 1300 CURVE",
"913 1457 LINE {name = \"❌\";}",
"427 1450 OFFCURVE",
"146 1161 OFFCURVE",
"51 625 CURVE SMOOTH",
"39 554 LINE SMOOTH",
"-21 217 OFFCURVE",
"128 -20 OFFCURVE",
"407 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"272 133 OFFCURVE",
"179 293 OFFCURVE",
"221 533 CURVE SMOOTH",
"233 601 LINE",
"295 716 OFFCURVE",
"428 801 OFFCURVE",
"554 801 CURVE SMOOTH",
"714 801 OFFCURVE",
"796 666 OFFCURVE",
"760 466 CURVE SMOOTH",
"725 267 OFFCURVE",
"600 133 OFFCURVE",
"434 133 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"666 -20 OFFCURVE",
"860 217 OFFCURVE",
"907 480 CURVE SMOOTH",
"957 767 OFFCURVE",
"826 957 OFFCURVE",
"570 957 CURVE SMOOTH",
"395 957 OFFCURVE",
"223 870 OFFCURVE",
"121 733 CURVE",
"213 1153 OFFCURVE",
"473 1404 OFFCURVE",
"900 1422 CURVE",
"909 1476 LINE",
"448 1476 OFFCURVE",
"145 1177 OFFCURVE",
"54 660 CURVE SMOOTH",
"22 481 LINE SMOOTH",
"-46 47 OFFCURVE",
"339 -20 OFFCURVE",
"408 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169 33 OFFCURVE",
"30 218 OFFCURVE",
"78 493 CURVE SMOOTH",
"101 621 LINE",
"169 782 OFFCURVE",
"367 903 OFFCURVE",
"553 903 CURVE SMOOTH",
"785 903 OFFCURVE",
"898 739 OFFCURVE",
"853 480 CURVE SMOOTH",
"809 229 OFFCURVE",
"624 33 OFFCURVE",
"417 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0036;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"526 0 LINE",
"1089 1294 LINE",
"1089 1456 LINE",
"61 1456 LINE",
"61 1222 LINE",
"785 1222 LINE",
"221 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"458 0 LINE",
"1061 1352 LINE",
"1061 1456 LINE",
"77 1456 LINE",
"77 1304 LINE",
"865 1304 LINE",
"264 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"366 0 LINE",
"1007 1422 LINE",
"1007 1456 LINE",
"77 1456 LINE",
"77 1402 LINE",
"945 1402 LINE",
"311 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"267 0 LINE",
"1109 1352 LINE",
"1127 1456 LINE",
"143 1456 LINE",
"116 1304 LINE",
"904 1304 LINE",
"73 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"175 0 LINE",
"1067 1422 LINE",
"1073 1456 LINE",
"143 1456 LINE",
"133 1402 LINE",
"1001 1402 LINE",
"120 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0037;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"890.667 -20 OFFCURVE",
"1079 140.333 OFFCURVE",
"1079 399 CURVE SMOOTH",
"1079 560.333 OFFCURVE",
"990.333 682 OFFCURVE",
"849 750 CURVE",
"973 815.333 OFFCURVE",
"1048 927.667 OFFCURVE",
"1048 1069 CURVE SMOOTH",
"1048 1319.667 OFFCURVE",
"869.667 1476 OFFCURVE",
"587 1476 CURVE SMOOTH",
"303 1476 OFFCURVE",
"126 1317 OFFCURVE",
"126 1069 CURVE SMOOTH",
"126 927.667 OFFCURVE",
"200 815.333 OFFCURVE",
"324 750 CURVE",
"184 683.333 OFFCURVE",
"95 560.333 OFFCURVE",
"95 399 CURVE SMOOTH",
"95 141.667 OFFCURVE",
"285.333 -20 OFFCURVE",
"588 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"460 213 OFFCURVE",
"384 296 OFFCURVE",
"384 420 CURVE SMOOTH",
"384 548 OFFCURVE",
"463.333 629 OFFCURVE",
"586 629 CURVE SMOOTH",
"710 629 OFFCURVE",
"789 546.667 OFFCURVE",
"789 420 CURVE SMOOTH",
"789 290.667 OFFCURVE",
"713.333 213 OFFCURVE",
"588 213 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"478.667 862 OFFCURVE",
"416 939 OFFCURVE",
"416 1055 CURVE SMOOTH",
"416 1172.333 OFFCURVE",
"479 1243 OFFCURVE",
"587 1243 CURVE SMOOTH",
"696.333 1243 OFFCURVE",
"759 1168.333 OFFCURVE",
"759 1055 CURVE SMOOTH",
"759 939 OFFCURVE",
"697.333 862 OFFCURVE",
"588 862 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
39 9 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 39 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"852.333 -20 OFFCURVE",
"1038 141 OFFCURVE",
"1038 393 CURVE SMOOTH",
"1038 551.667 OFFCURVE",
"943 683.667 OFFCURVE",
"791 749 CURVE",
"921.667 813 OFFCURVE",
"1004 930.667 OFFCURVE",
"1004 1076 CURVE SMOOTH",
"1004 1321.333 OFFCURVE",
"831 1476 OFFCURVE",
"575 1476 CURVE SMOOTH",
"317.667 1476 OFFCURVE",
"146 1321.333 OFFCURVE",
"146 1076 CURVE SMOOTH",
"146 932 OFFCURVE",
"225.667 814 OFFCURVE",
"355 750 CURVE",
"203 684.667 OFFCURVE",
"112 550.333 OFFCURVE",
"112 393 CURVE SMOOTH",
"112 142.333 OFFCURVE",
"295 -20 OFFCURVE",
"575 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"400.333 131 OFFCURVE",
"297 231.667 OFFCURVE",
"297 397 CURVE SMOOTH",
"297 562.333 OFFCURVE",
"406.333 673 OFFCURVE",
"573 673 CURVE SMOOTH",
"739.667 673 OFFCURVE",
"853 559.667 OFFCURVE",
"853 397 CURVE SMOOTH",
"853 233 OFFCURVE",
"748.333 131 OFFCURVE",
"575 131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"427 825 OFFCURVE",
"331 925 OFFCURVE",
"331 1073 CURVE SMOOTH",
"331 1227.667 OFFCURVE",
"429.667 1324 OFFCURVE",
"575 1324 CURVE SMOOTH",
"716.333 1324 OFFCURVE",
"819 1221 OFFCURVE",
"819 1073 CURVE SMOOTH",
"819 925 OFFCURVE",
"723 825 OFFCURVE",
"575 825 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
39 9 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 39 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"845 -20 OFFCURVE",
"1028 132.333 OFFCURVE",
"1028 379 CURVE SMOOTH",
"1028 549.667 OFFCURVE",
"905.667 694.333 OFFCURVE",
"715 745 CURVE",
"875 793 OFFCURVE",
"986 923.333 OFFCURVE",
"986 1086 CURVE SMOOTH",
"986 1320.667 OFFCURVE",
"814.333 1476 OFFCURVE",
"561 1476 CURVE SMOOTH",
"309 1476 OFFCURVE",
"141 1326 OFFCURVE",
"141 1086 CURVE SMOOTH",
"141 923.333 OFFCURVE",
"248 793 OFFCURVE",
"408 745 CURVE",
"217.333 694.333 OFFCURVE",
"100 551 OFFCURVE",
"100 379 CURVE SMOOTH",
"100 132.333 OFFCURVE",
"279.667 -20 OFFCURVE",
"565 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"314.333 34 OFFCURVE",
"154 168.667 OFFCURVE",
"154 374 CURVE SMOOTH",
"154 575.333 OFFCURVE",
"321.667 718 OFFCURVE",
"563 718 CURVE SMOOTH",
"803 718 OFFCURVE",
"973 574 OFFCURVE",
"973 374 CURVE SMOOTH",
"973 170 OFFCURVE",
"810.333 34 OFFCURVE",
"565 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"344.333 772 OFFCURVE",
"195 901.667 OFFCURVE",
"195 1091 CURVE SMOOTH",
"195 1289.667 OFFCURVE",
"346.333 1422 OFFCURVE",
"561 1422 CURVE SMOOTH",
"770.333 1422 OFFCURVE",
"932 1280.333 OFFCURVE",
"932 1091 CURVE SMOOTH",
"932 904.333 OFFCURVE",
"779 772 OFFCURVE",
"563 772 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
39 9 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 39 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"658 -20 OFFCURVE",
"872 141 OFFCURVE",
"917 393 CURVE SMOOTH",
"944 552 OFFCURVE",
"873 684 OFFCURVE",
"732 749 CURVE",
"874 813 OFFCURVE",
"977 931 OFFCURVE",
"1003 1076 CURVE SMOOTH",
"1046 1321 OFFCURVE",
"900 1476 OFFCURVE",
"644 1476 CURVE SMOOTH",
"387 1476 OFFCURVE",
"188 1321 OFFCURVE",
"145 1076 CURVE SMOOTH",
"120 932 OFFCURVE",
"178 814 OFFCURVE",
"296 750 CURVE",
"133 685 OFFCURVE",
"18 550 OFFCURVE",
"-9 393 CURVE SMOOTH",
"-54 142 OFFCURVE",
"101 -20 OFFCURVE",
"381 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"233 131 OFFCURVE",
"147 232 OFFCURVE",
"176 397 CURVE SMOOTH",
"205 562 OFFCURVE",
"334 673 OFFCURVE",
"501 673 CURVE SMOOTH",
"668 673 OFFCURVE",
"761 560 OFFCURVE",
"732 397 CURVE SMOOTH",
"703 233 OFFCURVE",
"581 131 OFFCURVE",
"407 131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 825 OFFCURVE",
"303 925 OFFCURVE",
"329 1073 CURVE SMOOTH",
"357 1228 OFFCURVE",
"472 1324 OFFCURVE",
"618 1324 CURVE SMOOTH",
"759 1324 OFFCURVE",
"844 1221 OFFCURVE",
"817 1073 CURVE SMOOTH",
"791 925 OFFCURVE",
"678 825 OFFCURVE",
"530 825 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
39 9 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 39 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"651 -20 OFFCURVE",
"861 132 OFFCURVE",
"904 379 CURVE SMOOTH",
"934 550 OFFCURVE",
"837 694 OFFCURVE",
"656 745 CURVE",
"824 793 OFFCURVE",
"958 923 OFFCURVE",
"987 1086 CURVE SMOOTH",
"1028 1321 OFFCURVE",
"884 1476 OFFCURVE",
"630 1476 CURVE SMOOTH",
"378 1476 OFFCURVE",
"184 1326 OFFCURVE",
"142 1086 CURVE SMOOTH",
"113 923 OFFCURVE",
"197 793 OFFCURVE",
"349 745 CURVE",
"149 694 OFFCURVE",
"6 551 OFFCURVE",
"-24 379 CURVE SMOOTH",
"-67 132 OFFCURVE",
"85 -20 OFFCURVE",
"371 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"130 34 OFFCURVE",
"-7 169 OFFCURVE",
"29 374 CURVE SMOOTH",
"65 575 OFFCURVE",
"257 718 OFFCURVE",
"499 718 CURVE SMOOTH",
"739 718 OFFCURVE",
"883 574 OFFCURVE",
"848 374 CURVE SMOOTH",
"812 170 OFFCURVE",
"626 34 OFFCURVE",
"380 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"290 772 OFFCURVE",
"163 902 OFFCURVE",
"197 1091 CURVE SMOOTH",
"232 1290 OFFCURVE",
"406 1422 OFFCURVE",
"621 1422 CURVE SMOOTH",
"830 1422 OFFCURVE",
"967 1280 OFFCURVE",
"934 1091 CURVE SMOOTH",
"901 904 OFFCURVE",
"724 772 OFFCURVE",
"508 772 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
39 9 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 39 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 39 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0038;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"374 -13 LINE SMOOTH",
"816.667 5.667 OFFCURVE",
"1068 295.667 OFFCURVE",
"1068 781 CURVE SMOOTH",
"1068 888 LINE SMOOTH",
"1066 1213 OFFCURVE",
"892 1476 OFFCURVE",
"575 1476 CURVE SMOOTH",
"324 1476 OFFCURVE",
"200 1324 OFFCURVE",
"140 1185 CURVE SMOOTH",
"95 1079 OFFCURVE",
"86 980 OFFCURVE",
"86 961 CURVE SMOOTH",
"86 661 OFFCURVE",
"253.667 471 OFFCURVE",
"511 471 CURVE SMOOTH",
"611.667 471 OFFCURVE",
"699.667 508 OFFCURVE",
"775 582 CURVE",
"754.333 357.333 OFFCURVE",
"618.333 239.333 OFFCURVE",
"367 228 CURVE SMOOTH",
"303 227 LINE",
"303 -14 LINE"
);
},
{
closed = 1;
nodes = (
"450 692 OFFCURVE",
"374 805.333 OFFCURVE",
"374 964 CURVE SMOOTH",
"374 1124 OFFCURVE",
"457 1243 OFFCURVE",
"573 1243 CURVE SMOOTH",
"698.333 1243 OFFCURVE",
"779 1130 OFFCURVE",
"779 934 CURVE SMOOTH",
"779 815 LINE",
"744.333 747 OFFCURVE",
"675.333 692 OFFCURVE",
"582 692 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"341 -1 LINE SMOOTH {name = \"❌\";}",
"793 5.667 OFFCURVE",
"1016 253.333 OFFCURVE",
"1016 820 CURVE SMOOTH",
"1016 874 LINE SMOOTH",
"1016 1246 OFFCURVE",
"839 1476 OFFCURVE",
"551 1476 CURVE SMOOTH",
"369.667 1476 OFFCURVE",
"229.5 1391 OFFCURVE",
"155.5 1235 CURVE SMOOTH",
"118.5 1157 OFFCURVE",
"100 1069 OFFCURVE",
"100 972 CURVE SMOOTH",
"100 704 OFFCURVE",
"251 487 OFFCURVE",
"515 487 CURVE SMOOTH",
"643 487 OFFCURVE",
"752.667 548 OFFCURVE",
"830 640 CURVE",
"815.333 306.667 OFFCURVE",
"649.333 160.333 OFFCURVE",
"344 155 CURVE SMOOTH",
"305 155 LINE",
"305 -1 LINE {name = \"❌\";}"
);
},
{
closed = 1;
nodes = (
"385 640 OFFCURVE",
"282 783.333 OFFCURVE",
"282 982 CURVE SMOOTH",
"282 1186 OFFCURVE",
"389.333 1322 OFFCURVE",
"552 1322 CURVE SMOOTH",
"713.333 1322 OFFCURVE",
"831 1154.667 OFFCURVE",
"831 912 CURVE SMOOTH",
"831 838 LINE",
"783 726 OFFCURVE",
"669 640 OFFCURVE",
"545 640 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"346 -20 LINE SMOOTH",
"771.333 -14.667 OFFCURVE",
"993 248 OFFCURVE",
"993 740 CURVE SMOOTH",
"993 907 LINE SMOOTH",
"991.667 1275 OFFCURVE",
"831 1476 OFFCURVE",
"531 1476 CURVE SMOOTH",
"371 1476 OFFCURVE",
"231.333 1379.833 OFFCURVE",
"158 1220.5 CURVE SMOOTH",
"121.333 1140.833 OFFCURVE",
"103 1053.333 OFFCURVE",
"103 958 CURVE SMOOTH",
"103 700 OFFCURVE",
"265 468 OFFCURVE",
"523 468 CURVE SMOOTH",
"709.667 468 OFFCURVE",
"868.333 570.667 OFFCURVE",
"939 724 CURVE",
"939 274.667 OFFCURVE",
"732.333 38 OFFCURVE",
"343 34 CURVE SMOOTH",
"300 34 LINE",
"298 -20 LINE"
);
},
{
closed = 1;
nodes = (
"292 522 OFFCURVE",
"157 732 OFFCURVE",
"157 958 CURVE SMOOTH",
"157 1192 OFFCURVE",
"303 1422 OFFCURVE",
"535 1422 CURVE SMOOTH",
"795 1422 OFFCURVE",
"939 1239.333 OFFCURVE",
"939 902 CURVE SMOOTH",
"939 840 LINE",
"885.667 648 OFFCURVE",
"720.333 522 OFFCURVE",
"523 522 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"150 -1 LINE SMOOTH {name = \"❌\";}",
"603 6 OFFCURVE",
"870 253 OFFCURVE",
"970 820 CURVE SMOOTH",
"979 874 LINE SMOOTH",
"1045 1246 OFFCURVE",
"908 1476 OFFCURVE",
"620 1476 CURVE SMOOTH",
"439 1476 OFFCURVE",
"284 1391 OFFCURVE",
"182 1235 CURVE SMOOTH",
"132 1157 OFFCURVE",
"98 1069 OFFCURVE",
"81 972 CURVE SMOOTH",
"33 704 OFFCURVE",
"146 487 OFFCURVE",
"410 487 CURVE SMOOTH",
"538 487 OFFCURVE",
"659 548 OFFCURVE",
"752 640 CURVE",
"679 307 OFFCURVE",
"487 160 OFFCURVE",
"181 155 CURVE SMOOTH",
"142 155 LINE",
"114 -1 LINE {name = \"❌\";}"
);
},
{
closed = 1;
nodes = (
"307 640 OFFCURVE",
"229 783 OFFCURVE",
"264 982 CURVE SMOOTH",
"300 1186 OFFCURVE",
"432 1322 OFFCURVE",
"594 1322 CURVE SMOOTH",
"756 1322 OFFCURVE",
"844 1155 OFFCURVE",
"801 912 CURVE SMOOTH",
"788 838 LINE",
"720 726 OFFCURVE",
"591 640 OFFCURVE",
"467 640 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"152 -20 LINE SMOOTH",
"578 -15 OFFCURVE",
"846 248 OFFCURVE",
"933 740 CURVE SMOOTH",
"962 907 LINE SMOOTH",
"1026 1275 OFFCURVE",
"900 1476 OFFCURVE",
"600 1476 CURVE SMOOTH",
"440 1476 OFFCURVE",
"284 1380 OFFCURVE",
"182 1221 CURVE SMOOTH",
"132 1141 OFFCURVE",
"98 1053 OFFCURVE",
"81 958 CURVE SMOOTH",
"36 700 OFFCURVE",
"157 468 OFFCURVE",
"415 468 CURVE SMOOTH",
"601 468 OFFCURVE",
"778 571 OFFCURVE",
"876 724 CURVE",
"797 275 OFFCURVE",
"548 38 OFFCURVE",
"158 34 CURVE SMOOTH",
"115 34 LINE",
"104 -20 LINE"
);
},
{
closed = 1;
nodes = (
"193 522 OFFCURVE",
"95 732 OFFCURVE",
"135 958 CURVE SMOOTH",
"176 1192 OFFCURVE",
"363 1422 OFFCURVE",
"595 1422 CURVE SMOOTH",
"855 1422 OFFCURVE",
"967 1239 OFFCURVE",
"907 902 CURVE SMOOTH",
"896 840 LINE",
"809 648 OFFCURVE",
"622 522 OFFCURVE",
"424 522 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0039;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -1, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -1, 819}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 578;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = m002;
width = 496;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -27, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -22, 962}";
}
);
layerId = m003;
width = 364;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = m004;
width = 496;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -27, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -22, 962}";
}
);
layerId = m005;
width = 364;
}
);
note = uni003A;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -18, 819}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 537;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 12, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -33, 883}";
}
);
layerId = m002;
width = 433;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, -11, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -21, 962}";
}
);
layerId = m003;
width = 364;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 12, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -33, 883}";
}
);
layerId = m004;
width = 433;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, -11, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -21, 962}";
}
);
layerId = m005;
width = 364;
}
);
note = uni003B;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"915 417 LINE",
"345 618 LINE",
"915 823 LINE",
"915 1103 LINE",
"54 738 LINE",
"54 502 LINE",
"915 137 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1042;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"890 391 LINE",
"264 644 LINE",
"890 902 LINE",
"890 1098 LINE",
"72 720 LINE",
"72 574 LINE",
"890 195 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1041;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"919 321 LINE",
"155 666 LINE",
"919 1011 LINE",
"919 1069 LINE",
"82 691 LINE",
"82 641 LINE",
"919 262 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1053;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"768 391 LINE",
"187 644 LINE",
"858 902 LINE",
"893 1098 LINE",
"8 720 LINE",
"-18 574 LINE",
"734 195 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1041;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"785 321 LINE",
"82 666 LINE",
"906 1011 LINE",
"917 1069 LINE",
"13 691 LINE",
"4 641 LINE",
"774 262 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1053;
}
);
note = uni003C;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1030 746 LINE",
"1030 982 LINE",
"136 982 LINE",
"136 746 LINE"
);
},
{
closed = 1;
nodes = (
"1030 313 LINE",
"1030 549 LINE",
"136 549 LINE",
"136 313 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1172;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"986 814 LINE",
"986 975 LINE",
"152 975 LINE",
"152 814 LINE"
);
},
{
closed = 1;
nodes = (
"986 399 LINE",
"986 559 LINE",
"152 559 LINE",
"152 399 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1124;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"981 843 LINE",
"981 897 LINE",
"147 897 LINE",
"147 843 LINE"
);
},
{
closed = 1;
nodes = (
"981 436 LINE",
"981 490 LINE",
"147 490 LINE",
"147 436 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1142;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"939 814 LINE",
"967 975 LINE",
"133 975 LINE",
"105 814 LINE"
);
},
{
closed = 1;
nodes = (
"866 399 LINE",
"894 559 LINE",
"60 559 LINE",
"32 399 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1124;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"939 843 LINE",
"948 897 LINE",
"114 897 LINE",
"105 843 LINE"
);
},
{
closed = 1;
nodes = (
"867 436 LINE",
"877 490 LINE",
"43 490 LINE",
"33 436 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1142;
}
);
note = uni003D;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"991 502 LINE",
"991 737 LINE",
"120 1102 LINE",
"120 824 LINE",
"701 621 LINE",
"120 415 LINE",
"120 136 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1058;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"988 575 LINE",
"988 721 LINE",
"134 1099 LINE",
"134 909 LINE",
"795 650 LINE",
"134 388 LINE",
"134 196 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1070;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"950 644 LINE",
"950 694 LINE",
"114 1072 LINE",
"114 1013 LINE",
"872 668 LINE",
"114 324 LINE",
"114 265 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1053;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"899 575 LINE",
"924 721 LINE",
"137 1099 LINE",
"103 909 LINE",
"719 650 LINE",
"12 388 LINE",
"-22 196 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1070;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"873 644 LINE",
"882 694 LINE",
"112 1072 LINE",
"102 1013 LINE",
"799 668 LINE",
"-20 324 LINE",
"-30 265 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1053;
}
);
note = uni003E;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"603 447 LINE",
"614.333 573.333 OFFCURVE",
"643 630 OFFCURVE",
"694 679 CURVE SMOOTH",
"902 879 OFFCURVE",
"946 970.667 OFFCURVE",
"946 1084 CURVE SMOOTH",
"946 1333.333 OFFCURVE",
"782.667 1476 OFFCURVE",
"500 1476 CURVE SMOOTH",
"220 1476 OFFCURVE",
"47.667 1323.667 OFFCURVE",
"45 1069 CURVE",
"335 1069 LINE",
"337.667 1175.667 OFFCURVE",
"401.333 1240 OFFCURVE",
"500 1240 CURVE SMOOTH",
"604 1240 OFFCURVE",
"656 1183.667 OFFCURVE",
"656 1071 CURVE SMOOTH",
"656 996.333 OFFCURVE",
"626.167 940.833 OFFCURVE",
"505.5 833.5 CURVE SMOOTH",
"384.833 726.167 OFFCURVE",
"347 633.667 OFFCURVE",
"347 447 CURVE"
);
},
{
closed = 1;
nodes = (
"577.333 -12 OFFCURVE",
"642 52 OFFCURVE",
"642 140 CURVE SMOOTH",
"642 229.333 OFFCURVE",
"574.667 294 OFFCURVE",
"480 294 CURVE SMOOTH",
"385.333 294 OFFCURVE",
"318 229.333 OFFCURVE",
"318 140 CURVE SMOOTH",
"318 52 OFFCURVE",
"382.667 -12 OFFCURVE",
"480 -12 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1019;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"542 410 LINE",
"542 511.333 OFFCURVE",
"566.333 589 OFFCURVE",
"724 751 CURVE SMOOTH",
"832 864.333 OFFCURVE",
"886 979.333 OFFCURVE",
"886 1096 CURVE SMOOTH",
"886 1332 OFFCURVE",
"738 1476 OFFCURVE",
"486 1476 CURVE SMOOTH",
"243.333 1476 OFFCURVE",
"77.667 1331 OFFCURVE",
"75 1115 CURVE",
"260 1115 LINE",
"260 1236.333 OFFCURVE",
"350 1314 OFFCURVE",
"486 1314 CURVE SMOOTH",
"626 1314 OFFCURVE",
"701 1230 OFFCURVE",
"701 1090 CURVE SMOOTH",
"701 1017.333 OFFCURVE",
"673 950 OFFCURVE",
"486 751 CURVE SMOOTH",
"382 640 OFFCURVE",
"359.667 568.667 OFFCURVE",
"357 410 CURVE"
);
},
{
closed = 1;
nodes = (
"530 -11 OFFCURVE",
"568 33 OFFCURVE",
"568 93 CURVE SMOOTH",
"568 153 OFFCURVE",
"530 199 OFFCURVE",
"458 199 CURVE SMOOTH",
"386 199 OFFCURVE",
"349 153 OFFCURVE",
"349 93 CURVE SMOOTH",
"349 33 OFFCURVE",
"386 -11 OFFCURVE",
"458 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 967;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"449 400 LINE",
"449 530 OFFCURVE",
"493 629.333 OFFCURVE",
"581 698 CURVE",
"754.333 855.333 OFFCURVE",
"801 956.667 OFFCURVE",
"801 1110 CURVE SMOOTH",
"801 1334 OFFCURVE",
"667.333 1476 OFFCURVE",
"458 1476 CURVE SMOOTH",
"248.667 1476 OFFCURVE",
"95.667 1332 OFFCURVE",
"93 1116 CURVE",
"147 1116 LINE",
"149.667 1296 OFFCURVE",
"266 1423 OFFCURVE",
"458 1423 CURVE SMOOTH",
"638 1423 OFFCURVE",
"747 1305.333 OFFCURVE",
"747 1112 CURVE SMOOTH",
"747 933 OFFCURVE",
"676 854 OFFCURVE",
"552 739 CURVE SMOOTH",
"432 627 OFFCURVE",
"397.667 549.333 OFFCURVE",
"395 400 CURVE"
);
},
{
closed = 1;
nodes = (
"456.667 -6 OFFCURVE",
"482 18.333 OFFCURVE",
"482 49 CURVE SMOOTH",
"482 79.667 OFFCURVE",
"456.667 105 OFFCURVE",
"426 105 CURVE SMOOTH",
"395.333 105 OFFCURVE",
"371 79.667 OFFCURVE",
"371 49 CURVE SMOOTH",
"371 18.333 OFFCURVE",
"395.333 -6 OFFCURVE",
"426 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 893;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"424 410 LINE",
"441 511 OFFCURVE",
"479 589 OFFCURVE",
"666 751 CURVE SMOOTH",
"794 864 OFFCURVE",
"868 979 OFFCURVE",
"888 1096 CURVE SMOOTH",
"930 1332 OFFCURVE",
"807 1476 OFFCURVE",
"555 1476 CURVE SMOOTH",
"313 1476 OFFCURVE",
"122 1331 OFFCURVE",
"81 1115 CURVE",
"266 1115 LINE",
"287 1236 OFFCURVE",
"391 1314 OFFCURVE",
"527 1314 CURVE SMOOTH",
"667 1314 OFFCURVE",
"727 1230 OFFCURVE",
"702 1090 CURVE SMOOTH",
"690 1017 OFFCURVE",
"650 950 OFFCURVE",
"428 751 CURVE SMOOTH",
"304 640 OFFCURVE",
"269 569 OFFCURVE",
"239 410 CURVE"
);
},
{
closed = 1;
nodes = (
"337 -11 OFFCURVE",
"383 33 OFFCURVE",
"394 93 CURVE SMOOTH",
"404 153 OFFCURVE",
"374 199 OFFCURVE",
"302 199 CURVE SMOOTH",
"230 199 OFFCURVE",
"185 153 OFFCURVE",
"175 93 CURVE SMOOTH",
"164 33 OFFCURVE",
"193 -11 OFFCURVE",
"265 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 967;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"329 400 LINE",
"352 530 OFFCURVE",
"413 629 OFFCURVE",
"513 698 CURVE",
"714 855 OFFCURVE",
"779 957 OFFCURVE",
"806 1110 CURVE SMOOTH",
"845 1334 OFFCURVE",
"737 1476 OFFCURVE",
"527 1476 CURVE SMOOTH",
"318 1476 OFFCURVE",
"140 1332 OFFCURVE",
"99 1116 CURVE",
"153 1116 LINE",
"187 1296 OFFCURVE",
"326 1423 OFFCURVE",
"518 1423 CURVE SMOOTH",
"698 1423 OFFCURVE",
"786 1305 OFFCURVE",
"752 1112 CURVE SMOOTH",
"721 933 OFFCURVE",
"636 854 OFFCURVE",
"492 739 CURVE SMOOTH",
"352 627 OFFCURVE",
"304 549 OFFCURVE",
"275 400 CURVE"
);
},
{
closed = 1;
nodes = (
"265 -6 OFFCURVE",
"294 18 OFFCURVE",
"300 49 CURVE SMOOTH",
"305 80 OFFCURVE",
"284 105 OFFCURVE",
"254 105 CURVE SMOOTH",
"223 105 OFFCURVE",
"194 80 OFFCURVE",
"189 49 CURVE SMOOTH",
"183 18 OFFCURVE",
"203 -6 OFFCURVE",
"234 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 893;
}
);
note = uni003F;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1034 -453 OFFCURVE",
"1185.667 -417.333 OFFCURVE",
"1267 -364 CURVE",
"1229 -210 LINE",
"1141 -251.333 OFFCURVE",
"1008.667 -278 OFFCURVE",
"898 -278 CURVE SMOOTH",
"478 -278 OFFCURVE",
"261.667 -9 OFFCURVE",
"283 463 CURVE SMOOTH",
"297.667 773.667 OFFCURVE",
"417.667 1024.333 OFFCURVE",
"619 1155 CURVE SMOOTH",
"719.667 1220.333 OFFCURVE",
"834.333 1253 OFFCURVE",
"963 1253 CURVE SMOOTH",
"1375 1253 OFFCURVE",
"1592.667 994.333 OFFCURVE",
"1570 529 CURVE SMOOTH",
"1562 297 OFFCURVE",
"1470.667 140 OFFCURVE",
"1348 140 CURVE SMOOTH",
"1268 140 OFFCURVE",
"1229.667 197.667 OFFCURVE",
"1243 303 CURVE",
"1294 881 LINE",
"1163.667 968 OFFCURVE",
"1082.333 990 OFFCURVE",
"987 990 CURVE SMOOTH",
"832.333 990 OFFCURVE",
"692.833 894.833 OFFCURVE",
"605.5 723.5 CURVE SMOOTH",
"561.833 637.833 OFFCURVE",
"534 540 OFFCURVE",
"522 430 CURVE SMOOTH",
"495.333 160.667 OFFCURVE",
"613.333 -18 OFFCURVE",
"808 -18 CURVE SMOOTH",
"915.333 -18 OFFCURVE",
"1002.333 28.667 OFFCURVE",
"1069 122 CURVE",
"1111.667 30 OFFCURVE",
"1197.333 -21 OFFCURVE",
"1312 -21 CURVE SMOOTH",
"1572 -21 OFFCURVE",
"1734.333 194.667 OFFCURVE",
"1749 536 CURVE SMOOTH",
"1777.543 1265.23 OFFCURVE",
"1167 1416 OFFCURVE",
"967 1416 CURVE SMOOTH",
"637.667 1416 OFFCURVE",
"365 1250 OFFCURVE",
"213 958 CURVE SMOOTH",
"137 812 OFFCURVE",
"95 647 OFFCURVE",
"87 463 CURVE SMOOTH",
"71 79 OFFCURVE",
"196 -204.5 OFFCURVE",
"444 -346.5 CURVE SMOOTH",
"568 -417.5 OFFCURVE",
"718 -453 OFFCURVE",
"894 -453 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"775.667 161 OFFCURVE",
"729.333 254 OFFCURVE",
"744 430 CURVE SMOOTH",
"769.333 680.667 OFFCURVE",
"852 814 OFFCURVE",
"1005 814 CURVE SMOOTH",
"1032 814 OFFCURVE",
"1059 810 OFFCURVE",
"1085 801 CURVE",
"1043 328 LINE",
"1004.333 220 OFFCURVE",
"942.333 161 OFFCURVE",
"877 161 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 50 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
5 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
57 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
35 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
64 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1833;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1035 -453 OFFCURVE",
"1184.333 -416 OFFCURVE",
"1267 -364 CURVE",
"1230 -249 LINE",
"1150 -295.667 OFFCURVE",
"1019 -328 OFFCURVE",
"899 -328 CURVE SMOOTH",
"443 -328 OFFCURVE",
"241 20 OFFCURVE",
"263 478 CURVE SMOOTH",
"277.667 806 OFFCURVE",
"402 1066.833 OFFCURVE",
"610 1199.5 CURVE SMOOTH",
"714 1265.833 OFFCURVE",
"833 1299 OFFCURVE",
"967 1299 CURVE SMOOTH",
"1412.333 1299 OFFCURVE",
"1634.333 1020.667 OFFCURVE",
"1609 502 CURVE SMOOTH",
"1601 262 OFFCURVE",
"1500.667 98 OFFCURVE",
"1350 98 CURVE SMOOTH",
"1252 98 OFFCURVE",
"1209.333 175 OFFCURVE",
"1222 329 CURVE SMOOTH",
"1274 883 LINE",
"1167.333 967 OFFCURVE",
"1093 989 OFFCURVE",
"985 989 CURVE SMOOTH",
"845 989 OFFCURVE",
"709.167 884.167 OFFCURVE",
"628.5 711.5 CURVE SMOOTH",
"588.167 625.167 OFFCURVE",
"563 527 OFFCURVE",
"553 417 CURVE SMOOTH",
"527.667 143.667 OFFCURVE",
"632.667 -20 OFFCURVE",
"822 -20 CURVE SMOOTH",
"920.667 -20 OFFCURVE",
"1017 34.667 OFFCURVE",
"1089 148 CURVE",
"1124.333 36 OFFCURVE",
"1204.333 -20 OFFCURVE",
"1329 -20 CURVE SMOOTH",
"1570.333 -20 OFFCURVE",
"1722 179.333 OFFCURVE",
"1738 502 CURVE SMOOTH",
"1754 879.333 OFFCURVE",
"1635.333 1169.667 OFFCURVE",
"1398 1319 CURVE SMOOTH",
"1279.333 1393.667 OFFCURVE",
"1137 1431 OFFCURVE",
"971 1431 CURVE SMOOTH",
"652.333 1431 OFFCURVE",
"389 1265.167 OFFCURVE",
"241 972.5 CURVE SMOOTH",
"167 826.167 OFFCURVE",
"126 661.333 OFFCURVE",
"118 478 CURVE SMOOTH",
"95 -59 OFFCURVE",
"358 -453 OFFCURVE",
"895 -453 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"749.667 123 OFFCURVE",
"693.333 227.667 OFFCURVE",
"712 417 CURVE SMOOTH",
"737.333 691.667 OFFCURVE",
"845 861 OFFCURVE",
"1001 861 CURVE SMOOTH",
"1043.667 861 OFFCURVE",
"1083.667 851.333 OFFCURVE",
"1121 832 CURVE",
"1074 320 LINE",
"1026 193.333 OFFCURVE",
"947 123 OFFCURVE",
"867 123 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 50 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
5 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
57 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
35 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
64 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1839;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1030.333 -453 OFFCURVE",
"1181.667 -420 OFFCURVE",
"1267 -364 CURVE",
"1243 -318 LINE",
"1157.667 -367.333 OFFCURVE",
"1033 -398 OFFCURVE",
"913 -398 CURVE SMOOTH",
"419 -398 OFFCURVE",
"164 -10 OFFCURVE",
"187 478 CURVE SMOOTH",
"204.333 814 OFFCURVE",
"349 1092.667 OFFCURVE",
"593 1242 CURVE SMOOTH",
"715 1316.667 OFFCURVE",
"850.667 1354 OFFCURVE",
"1000 1354 CURVE SMOOTH",
"1494.667 1354 OFFCURVE",
"1742.333 1071 OFFCURVE",
"1713 523 CURVE SMOOTH",
"1698.333 216.333 OFFCURVE",
"1581.667 35 OFFCURVE",
"1403 35 CURVE SMOOTH",
"1272.333 35 OFFCURVE",
"1204.333 129 OFFCURVE",
"1219 293 CURVE SMOOTH",
"1268 878 LINE",
"1160.667 966 OFFCURVE",
"1094.667 988 OFFCURVE",
"1018 988 CURVE SMOOTH",
"945 988 OFFCURVE",
"878 966 OFFCURVE",
"819 925 CURVE SMOOTH",
"692 838 OFFCURVE",
"603 664 OFFCURVE",
"581 436 CURVE SMOOTH",
"557 160 OFFCURVE",
"650.667 -20 OFFCURVE",
"832 -20 CURVE SMOOTH",
"980.667 -20 OFFCURVE",
"1091.667 56.667 OFFCURVE",
"1165 210 CURVE",
"1179.667 66 OFFCURVE",
"1266.667 -20 OFFCURVE",
"1400 -20 CURVE SMOOTH",
"1654 -20 OFFCURVE",
"1762 277 OFFCURVE",
"1770 523 CURVE SMOOTH",
"1795.333 1095 OFFCURVE",
"1526.667 1411 OFFCURVE",
"1004 1411 CURVE SMOOTH",
"672 1411 OFFCURVE",
"403 1252.667 OFFCURVE",
"255 970 CURVE SMOOTH",
"181 828.667 OFFCURVE",
"140 664.667 OFFCURVE",
"132 478 CURVE SMOOTH",
"116 100.667 OFFCURVE",
"239 -190.5 OFFCURVE",
"479 -340.5 CURVE SMOOTH",
"599 -415.5 OFFCURVE",
"742.333 -453 OFFCURVE",
"909 -453 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"616 34 OFFCURVE",
"608 346 OFFCURVE",
"655 557 CURVE SMOOTH",
"708.333 791.667 OFFCURVE",
"845.667 933 OFFCURVE",
"1015 933 CURVE SMOOTH",
"1099.667 933 OFFCURVE",
"1165 905.667 OFFCURVE",
"1211 851 CURVE",
"1168 344 LINE",
"1100 137.333 OFFCURVE",
"996.667 34 OFFCURVE",
"830 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 50 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
5 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
57 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
35 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
64 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1902;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"764 -453 OFFCURVE",
"920 -416 OFFCURVE",
"1012 -364 CURVE",
"995 -249 LINE",
"907 -296 OFFCURVE",
"770 -328 OFFCURVE",
"650 -328 CURVE SMOOTH",
"194 -328 OFFCURVE",
"54 20 OFFCURVE",
"156 478 CURVE SMOOTH",
"229 806 OFFCURVE",
"399 1067 OFFCURVE",
"631 1200 CURVE SMOOTH",
"746 1266 OFFCURVE",
"871 1299 OFFCURVE",
"1005 1299 CURVE SMOOTH",
"1451 1299 OFFCURVE",
"1624 1021 OFFCURVE",
"1507 502 CURVE SMOOTH",
"1456 262 OFFCURVE",
"1327 98 OFFCURVE",
"1176 98 CURVE SMOOTH",
"1078 98 OFFCURVE",
"1049 175 OFFCURVE",
"1089 329 CURVE SMOOTH",
"1239 883 LINE",
"1147 967 OFFCURVE",
"1077 989 OFFCURVE",
"969 989 CURVE SMOOTH",
"829 989 OFFCURVE",
"674 884 OFFCURVE",
"563 712 CURVE SMOOTH",
"508 625 OFFCURVE",
"465 527 OFFCURVE",
"436 417 CURVE SMOOTH",
"362 144 OFFCURVE",
"438 -20 OFFCURVE",
"628 -20 CURVE SMOOTH",
"726 -20 OFFCURVE",
"832 35 OFFCURVE",
"924 148 CURVE",
"940 36 OFFCURVE",
"1010 -20 OFFCURVE",
"1135 -20 CURVE SMOOTH",
"1376 -20 OFFCURVE",
"1563 179 OFFCURVE",
"1636 502 CURVE SMOOTH",
"1718 879 OFFCURVE",
"1651 1170 OFFCURVE",
"1440 1319 CURVE SMOOTH",
"1334 1394 OFFCURVE",
"1199 1431 OFFCURVE",
"1033 1431 CURVE SMOOTH",
"714 1431 OFFCURVE",
"421 1265 OFFCURVE",
"222 973 CURVE SMOOTH",
"122 826 OFFCURVE",
"52 661 OFFCURVE",
"11 478 CURVE SMOOTH",
"-106 -59 OFFCURVE",
"87 -453 OFFCURVE",
"624 -453 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"581 123 OFFCURVE",
"543 228 OFFCURVE",
"595 417 CURVE SMOOTH",
"669 692 OFFCURVE",
"806 861 OFFCURVE",
"962 861 CURVE SMOOTH",
"1005 861 OFFCURVE",
"1043 851 OFFCURVE",
"1077 832 CURVE",
"940 320 LINE",
"869 193 OFFCURVE",
"778 123 OFFCURVE",
"698 123 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 50 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
5 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
57 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
35 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
64 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1839;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"760 -453 OFFCURVE",
"917 -420 OFFCURVE",
"1012 -364 CURVE",
"996 -318 LINE",
"902 -367 OFFCURVE",
"772 -398 OFFCURVE",
"652 -398 CURVE SMOOTH",
"158 -398 OFFCURVE",
"-29 -10 OFFCURVE",
"80 478 CURVE SMOOTH",
"157 814 OFFCURVE",
"351 1093 OFFCURVE",
"621 1242 CURVE SMOOTH",
"756 1317 OFFCURVE",
"899 1354 OFFCURVE",
"1048 1354 CURVE SMOOTH",
"1543 1354 OFFCURVE",
"1740 1071 OFFCURVE",
"1614 523 CURVE SMOOTH",
"1546 216 OFFCURVE",
"1397 35 OFFCURVE",
"1218 35 CURVE SMOOTH",
"1088 35 OFFCURVE",
"1036 129 OFFCURVE",
"1080 293 CURVE SMOOTH",
"1232 878 LINE",
"1140 966 OFFCURVE",
"1078 988 OFFCURVE",
"1001 988 CURVE SMOOTH",
"928 988 OFFCURVE",
"858 966 OFFCURVE",
"791 925 CURVE SMOOTH",
"649 838 OFFCURVE",
"529 664 OFFCURVE",
"467 436 CURVE SMOOTH",
"394 160 OFFCURVE",
"456 -20 OFFCURVE",
"638 -20 CURVE SMOOTH",
"786 -20 OFFCURVE",
"911 57 OFFCURVE",
"1011 210 CURVE",
"1001 66 OFFCURVE",
"1072 -20 OFFCURVE",
"1206 -20 CURVE SMOOTH",
"1460 -20 OFFCURVE",
"1620 277 OFFCURVE",
"1671 523 CURVE SMOOTH",
"1798 1095 OFFCURVE",
"1585 1411 OFFCURVE",
"1062 1411 CURVE SMOOTH",
"730 1411 OFFCURVE",
"433 1253 OFFCURVE",
"235 970 CURVE SMOOTH",
"136 829 OFFCURVE",
"66 665 OFFCURVE",
"25 478 CURVE SMOOTH",
"-57 101 OFFCURVE",
"15 -191 OFFCURVE",
"228 -341 CURVE SMOOTH",
"335 -416 OFFCURVE",
"472 -453 OFFCURVE",
"638 -453 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"431 34 OFFCURVE",
"478 346 OFFCURVE",
"562 557 CURVE SMOOTH",
"657 792 OFFCURVE",
"819 933 OFFCURVE",
"989 933 CURVE SMOOTH",
"1073 933 OFFCURVE",
"1134 906 OFFCURVE",
"1170 851 CURVE",
"1038 344 LINE",
"933 137 OFFCURVE",
"812 34 OFFCURVE",
"645 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
15 50 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
5 8 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
57 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
35 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
64 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1902;
}
);
note = uni0040;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"326 0 LINE",
"426 300 LINE",
"952 300 LINE",
"1053 0 LINE",
"1372 0 LINE",
"827 1456 LINE",
"549 1456 LINE",
"7 0 LINE"
);
},
{
closed = 1;
nodes = (
"688 1088 LINE",
"871 543 LINE",
"507 543 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1378;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"226 0 LINE",
"363 380 LINE",
"973 380 LINE",
"1112 0 LINE",
"1309 0 LINE",
"752 1456 LINE",
"584 1456 LINE",
"28 0 LINE"
);
},
{
closed = 1;
nodes = (
"668 1219 LINE",
"916 538 LINE",
"421 538 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1336;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"92 0 LINE",
"254 435 LINE",
"967 435 LINE",
"1130 0 LINE",
"1189 0 LINE",
"644 1456 LINE",
"578 1456 LINE",
"33 0 LINE"
);
},
{
closed = 1;
nodes = (
"611 1391 LINE",
"947 489 LINE",
"274 489 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"239 380 LINE",
"849 380 LINE",
"921 0 LINE",
"1118 0 LINE",
"818 1456 LINE",
"650 1456 LINE",
"-163 0 LINE"
);
},
{
closed = 1;
nodes = (
"692 1219 LINE",
"820 538 LINE",
"325 538 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1336;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-99 0 LINE",
"140 435 LINE",
"853 435 LINE",
"939 0 LINE",
"998 0 LINE",
"710 1456 LINE",
"644 1456 LINE",
"-158 0 LINE"
);
},
{
closed = 1;
nodes = (
"665 1391 LINE",
"842 489 LINE",
"169 489 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
}
);
leftKerningGroup = A;
note = uni0041;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"696 0 LINE SMOOTH",
"1026.667 2.667 OFFCURVE",
"1212 148 OFFCURVE",
"1212 428 CURVE SMOOTH",
"1212 592 OFFCURVE",
"1120.333 711.667 OFFCURVE",
"971 749 CURVE",
"1101.667 799.667 OFFCURVE",
"1179 914.333 OFFCURVE",
"1179 1057 CURVE SMOOTH",
"1179 1318.333 OFFCURVE",
"993.333 1456 OFFCURVE",
"640 1456 CURVE SMOOTH",
"130 1456 LINE",
"130 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 634 LINE",
"705 634 LINE SMOOTH",
"843 632 OFFCURVE",
"912 564.333 OFFCURVE",
"912 431 CURVE SMOOTH",
"912 312.333 OFFCURVE",
"828.333 241 OFFCURVE",
"687 241 CURVE SMOOTH",
"430 241 LINE"
);
},
{
closed = 1;
nodes = (
"430 1213 LINE",
"640 1213 LINE SMOOTH",
"805.333 1213 OFFCURVE",
"879 1159 OFFCURVE",
"879 1027 CURVE SMOOTH",
"879 909 OFFCURVE",
"803.333 848.667 OFFCURVE",
"652 846 CURVE SMOOTH",
"430 846 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1307;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"674 0 LINE SMOOTH",
"983.333 0 OFFCURVE",
"1160 158.667 OFFCURVE",
"1160 420 CURVE SMOOTH",
"1160 590.667 OFFCURVE",
"1062.333 722 OFFCURVE",
"905 766 CURVE",
"1038.333 823.333 OFFCURVE",
"1121 932 OFFCURVE",
"1121 1068 CURVE SMOOTH",
"1121 1324 OFFCURVE",
"961 1456 OFFCURVE",
"645 1456 CURVE SMOOTH",
"169 1456 LINE",
"169 0 LINE"
);
},
{
closed = 1;
nodes = (
"361 681 LINE",
"681 681 LINE SMOOTH",
"871.667 681 OFFCURVE",
"967 593.333 OFFCURVE",
"967 418 CURVE SMOOTH",
"967 255.333 OFFCURVE",
"856.667 157 OFFCURVE",
"678 157 CURVE SMOOTH",
"361 157 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"645 1298 LINE SMOOTH",
"835.667 1298 OFFCURVE",
"928 1229 OFFCURVE",
"928 1069 CURVE SMOOTH",
"928 925 OFFCURVE",
"819 835 OFFCURVE",
"651 835 CURVE SMOOTH",
"361 835 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1275;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"669 0 LINE SMOOTH",
"955.667 0 OFFCURVE",
"1125 153 OFFCURVE",
"1125 401 CURVE SMOOTH",
"1125 575.667 OFFCURVE",
"987 729 OFFCURVE",
"803 753 CURVE",
"965.667 785 OFFCURVE",
"1059 907 OFFCURVE",
"1059 1083 CURVE SMOOTH",
"1059 1325.667 OFFCURVE",
"896.333 1456 OFFCURVE",
"583 1456 CURVE SMOOTH",
"200 1456 LINE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"254 719 LINE",
"696 719 LINE SMOOTH",
"924 715 OFFCURVE",
"1071 583 OFFCURVE",
"1071 399 CURVE SMOOTH",
"1071 183 OFFCURVE",
"921.667 54 OFFCURVE",
"675 54 CURVE SMOOTH",
"254 54 LINE"
);
},
{
closed = 1;
nodes = (
"254 1402 LINE",
"595 1402 LINE SMOOTH",
"867.667 1398.667 OFFCURVE",
"1004 1293.667 OFFCURVE",
"1004 1087 CURVE SMOOTH",
"1004 872.333 OFFCURVE",
"868.333 773 OFFCURVE",
"603 773 CURVE SMOOTH",
"254 773 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1235;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"483 0 LINE SMOOTH",
"793 0 OFFCURVE",
"997 159 OFFCURVE",
"1043 420 CURVE SMOOTH",
"1073 591 OFFCURVE",
"999 722 OFFCURVE",
"849 766 CURVE",
"993 823 OFFCURVE",
"1095 932 OFFCURVE",
"1119 1068 CURVE SMOOTH",
"1164 1324 OFFCURVE",
"1027 1456 OFFCURVE",
"711 1456 CURVE SMOOTH",
"235 1456 LINE",
"-22 0 LINE"
);
},
{
closed = 1;
nodes = (
"290 681 LINE",
"610 681 LINE SMOOTH",
"801 681 OFFCURVE",
"881 593 OFFCURVE",
"850 418 CURVE SMOOTH",
"821 255 OFFCURVE",
"694 157 OFFCURVE",
"515 157 CURVE SMOOTH",
"198 157 LINE"
);
},
{
closed = 1;
nodes = (
"399 1298 LINE",
"683 1298 LINE SMOOTH",
"874 1298 OFFCURVE",
"954 1229 OFFCURVE",
"926 1069 CURVE SMOOTH",
"900 925 OFFCURVE",
"775 835 OFFCURVE",
"607 835 CURVE SMOOTH",
"317 835 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1275;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"478 0 LINE SMOOTH",
"765 0 OFFCURVE",
"961 153 OFFCURVE",
"1005 401 CURVE SMOOTH",
"1036 576 OFFCURVE",
"925 729 OFFCURVE",
"745 753 CURVE",
"913 785 OFFCURVE",
"1028 907 OFFCURVE",
"1059 1083 CURVE SMOOTH",
"1102 1326 OFFCURVE",
"962 1456 OFFCURVE",
"649 1456 CURVE SMOOTH",
"266 1456 LINE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"190 719 LINE",
"632 719 LINE SMOOTH",
"859 715 OFFCURVE",
"983 583 OFFCURVE",
"951 399 CURVE SMOOTH",
"912 183 OFFCURVE",
"740 54 OFFCURVE",
"494 54 CURVE SMOOTH",
"73 54 LINE"
);
},
{
closed = 1;
nodes = (
"310 1402 LINE",
"651 1402 LINE SMOOTH",
"924 1399 OFFCURVE",
"1041 1294 OFFCURVE",
"1005 1087 CURVE SMOOTH",
"967 872 OFFCURVE",
"814 773 OFFCURVE",
"549 773 CURVE SMOOTH",
"200 773 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1235;
}
);
note = uni0042;
rightKerningGroup = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1028.333 -20 OFFCURVE",
"1250.333 171.667 OFFCURVE",
"1273 485 CURVE",
"973 485 LINE",
"959.667 307.667 OFFCURVE",
"872.333 225 OFFCURVE",
"687 225 CURVE SMOOTH",
"481.667 225 OFFCURVE",
"390 364.333 OFFCURVE",
"390 679 CURVE SMOOTH",
"390 789 LINE SMOOTH",
"392.667 1090.333 OFFCURVE",
"491 1230 OFFCURVE",
"691 1230 CURVE SMOOTH",
"875 1230 OFFCURVE",
"960.333 1150 OFFCURVE",
"975 962 CURVE",
"1275 962 LINE",
"1243 1287.333 OFFCURVE",
"1027 1476 OFFCURVE",
"691 1476 CURVE SMOOTH",
"448.333 1476 OFFCURVE",
"258.667 1358.333 OFFCURVE",
"160 1145 CURVE SMOOTH",
"110.667 1038.333 OFFCURVE",
"86 915 OFFCURVE",
"86 775 CURVE SMOOTH",
"86 686 LINE SMOOTH",
"86 247.333 OFFCURVE",
"313.667 -20 OFFCURVE",
"687 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1340;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1005.333 -20 OFFCURVE",
"1204 154 OFFCURVE",
"1240 462 CURVE",
"1047 462 LINE",
"1009.667 222 OFFCURVE",
"901.333 137 OFFCURVE",
"688 137 CURVE SMOOTH",
"450.667 137 OFFCURVE",
"312 338 OFFCURVE",
"312 654 CURVE SMOOTH",
"312 795 LINE SMOOTH",
"312 1129.667 OFFCURVE",
"459.667 1318 OFFCURVE",
"705 1318 CURVE SMOOTH",
"905 1318 OFFCURVE",
"1013.667 1220 OFFCURVE",
"1047 988 CURVE",
"1240 988 LINE",
"1209.333 1293.333 OFFCURVE",
"1014.333 1476 OFFCURVE",
"705 1476 CURVE SMOOTH",
"471.667 1476 OFFCURVE",
"288.167 1362.333 OFFCURVE",
"191.5 1157 CURVE SMOOTH",
"143.167 1054.333 OFFCURVE",
"119 935.333 OFFCURVE",
"119 800 CURVE SMOOTH",
"119 660 LINE SMOOTH",
"119 246.667 OFFCURVE",
"344 -20 OFFCURVE",
"688 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1333;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"977.667 -20 OFFCURVE",
"1162 146 OFFCURVE",
"1190 446 CURVE",
"1136 446 LINE",
"1108 171.333 OFFCURVE",
"949.667 34 OFFCURVE",
"671 34 CURVE SMOOTH",
"358 34 OFFCURVE",
"198 306 OFFCURVE",
"198 619 CURVE SMOOTH",
"198 833 LINE SMOOTH",
"198 1191.667 OFFCURVE",
"388.333 1422 OFFCURVE",
"671 1422 CURVE SMOOTH",
"948.333 1422 OFFCURVE",
"1105.333 1280 OFFCURVE",
"1136 1012 CURVE",
"1190 1012 LINE",
"1162 1310.667 OFFCURVE",
"975 1476 OFFCURVE",
"671 1476 CURVE SMOOTH",
"463 1476 OFFCURVE",
"295.667 1364.833 OFFCURVE",
"209 1169.5 CURVE SMOOTH",
"165.667 1071.833 OFFCURVE",
"144 961 OFFCURVE",
"144 837 CURVE SMOOTH",
"144 612 LINE SMOOTH",
"146 267 OFFCURVE",
"330 -20 OFFCURVE",
"671 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1327;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"811 -20 OFFCURVE",
"1040 154 OFFCURVE",
"1131 462 CURVE",
"938 462 LINE",
"858 222 OFFCURVE",
"735 137 OFFCURVE",
"521 137 CURVE SMOOTH",
"284 137 OFFCURVE",
"181 338 OFFCURVE",
"237 654 CURVE SMOOTH",
"261 795 LINE SMOOTH",
"320 1130 OFFCURVE",
"501 1318 OFFCURVE",
"747 1318 CURVE SMOOTH",
"947 1318 OFFCURVE",
"1038 1220 OFFCURVE",
"1030 988 CURVE",
"1223 988 LINE",
"1247 1293 OFFCURVE",
"1084 1476 OFFCURVE",
"774 1476 CURVE SMOOTH",
"541 1476 OFFCURVE",
"338 1362 OFFCURVE",
"205 1157 CURVE SMOOTH",
"138 1054 OFFCURVE",
"93 935 OFFCURVE",
"69 800 CURVE SMOOTH",
"45 660 LINE SMOOTH",
"-28 247 OFFCURVE",
"150 -20 OFFCURVE",
"494 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1333;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"783 -20 OFFCURVE",
"997 146 OFFCURVE",
"1078 446 CURVE",
"1024 446 LINE",
"947 171 OFFCURVE",
"765 34 OFFCURVE",
"486 34 CURVE SMOOTH",
"173 34 OFFCURVE",
"61 306 OFFCURVE",
"116 619 CURVE SMOOTH",
"154 833 LINE SMOOTH",
"217 1192 OFFCURVE",
"448 1422 OFFCURVE",
"731 1422 CURVE SMOOTH",
"1008 1422 OFFCURVE",
"1140 1280 OFFCURVE",
"1124 1012 CURVE",
"1178 1012 LINE",
"1202 1311 OFFCURVE",
"1044 1476 OFFCURVE",
"740 1476 CURVE SMOOTH",
"532 1476 OFFCURVE",
"346 1365 OFFCURVE",
"224 1170 CURVE SMOOTH",
"164 1072 OFFCURVE",
"123 961 OFFCURVE",
"101 837 CURVE SMOOTH",
"61 612 LINE SMOOTH",
"2 267 OFFCURVE",
"136 -20 OFFCURVE",
"477 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1327;
}
);
leftKerningGroup = C;
note = uni0043;
rightKerningGroup = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"581 0 LINE SMOOTH",
"1163.959 7.183 OFFCURVE",
"1243 594 OFFCURVE",
"1243 694 CURVE SMOOTH",
"1243 761 LINE SMOOTH",
"1243 1163 OFFCURVE",
"980 1456 OFFCURVE",
"578 1456 CURVE SMOOTH",
"130 1456 LINE",
"130 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 1213 LINE",
"578 1213 LINE SMOOTH",
"814 1213 OFFCURVE",
"939 1058 OFFCURVE",
"939 762 CURVE SMOOTH",
"939 685 LINE SMOOTH",
"936.333 399.667 OFFCURVE",
"809.667 241 OFFCURVE",
"575 241 CURVE SMOOTH",
"430 241 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1331;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"572 0 LINE SMOOTH",
"1089.696 4.742 OFFCURVE",
"1222 514 OFFCURVE",
"1222 684 CURVE SMOOTH",
"1222 777 LINE SMOOTH",
"1217.775 1297.611 OFFCURVE",
"759 1456 OFFCURVE",
"580 1456 CURVE SMOOTH",
"169 1456 LINE",
"169 0 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"585 1298 LINE SMOOTH",
"870.333 1295.333 OFFCURVE",
"1032 1103.667 OFFCURVE",
"1032 773 CURVE SMOOTH",
"1032 688 LINE SMOOTH",
"1032 348 OFFCURVE",
"859 157 OFFCURVE",
"563 157 CURVE SMOOTH",
"361 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1343;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"608 0 LINE SMOOTH",
"950 0 OFFCURVE",
"1204 265 OFFCURVE",
"1204 639 CURVE SMOOTH",
"1204 828 LINE SMOOTH",
"1204 1294 OFFCURVE",
"929 1476 OFFCURVE",
"520 1456 CURVE",
"200 1456 LINE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"254 1402 LINE",
"611 1402 LINE SMOOTH",
"1094 1402 OFFCURVE",
"1150 1057 OFFCURVE",
"1150 820 CURVE SMOOTH",
"1150 633 LINE SMOOTH",
"1150 226 OFFCURVE",
"829 54 OFFCURVE",
"543 54 CURVE SMOOTH",
"254 54 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1340;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"381 0 LINE SMOOTH",
"900 5 OFFCURVE",
"1122 514 OFFCURVE",
"1152 684 CURVE SMOOTH",
"1168 777 LINE SMOOTH",
"1256 1298 OFFCURVE",
"825 1456 OFFCURVE",
"646 1456 CURVE SMOOTH",
"235 1456 LINE",
"-22 0 LINE"
);
},
{
closed = 1;
nodes = (
"399 1298 LINE",
"623 1298 LINE SMOOTH",
"908 1295 OFFCURVE",
"1036 1104 OFFCURVE",
"978 773 CURVE SMOOTH",
"963 688 LINE SMOOTH",
"903 348 OFFCURVE",
"696 157 OFFCURVE",
"400 157 CURVE SMOOTH",
"198 157 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1343;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"417 0 LINE SMOOTH",
"759 0 OFFCURVE",
"1060 265 OFFCURVE",
"1126 639 CURVE SMOOTH",
"1159 828 LINE SMOOTH",
"1241 1294 OFFCURVE",
"998 1476 OFFCURVE",
"586 1456 CURVE",
"266 1456 LINE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"310 1402 LINE",
"667 1402 LINE SMOOTH",
"1150 1402 OFFCURVE",
"1146 1057 OFFCURVE",
"1104 820 CURVE SMOOTH",
"1071 633 LINE SMOOTH",
"999 226 OFFCURVE",
"648 54 OFFCURVE",
"362 54 CURVE SMOOTH",
"73 54 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1340;
}
);
note = uni0044;
rightKerningGroup = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1106 0 LINE",
"1106 241 LINE",
"430 241 LINE",
"430 631 LINE",
"1006 631 LINE",
"1006 866 LINE",
"430 866 LINE",
"430 1213 LINE",
"1104 1213 LINE",
"1104 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 4 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1152;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1094 0 LINE",
"1094 157 LINE",
"361 157 LINE",
"361 673 LINE",
"992 673 LINE",
"992 830 LINE",
"361 830 LINE",
"361 1298 LINE",
"1084 1298 LINE",
"1084 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 4 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE",
"1086 54 LINE",
"254 54 LINE",
"254 722 LINE",
"984 722 LINE",
"984 776 LINE",
"254 776 LINE",
"254 1402 LINE",
"1086 1402 LINE",
"1086 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 4 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1166;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"903 0 LINE",
"931 157 LINE",
"198 157 LINE",
"289 673 LINE",
"920 673 LINE",
"948 830 LINE",
"317 830 LINE",
"399 1298 LINE",
"1122 1298 LINE",
"1150 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 4 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"895 0 LINE",
"905 54 LINE",
"73 54 LINE",
"191 722 LINE",
"921 722 LINE",
"930 776 LINE",
"200 776 LINE",
"310 1402 LINE",
"1142 1402 LINE",
"1152 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 4 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1166;
}
);
note = uni0045;
rightKerningGroup = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 595 LINE",
"1006 595 LINE",
"1006 837 LINE",
"430 837 LINE",
"430 1213 LINE",
"1078 1213 LINE",
"1078 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1122;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 643 LINE",
"972 643 LINE",
"972 800 LINE",
"361 800 LINE",
"361 1298 LINE",
"1071 1298 LINE",
"1071 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1132;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 716 LINE",
"1000 716 LINE",
"1000 772 LINE",
"254 772 LINE",
"254 1402 LINE",
"1102 1402 LINE",
"1102 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1172;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"284 643 LINE",
"895 643 LINE",
"922 800 LINE",
"311 800 LINE",
"399 1298 LINE",
"1109 1298 LINE",
"1137 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1132;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"189 716 LINE",
"935 716 LINE",
"945 772 LINE",
"199 772 LINE",
"310 1402 LINE",
"1158 1402 LINE",
"1168 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1172;
}
);
note = uni0046;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"965 -20 OFFCURVE",
"1174 54.667 OFFCURVE",
"1282 184 CURVE",
"1282 765 LINE",
"709 765 LINE",
"709 544 LINE",
"982 544 LINE",
"982 293 LINE",
"934 245 OFFCURVE",
"853.667 221 OFFCURVE",
"741 221 CURVE SMOOTH",
"517 221 OFFCURVE",
"399 378.667 OFFCURVE",
"399 684 CURVE SMOOTH",
"399 777 LINE SMOOTH",
"400.333 1079.667 OFFCURVE",
"509 1234 OFFCURVE",
"713 1234 CURVE SMOOTH",
"873 1234 OFFCURVE",
"963.333 1159.667 OFFCURVE",
"990 993 CURVE",
"1282 993 LINE",
"1246 1307.667 OFFCURVE",
"1049.333 1476 OFFCURVE",
"704 1476 CURVE SMOOTH",
"456 1476 OFFCURVE",
"265.5 1360.167 OFFCURVE",
"167.5 1147.5 CURVE SMOOTH",
"118.5 1041.167 OFFCURVE",
"94 915.333 OFFCURVE",
"94 770 CURVE SMOOTH",
"94 671 LINE SMOOTH",
"100.52 129.707 OFFCURVE",
"546 -20 OFFCURVE",
"725 -20 CURVE SMOOTH"
);
}
);
};
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"965 -20 OFFCURVE",
"1174 55 OFFCURVE",
"1282 184 CURVE",
"1282 765 LINE",
"709 765 LINE",
"709 544 LINE",
"982 544 LINE",
"982 293 LINE",
"934 245 OFFCURVE",
"854 221 OFFCURVE",
"741 221 CURVE SMOOTH",
"517 221 OFFCURVE",
"399 379 OFFCURVE",
"399 684 CURVE SMOOTH",
"399 777 LINE SMOOTH",
"400 1080 OFFCURVE",
"509 1234 OFFCURVE",
"713 1234 CURVE SMOOTH",
"873 1234 OFFCURVE",
"963 1160 OFFCURVE",
"990 993 CURVE",
"1282 993 LINE",
"1246 1308 OFFCURVE",
"1049 1476 OFFCURVE",
"704 1476 CURVE SMOOTH",
"300 1476 OFFCURVE",
"94 1178 OFFCURVE",
"94 770 CURVE SMOOTH",
"94 671 LINE SMOOTH",
"101 130 OFFCURVE",
"546 -20 OFFCURVE",
"725 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1395;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"963.667 -20 OFFCURVE",
"1145.333 49.667 OFFCURVE",
"1244 191 CURVE",
"1244 725 LINE",
"716 725 LINE",
"716 569 LINE",
"1053 569 LINE",
"1053 242 LINE",
"982.333 166 OFFCURVE",
"874 137 OFFCURVE",
"730 137 CURVE SMOOTH",
"475.333 137 OFFCURVE",
"315 344.333 OFFCURVE",
"315 671 CURVE SMOOTH",
"315 790 LINE SMOOTH",
"316.333 1132.667 OFFCURVE",
"450.667 1318 OFFCURVE",
"708 1318 CURVE SMOOTH",
"901.333 1318 OFFCURVE",
"1016 1221.667 OFFCURVE",
"1052 1029 CURVE",
"1244 1029 LINE",
"1202.667 1314.333 OFFCURVE",
"1011 1476 OFFCURVE",
"707 1476 CURVE SMOOTH",
"336.333 1476 OFFCURVE",
"122 1223.667 OFFCURVE",
"122 785 CURVE SMOOTH",
"122 658 LINE SMOOTH",
"126 262 OFFCURVE",
"353 -20 OFFCURVE",
"729 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1395;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"950.333 -20 OFFCURVE",
"1152.667 54.667 OFFCURVE",
"1226 156 CURVE",
"1226 660 LINE",
"727 660 LINE",
"727 605 LINE",
"1172 605 LINE",
"1172 181 LINE",
"1109.333 99.667 OFFCURVE",
"923.667 34 OFFCURVE",
"729 34 CURVE SMOOTH",
"530.333 34 OFFCURVE",
"370.167 136.333 OFFCURVE",
"285.5 315 CURVE SMOOTH",
"243.167 404.333 OFFCURVE",
"222 506 OFFCURVE",
"222 620 CURVE SMOOTH",
"222 852 LINE SMOOTH",
"222 1193.333 OFFCURVE",
"418.667 1422 OFFCURVE",
"712 1422 CURVE SMOOTH",
"972 1422 OFFCURVE",
"1134 1294 OFFCURVE",
"1170 1062 CURVE",
"1224 1062 LINE",
"1194.667 1318 OFFCURVE",
"1001.333 1476 OFFCURVE",
"712 1476 CURVE SMOOTH",
"320.923 1474.205 OFFCURVE",
"168 1027 OFFCURVE",
"168 858 CURVE SMOOTH",
"168 608 LINE SMOOTH",
"170.667 365.333 OFFCURVE",
"270.667 164.333 OFFCURVE",
"440 59 CURVE SMOOTH",
"524.667 6.333 OFFCURVE",
"621 -20 OFFCURVE",
"729 -20 CURVE SMOOTH"
);
}
);
};
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"950.333 -20 OFFCURVE",
"1152.667 54.667 OFFCURVE",
"1226 156 CURVE",
"1226 660 LINE",
"727 660 LINE",
"727 605 LINE",
"1172 605 LINE",
"1172 181 LINE",
"1109.333 99.667 OFFCURVE",
"923.667 34 OFFCURVE",
"729 34 CURVE SMOOTH",
"408 34 OFFCURVE",
"222 294 OFFCURVE",
"222 620 CURVE SMOOTH",
"222 852 LINE SMOOTH",
"222 1083 OFFCURVE",
"418.667 1422 OFFCURVE",
"712 1422 CURVE SMOOTH",
"972 1422 OFFCURVE",
"1134 1294 OFFCURVE",
"1170 1062 CURVE",
"1224 1062 LINE",
"1194.667 1318 OFFCURVE",
"1001.333 1476 OFFCURVE",
"712 1476 CURVE SMOOTH",
"320.923 1474.205 OFFCURVE",
"168 1027 OFFCURVE",
"168 858 CURVE SMOOTH",
"168 608 LINE SMOOTH",
"168 255 OFFCURVE",
"384 -20 OFFCURVE",
"729 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1406;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"769 -20 OFFCURVE",
"963 50 OFFCURVE",
"1087 191 CURVE",
"1181 725 LINE",
"653 725 LINE",
"626 569 LINE",
"963 569 LINE",
"905 242 LINE",
"821 166 OFFCURVE",
"707 137 OFFCURVE",
"563 137 CURVE SMOOTH",
"309 137 OFFCURVE",
"185 344 OFFCURVE",
"243 671 CURVE SMOOTH",
"264 790 LINE SMOOTH",
"325 1133 OFFCURVE",
"492 1318 OFFCURVE",
"750 1318 CURVE SMOOTH",
"943 1318 OFFCURVE",
"1041 1222 OFFCURVE",
"1043 1029 CURVE",
"1235 1029 LINE",
"1244 1314 OFFCURVE",
"1080 1476 OFFCURVE",
"776 1476 CURVE SMOOTH",
"406 1476 OFFCURVE",
"147 1224 OFFCURVE",
"70 785 CURVE SMOOTH",
"47 658 LINE SMOOTH",
"-19 262 OFFCURVE",
"159 -20 OFFCURVE",
"535 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1395;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"950.333 -20 OFFCURVE",
"1152.667 54.667 OFFCURVE",
"1226 156 CURVE",
"1226 660 LINE",
"727 660 LINE",
"727 605 LINE",
"1172 605 LINE",
"1172 181 LINE",
"1109.333 99.667 OFFCURVE",
"923.667 34 OFFCURVE",
"729 34 CURVE SMOOTH",
"530.333 34 OFFCURVE",
"370.167 136.333 OFFCURVE",
"285.5 315 CURVE SMOOTH",
"243.167 404.333 OFFCURVE",
"222 506 OFFCURVE",
"222 620 CURVE SMOOTH",
"222 852 LINE SMOOTH",
"222 1193.333 OFFCURVE",
"418.667 1422 OFFCURVE",
"712 1422 CURVE SMOOTH",
"972 1422 OFFCURVE",
"1134 1294 OFFCURVE",
"1170 1062 CURVE",
"1224 1062 LINE",
"1194.667 1318 OFFCURVE",
"1001.333 1476 OFFCURVE",
"712 1476 CURVE SMOOTH",
"320.923 1474.205 OFFCURVE",
"168 1027 OFFCURVE",
"168 858 CURVE SMOOTH",
"168 608 LINE SMOOTH",
"170.667 365.333 OFFCURVE",
"270.667 164.333 OFFCURVE",
"440 59 CURVE SMOOTH",
"524.667 6.333 OFFCURVE",
"621 -20 OFFCURVE",
"729 -20 CURVE SMOOTH"
);
}
);
};
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"756 -20 OFFCURVE",
"972 55 OFFCURVE",
"1063 156 CURVE",
"1152 660 LINE",
"653 660 LINE",
"643 605 LINE",
"1088 605 LINE",
"1013 181 LINE",
"936 100 OFFCURVE",
"739 34 OFFCURVE",
"544 34 CURVE SMOOTH",
"223 34 OFFCURVE",
"83 294 OFFCURVE",
"141 620 CURVE SMOOTH",
"181 852 LINE SMOOTH",
"222 1083 OFFCURVE",
"479 1422 OFFCURVE",
"772 1422 CURVE SMOOTH",
"1032 1422 OFFCURVE",
"1171 1294 OFFCURVE",
"1166 1062 CURVE",
"1220 1062 LINE",
"1236 1318 OFFCURVE",
"1071 1476 OFFCURVE",
"781 1476 CURVE SMOOTH",
"390 1474 OFFCURVE",
"158 1027 OFFCURVE",
"129 858 CURVE SMOOTH",
"84 608 LINE SMOOTH",
"22 255 OFFCURVE",
"190 -20 OFFCURVE",
"535 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1406;
}
);
leftKerningGroup = C;
note = uni0047;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 624 LINE",
"1015 624 LINE",
"1015 0 LINE",
"1315 0 LINE",
"1315 1456 LINE",
"1015 1456 LINE",
"1015 866 LINE",
"430 866 LINE",
"430 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
239 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
207 9 223 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
143 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1447;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 673 LINE",
"1095 673 LINE",
"1095 0 LINE",
"1288 0 LINE",
"1288 1456 LINE",
"1095 1456 LINE",
"1095 830 LINE",
"361 830 LINE",
"361 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
239 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
207 9 223 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
143 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 722 LINE",
"1184 722 LINE",
"1184 0 LINE",
"1238 0 LINE",
"1238 1456 LINE",
"1184 1456 LINE",
"1184 776 LINE",
"254 776 LINE",
"254 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
239 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
207 9 223 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
143 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1438;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"289 673 LINE",
"1023 673 LINE",
"904 0 LINE",
"1097 0 LINE",
"1354 1456 LINE",
"1161 1456 LINE",
"1051 830 LINE",
"317 830 LINE",
"427 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
239 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
207 9 223 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
143 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"191 722 LINE",
"1121 722 LINE",
"993 0 LINE",
"1047 0 LINE",
"1304 1456 LINE",
"1250 1456 LINE",
"1130 776 LINE",
"200 776 LINE",
"320 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
239 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
207 9 223 9 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
143 9 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
47 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 9 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1438;
}
);
note = uni0048;
rightKerningGroup = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"449 0 LINE",
"449 1456 LINE",
"149 1456 LINE",
"149 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 597;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"375 0 LINE",
"375 1456 LINE",
"183 1456 LINE",
"183 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 557;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"294 0 LINE",
"294 1456 LINE",
"240 1456 LINE",
"240 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 534;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"184 0 LINE",
"441 1456 LINE",
"249 1456 LINE",
"-8 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 557;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"103 0 LINE",
"360 1456 LINE",
"306 1456 LINE",
"49 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 534;
}
);
note = uni0049;
rightKerningGroup = H;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"957.14 -16.918 OFFCURVE",
"1017 377 OFFCURVE",
"1017 448 CURVE SMOOTH",
"1017 1456 LINE",
"717 1456 LINE",
"717 448 LINE SMOOTH",
"717 302.667 OFFCURVE",
"643.667 221 OFFCURVE",
"529 221 CURVE SMOOTH",
"399.667 221 OFFCURVE",
"342 287.333 OFFCURVE",
"342 430 CURVE",
"40 430 LINE",
"40 143.333 OFFCURVE",
"221 -20 OFFCURVE",
"529 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1144;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"790.667 -20 OFFCURVE",
"972 146.333 OFFCURVE",
"972 425 CURVE SMOOTH",
"972 1456 LINE",
"779 1456 LINE",
"779 422 LINE SMOOTH",
"777.667 242 OFFCURVE",
"670.667 137 OFFCURVE",
"512 137 CURVE SMOOTH",
"338.667 137 OFFCURVE",
"245 235.333 OFFCURVE",
"245 402 CURVE",
"53 402 LINE",
"53 135.333 OFFCURVE",
"222.667 -20 OFFCURVE",
"512 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"763.333 -20 OFFCURVE",
"930 160.667 OFFCURVE",
"930 442 CURVE SMOOTH",
"930 1456 LINE",
"876 1456 LINE",
"876 432 LINE SMOOTH",
"872 186.667 OFFCURVE",
"723.333 34 OFFCURVE",
"510 34 CURVE SMOOTH",
"266 34 OFFCURVE",
"144 163.667 OFFCURVE",
"144 401 CURVE",
"90 401 LINE",
"90 130.333 OFFCURVE",
"238 -20 OFFCURVE",
"510 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1125;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"596 -20 OFFCURVE",
"807 146 OFFCURVE",
"856 425 CURVE SMOOTH",
"1038 1456 LINE",
"845 1456 LINE",
"663 422 LINE SMOOTH",
"630 242 OFFCURVE",
"504 137 OFFCURVE",
"345 137 CURVE SMOOTH",
"172 137 OFFCURVE",
"96 235 OFFCURVE",
"125 402 CURVE",
"-67 402 LINE",
"-114 135 OFFCURVE",
"28 -20 OFFCURVE",
"318 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"569 -20 OFFCURVE",
"768 161 OFFCURVE",
"817 442 CURVE SMOOTH",
"996 1456 LINE",
"942 1456 LINE",
"761 432 LINE SMOOTH",
"714 187 OFFCURVE",
"539 34 OFFCURVE",
"325 34 CURVE SMOOTH",
"81 34 OFFCURVE",
"-18 164 OFFCURVE",
"24 401 CURVE",
"-30 401 LINE",
"-78 130 OFFCURVE",
"44 -20 OFFCURVE",
"316 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1125;
}
);
leftKerningGroup = J;
note = uni004A;
rightKerningGroup = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 416 LINE",
"586 584 LINE",
"960 0 LINE",
"1317 0 LINE",
"785 809 LINE",
"1302 1456 LINE",
"933 1456 LINE",
"430 796 LINE",
"430 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 17 values pushed */
74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 8 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
57 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 5 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 19 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 9 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 492 LINE",
"539 677 LINE",
"1055 0 LINE",
"1285 0 LINE",
"667 813 LINE",
"1240 1456 LINE",
"1008 1456 LINE",
"361 736 LINE",
"361 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 17 values pushed */
74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 8 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
57 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 5 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 19 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 9 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 551 LINE",
"487 766 LINE",
"1156 0 LINE",
"1226 0 LINE",
"527 803 LINE",
"1176 1456 LINE",
"1098 1456 LINE",
"254 614 LINE",
"254 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 17 values pushed */
74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 8 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
57 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 5 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 19 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 9 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1300;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"257 492 LINE",
"468 677 LINE",
"864 0 LINE",
"1094 0 LINE",
"620 813 LINE",
"1306 1456 LINE",
"1074 1456 LINE",
"300 736 LINE",
"427 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 17 values pushed */
74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 8 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
57 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 5 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 19 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 9 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"160 551 LINE",
"431 766 LINE",
"965 0 LINE",
"1035 0 LINE",
"478 803 LINE",
"1242 1456 LINE",
"1164 1456 LINE",
"171 614 LINE",
"320 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 17 values pushed */
74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 8 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
57 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 5 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 19 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 9 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1300;
}
);
note = uni004B;
rightKerningGroup = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{555, 0}";
},
{
name = center;
position = "{555, 728}";
},
{
name = top;
position = "{555, 1456}";
},
{
name = topright;
position = "{1089, 1456}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1067 0 LINE",
"1067 241 LINE",
"430 241 LINE",
"430 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1109;
},
{
anchors = (
{
name = bottom;
position = "{551, 0}";
},
{
name = center;
position = "{551, 728}";
},
{
name = top;
position = "{551, 1456}";
},
{
name = topright;
position = "{1082, 1456}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1052 0 LINE",
"1052 157 LINE",
"362 157 LINE",
"362 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1102;
},
{
anchors = (
{
name = bottom;
position = "{529, 0}";
},
{
name = center;
position = "{529, 728}";
},
{
name = top;
position = "{529, 1456}";
},
{
name = topright;
position = "{1037, 1456}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1002 0 LINE",
"1002 54 LINE",
"255 54 LINE",
"255 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1057;
},
{
anchors = (
{
name = bottom;
position = "{360, 0}";
},
{
name = center;
position = "{489, 728}";
},
{
name = top;
position = "{617, 1456}";
},
{
name = topright;
position = "{1148, 1456}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"861 0 LINE",
"889 157 LINE",
"199 157 LINE",
"428 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1102;
},
{
anchors = (
{
name = bottom;
position = "{338, 0}";
},
{
name = center;
position = "{467, 728}";
},
{
name = top;
position = "{595, 1456}";
},
{
name = topright;
position = "{1103, 1456}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"811 0 LINE",
"821 54 LINE",
"74 54 LINE",
"321 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1057;
}
);
note = uni004C;
rightKerningGroup = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"400 1084 LINE {name = \"❌\";}",
"792 0 LINE",
"998 0 LINE",
"1391 1085 LINE {name = \"❌\";}",
"1361 0 LINE",
"1662 0 LINE",
"1662 1456 LINE",
"1268 1456 LINE",
"896 400 LINE",
"522 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1794;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"342 1176 LINE",
"819 0 LINE",
"966 0 LINE",
"1444 1179 LINE",
"1426 0 LINE",
"1618 0 LINE",
"1618 1456 LINE",
"1369 1456 LINE",
"893 268 LINE",
"417 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1788;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 1369 LINE",
"855 0 LINE",
"898 0 LINE",
"1502 1376 LINE",
"1502 0 LINE",
"1556 0 LINE",
"1556 1456 LINE",
"1477 1456 LINE",
"876 79 LINE",
"277 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1756;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"359 1176 LINE",
"628 0 LINE",
"775 0 LINE",
"1461 1179 LINE",
"1235 0 LINE",
"1427 0 LINE",
"1684 1456 LINE",
"1435 1456 LINE",
"749 268 LINE",
"483 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1788;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"305 1369 LINE",
"664 0 LINE",
"707 0 LINE",
"1554 1376 LINE",
"1311 0 LINE",
"1365 0 LINE",
"1622 1456 LINE",
"1543 1456 LINE",
"699 79 LINE",
"343 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1756;
}
);
note = uni004D;
rightKerningGroup = H;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 958 LINE",
"1014 0 LINE",
"1314 0 LINE",
"1314 1456 LINE",
"1015 1456 LINE",
"1015 496 LINE",
"430 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1446;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"362 0 LINE",
"362 1122 LINE",
"1095 0 LINE",
"1288 0 LINE",
"1288 1456 LINE",
"1097 1456 LINE",
"1097 329 LINE",
"362 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"255 0 LINE",
"255 1364 LINE",
"1195 0 LINE",
"1249 0 LINE",
"1249 1456 LINE",
"1195 1456 LINE",
"1195 95 LINE",
"255 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1449;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"171 0 LINE",
"369 1122 LINE",
"904 0 LINE",
"1097 0 LINE",
"1354 1456 LINE",
"1163 1456 LINE",
"964 329 LINE",
"428 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"64 0 LINE",
"305 1364 LINE",
"1004 0 LINE",
"1058 0 LINE",
"1315 1456 LINE",
"1261 1456 LINE",
"1021 95 LINE",
"321 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 5 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1449;
}
);
note = uni004E;
rightKerningGroup = H;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"952 -20 OFFCURVE",
"1148.667 102 OFFCURVE",
"1250 318 CURVE SMOOTH",
"1300.667 426 OFFCURVE",
"1326 551.667 OFFCURVE",
"1326 695 CURVE SMOOTH",
"1326 760 LINE SMOOTH",
"1326 1045.333 OFFCURVE",
"1218.167 1271.833 OFFCURVE",
"1029.5 1388.5 CURVE SMOOTH",
"935.167 1446.833 OFFCURVE",
"827.333 1476 OFFCURVE",
"706 1476 CURVE SMOOTH",
"463.333 1476 OFFCURVE",
"266.833 1355.5 OFFCURVE",
"163.5 1137.5 CURVE SMOOTH",
"111.833 1028.5 OFFCURVE",
"86 902.333 OFFCURVE",
"86 759 CURVE SMOOTH",
"86 687 LINE SMOOTH",
"87.333 407 OFFCURVE",
"195.667 183 OFFCURVE",
"385 67 CURVE SMOOTH",
"479.667 9 OFFCURVE",
"587.333 -20 OFFCURVE",
"708 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"502.667 226 OFFCURVE",
"390 397.667 OFFCURVE",
"390 695 CURVE SMOOTH",
"390 766 LINE SMOOTH",
"391.333 1068.667 OFFCURVE",
"504.667 1228 OFFCURVE",
"706 1228 CURVE SMOOTH",
"908.667 1228 OFFCURVE",
"1022 1066.333 OFFCURVE",
"1022 761 CURVE SMOOTH",
"1022 690 LINE SMOOTH",
"1020.667 387.333 OFFCURVE",
"909.333 226 OFFCURVE",
"708 226 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1414;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"939.667 -20 OFFCURVE",
"1121 94.833 OFFCURVE",
"1217 307.5 CURVE SMOOTH",
"1265 413.833 OFFCURVE",
"1289 538.333 OFFCURVE",
"1289 681 CURVE SMOOTH",
"1289 773 LINE SMOOTH",
"1289 1057 OFFCURVE",
"1189.5 1278.833 OFFCURVE",
"1011.5 1391.5 CURVE SMOOTH",
"922.5 1447.833 OFFCURVE",
"819.667 1476 OFFCURVE",
"703 1476 CURVE SMOOTH",
"473.667 1476 OFFCURVE",
"288.333 1358.667 OFFCURVE",
"191 1144 CURVE SMOOTH",
"142.333 1036.667 OFFCURVE",
"118 913 OFFCURVE",
"118 773 CURVE SMOOTH",
"118 668 LINE SMOOTH",
"120.667 393.333 OFFCURVE",
"222.667 177.167 OFFCURVE",
"400 64.5 CURVE SMOOTH",
"488.667 8.167 OFFCURVE",
"590.333 -20 OFFCURVE",
"705 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"458.333 143 OFFCURVE",
"309 346.333 OFFCURVE",
"309 681 CURVE SMOOTH",
"309 788 LINE SMOOTH",
"313 1116 OFFCURVE",
"460.333 1311 OFFCURVE",
"703 1311 CURVE SMOOTH",
"952.333 1311 OFFCURVE",
"1098 1120.333 OFFCURVE",
"1098 775 CURVE SMOOTH",
"1098 667 LINE SMOOTH",
"1094 329.667 OFFCURVE",
"953 143 OFFCURVE",
"705 143 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"900.333 -20 OFFCURVE",
"1073.5 90.5 OFFCURVE",
"1163.5 284.5 CURVE SMOOTH",
"1208.5 381.5 OFFCURVE",
"1231 493 OFFCURVE",
"1231 619 CURVE SMOOTH",
"1231 837 LINE SMOOTH",
"1231 1086.333 OFFCURVE",
"1136.833 1290.5 OFFCURVE",
"969.5 1396.5 CURVE SMOOTH",
"885.833 1449.5 OFFCURVE",
"789.667 1476 OFFCURVE",
"681 1476 CURVE SMOOTH",
"465 1476 OFFCURVE",
"290.5 1365.667 OFFCURVE",
"200.5 1171 CURVE SMOOTH",
"155.5 1073.667 OFFCURVE",
"133 962.333 OFFCURVE",
"133 837 CURVE SMOOTH",
"133 627 LINE SMOOTH",
"133 419 OFFCURVE",
"194 251 OFFCURVE",
"300 138 CURVE SMOOTH",
"395 37 OFFCURVE",
"527 -20 OFFCURVE",
"683 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"355 34 OFFCURVE",
"188 296 OFFCURVE",
"188 619 CURVE SMOOTH",
"188 832 LINE SMOOTH",
"188 1196 OFFCURVE",
"381 1422 OFFCURVE",
"681 1422 CURVE SMOOTH",
"985 1422 OFFCURVE",
"1177 1191 OFFCURVE",
"1177 839 CURVE SMOOTH",
"1177 627 LINE SMOOTH",
"1177 260.333 OFFCURVE",
"987 34 OFFCURVE",
"683 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1364;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"745 -20 OFFCURVE",
"947 95 OFFCURVE",
"1080 308 CURVE SMOOTH",
"1147 414 OFFCURVE",
"1193 538 OFFCURVE",
"1218 681 CURVE SMOOTH",
"1235 773 LINE SMOOTH",
"1285 1057 OFFCURVE",
"1224 1279 OFFCURVE",
"1066 1392 CURVE SMOOTH",
"987 1448 OFFCURVE",
"889 1476 OFFCURVE",
"772 1476 CURVE SMOOTH",
"543 1476 OFFCURVE",
"337 1359 OFFCURVE",
"202 1144 CURVE SMOOTH",
"134 1037 OFFCURVE",
"88 913 OFFCURVE",
"64 773 CURVE SMOOTH",
"45 668 LINE SMOOTH",
"-1 393 OFFCURVE",
"63 177 OFFCURVE",
"221 65 CURVE SMOOTH",
"299 8 OFFCURVE",
"396 -20 OFFCURVE",
"511 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 143 OFFCURVE",
"179 346 OFFCURVE",
"238 681 CURVE SMOOTH",
"257 788 LINE SMOOTH",
"319 1116 OFFCURVE",
"501 1311 OFFCURVE",
"743 1311 CURVE SMOOTH",
"993 1311 OFFCURVE",
"1105 1120 OFFCURVE",
"1044 775 CURVE SMOOTH",
"1025 667 LINE SMOOTH",
"961 330 OFFCURVE",
"787 143 OFFCURVE",
"539 143 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"706 -20 OFFCURVE",
"899 91 OFFCURVE",
"1023 285 CURVE SMOOTH",
"1085 382 OFFCURVE",
"1127 493 OFFCURVE",
"1149 619 CURVE SMOOTH",
"1188 837 LINE SMOOTH",
"1232 1086 OFFCURVE",
"1174 1291 OFFCURVE",
"1025 1397 CURVE SMOOTH",
"951 1450 OFFCURVE",
"859 1476 OFFCURVE",
"750 1476 CURVE SMOOTH",
"534 1476 OFFCURVE",
"341 1366 OFFCURVE",
"216 1171 CURVE SMOOTH",
"154 1074 OFFCURVE",
"112 962 OFFCURVE",
"90 837 CURVE SMOOTH",
"53 627 LINE SMOOTH",
"16 419 OFFCURVE",
"47 251 OFFCURVE",
"134 138 CURVE SMOOTH",
"211 37 OFFCURVE",
"333 -20 OFFCURVE",
"489 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 34 OFFCURVE",
"49 296 OFFCURVE",
"106 619 CURVE SMOOTH",
"144 832 LINE SMOOTH",
"208 1196 OFFCURVE",
"441 1422 OFFCURVE",
"741 1422 CURVE SMOOTH",
"1045 1422 OFFCURVE",
"1196 1191 OFFCURVE",
"1134 839 CURVE SMOOTH",
"1097 627 LINE SMOOTH",
"1032 260 OFFCURVE",
"802 34 OFFCURVE",
"498 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1364;
}
);
leftKerningGroup = C;
note = uni004F;
rightKerningGroup = D;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 513 LINE",
"693 513 LINE SMOOTH",
"1038.333 513 OFFCURVE",
"1245 688.667 OFFCURVE",
"1245 974 CURVE SMOOTH",
"1242.593 1323.966 OFFCURVE",
"854 1456 OFFCURVE",
"698 1456 CURVE SMOOTH",
"130 1456 LINE",
"130 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 1213 LINE",
"705 1213 LINE SMOOTH",
"853 1210.333 OFFCURVE",
"942 1114.667 OFFCURVE",
"942 972 CURVE SMOOTH",
"942 833.333 OFFCURVE",
"856.667 756 OFFCURVE",
"698 756 CURVE SMOOTH",
"430 756 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1321;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 570 LINE",
"704 570 LINE SMOOTH",
"1033.333 570 OFFCURVE",
"1216 728.333 OFFCURVE",
"1216 1011 CURVE SMOOTH",
"1216 1279 OFFCURVE",
"1024.667 1456 OFFCURVE",
"706 1456 CURVE SMOOTH",
"169 1456 LINE",
"169 0 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"717 1298 LINE SMOOTH",
"907.667 1294 OFFCURVE",
"1024 1182.333 OFFCURVE",
"1024 1009 CURVE SMOOTH",
"1024 826.333 OFFCURVE",
"911.333 727 OFFCURVE",
"706 727 CURVE SMOOTH",
"361 727 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1292;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 615 LINE",
"662 615 LINE SMOOTH",
"958 617.667 OFFCURVE",
"1125 767 OFFCURVE",
"1125 1031 CURVE SMOOTH",
"1125 1297.667 OFFCURVE",
"952.333 1456 OFFCURVE",
"655 1456 CURVE SMOOTH",
"200 1456 LINE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"254 1402 LINE",
"655 1402 LINE SMOOTH",
"917.667 1402 OFFCURVE",
"1071 1263.667 OFFCURVE",
"1071 1029 CURVE SMOOTH",
"1071 802.333 OFFCURVE",
"917.667 669 OFFCURVE",
"655 669 CURVE SMOOTH",
"254 669 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"271 570 LINE",
"614 570 LINE SMOOTH",
"943 570 OFFCURVE",
"1154 728 OFFCURVE",
"1203 1011 CURVE SMOOTH",
"1251 1279 OFFCURVE",
"1091 1456 OFFCURVE",
"772 1456 CURVE SMOOTH",
"235 1456 LINE",
"-22 0 LINE"
);
},
{
closed = 1;
nodes = (
"399 1298 LINE",
"755 1298 LINE SMOOTH",
"945 1294 OFFCURVE",
"1042 1182 OFFCURVE",
"1011 1009 CURVE SMOOTH",
"979 826 OFFCURVE",
"849 727 OFFCURVE",
"643 727 CURVE SMOOTH",
"298 727 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1292;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"172 615 LINE",
"580 615 LINE SMOOTH",
"876 618 OFFCURVE",
"1069 767 OFFCURVE",
"1116 1031 CURVE SMOOTH",
"1163 1298 OFFCURVE",
"1018 1456 OFFCURVE",
"721 1456 CURVE SMOOTH",
"266 1456 LINE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"310 1402 LINE",
"711 1402 LINE SMOOTH",
"974 1402 OFFCURVE",
"1103 1264 OFFCURVE",
"1062 1029 CURVE SMOOTH",
"1022 802 OFFCURVE",
"845 669 OFFCURVE",
"582 669 CURVE SMOOTH",
"181 669 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 20 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
}
);
note = uni0050;
rightKerningGroup = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1317 -91 LINE",
"1075 99 LINE",
"1231 220.333 OFFCURVE",
"1324 423 OFFCURVE",
"1324 695 CURVE SMOOTH",
"1324 760 LINE SMOOTH",
"1324 1045.333 OFFCURVE",
"1216.167 1271.833 OFFCURVE",
"1027.5 1388.5 CURVE SMOOTH",
"933.167 1446.833 OFFCURVE",
"825.333 1476 OFFCURVE",
"704 1476 CURVE SMOOTH",
"461.333 1476 OFFCURVE",
"264.833 1355.5 OFFCURVE",
"161.5 1137.5 CURVE SMOOTH",
"109.833 1028.5 OFFCURVE",
"84 902.333 OFFCURVE",
"84 759 CURVE SMOOTH",
"84 687 LINE SMOOTH",
"85.333 407 OFFCURVE",
"193.667 183 OFFCURVE",
"383 67 CURVE SMOOTH",
"477.667 9 OFFCURVE",
"585.333 -20 OFFCURVE",
"706 -20 CURVE SMOOTH",
"744 -20 OFFCURVE",
"780.667 -17 OFFCURVE",
"816 -11 CURVE",
"1126 -260 LINE"
);
},
{
closed = 1;
nodes = (
"500.667 226 OFFCURVE",
"388 397.667 OFFCURVE",
"388 695 CURVE SMOOTH",
"388 766 LINE SMOOTH",
"389.333 1068.667 OFFCURVE",
"502.667 1228 OFFCURVE",
"704 1228 CURVE SMOOTH",
"906.667 1228 OFFCURVE",
"1020 1066.333 OFFCURVE",
"1020 761 CURVE SMOOTH",
"1020 690 LINE SMOOTH",
"1018.667 387.333 OFFCURVE",
"907.333 226 OFFCURVE",
"706 226 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1414;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1286 -125 LINE",
"1026 79 LINE",
"1187.333 193.667 OFFCURVE",
"1281 399.667 OFFCURVE",
"1281 681 CURVE SMOOTH",
"1281 774 LINE SMOOTH",
"1281 1058 OFFCURVE",
"1181.5 1277.667 OFFCURVE",
"1003.5 1391 CURVE SMOOTH",
"914.5 1447.667 OFFCURVE",
"811.333 1476 OFFCURVE",
"694 1476 CURVE SMOOTH",
"464.667 1476 OFFCURVE",
"279.333 1358.667 OFFCURVE",
"182 1144 CURVE SMOOTH",
"133.333 1036.667 OFFCURVE",
"109 913 OFFCURVE",
"109 773 CURVE SMOOTH",
"109 668 LINE SMOOTH",
"111.667 393.333 OFFCURVE",
"213.667 177.167 OFFCURVE",
"391 64.5 CURVE SMOOTH",
"479.667 8.167 OFFCURVE",
"581.333 -20 OFFCURVE",
"696 -20 CURVE SMOOTH",
"749.333 -20 OFFCURVE",
"800 -14 OFFCURVE",
"848 -2 CURVE {name = \"❌\";}",
"1155 -246 LINE"
);
},
{
closed = 1;
nodes = (
"448 143 OFFCURVE",
"301 347.667 OFFCURVE",
"301 681 CURVE SMOOTH",
"301 788 LINE SMOOTH",
"305 1116 OFFCURVE",
"452.667 1311 OFFCURVE",
"694 1311 CURVE SMOOTH",
"947.333 1311 OFFCURVE",
"1089 1117.667 OFFCURVE",
"1089 775 CURVE SMOOTH",
"1089 667 LINE SMOOTH",
"1085 329.667 OFFCURVE",
"944 143 OFFCURVE",
"696 143 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1191 -228 LINE",
"924 33 LINE",
"1121.333 131.667 OFFCURVE",
"1231 347 OFFCURVE",
"1231 619 CURVE SMOOTH",
"1231 837 LINE SMOOTH",
"1231 1086.333 OFFCURVE",
"1136.833 1290.5 OFFCURVE",
"969.5 1396.5 CURVE SMOOTH",
"885.833 1449.5 OFFCURVE",
"789.667 1476 OFFCURVE",
"681 1476 CURVE SMOOTH",
"465 1476 OFFCURVE",
"290.5 1365.667 OFFCURVE",
"200.5 1171 CURVE SMOOTH",
"155.5 1073.667 OFFCURVE",
"133 962.333 OFFCURVE",
"133 837 CURVE SMOOTH",
"133 627 LINE SMOOTH",
"133 405 OFFCURVE",
"203 228 OFFCURVE",
"322 116 CURVE SMOOTH",
"415 28 OFFCURVE",
"539 -20 OFFCURVE",
"683 -20 CURVE SMOOTH",
"746.333 -20 OFFCURVE",
"808 -10 OFFCURVE",
"868 10 CURVE",
"1152 -263 LINE"
);
},
{
closed = 1;
nodes = (
"355 34 OFFCURVE",
"188 296 OFFCURVE",
"188 619 CURVE SMOOTH",
"188 832 LINE SMOOTH",
"188 1196 OFFCURVE",
"381 1422 OFFCURVE",
"681 1422 CURVE SMOOTH",
"985 1422 OFFCURVE",
"1177 1191 OFFCURVE",
"1177 839 CURVE SMOOTH",
"1177 627 LINE SMOOTH",
"1177 260.333 OFFCURVE",
"987 34 OFFCURVE",
"683 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1364;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1073 -125 LINE",
"849 79 LINE",
"1031 194 OFFCURVE",
"1161 400 OFFCURVE",
"1210 681 CURVE SMOOTH",
"1227 774 LINE SMOOTH",
"1277 1058 OFFCURVE",
"1216 1278 OFFCURVE",
"1058 1391 CURVE SMOOTH",
"979 1448 OFFCURVE",
"881 1476 OFFCURVE",
"763 1476 CURVE SMOOTH",
"534 1476 OFFCURVE",
"328 1359 OFFCURVE",
"193 1144 CURVE SMOOTH",
"125 1037 OFFCURVE",
"79 913 OFFCURVE",
"55 773 CURVE SMOOTH",
"36 668 LINE SMOOTH",
"-10 393 OFFCURVE",
"54 177 OFFCURVE",
"212 65 CURVE SMOOTH",
"290 8 OFFCURVE",
"387 -20 OFFCURVE",
"502 -20 CURVE SMOOTH",
"555 -20 OFFCURVE",
"607 -14 OFFCURVE",
"657 -2 CURVE {name = \"❌\";}",
"921 -246 LINE"
);
},
{
closed = 1;
nodes = (
"282 143 OFFCURVE",
"172 348 OFFCURVE",
"230 681 CURVE SMOOTH",
"249 788 LINE SMOOTH",
"311 1116 OFFCURVE",
"493 1311 OFFCURVE",
"734 1311 CURVE SMOOTH",
"988 1311 OFFCURVE",
"1095 1118 OFFCURVE",
"1035 775 CURVE SMOOTH",
"1016 667 LINE SMOOTH",
"952 330 OFFCURVE",
"778 143 OFFCURVE",
"530 143 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"960 -228 LINE",
"739 33 LINE",
"954 132 OFFCURVE",
"1101 347 OFFCURVE",
"1149 619 CURVE SMOOTH",
"1188 837 LINE SMOOTH",
"1232 1086 OFFCURVE",
"1174 1291 OFFCURVE",
"1025 1397 CURVE SMOOTH",
"951 1450 OFFCURVE",
"859 1476 OFFCURVE",
"750 1476 CURVE SMOOTH",
"534 1476 OFFCURVE",
"341 1366 OFFCURVE",
"216 1171 CURVE SMOOTH",
"154 1074 OFFCURVE",
"112 962 OFFCURVE",
"90 837 CURVE SMOOTH",
"53 627 LINE SMOOTH",
"14 405 OFFCURVE",
"52 228 OFFCURVE",
"152 116 CURVE SMOOTH",
"229 28 OFFCURVE",
"345 -20 OFFCURVE",
"489 -20 CURVE SMOOTH",
"552 -20 OFFCURVE",
"615 -10 OFFCURVE",
"679 10 CURVE",
"915 -263 LINE"
);
},
{
closed = 1;
nodes = (
"170 34 OFFCURVE",
"49 296 OFFCURVE",
"106 619 CURVE SMOOTH",
"144 832 LINE SMOOTH",
"208 1196 OFFCURVE",
"441 1422 OFFCURVE",
"741 1422 CURVE SMOOTH",
"1045 1422 OFFCURVE",
"1196 1191 OFFCURVE",
"1134 839 CURVE SMOOTH",
"1097 627 LINE SMOOTH",
"1032 260 OFFCURVE",
"802 34 OFFCURVE",
"498 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1364;
}
);
leftKerningGroup = C;
note = uni0051;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 533 LINE",
"669 533 LINE",
"942 0 LINE",
"1271 0 LINE",
"949 609 LINE",
"1123.667 687.667 OFFCURVE",
"1209 817.333 OFFCURVE",
"1209 1016 CURVE SMOOTH",
"1209 1296 OFFCURVE",
"1015 1456 OFFCURVE",
"671 1456 CURVE SMOOTH",
"130 1456 LINE",
"130 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 1213 LINE",
"671 1213 LINE SMOOTH",
"832.333 1213 OFFCURVE",
"909 1129.333 OFFCURVE",
"909 992 CURVE SMOOTH",
"909 857.333 OFFCURVE",
"822.667 776 OFFCURVE",
"672 776 CURVE SMOOTH",
"430 776 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1307;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 589 LINE",
"703 589 LINE",
"1019 0 LINE",
"1231 0 LINE",
"883 630 LINE",
"1057.667 696.667 OFFCURVE",
"1161 836.667 OFFCURVE",
"1161 1018 CURVE SMOOTH",
"1161 1303.333 OFFCURVE",
"978 1456 OFFCURVE",
"650 1456 CURVE SMOOTH",
"168 1456 LINE",
"168 0 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"655 1298 LINE SMOOTH",
"858 1298 OFFCURVE",
"968 1198 OFFCURVE",
"968 1018 CURVE SMOOTH",
"968 852.667 OFFCURVE",
"846.667 746 OFFCURVE",
"656 746 CURVE SMOOTH",
"361 746 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1261;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"249 0 LINE",
"249 623 LINE",
"754 623 LINE",
"1141 0 LINE",
"1206 0 LINE",
"809 637 LINE",
"999.667 673 OFFCURVE",
"1137 837.333 OFFCURVE",
"1137 1036 CURVE SMOOTH",
"1137 1294.667 OFFCURVE",
"951 1456 OFFCURVE",
"659 1456 CURVE SMOOTH",
"195 1456 LINE",
"195 0 LINE"
);
},
{
closed = 1;
nodes = (
"249 1402 LINE",
"655 1402 LINE SMOOTH",
"920.333 1402 OFFCURVE",
"1083 1262.667 OFFCURVE",
"1083 1036 CURVE SMOOTH",
"1083 829.333 OFFCURVE",
"932 677 OFFCURVE",
"708 677 CURVE SMOOTH",
"249 677 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1340;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"274 589 LINE",
"616 589 LINE",
"828 0 LINE",
"1040 0 LINE",
"803 630 LINE",
"990 697 OFFCURVE",
"1118 837 OFFCURVE",
"1150 1018 CURVE SMOOTH",
"1200 1303 OFFCURVE",
"1044 1456 OFFCURVE",
"716 1456 CURVE SMOOTH",
"234 1456 LINE",
"-23 0 LINE"
);
},
{
closed = 1;
nodes = (
"399 1298 LINE",
"693 1298 LINE SMOOTH",
"896 1298 OFFCURVE",
"988 1198 OFFCURVE",
"957 1018 CURVE SMOOTH",
"928 853 OFFCURVE",
"787 746 OFFCURVE",
"597 746 CURVE SMOOTH",
"302 746 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1261;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"58 0 LINE",
"168 623 LINE",
"673 623 LINE",
"950 0 LINE",
"1015 0 LINE",
"731 637 LINE",
"928 673 OFFCURVE",
"1094 837 OFFCURVE",
"1129 1036 CURVE SMOOTH",
"1174 1295 OFFCURVE",
"1017 1456 OFFCURVE",
"725 1456 CURVE SMOOTH",
"261 1456 LINE",
"4 0 LINE"
);
},
{
closed = 1;
nodes = (
"305 1402 LINE",
"711 1402 LINE SMOOTH",
"977 1402 OFFCURVE",
"1115 1263 OFFCURVE",
"1075 1036 CURVE SMOOTH",
"1038 829 OFFCURVE",
"861 677 OFFCURVE",
"637 677 CURVE SMOOTH",
"178 677 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
16 4 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1340;
}
);
note = uni0052;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"980.667 -20 OFFCURVE",
"1186 132 OFFCURVE",
"1186 384 CURVE SMOOTH",
"1186 610.667 OFFCURVE",
"1037.333 756.333 OFFCURVE",
"696 859 CURVE SMOOTH",
"510.667 915 OFFCURVE",
"414 973.333 OFFCURVE",
"414 1068 CURVE SMOOTH",
"414 1169.333 OFFCURVE",
"499.333 1237 OFFCURVE",
"646 1237 CURVE SMOOTH",
"798 1237 OFFCURVE",
"886 1159.333 OFFCURVE",
"886 1026 CURVE",
"1186 1026 LINE",
"1186 1200.667 OFFCURVE",
"1091.667 1344.167 OFFCURVE",
"929 1419.5 CURVE SMOOTH",
"847.667 1457.167 OFFCURVE",
"755 1476 OFFCURVE",
"651 1476 CURVE SMOOTH",
"444.333 1476 OFFCURVE",
"269.167 1402.833 OFFCURVE",
"180.5 1279.5 CURVE SMOOTH",
"136.167 1217.833 OFFCURVE",
"114 1147.667 OFFCURVE",
"114 1069 CURVE SMOOTH",
"114 917.667 OFFCURVE",
"196.667 797.333 OFFCURVE",
"362 708 CURVE SMOOTH",
"532 616 OFFCURVE",
"885 583 OFFCURVE",
"885 382 CURVE SMOOTH",
"885 278 OFFCURVE",
"800.667 217 OFFCURVE",
"658 217 CURVE SMOOTH",
"466 217 OFFCURVE",
"370 297.333 OFFCURVE",
"370 458 CURVE",
"69 458 LINE",
"69 270 OFFCURVE",
"168 123.5 OFFCURVE",
"352 41.5 CURVE SMOOTH",
"444 0.5 OFFCURVE",
"546 -20 OFFCURVE",
"658 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
38 26 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1259;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"939 -20 OFFCURVE",
"1138 134 OFFCURVE",
"1138 370 CURVE SMOOTH",
"1138 642 OFFCURVE",
"909 747 OFFCURVE",
"652.5 819 CURVE SMOOTH",
"410.5 887 OFFCURVE",
"320 963.333 OFFCURVE",
"320 1082 CURVE SMOOTH",
"320 1230 OFFCURVE",
"431.667 1318 OFFCURVE",
"621 1318 CURVE SMOOTH",
"825 1318 OFFCURVE",
"942 1211 OFFCURVE",
"942 1035 CURVE",
"1135 1035 LINE",
"1135 1196.333 OFFCURVE",
"1045.167 1340.667 OFFCURVE",
"888.5 1418 CURVE SMOOTH",
"810.167 1456.667 OFFCURVE",
"721 1476 OFFCURVE",
"621 1476 CURVE SMOOTH",
"523 1476 OFFCURVE",
"434 1457 OFFCURVE",
"361 1423 CURVE SMOOTH",
"215 1357 OFFCURVE",
"126 1231 OFFCURVE",
"126 1079 CURVE SMOOTH",
"126 876.333 OFFCURVE",
"268.667 743.667 OFFCURVE",
"598 649 CURVE SMOOTH",
"860.667 573 OFFCURVE",
"945 510.667 OFFCURVE",
"945 368 CURVE SMOOTH",
"945 225.333 OFFCURVE",
"833.667 137 OFFCURVE",
"631 137 CURVE SMOOTH",
"413.667 137 OFFCURVE",
"273 246 OFFCURVE",
"273 422 CURVE",
"80 422 LINE",
"80 252.667 OFFCURVE",
"177.667 114.167 OFFCURVE",
"351 37.5 CURVE SMOOTH",
"437.667 -0.833 OFFCURVE",
"531 -20 OFFCURVE",
"631 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
38 26 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1215;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"889 -20 OFFCURVE",
"1127 103 OFFCURVE",
"1127 351 CURVE SMOOTH",
"1127 610 OFFCURVE",
"891 704 OFFCURVE",
"640 769.5 CURVE SMOOTH",
"324 851.5 OFFCURVE",
"197 947.333 OFFCURVE",
"197 1122 CURVE SMOOTH",
"197 1294 OFFCURVE",
"370 1422 OFFCURVE",
"626 1422 CURVE SMOOTH",
"880.667 1422 OFFCURVE",
"1057 1263.333 OFFCURVE",
"1057 1046 CURVE",
"1111 1046 LINE",
"1111 1237 OFFCURVE",
"1002 1345 OFFCURVE",
"888 1405 CURVE SMOOTH",
"776 1463 OFFCURVE",
"658 1476 OFFCURVE",
"626 1476 CURVE SMOOTH",
"518 1476 OFFCURVE",
"423 1456 OFFCURVE",
"347 1419 CURVE SMOOTH",
"219 1358 OFFCURVE",
"143 1252 OFFCURVE",
"143 1120 CURVE SMOOTH",
"143 862 OFFCURVE",
"383 784 OFFCURVE",
"609 722 CURVE SMOOTH",
"838 659 OFFCURVE",
"1072 587 OFFCURVE",
"1072 349 CURVE SMOOTH",
"1072 162.333 OFFCURVE",
"887.667 34 OFFCURVE",
"633 34 CURVE SMOOTH",
"346.333 34 OFFCURVE",
"150 172.333 OFFCURVE",
"150 411 CURVE",
"96 411 LINE",
"96 235 OFFCURVE",
"181 102.5 OFFCURVE",
"349 32.5 CURVE SMOOTH",
"433 -2.5 OFFCURVE",
"527.667 -20 OFFCURVE",
"633 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
38 26 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"745 -20 OFFCURVE",
"971 134 OFFCURVE",
"1012 370 CURVE SMOOTH",
"1060 642 OFFCURVE",
"850 747 OFFCURVE",
"606 819 CURVE SMOOTH",
"376 887 OFFCURVE",
"299 963 OFFCURVE",
"320 1082 CURVE SMOOTH",
"346 1230 OFFCURVE",
"473 1318 OFFCURVE",
"663 1318 CURVE SMOOTH",
"867 1318 OFFCURVE",
"965 1211 OFFCURVE",
"934 1035 CURVE",
"1127 1035 LINE",
"1155 1196 OFFCURVE",
"1091 1341 OFFCURVE",
"948 1418 CURVE SMOOTH",
"876 1457 OFFCURVE",
"790 1476 OFFCURVE",
"690 1476 CURVE SMOOTH",
"592 1476 OFFCURVE",
"500 1457 OFFCURVE",
"421 1423 CURVE SMOOTH",
"263 1357 OFFCURVE",
"152 1231 OFFCURVE",
"125 1079 CURVE SMOOTH",
"90 876 OFFCURVE",
"209 744 OFFCURVE",
"522 649 CURVE SMOOTH",
"771 573 OFFCURVE",
"844 511 OFFCURVE",
"819 368 CURVE SMOOTH",
"794 225 OFFCURVE",
"667 137 OFFCURVE",
"464 137 CURVE SMOOTH",
"247 137 OFFCURVE",
"126 246 OFFCURVE",
"157 422 CURVE",
"-36 422 LINE",
"-66 253 OFFCURVE",
"7 114 OFFCURVE",
"167 38 CURVE SMOOTH",
"247 -1 OFFCURVE",
"337 -20 OFFCURVE",
"437 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
38 26 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1215;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"695 -20 OFFCURVE",
"954 103 OFFCURVE",
"998 351 CURVE SMOOTH",
"1044 610 OFFCURVE",
"824 704 OFFCURVE",
"585 770 CURVE SMOOTH",
"283 852 OFFCURVE",
"173 947 OFFCURVE",
"204 1122 CURVE SMOOTH",
"234 1294 OFFCURVE",
"430 1422 OFFCURVE",
"686 1422 CURVE SMOOTH",
"941 1422 OFFCURVE",
"1089 1263 OFFCURVE",
"1051 1046 CURVE",
"1105 1046 LINE",
"1138 1237 OFFCURVE",
"1048 1345 OFFCURVE",
"945 1405 CURVE SMOOTH",
"843 1463 OFFCURVE",
"727 1476 OFFCURVE",
"695 1476 CURVE SMOOTH",
"587 1476 OFFCURVE",
"489 1456 OFFCURVE",
"406 1419 CURVE SMOOTH",
"268 1358 OFFCURVE",
"173 1252 OFFCURVE",
"150 1120 CURVE SMOOTH",
"104 862 OFFCURVE",
"330 784 OFFCURVE",
"546 722 CURVE SMOOTH",
"763 659 OFFCURVE",
"985 587 OFFCURVE",
"943 349 CURVE SMOOTH",
"910 162 OFFCURVE",
"703 34 OFFCURVE",
"448 34 CURVE SMOOTH",
"162 34 OFFCURVE",
"-10 172 OFFCURVE",
"32 411 CURVE",
"-22 411 LINE",
"-53 235 OFFCURVE",
"8 103 OFFCURVE",
"164 33 CURVE SMOOTH",
"242 -3 OFFCURVE",
"333 -20 OFFCURVE",
"439 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
38 26 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1211;
}
);
leftKerningGroup = S;
note = uni0053;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"780 0 LINE",
"780 1213 LINE",
"1226 1213 LINE",
"1226 1456 LINE",
"40 1456 LINE",
"40 1213 LINE",
"480 1213 LINE",
"480 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1267;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"707 0 LINE",
"707 1298 LINE",
"1175 1298 LINE",
"1175 1456 LINE",
"49 1456 LINE",
"49 1298 LINE",
"516 1298 LINE",
"516 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1222;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"639 0 LINE",
"639 1402 LINE",
"1169 1402 LINE",
"1169 1456 LINE",
"55 1456 LINE",
"55 1402 LINE",
"585 1402 LINE",
"585 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1224;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"516 0 LINE",
"745 1298 LINE",
"1213 1298 LINE",
"1241 1456 LINE",
"115 1456 LINE",
"87 1298 LINE",
"554 1298 LINE",
"325 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1222;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"448 0 LINE",
"695 1402 LINE",
"1225 1402 LINE",
"1235 1456 LINE",
"121 1456 LINE",
"111 1402 LINE",
"641 1402 LINE",
"394 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1224;
}
);
leftKerningGroup = T;
note = uni0054;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1019 -20 OFFCURVE",
"1232 178 OFFCURVE",
"1232 497 CURVE SMOOTH",
"1232 1456 LINE",
"931 1456 LINE",
"931 487 LINE SMOOTH",
"928.333 309.667 OFFCURVE",
"842.667 221 OFFCURVE",
"674 221 CURVE SMOOTH",
"512.667 221 OFFCURVE",
"416 304.333 OFFCURVE",
"416 495 CURVE SMOOTH",
"416 1456 LINE",
"116 1456 LINE",
"116 486 LINE SMOOTH",
"120 171 OFFCURVE",
"334 -20 OFFCURVE",
"674 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1348;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1009.333 3.333 OFFCURVE",
"1192.667 191.333 OFFCURVE",
"1194 466 CURVE SMOOTH",
"1194 1456 LINE",
"1001 1456 LINE",
"1001 469 LINE SMOOTH",
"1001 258.333 OFFCURVE",
"882.333 137 OFFCURVE",
"665 137 CURVE SMOOTH",
"450.333 137 OFFCURVE",
"330 259.333 OFFCURVE",
"330 470 CURVE SMOOTH",
"330 1456 LINE",
"140 1456 LINE",
"140 464 LINE SMOOTH",
"142.667 162.667 OFFCURVE",
"346.333 -20 OFFCURVE",
"665 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1328;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"988.333 -20 OFFCURVE",
"1180 162 OFFCURVE",
"1180 470 CURVE SMOOTH",
"1180 1456 LINE",
"1126 1456 LINE",
"1126 473 LINE SMOOTH",
"1126 202.333 OFFCURVE",
"951 34 OFFCURVE",
"683 34 CURVE SMOOTH",
"415 34 OFFCURVE",
"239 202.667 OFFCURVE",
"239 472 CURVE SMOOTH",
"239 1456 LINE",
"185 1456 LINE",
"185 466 LINE SMOOTH",
"186.333 163.333 OFFCURVE",
"377.667 -20 OFFCURVE",
"683 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1365;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"819 3 OFFCURVE",
"1036 191 OFFCURVE",
"1085 466 CURVE SMOOTH",
"1260 1456 LINE",
"1067 1456 LINE",
"893 469 LINE SMOOTH",
"856 258 OFFCURVE",
"716 137 OFFCURVE",
"498 137 CURVE SMOOTH",
"284 137 OFFCURVE",
"185 259 OFFCURVE",
"222 470 CURVE SMOOTH",
"396 1456 LINE",
"206 1456 LINE",
"31 464 LINE SMOOTH",
"-19 163 OFFCURVE",
"152 -20 OFFCURVE",
"471 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1328;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"794 -20 OFFCURVE",
"1018 162 OFFCURVE",
"1072 470 CURVE SMOOTH",
"1246 1456 LINE",
"1192 1456 LINE",
"1019 473 LINE SMOOTH",
"971 202 OFFCURVE",
"766 34 OFFCURVE",
"498 34 CURVE SMOOTH",
"230 34 OFFCURVE",
"84 203 OFFCURVE",
"131 472 CURVE SMOOTH",
"305 1456 LINE",
"251 1456 LINE",
"76 466 LINE SMOOTH",
"24 163 OFFCURVE",
"183 -20 OFFCURVE",
"489 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1365;
}
);
leftKerningGroup = U;
note = uni0055;
rightKerningGroup = J;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"825 0 LINE",
"1332 1456 LINE",
"998 1456 LINE",
"668 361 LINE",
"340 1456 LINE",
"7 1456 LINE",
"512 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1339;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"737 0 LINE",
"1277 1456 LINE",
"1067 1456 LINE",
"651 255 LINE",
"237 1456 LINE",
"28 1456 LINE",
"567 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1303;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"645 0 LINE",
"1189 1456 LINE",
"1130 1456 LINE",
"612 54 LINE",
"94 1456 LINE",
"35 1456 LINE",
"579 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"546 0 LINE",
"1343 1456 LINE",
"1133 1456 LINE",
"505 255 LINE",
"303 1456 LINE",
"94 1456 LINE",
"376 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1303;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"454 0 LINE",
"1255 1456 LINE",
"1196 1456 LINE",
"431 54 LINE",
"160 1456 LINE",
"101 1456 LINE",
"388 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
}
);
leftKerningGroup = V;
note = uni0056;
rightKerningGroup = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"660 0 LINE",
"897 974 LINE",
"1134 0 LINE",
"1436 0 LINE",
"1759 1456 LINE",
"1460 1456 LINE",
"1264 420 LINE",
"1025 1456 LINE",
"771 1456 LINE",
"531 422 LINE",
"334 1456 LINE",
"35 1456 LINE",
"358 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1791;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"588 0 LINE",
"922 1172 LINE",
"1245 0 LINE",
"1420 0 LINE",
"1773 1456 LINE",
"1580 1456 LINE",
"1323 264 LINE",
"1002 1456 LINE",
"840 1456 LINE",
"511 267 LINE",
"253 1456 LINE",
"61 1456 LINE",
"413 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1817;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"515 0 LINE",
"928 1368 LINE",
"1340 0 LINE",
"1401 0 LINE",
"1793 1456 LINE",
"1734 1456 LINE",
"1366 90 LINE",
"959 1456 LINE",
"899 1456 LINE",
"489 90 LINE",
"121 1456 LINE",
"61 1456 LINE",
"454 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1855;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"397 0 LINE",
"938 1172 LINE",
"1054 0 LINE",
"1229 0 LINE",
"1839 1456 LINE",
"1646 1456 LINE",
"1179 264 LINE",
"1068 1456 LINE",
"906 1456 LINE",
"367 267 LINE",
"319 1456 LINE",
"127 1456 LINE",
"222 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1817;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"324 0 LINE",
"978 1368 LINE",
"1149 0 LINE",
"1210 0 LINE",
"1859 1456 LINE",
"1800 1456 LINE",
"1191 90 LINE",
"1025 1456 LINE",
"965 1456 LINE",
"314 90 LINE",
"187 1456 LINE",
"127 1456 LINE",
"263 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1855;
}
);
leftKerningGroup = W;
note = uni0057;
rightKerningGroup = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"371 0 LINE",
"651 510 LINE",
"931 0 LINE",
"1280 0 LINE",
"845 734 LINE",
"1269 1456 LINE",
"924 1456 LINE",
"651 954 LINE",
"378 1456 LINE",
"33 1456 LINE",
"457 734 LINE",
"22 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
134 0 150 0 166 0 182 0 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
137 6 153 6 169 6 185 6 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1301;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"284 0 LINE",
"644 568 LINE",
"1002 0 LINE",
"1230 0 LINE",
"759 734 LINE",
"1219 1456 LINE",
"993 1456 LINE",
"644 898 LINE",
"293 1456 LINE",
"68 1456 LINE",
"529 734 LINE",
"57 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
134 0 150 0 166 0 182 0 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
137 6 153 6 169 6 185 6 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"119 0 LINE",
"611 701 LINE",
"1101 0 LINE",
"1168 0 LINE",
"645 743 LINE",
"1149 1456 LINE",
"1081 1456 LINE",
"611 785 LINE",
"141 1456 LINE",
"73 1456 LINE",
"577 743 LINE",
"54 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
134 0 150 0 166 0 182 0 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
137 6 153 6 169 6 185 6 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"93 0 LINE",
"553 568 LINE",
"811 0 LINE",
"1039 0 LINE",
"698 734 LINE",
"1285 1456 LINE",
"1059 1456 LINE",
"612 898 LINE",
"359 1456 LINE",
"134 1456 LINE",
"468 734 LINE",
"-134 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
134 0 150 0 166 0 182 0 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
137 6 153 6 169 6 185 6 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-72 0 LINE",
"544 701 LINE",
"910 0 LINE",
"977 0 LINE",
"585 743 LINE",
"1215 1456 LINE",
"1147 1456 LINE",
"559 785 LINE",
"207 1456 LINE",
"139 1456 LINE",
"517 743 LINE",
"-137 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
134 0 150 0 166 0 182 0 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 9 values pushed */
137 6 153 6 169 6 185 6 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
}
);
leftKerningGroup = X;
note = uni0058;
rightKerningGroup = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"785 0 LINE",
"785 528 LINE",
"1263 1456 LINE",
"935 1456 LINE",
"632 800 LINE",
"331 1456 LINE",
"2 1456 LINE",
"480 528 LINE",
"480 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1266;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"709 0 LINE",
"709 543 LINE",
"1211 1456 LINE",
"993 1456 LINE",
"613 725 LINE",
"235 1456 LINE",
"15 1456 LINE",
"517 543 LINE",
"517 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"636 0 LINE",
"636 553 LINE",
"1185 1456 LINE",
"1119 1456 LINE",
"609 602 LINE",
"105 1456 LINE",
"33 1456 LINE",
"582 553 LINE",
"582 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"518 0 LINE",
"614 543 LINE",
"1277 1456 LINE",
"1059 1456 LINE",
"550 725 LINE",
"301 1456 LINE",
"81 1456 LINE",
"422 543 LINE",
"326 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1230;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"445 0 LINE",
"543 553 LINE",
"1251 1456 LINE",
"1185 1456 LINE",
"524 602 LINE",
"171 1456 LINE",
"99 1456 LINE",
"489 553 LINE",
"391 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1223;
}
);
leftKerningGroup = Y;
note = uni0059;
rightKerningGroup = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1182 0 LINE",
"1182 241 LINE",
"448 241 LINE",
"1166 1284 LINE",
"1166 1456 LINE",
"74 1456 LINE",
"74 1213 LINE",
"793 1213 LINE",
"73 176 LINE",
"73 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1241;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1146 0 LINE",
"1146 157 LINE",
"313 157 LINE",
"1114 1315 LINE",
"1114 1456 LINE",
"99 1456 LINE",
"99 1298 LINE",
"884 1298 LINE",
"86 144 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1226;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1130 0 LINE",
"1130 54 LINE",
"168 54 LINE",
"1098 1418 LINE",
"1098 1456 LINE",
"134 1456 LINE",
"134 1403 LINE",
"1023 1403 LINE",
"94 44 LINE",
"94 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1224;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"955 0 LINE",
"983 157 LINE",
"150 157 LINE",
"1155 1315 LINE",
"1180 1456 LINE",
"165 1456 LINE",
"137 1298 LINE",
"922 1298 LINE",
"-79 144 LINE",
"-105 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1226;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"939 0 LINE",
"949 54 LINE",
"-13 54 LINE",
"1157 1418 LINE",
"1164 1456 LINE",
"200 1456 LINE",
"191 1403 LINE",
"1080 1403 LINE",
"-89 44 LINE",
"-97 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1224;
}
);
leftKerningGroup = Z;
note = uni005A;
rightKerningGroup = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"552 -339 LINE",
"552 -116 LINE",
"410 -116 LINE",
"410 1471 LINE",
"552 1471 LINE",
"552 1694 LINE",
"120 1694 LINE",
"120 -339 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 569;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"523 -312 LINE",
"523 -160 LINE",
"332 -160 LINE",
"332 1512 LINE",
"523 1512 LINE",
"523 1664 LINE",
"146 1664 LINE",
"146 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"464 -312 LINE",
"464 -258 LINE",
"235 -258 LINE",
"235 1610 LINE",
"464 1610 LINE",
"464 1664 LINE",
"181 1664 LINE",
"181 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 439;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"277 -312 LINE",
"304 -160 LINE",
"113 -160 LINE",
"408 1512 LINE",
"599 1512 LINE",
"626 1664 LINE",
"249 1664 LINE",
"-100 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"218 -312 LINE",
"228 -258 LINE",
"-1 -258 LINE",
"328 1610 LINE",
"557 1610 LINE",
"567 1664 LINE",
"284 1664 LINE",
"-65 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 439;
}
);
note = uni005B;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"903 -125 LINE",
"295 1456 LINE",
"0 1456 LINE",
"607 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 864;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"824 -125 LINE",
"216 1456 LINE",
"40 1456 LINE",
"648 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 840;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"723 -125 LINE",
"115 1456 LINE",
"57 1456 LINE",
"665 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 774;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"611 -125 LINE",
"282 1456 LINE",
"106 1456 LINE",
"435 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 840;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"510 -125 LINE",
"181 1456 LINE",
"123 1456 LINE",
"452 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 774;
}
);
note = uni005C;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"445 -339 LINE",
"445 1694 LINE",
"13 1694 LINE",
"13 1471 LINE",
"156 1471 LINE",
"156 -116 LINE",
"13 -116 LINE",
"13 -339 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 569;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"387 -312 LINE",
"387 1664 LINE",
"9 1664 LINE",
"9 1512 LINE",
"202 1512 LINE",
"202 -160 LINE",
"9 -160 LINE",
"9 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"275 -312 LINE",
"275 1664 LINE",
"-8 1664 LINE",
"-8 1610 LINE",
"220 1610 LINE",
"220 -258 LINE",
"-8 -258 LINE",
"-8 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 439;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"141 -312 LINE",
"490 1664 LINE",
"112 1664 LINE",
"85 1512 LINE",
"278 1512 LINE",
"-17 -160 LINE",
"-210 -160 LINE",
"-237 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"29 -312 LINE",
"378 1664 LINE",
"95 1664 LINE",
"85 1610 LINE",
"313 1610 LINE",
"-16 -258 LINE",
"-244 -258 LINE",
"-254 -312 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 439;
}
);
note = uni005D;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"274 729 LINE",
"448 1186 LINE",
"623 729 LINE",
"852 729 LINE",
"553 1456 LINE",
"343 1456 LINE",
"44 729 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
1 7 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 895;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"236 729 LINE",
"426 1211 LINE",
"617 729 LINE",
"788 729 LINE",
"490 1456 LINE",
"363 1456 LINE",
"64 729 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
1 7 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"150 729 LINE",
"416 1382 LINE",
"680 729 LINE",
"741 729 LINE",
"442 1456 LINE",
"390 1456 LINE",
"91 729 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
1 7 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 849;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"174 729 LINE",
"449 1211 LINE",
"555 729 LINE",
"726 729 LINE",
"556 1456 LINE",
"429 1456 LINE",
"2 729 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
1 7 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"88 729 LINE",
"469 1382 LINE",
"618 729 LINE",
"679 729 LINE",
"508 1456 LINE",
"456 1456 LINE",
"29 729 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
1 7 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 849;
}
);
note = uni005E;
unicode = 005E;
},
{
glyphname = underscore;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"912 -226 LINE",
"912 0 LINE",
"1 0 LINE",
"1 -226 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 914;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"920 -151 LINE",
"920 0 LINE",
"4 0 LINE",
"4 -151 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 924;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"845 -54 LINE",
"845 0 LINE",
"-1 0 LINE",
"-1 -54 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 845;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"703 -151 LINE",
"729 0 LINE",
"-187 0 LINE",
"-213 -151 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 924;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"645 -54 LINE",
"654 0 LINE",
"-192 0 LINE",
"-201 -54 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 845;
}
);
note = uni005F;
unicode = 005F;
},
{
glyphname = grave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"565 1226 LINE",
"367 1536 LINE",
"52 1536 LINE",
"328 1226 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 677;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"474 1242 LINE",
"280 1536 LINE",
"57 1536 LINE",
"315 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 633;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"403 1270 LINE",
"215 1536 LINE",
"149 1536 LINE",
"344 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 537;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"502 1242 LINE",
"360 1536 LINE",
"137 1536 LINE",
"343 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 633;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"436 1270 LINE",
"295 1536 LINE",
"229 1536 LINE",
"377 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 1 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 537;
}
);
note = uni0060;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"548 -20 OFFCURVE",
"639 19 OFFCURVE",
"709 97 CURVE",
"715 58.333 OFFCURVE",
"724.667 26 OFFCURVE",
"738 0 CURVE",
"1030 0 LINE",
"1030 17 LINE",
"1002 69.667 OFFCURVE",
"987.667 147.333 OFFCURVE",
"987 250 CURVE SMOOTH",
"987 719 LINE SMOOTH",
"987 961.667 OFFCURVE",
"818.667 1102 OFFCURVE",
"552 1102 CURVE SMOOTH",
"376 1102 OFFCURVE",
"227.333 1037.667 OFFCURVE",
"150 931 CURVE SMOOTH",
"111.333 877.667 OFFCURVE",
"92 819.667 OFFCURVE",
"92 757 CURVE",
"381 757 LINE",
"381 838.333 OFFCURVE",
"439.667 888 OFFCURVE",
"537 888 CURVE SMOOTH",
"647.667 888 OFFCURVE",
"697 823 OFFCURVE",
"697 723 CURVE SMOOTH",
"697 661 LINE",
"564 661 LINE SMOOTH",
"242.667 659.667 OFFCURVE",
"68 533.333 OFFCURVE",
"68 304 CURVE SMOOTH",
"68 117.333 OFFCURVE",
"224 -20 OFFCURVE",
"436 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"411 201 OFFCURVE",
"357 253 OFFCURVE",
"357 325 CURVE SMOOTH",
"367 442 OFFCURVE",
"444.333 492 OFFCURVE",
"589 492 CURVE SMOOTH",
"697 492 LINE",
"697 306 LINE",
"662.333 242 OFFCURVE",
"584.333 201 OFFCURVE",
"499 201 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
23 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1098;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"593.333 -20 OFFCURVE",
"696 24.667 OFFCURVE",
"782 114 CURVE",
"788.667 59.333 OFFCURVE",
"797.333 21.333 OFFCURVE",
"808 0 CURVE",
"1002 0 LINE",
"1002 16 LINE",
"976.667 74.667 OFFCURVE",
"964 153.667 OFFCURVE",
"964 253 CURVE SMOOTH",
"964 751 LINE",
"958.667 969.667 OFFCURVE",
"810.333 1102 OFFCURVE",
"561 1102 CURVE SMOOTH",
"403.667 1102 OFFCURVE",
"265.167 1039.167 OFFCURVE",
"188.5 938.5 CURVE SMOOTH",
"150.167 888.167 OFFCURVE",
"131 836 OFFCURVE",
"131 782 CURVE",
"317 782 LINE",
"317 876.667 OFFCURVE",
"418 953 OFFCURVE",
"550 953 CURVE SMOOTH",
"700.667 953 OFFCURVE",
"779 870.333 OFFCURVE",
"779 741 CURVE SMOOTH",
"779 656 LINE",
"599 656 LINE SMOOTH",
"288.333 656 OFFCURVE",
"109 525.333 OFFCURVE",
"109 300 CURVE SMOOTH",
"109 114.667 OFFCURVE",
"260.667 -20 OFFCURVE",
"474 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"379.667 141 OFFCURVE",
"294 210 OFFCURVE",
"294 326 CURVE SMOOTH",
"294 458.667 OFFCURVE",
"407.333 525 OFFCURVE",
"634 525 CURVE SMOOTH",
"779 525 LINE",
"779 303 LINE",
"732.333 207 OFFCURVE",
"617 141 OFFCURVE",
"501 141 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
23 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1114;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"611.667 -20 OFFCURVE",
"765.667 59.333 OFFCURVE",
"851 198 CURVE",
"851 112 OFFCURVE",
"857.667 46 OFFCURVE",
"871 0 CURVE",
"933 0 LINE",
"933 9 LINE",
"914.333 51.667 OFFCURVE",
"905 132.333 OFFCURVE",
"905 251 CURVE SMOOTH",
"905 768 LINE SMOOTH",
"901 980 OFFCURVE",
"754.333 1102 OFFCURVE",
"521 1102 CURVE SMOOTH",
"359 1102 OFFCURVE",
"223 1029 OFFCURVE",
"159 922 CURVE SMOOTH",
"135 881 OFFCURVE",
"121 835 OFFCURVE",
"121 786 CURVE",
"175 784 LINE",
"175 933.333 OFFCURVE",
"323.667 1048 OFFCURVE",
"521 1048 CURVE SMOOTH",
"733 1048 OFFCURVE",
"851 943.333 OFFCURVE",
"851 762 CURVE SMOOTH",
"851 604 LINE",
"584 604 LINE SMOOTH",
"286.667 601.333 OFFCURVE",
"92 472.667 OFFCURVE",
"92 274 CURVE SMOOTH",
"92 99.333 OFFCURVE",
"225 -20 OFFCURVE",
"425 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263.667 33 OFFCURVE",
"146 138 OFFCURVE",
"146 270 CURVE SMOOTH",
"146 475 OFFCURVE",
"389 549 OFFCURVE",
"601 549 CURVE SMOOTH",
"851 549 LINE",
"851 292 LINE",
"777.667 128 OFFCURVE",
"627.667 33 OFFCURVE",
"425 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
23 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1081;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"399 -20 OFFCURVE",
"510 25 OFFCURVE",
"611 114 CURVE",
"608 59 OFFCURVE",
"610 21 OFFCURVE",
"617 0 CURVE",
"811 0 LINE",
"814 16 LINE",
"799 75 OFFCURVE",
"800 154 OFFCURVE",
"818 253 CURVE SMOOTH",
"906 751 LINE",
"939 970 OFFCURVE",
"814 1102 OFFCURVE",
"565 1102 CURVE SMOOTH",
"407 1102 OFFCURVE",
"258 1039 OFFCURVE",
"163 939 CURVE SMOOTH",
"116 888 OFFCURVE",
"88 836 OFFCURVE",
"78 782 CURVE",
"264 782 LINE",
"281 877 OFFCURVE",
"395 953 OFFCURVE",
"527 953 CURVE SMOOTH",
"678 953 OFFCURVE",
"742 870 OFFCURVE",
"719 741 CURVE SMOOTH",
"704 656 LINE",
"524 656 LINE SMOOTH",
"213 656 OFFCURVE",
"11 525 OFFCURVE",
"-29 300 CURVE SMOOTH",
"-62 115 OFFCURVE",
"66 -20 OFFCURVE",
"280 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"214 141 OFFCURVE",
"140 210 OFFCURVE",
"161 326 CURVE SMOOTH",
"184 459 OFFCURVE",
"309 525 OFFCURVE",
"536 525 CURVE SMOOTH",
"681 525 LINE",
"642 303 LINE",
"578 207 OFFCURVE",
"451 141 OFFCURVE",
"335 141 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
23 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1114;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"417 -20 OFFCURVE",
"585 59 OFFCURVE",
"695 198 CURVE",
"680 112 OFFCURVE",
"675 46 OFFCURVE",
"680 0 CURVE",
"742 0 LINE",
"744 9 LINE",
"733 52 OFFCURVE",
"738 132 OFFCURVE",
"758 251 CURVE SMOOTH",
"850 768 LINE SMOOTH",
"883 980 OFFCURVE",
"758 1102 OFFCURVE",
"525 1102 CURVE SMOOTH",
"363 1102 OFFCURVE",
"214 1029 OFFCURVE",
"131 922 CURVE SMOOTH",
"100 881 OFFCURVE",
"77 835 OFFCURVE",
"69 786 CURVE",
"122 784 LINE",
"149 933 OFFCURVE",
"318 1048 OFFCURVE",
"515 1048 CURVE SMOOTH",
"727 1048 OFFCURVE",
"827 943 OFFCURVE",
"795 762 CURVE SMOOTH",
"767 604 LINE",
"500 604 LINE SMOOTH",
"202 601 OFFCURVE",
"-15 473 OFFCURVE",
"-50 274 CURVE SMOOTH",
"-81 99 OFFCURVE",
"31 -20 OFFCURVE",
"231 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 33 OFFCURVE",
"-20 138 OFFCURVE",
"3 270 CURVE SMOOTH",
"39 475 OFFCURVE",
"295 549 OFFCURVE",
"507 549 CURVE SMOOTH",
"757 549 LINE",
"712 292 LINE",
"609 128 OFFCURVE",
"443 33 OFFCURVE",
"240 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
23 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 23 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 11 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1081;
}
);
leftKerningGroup = a;
note = uni0061;
rightKerningGroup = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"930.333 -20 OFFCURVE",
"1086 184.333 OFFCURVE",
"1086 531 CURVE SMOOTH",
"1086 547 LINE SMOOTH",
"1086 899 OFFCURVE",
"927 1102 OFFCURVE",
"663 1102 CURVE SMOOTH",
"554.333 1102 OFFCURVE",
"466.667 1063 OFFCURVE",
"400 985 CURVE",
"400 1536 LINE",
"111 1536 LINE",
"111 0 LINE",
"371 0 LINE",
"384 115 LINE",
"454 25 OFFCURVE",
"547.667 -20 OFFCURVE",
"665 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"499.333 213 OFFCURVE",
"435.333 251 OFFCURVE",
"400 327 CURVE",
"400 754 LINE",
"434.667 829.333 OFFCURVE",
"498 867 OFFCURVE",
"590 867 CURVE SMOOTH",
"727.333 867 OFFCURVE",
"797 770.667 OFFCURVE",
"797 552 CURVE SMOOTH",
"797 372 OFFCURVE",
"772 213 OFFCURVE",
"592 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 8 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1153;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"892 -20 OFFCURVE",
"1056 198.333 OFFCURVE",
"1056 529 CURVE SMOOTH",
"1056 545 LINE SMOOTH",
"1056 890.333 OFFCURVE",
"896.667 1102 OFFCURVE",
"634 1102 CURVE SMOOTH",
"502.667 1102 OFFCURVE",
"399.667 1055.667 OFFCURVE",
"325 963 CURVE",
"325 1536 LINE",
"140 1536 LINE",
"140 0 LINE",
"310 0 LINE",
"319 125 LINE",
"393.667 28.333 OFFCURVE",
"499.333 -20 OFFCURVE",
"636 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"470 137 OFFCURVE",
"381.667 193.667 OFFCURVE",
"325 307 CURVE",
"325 775 LINE",
"378.333 888.333 OFFCURVE",
"466 945 OFFCURVE",
"588 945 CURVE SMOOTH",
"770.667 945 OFFCURVE",
"871 802 OFFCURVE",
"871 550 CURVE SMOOTH",
"871 274 OFFCURVE",
"767.333 137 OFFCURVE",
"590 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 8 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"843.667 -20 OFFCURVE",
"999 193.667 OFFCURVE",
"999 531 CURVE SMOOTH",
"999 548 LINE SMOOTH",
"999 898.667 OFFCURVE",
"844.333 1102 OFFCURVE",
"591 1102 CURVE SMOOTH",
"427 1102 OFFCURVE",
"300 1027.667 OFFCURVE",
"224 885 CURVE",
"224 1536 LINE",
"170 1536 LINE",
"170 0 LINE",
"224 0 LINE",
"224 171 LINE",
"297.333 51 OFFCURVE",
"430.333 -20 OFFCURVE",
"593 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"410 34 OFFCURVE",
"281.333 120.667 OFFCURVE",
"224 274 CURVE",
"224 770 LINE",
"281.333 954 OFFCURVE",
"410.667 1048 OFFCURVE",
"592 1048 CURVE SMOOTH",
"813.333 1048 OFFCURVE",
"943 862.667 OFFCURVE",
"943 552 CURVE SMOOTH",
"943 216 OFFCURVE",
"816.667 34 OFFCURVE",
"594 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 8 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"698 -20 OFFCURVE",
"900 198 OFFCURVE",
"958 529 CURVE SMOOTH",
"961 545 LINE SMOOTH",
"1022 890 OFFCURVE",
"900 1102 OFFCURVE",
"638 1102 CURVE SMOOTH",
"506 1102 OFFCURVE",
"395 1056 OFFCURVE",
"304 963 CURVE",
"405 1536 LINE",
"220 1536 LINE",
"-51 0 LINE",
"119 0 LINE",
"150 125 LINE",
"208 28 OFFCURVE",
"305 -20 OFFCURVE",
"442 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303 137 OFFCURVE",
"225 194 OFFCURVE",
"188 307 CURVE",
"271 775 LINE",
"344 888 OFFCURVE",
"442 945 OFFCURVE",
"564 945 CURVE SMOOTH",
"747 945 OFFCURVE",
"822 802 OFFCURVE",
"777 550 CURVE SMOOTH",
"729 274 OFFCURVE",
"601 137 OFFCURVE",
"423 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 8 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"649 -20 OFFCURVE",
"842 194 OFFCURVE",
"902 531 CURVE SMOOTH",
"905 548 LINE SMOOTH",
"967 899 OFFCURVE",
"848 1102 OFFCURVE",
"595 1102 CURVE SMOOTH",
"431 1102 OFFCURVE",
"290 1028 OFFCURVE",
"189 885 CURVE",
"304 1536 LINE",
"250 1536 LINE",
"-21 0 LINE",
"33 0 LINE",
"63 171 LINE",
"116 51 OFFCURVE",
"236 -20 OFFCURVE",
"399 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"225 34 OFFCURVE",
"112 121 OFFCURVE",
"82 274 CURVE",
"169 770 LINE",
"259 954 OFFCURVE",
"405 1048 OFFCURVE",
"586 1048 CURVE SMOOTH",
"807 1048 OFFCURVE",
"904 863 OFFCURVE",
"850 552 CURVE SMOOTH",
"790 216 OFFCURVE",
"632 34 OFFCURVE",
"409 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
18 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 8 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0062;
rightKerningGroup = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"812 -20 OFFCURVE",
"1012 141 OFFCURVE",
"1014 374 CURVE",
"743 374 LINE",
"740.333 276.667 OFFCURVE",
"667.667 213 OFFCURVE",
"561 213 CURVE SMOOTH",
"422.333 213 OFFCURVE",
"355 303.333 OFFCURVE",
"355 526 CURVE SMOOTH",
"355 556 LINE SMOOTH",
"355 776 OFFCURVE",
"424.333 868 OFFCURVE",
"559 868 CURVE SMOOTH",
"668.333 868 OFFCURVE",
"740.333 791 OFFCURVE",
"743 679 CURVE",
"1014 679 LINE",
"1011.333 935 OFFCURVE",
"834.667 1102 OFFCURVE",
"564 1102 CURVE SMOOTH",
"254.667 1102 OFFCURVE",
"66 887.333 OFFCURVE",
"66 554 CURVE SMOOTH",
"66 535 LINE SMOOTH",
"66 188.333 OFFCURVE",
"256.667 -20 OFFCURVE",
"566 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1068;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"791 -20 OFFCURVE",
"993 141 OFFCURVE",
"1004 341 CURVE",
"829 341 LINE",
"818.333 221 OFFCURVE",
"706 131 OFFCURVE",
"574 131 CURVE SMOOTH",
"383.333 131 OFFCURVE",
"277 270.667 OFFCURVE",
"277 520 CURVE SMOOTH",
"277 555 LINE SMOOTH",
"277 811 OFFCURVE",
"385 950 OFFCURVE",
"573 950 CURVE SMOOTH",
"713 950 OFFCURVE",
"818.333 850 OFFCURVE",
"829 710 CURVE",
"1004 710 LINE",
"993.333 942 OFFCURVE",
"815.667 1102 OFFCURVE",
"573 1102 CURVE SMOOTH",
"283.303 1102 OFFCURVE",
"93.188 894.391 OFFCURVE",
"92 562 CURVE SMOOTH",
"92 531 LINE SMOOTH",
"92 189.667 OFFCURVE",
"279.333 -20 OFFCURVE",
"574 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1072;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"761.667 -20 OFFCURVE",
"929.333 118.667 OFFCURVE",
"940 328 CURVE",
"886 328 LINE",
"874 144 OFFCURVE",
"735 34 OFFCURVE",
"539 34 CURVE SMOOTH",
"297.667 34 OFFCURVE",
"151 217.333 OFFCURVE",
"151 520 CURVE SMOOTH",
"151 555 LINE SMOOTH",
"151 864.333 OFFCURVE",
"295.667 1048 OFFCURVE",
"537 1048 CURVE SMOOTH",
"738.333 1048 OFFCURVE",
"876.667 919.667 OFFCURVE",
"886 725 CURVE",
"940 725 LINE",
"930.667 953 OFFCURVE",
"766.333 1102 OFFCURVE",
"537 1102 CURVE SMOOTH",
"269 1102 OFFCURVE",
"97 890 OFFCURVE",
"97 562 CURVE SMOOTH",
"97 526 LINE SMOOTH",
"97 190 OFFCURVE",
"268.333 -20 OFFCURVE",
"539 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"597 -20 OFFCURVE",
"827 141 OFFCURVE",
"873 341 CURVE",
"698 341 LINE",
"667 221 OFFCURVE",
"538 131 OFFCURVE",
"406 131 CURVE SMOOTH",
"216 131 OFFCURVE",
"134 271 OFFCURVE",
"178 520 CURVE SMOOTH",
"184 555 LINE SMOOTH",
"229 811 OFFCURVE",
"362 950 OFFCURVE",
"550 950 CURVE SMOOTH",
"690 950 OFFCURVE",
"777 850 OFFCURVE",
"763 710 CURVE",
"938 710 LINE",
"969 942 OFFCURVE",
"819 1102 OFFCURVE",
"577 1102 CURVE SMOOTH",
"287 1102 OFFCURVE",
"60 894 OFFCURVE",
"0 562 CURVE SMOOTH",
"-5 531 LINE SMOOTH",
"-65 190 OFFCURVE",
"85 -20 OFFCURVE",
"380 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1072;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"567 -20 OFFCURVE",
"759 119 OFFCURVE",
"807 328 CURVE",
"753 328 LINE",
"709 144 OFFCURVE",
"550 34 OFFCURVE",
"354 34 CURVE SMOOTH",
"113 34 OFFCURVE",
"-1 217 OFFCURVE",
"52 520 CURVE SMOOTH",
"58 555 LINE SMOOTH",
"113 864 OFFCURVE",
"290 1048 OFFCURVE",
"531 1048 CURVE SMOOTH",
"732 1048 OFFCURVE",
"848 920 OFFCURVE",
"823 725 CURVE",
"877 725 LINE",
"908 953 OFFCURVE",
"770 1102 OFFCURVE",
"541 1102 CURVE SMOOTH",
"273 1102 OFFCURVE",
"63 890 OFFCURVE",
"5 562 CURVE SMOOTH",
"-1 526 LINE SMOOTH",
"-60 190 OFFCURVE",
"74 -20 OFFCURVE",
"345 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1039;
}
);
leftKerningGroup = c;
note = uni0063;
rightKerningGroup = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"601.333 -20 OFFCURVE",
"694 25 OFFCURVE",
"766 115 CURVE",
"780 0 LINE",
"1041 0 LINE",
"1041 1536 LINE",
"751 1536 LINE",
"751 984 LINE",
"682.333 1062.667 OFFCURVE",
"595.333 1102 OFFCURVE",
"490 1102 CURVE SMOOTH",
"197 1102 OFFCURVE",
"66 842 OFFCURVE",
"66 549 CURVE SMOOTH",
"66 192 OFFCURVE",
"233 -20 OFFCURVE",
"488 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"427.333 214 OFFCURVE",
"355 325.333 OFFCURVE",
"355 528 CURVE SMOOTH",
"355 754 OFFCURVE",
"424.667 867 OFFCURVE",
"564 867 CURVE SMOOTH",
"652.667 867 OFFCURVE",
"715 829.333 OFFCURVE",
"751 754 CURVE",
"751 327 LINE",
"714.333 251.667 OFFCURVE",
"651.333 214 OFFCURVE",
"562 214 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1154;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"652 -20 OFFCURVE",
"755 25.333 OFFCURVE",
"829 116 CURVE",
"838 0 LINE",
"1008 0 LINE",
"1008 1536 LINE",
"823 1536 LINE",
"823 972 LINE",
"749 1058.667 OFFCURVE",
"648.667 1102 OFFCURVE",
"522 1102 CURVE SMOOTH",
"267.333 1102 OFFCURVE",
"95 882 OFFCURVE",
"95 536 CURVE SMOOTH",
"95 205.333 OFFCURVE",
"269.333 -20 OFFCURVE",
"520 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"387.333 137 OFFCURVE",
"280 283.667 OFFCURVE",
"280 529 CURVE SMOOTH",
"280 803.667 OFFCURVE",
"386.667 945 OFFCURVE",
"568 945 CURVE SMOOTH",
"682.667 945 OFFCURVE",
"767.667 894 OFFCURVE",
"823 792 CURVE",
"823 295 LINE",
"769 189.667 OFFCURVE",
"683.333 137 OFFCURVE",
"566 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1155;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"690.667 -20 OFFCURVE",
"823.667 50.333 OFFCURVE",
"897 173 CURVE",
"897 0 LINE",
"951 0 LINE",
"951 1536 LINE",
"897 1536 LINE",
"897 883 LINE",
"819.667 1028.333 OFFCURVE",
"692.667 1102 OFFCURVE",
"530 1102 CURVE SMOOTH",
"276.667 1102 OFFCURVE",
"122 897.333 OFFCURVE",
"122 538 CURVE SMOOTH",
"122 191.333 OFFCURVE",
"277.333 -20 OFFCURVE",
"528 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"304.333 34 OFFCURVE",
"178 224.333 OFFCURVE",
"178 531 CURVE SMOOTH",
"178 871 OFFCURVE",
"307.667 1048 OFFCURVE",
"529 1048 CURVE SMOOTH",
"712.333 1048 OFFCURVE",
"835 957 OFFCURVE",
"897 775 CURVE",
"897 268 LINE",
"835.667 114.667 OFFCURVE",
"705.667 34 OFFCURVE",
"527 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"458 -20 OFFCURVE",
"569 25 OFFCURVE",
"659 116 CURVE",
"647 0 LINE",
"817 0 LINE",
"1088 1536 LINE",
"903 1536 LINE",
"804 972 LINE",
"745 1059 OFFCURVE",
"652 1102 OFFCURVE",
"526 1102 CURVE SMOOTH",
"271 1102 OFFCURVE",
"60 882 OFFCURVE",
"-1 536 CURVE SMOOTH",
"-60 205 OFFCURVE",
"75 -20 OFFCURVE",
"326 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 137 OFFCURVE",
"139 284 OFFCURVE",
"182 529 CURVE SMOOTH",
"231 804 OFFCURVE",
"363 945 OFFCURVE",
"544 945 CURVE SMOOTH",
"659 945 OFFCURVE",
"735 894 OFFCURVE",
"772 792 CURVE",
"684 295 LINE",
"612 190 OFFCURVE",
"517 137 OFFCURVE",
"399 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1155;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"496 -20 OFFCURVE",
"642 50 OFFCURVE",
"737 173 CURVE",
"706 0 LINE",
"760 0 LINE",
"1031 1536 LINE",
"977 1536 LINE",
"862 883 LINE",
"810 1028 OFFCURVE",
"696 1102 OFFCURVE",
"534 1102 CURVE SMOOTH",
"280 1102 OFFCURVE",
"89 897 OFFCURVE",
"26 538 CURVE SMOOTH",
"-35 191 OFFCURVE",
"83 -20 OFFCURVE",
"334 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"120 34 OFFCURVE",
"27 224 OFFCURVE",
"81 531 CURVE SMOOTH",
"141 871 OFFCURVE",
"302 1048 OFFCURVE",
"523 1048 CURVE SMOOTH",
"706 1048 OFFCURVE",
"813 957 OFFCURVE",
"843 775 CURVE",
"753 268 LINE",
"665 115 OFFCURVE",
"521 34 OFFCURVE",
"342 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
leftKerningGroup = c;
note = uni0064;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"789 -20 OFFCURVE",
"944.333 52.333 OFFCURVE",
"1031 175 CURVE",
"889 334 LINE",
"826.333 253.333 OFFCURVE",
"739.333 213 OFFCURVE",
"628 213 CURVE SMOOTH",
"484 213 OFFCURVE",
"383.667 305.667 OFFCURVE",
"365 447 CURVE",
"1054 447 LINE",
"1054 565 LINE SMOOTH",
"1054 907.667 OFFCURVE",
"873 1102 OFFCURVE",
"577 1102 CURVE SMOOTH",
"361 1102 OFFCURVE",
"223 960 OFFCURVE",
"147 811 CURVE SMOOTH",
"95 711 OFFCURVE",
"72 607 OFFCURVE",
"72 543 CURVE SMOOTH",
"72 515 LINE SMOOTH",
"72 191 OFFCURVE",
"291.667 -20 OFFCURVE",
"609 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"388 788 OFFCURVE",
"461.333 868 OFFCURVE",
"576 868 CURVE SMOOTH",
"698.667 868 OFFCURVE",
"767.333 795 OFFCURVE",
"770 644 CURVE",
"368 644 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 26 207 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1107;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"770.333 -20 OFFCURVE",
"906.333 49.667 OFFCURVE",
"997 189 CURVE",
"884 277 LINE",
"816 189 OFFCURVE",
"729.667 131 OFFCURVE",
"599 131 CURVE SMOOTH",
"415 131 OFFCURVE",
"283.333 274.667 OFFCURVE",
"278 488 CURVE",
"1011 488 LINE",
"1011 565 LINE SMOOTH",
"1011 910.333 OFFCURVE",
"847.333 1102 OFFCURVE",
"566 1102 CURVE SMOOTH",
"394 1102 OFFCURVE",
"236.5 1001.167 OFFCURVE",
"154.5 832.5 CURVE SMOOTH",
"113.5 748.167 OFFCURVE",
"93 652.333 OFFCURVE",
"93 545 CURVE SMOOTH",
"93 511 LINE SMOOTH",
"93 188.333 OFFCURVE",
"295.667 -20 OFFCURVE",
"589 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 836 OFFCURVE",
"416.667 950 OFFCURVE",
"566 950 CURVE SMOOTH",
"720.667 950 OFFCURVE",
"815.333 842 OFFCURVE",
"826 640 CURVE",
"284 640 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 26 207 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"719.667 -20 OFFCURVE",
"839.333 38.333 OFFCURVE",
"920 155 CURVE",
"882 182 LINE",
"803.333 80.667 OFFCURVE",
"706.333 33 OFFCURVE",
"561 33 CURVE SMOOTH",
"290 33 OFFCURVE",
"141 248 OFFCURVE",
"141 577 CURVE",
"952 577 LINE",
"952 634 LINE SMOOTH",
"952 914 OFFCURVE",
"782.333 1102 OFFCURVE",
"541 1102 CURVE SMOOTH",
"375.667 1102 OFFCURVE",
"227 1003.667 OFFCURVE",
"147 837 CURVE SMOOTH",
"107 753.667 OFFCURVE",
"87 662 OFFCURVE",
"87 562 CURVE SMOOTH",
"87 517 LINE SMOOTH",
"87 226 OFFCURVE",
"281 -20 OFFCURVE",
"561 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169.333 873.667 OFFCURVE",
"330.333 1048 OFFCURVE",
"541 1048 CURVE SMOOTH",
"766 1048 OFFCURVE",
"898 856 OFFCURVE",
"898 631 CURVE",
"144 631 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 26 207 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1032;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"576 -20 OFFCURVE",
"724 50 OFFCURVE",
"840 189 CURVE",
"742 277 LINE",
"659 189 OFFCURVE",
"562 131 OFFCURVE",
"431 131 CURVE SMOOTH",
"247 131 OFFCURVE",
"141 275 OFFCURVE",
"173 488 CURVE",
"906 488 LINE",
"920 565 LINE SMOOTH",
"981 910 OFFCURVE",
"851 1102 OFFCURVE",
"570 1102 CURVE SMOOTH",
"398 1102 OFFCURVE",
"222 1001 OFFCURVE",
"111 833 CURVE SMOOTH",
"55 748 OFFCURVE",
"17 652 OFFCURVE",
"-2 545 CURVE SMOOTH",
"-8 511 LINE SMOOTH",
"-65 188 OFFCURVE",
"101 -20 OFFCURVE",
"395 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"265 836 OFFCURVE",
"393 950 OFFCURVE",
"543 950 CURVE SMOOTH",
"697 950 OFFCURVE",
"773 842 OFFCURVE",
"748 640 CURVE",
"206 640 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 26 207 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"525 -20 OFFCURVE",
"655 38 OFFCURVE",
"757 155 CURVE",
"723 182 LINE",
"627 81 OFFCURVE",
"521 33 OFFCURVE",
"376 33 CURVE SMOOTH",
"105 33 OFFCURVE",
"-6 248 OFFCURVE",
"52 577 CURVE",
"863 577 LINE",
"873 634 LINE SMOOTH",
"922 914 OFFCURVE",
"786 1102 OFFCURVE",
"545 1102 CURVE SMOOTH",
"379 1102 OFFCURVE",
"213 1004 OFFCURVE",
"104 837 CURVE SMOOTH",
"49 754 OFFCURVE",
"13 662 OFFCURVE",
"-5 562 CURVE SMOOTH",
"-13 517 LINE SMOOTH",
"-64 226 OFFCURVE",
"87 -20 OFFCURVE",
"367 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"133 874 OFFCURVE",
"324 1048 OFFCURVE",
"535 1048 CURVE SMOOTH",
"760 1048 OFFCURVE",
"858 856 OFFCURVE",
"818 631 CURVE",
"64 631 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 26 207 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1032;
}
);
leftKerningGroup = c;
note = uni0065;
rightKerningGroup = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"480 0 LINE",
"480 870 LINE",
"695 870 LINE",
"695 1082 LINE",
"480 1082 LINE",
"480 1169 LINE SMOOTH",
"480 1271 OFFCURVE",
"534.333 1322 OFFCURVE",
"643 1322 CURVE SMOOTH",
"677.667 1322 OFFCURVE",
"707 1319 OFFCURVE",
"731 1313 CURVE",
"734 1537 LINE {name = \"❌\";}",
"676 1550.333 OFFCURVE",
"627 1557 OFFCURVE",
"587 1557 CURVE SMOOTH",
"336.333 1557 OFFCURVE",
"190 1416.667 OFFCURVE",
"190 1174 CURVE SMOOTH",
"190 1082 LINE",
"29 1082 LINE",
"29 870 LINE",
"190 870 LINE",
"190 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 734;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 939 LINE",
"647 939 LINE",
"647 1082 LINE",
"416 1082 LINE",
"416 1196 LINE SMOOTH",
"416 1326.667 OFFCURVE",
"484 1399 OFFCURVE",
"604 1399 CURVE SMOOTH",
"639.333 1399 OFFCURVE",
"672.667 1396 OFFCURVE",
"704 1390 CURVE",
"714 1540 LINE {name = \"❌\";}",
"672 1551.333 OFFCURVE",
"629.667 1557 OFFCURVE",
"587 1557 CURVE SMOOTH",
"360.333 1557 OFFCURVE",
"231 1425 OFFCURVE",
"231 1193 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"308 0 LINE",
"308 1027 LINE",
"594 1027 LINE",
"594 1082 LINE",
"308 1082 LINE",
"308 1236 LINE SMOOTH",
"308 1406.667 OFFCURVE",
"395.333 1503 OFFCURVE",
"538 1503 CURVE SMOOTH",
"582.667 1503 OFFCURVE",
"622.333 1498 OFFCURVE",
"657 1488 CURVE",
"665 1540 LINE {name = \"❌\";}",
"629 1551.333 OFFCURVE",
"586.333 1557 OFFCURVE",
"537 1557 CURVE SMOOTH",
"359.667 1557 OFFCURVE",
"255.333 1440 OFFCURVE",
"254 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"66 1027 LINE",
"254 1027 LINE",
"254 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 645;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"225 0 LINE",
"391 939 LINE",
"622 939 LINE",
"647 1082 LINE",
"416 1082 LINE",
"436 1196 LINE SMOOTH",
"459 1327 OFFCURVE",
"540 1399 OFFCURVE",
"660 1399 CURVE SMOOTH",
"695 1399 OFFCURVE",
"728 1396 OFFCURVE",
"758 1390 CURVE",
"795 1540 LINE {name = \"❌\";}",
"755 1551 OFFCURVE",
"713 1557 OFFCURVE",
"671 1557 CURVE SMOOTH",
"444 1557 OFFCURVE",
"291 1425 OFFCURVE",
"251 1193 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"35 939 LINE",
"206 939 LINE",
"40 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"117 0 LINE",
"298 1027 LINE",
"584 1027 LINE",
"594 1082 LINE",
"308 1082 LINE",
"335 1236 LINE SMOOTH",
"365 1407 OFFCURVE",
"470 1503 OFFCURVE",
"612 1503 CURVE SMOOTH",
"657 1503 OFFCURVE",
"696 1498 OFFCURVE",
"729 1488 CURVE",
"746 1540 LINE {name = \"❌\";}",
"712 1551 OFFCURVE",
"670 1557 OFFCURVE",
"621 1557 CURVE SMOOTH",
"443 1557 OFFCURVE",
"318 1440 OFFCURVE",
"282 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"56 1027 LINE",
"244 1027 LINE",
"63 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
15 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 645;
}
);
note = uni0066;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"842 -426 OFFCURVE",
"1058 -260 OFFCURVE",
"1058 36 CURVE SMOOTH",
"1058 1082 LINE",
"796 1082 LINE",
"784 980 LINE",
"718 1061 OFFCURVE",
"626 1102 OFFCURVE",
"507 1102 CURVE SMOOTH",
"239 1102 OFFCURVE",
"69 881 OFFCURVE",
"69 537 CURVE SMOOTH",
"69 201 OFFCURVE",
"245 -20 OFFCURVE",
"505 -20 CURVE SMOOTH",
"613.667 -20 OFFCURVE",
"701.333 17.667 OFFCURVE",
"768 93 CURVE",
"768 35 LINE SMOOTH",
"768 -115.667 OFFCURVE",
"678.333 -201 OFFCURVE",
"525 -201 CURVE SMOOTH",
"422.333 -201 OFFCURVE",
"335 -160.667 OFFCURVE",
"263 -80 CURVE",
"135 -256 LINE",
"212.333 -356 OFFCURVE",
"379.333 -426 OFFCURVE",
"538 -426 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"441.667 214 OFFCURVE",
"358 332 OFFCURVE",
"358 528 CURVE SMOOTH",
"358 753.333 OFFCURVE",
"442.333 867 OFFCURVE",
"581 867 CURVE SMOOTH",
"667 867 OFFCURVE",
"729.333 834 OFFCURVE",
"768 768 CURVE",
"768 313 LINE",
"730 247 OFFCURVE",
"667 214 OFFCURVE",
"579 214 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
34 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 23 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1169;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"831 -426 OFFCURVE",
"1010 -254 OFFCURVE",
"1010 26 CURVE SMOOTH",
"1010 1082 LINE",
"841 1082 LINE",
"832 962 LINE",
"758 1055.333 OFFCURVE",
"655 1102 OFFCURVE",
"523 1102 CURVE SMOOTH",
"265.667 1102 OFFCURVE",
"96 887.333 OFFCURVE",
"96 550 CURVE SMOOTH",
"96 198 OFFCURVE",
"267.667 -20 OFFCURVE",
"521 -20 CURVE SMOOTH",
"649 -20 OFFCURVE",
"750 22.667 OFFCURVE",
"824 108 CURVE",
"824 15 LINE SMOOTH",
"824 -169 OFFCURVE",
"718 -275 OFFCURVE",
"538 -275 CURVE SMOOTH",
"423.333 -275 OFFCURVE",
"326.333 -226 OFFCURVE",
"247 -128 CURVE",
"151 -239 LINE",
"229.667 -355 OFFCURVE",
"395 -426 OFFCURVE",
"551 -426 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"387 137 OFFCURVE",
"282 285 OFFCURVE",
"282 529 CURVE SMOOTH",
"282 803.667 OFFCURVE",
"389 945 OFFCURVE",
"569 945 CURVE SMOOTH",
"682.333 945 OFFCURVE",
"767.333 893.333 OFFCURVE",
"824 790 CURVE",
"824 296 LINE",
"769.333 190 OFFCURVE",
"683.667 137 OFFCURVE",
"567 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
34 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 23 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"793 -436 OFFCURVE",
"950 -266.333 OFFCURVE",
"950 19 CURVE SMOOTH",
"950 1082 LINE",
"895 1082 LINE",
"895 884 LINE",
"819 1026.667 OFFCURVE",
"690.333 1102 OFFCURVE",
"529 1102 CURVE SMOOTH",
"275.667 1102 OFFCURVE",
"121 897.333 OFFCURVE",
"121 538 CURVE SMOOTH",
"121 191.333 OFFCURVE",
"276.333 -20 OFFCURVE",
"527 -20 CURVE SMOOTH",
"688.333 -20 OFFCURVE",
"820.333 48.333 OFFCURVE",
"895 171 CURVE",
"895 5 LINE SMOOTH",
"891 -241.667 OFFCURVE",
"761.667 -383 OFFCURVE",
"539 -383 CURVE SMOOTH",
"404.333 -383 OFFCURVE",
"309 -324.667 OFFCURVE",
"225 -218 CURVE",
"187 -254 LINE",
"272.333 -371.333 OFFCURVE",
"395.667 -436 OFFCURVE",
"541 -436 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"304.667 34 OFFCURVE",
"176 221.667 OFFCURVE",
"176 531 CURVE SMOOTH",
"176 871 OFFCURVE",
"305.333 1048 OFFCURVE",
"528 1048 CURVE SMOOTH",
"714 1048 OFFCURVE",
"836.333 954.333 OFFCURVE",
"895 767 CURVE",
"895 276 LINE",
"841.667 122.667 OFFCURVE",
"708.667 34 OFFCURVE",
"526 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
34 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 23 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1123;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"565 -426 OFFCURVE",
"774 -254 OFFCURVE",
"824 26 CURVE SMOOTH",
"1010 1082 LINE",
"841 1082 LINE",
"811 962 LINE",
"753 1055 OFFCURVE",
"659 1102 OFFCURVE",
"527 1102 CURVE SMOOTH",
"269 1102 OFFCURVE",
"62 887 OFFCURVE",
"2 550 CURVE SMOOTH",
"-60 198 OFFCURVE",
"73 -20 OFFCURVE",
"327 -20 CURVE SMOOTH",
"455 -20 OFFCURVE",
"563 23 OFFCURVE",
"652 108 CURVE",
"636 15 LINE SMOOTH",
"603 -169 OFFCURVE",
"479 -275 OFFCURVE",
"299 -275 CURVE SMOOTH",
"184 -275 OFFCURVE",
"96 -226 OFFCURVE",
"34 -128 CURVE",
"-82 -239 LINE",
"-24 -355 OFFCURVE",
"129 -426 OFFCURVE",
"285 -426 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"220 137 OFFCURVE",
"141 285 OFFCURVE",
"184 529 CURVE SMOOTH",
"233 804 OFFCURVE",
"365 945 OFFCURVE",
"545 945 CURVE SMOOTH",
"658 945 OFFCURVE",
"734 893 OFFCURVE",
"773 790 CURVE",
"685 296 LINE",
"612 190 OFFCURVE",
"517 137 OFFCURVE",
"400 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
34 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 23 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"525 -436 OFFCURVE",
"712 -266 OFFCURVE",
"763 19 CURVE SMOOTH",
"950 1082 LINE",
"895 1082 LINE",
"860 884 LINE",
"809 1027 OFFCURVE",
"694 1102 OFFCURVE",
"533 1102 CURVE SMOOTH",
"279 1102 OFFCURVE",
"88 897 OFFCURVE",
"25 538 CURVE SMOOTH",
"-36 191 OFFCURVE",
"82 -20 OFFCURVE",
"333 -20 CURVE SMOOTH",
"494 -20 OFFCURVE",
"638 48 OFFCURVE",
"734 171 CURVE",
"705 5 LINE SMOOTH",
"658 -242 OFFCURVE",
"503 -383 OFFCURVE",
"281 -383 CURVE SMOOTH",
"146 -383 OFFCURVE",
"61 -325 OFFCURVE",
"-4 -218 CURVE",
"-49 -254 LINE",
"16 -371 OFFCURVE",
"128 -436 OFFCURVE",
"273 -436 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"120 34 OFFCURVE",
"24 222 OFFCURVE",
"79 531 CURVE SMOOTH",
"139 871 OFFCURVE",
"299 1048 OFFCURVE",
"522 1048 CURVE SMOOTH",
"708 1048 OFFCURVE",
"814 954 OFFCURVE",
"839 767 CURVE",
"753 276 LINE",
"673 123 OFFCURVE",
"524 34 OFFCURVE",
"341 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
34 37 38 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 23 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
21 3 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1123;
}
);
leftKerningGroup = c;
note = uni0067;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"393 0 LINE",
"393 769 LINE",
"431 834.333 OFFCURVE",
"492.333 867 OFFCURVE",
"577 867 CURVE SMOOTH",
"701 867 OFFCURVE",
"750 809 OFFCURVE",
"750 685 CURVE SMOOTH",
"750 0 LINE",
"1039 0 LINE",
"1039 693 LINE SMOOTH",
"1035.667 965.667 OFFCURVE",
"916.667 1102 OFFCURVE",
"682 1102 CURVE SMOOTH",
"566 1102 OFFCURVE",
"469.667 1056 OFFCURVE",
"393 964 CURVE",
"393 1536 LINE",
"104 1536 LINE",
"104 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1146;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"325 0 LINE",
"325 771 LINE",
"375.667 875 OFFCURVE",
"469 945 OFFCURVE",
"589 945 CURVE SMOOTH",
"737 945 OFFCURVE",
"804.667 872 OFFCURVE",
"806 716 CURVE SMOOTH",
"806 0 LINE",
"991 0 LINE",
"991 715 LINE SMOOTH",
"989 973 OFFCURVE",
"873.667 1102 OFFCURVE",
"645 1102 CURVE SMOOTH",
"513.667 1102 OFFCURVE",
"407 1051.667 OFFCURVE",
"325 951 CURVE",
"325 1536 LINE",
"140 1536 LINE",
"140 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1128;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"226 0 LINE",
"226 693 LINE",
"274 902.333 OFFCURVE",
"420.333 1049 OFFCURVE",
"607 1049 CURVE SMOOTH",
"809.667 1049 OFFCURVE",
"898.667 940 OFFCURVE",
"900 708 CURVE SMOOTH",
"900 0 LINE",
"954 0 LINE",
"954 706 LINE SMOOTH",
"952.667 971.333 OFFCURVE",
"842 1102 OFFCURVE",
"610 1102 CURVE SMOOTH",
"443.333 1102 OFFCURVE",
"296.667 998 OFFCURVE",
"226 830 CURVE",
"226 1536 LINE",
"172 1536 LINE",
"172 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"134 0 LINE",
"270 771 LINE",
"339 875 OFFCURVE",
"445 945 OFFCURVE",
"565 945 CURVE SMOOTH",
"713 945 OFFCURVE",
"768 872 OFFCURVE",
"741 716 CURVE SMOOTH",
"615 0 LINE",
"800 0 LINE",
"926 715 LINE SMOOTH",
"970 973 OFFCURVE",
"877 1102 OFFCURVE",
"649 1102 CURVE SMOOTH",
"517 1102 OFFCURVE",
"402 1052 OFFCURVE",
"302 951 CURVE",
"405 1536 LINE",
"220 1536 LINE",
"-51 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1128;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"157 693 LINE",
"242 902 OFFCURVE",
"415 1049 OFFCURVE",
"601 1049 CURVE SMOOTH",
"804 1049 OFFCURVE",
"874 940 OFFCURVE",
"834 708 CURVE SMOOTH",
"709 0 LINE",
"763 0 LINE",
"888 706 LINE SMOOTH",
"933 971 OFFCURVE",
"846 1102 OFFCURVE",
"614 1102 CURVE SMOOTH",
"447 1102 OFFCURVE",
"282 998 OFFCURVE",
"182 830 CURVE",
"306 1536 LINE",
"252 1536 LINE",
"-19 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 2 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni0068;
rightKerningGroup = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 1082 LINE",
"126 1082 LINE",
"126 0 LINE"
);
},
{
closed = 1;
nodes = (
"368.333 1212 OFFCURVE",
"433 1274 OFFCURVE",
"433 1362 CURVE SMOOTH",
"433 1448.667 OFFCURVE",
"369.667 1511 OFFCURVE",
"271 1511 CURVE SMOOTH",
"171 1511 OFFCURVE",
"109 1448.667 OFFCURVE",
"109 1362 CURVE SMOOTH",
"109 1274 OFFCURVE",
"173.667 1212 OFFCURVE",
"271 1212 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"341 0 LINE",
"341 1082 LINE",
"156 1082 LINE",
"156 0 LINE"
);
},
{
closed = 1;
nodes = (
"322 1264 OFFCURVE",
"360 1309 OFFCURVE",
"360 1369 CURVE SMOOTH",
"360 1429 OFFCURVE",
"322 1476 OFFCURVE",
"250 1476 CURVE SMOOTH",
"178 1476 OFFCURVE",
"141 1429 OFFCURVE",
"141 1369 CURVE SMOOTH",
"141 1309 OFFCURVE",
"178 1264 OFFCURVE",
"250 1264 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"239 0 LINE",
"239 1082 LINE",
"185 1082 LINE",
"185 0 LINE"
);
},
{
closed = 1;
nodes = (
"242.667 1365 OFFCURVE",
"268 1389.333 OFFCURVE",
"268 1420 CURVE SMOOTH",
"268 1450.667 OFFCURVE",
"242.667 1476 OFFCURVE",
"212 1476 CURVE SMOOTH",
"181.333 1476 OFFCURVE",
"157 1450.667 OFFCURVE",
"157 1420 CURVE SMOOTH",
"157 1389.333 OFFCURVE",
"181.333 1365 OFFCURVE",
"212 1365 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 422;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"150 0 LINE",
"341 1082 LINE",
"156 1082 LINE",
"-35 0 LINE"
);
},
{
closed = 1;
nodes = (
"354 1264 OFFCURVE",
"400 1309 OFFCURVE",
"411 1369 CURVE SMOOTH",
"421 1429 OFFCURVE",
"391 1476 OFFCURVE",
"319 1476 CURVE SMOOTH",
"247 1476 OFFCURVE",
"202 1429 OFFCURVE",
"192 1369 CURVE SMOOTH",
"181 1309 OFFCURVE",
"210 1264 OFFCURVE",
"282 1264 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"48 0 LINE",
"239 1082 LINE",
"185 1082 LINE",
"-6 0 LINE"
);
},
{
closed = 1;
nodes = (
"293 1365 OFFCURVE",
"322 1389 OFFCURVE",
"328 1420 CURVE SMOOTH",
"333 1451 OFFCURVE",
"312 1476 OFFCURVE",
"281 1476 CURVE SMOOTH",
"251 1476 OFFCURVE",
"222 1451 OFFCURVE",
"217 1420 CURVE SMOOTH",
"211 1389 OFFCURVE",
"231 1365 OFFCURVE",
"262 1365 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 422;
}
);
note = uni0069;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"286.667 -437 OFFCURVE",
"417 -297.667 OFFCURVE",
"417 -59 CURVE SMOOTH",
"417 1082 LINE",
"127 1082 LINE",
"127 -61 LINE SMOOTH",
"127 -153.667 OFFCURVE",
"83.333 -200 OFFCURVE",
"-4 -200 CURVE SMOOTH",
"-30 -200 OFFCURVE",
"-60.333 -197 OFFCURVE",
"-95 -191 CURVE",
"-95 -420 LINE",
"-49.667 -431.333 OFFCURVE",
"-2 -437 OFFCURVE",
"48 -437 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"363.333 1212 OFFCURVE",
"428 1274 OFFCURVE",
"428 1362 CURVE SMOOTH",
"428 1448.667 OFFCURVE",
"366 1511 OFFCURVE",
"266 1511 CURVE SMOOTH",
"166 1511 OFFCURVE",
"104 1448.667 OFFCURVE",
"104 1362 CURVE SMOOTH",
"104 1274 OFFCURVE",
"168.667 1212 OFFCURVE",
"266 1212 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 532;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"236.667 -437 OFFCURVE",
"331 -333 OFFCURVE",
"331 -125 CURVE SMOOTH",
"331 1082 LINE",
"146 1082 LINE",
"146 -129 LINE SMOOTH",
"146 -239.667 OFFCURVE",
"101.667 -279 OFFCURVE",
"19 -279 CURVE SMOOTH",
"-15.667 -279 OFFCURVE",
"-43.667 -276.333 OFFCURVE",
"-65 -271 CURVE",
"-65 -419 LINE",
"-30.333 -431 OFFCURVE",
"7.333 -437 OFFCURVE",
"48 -437 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 1264 OFFCURVE",
"345 1309 OFFCURVE",
"345 1369 CURVE SMOOTH",
"345 1429 OFFCURVE",
"307 1476 OFFCURVE",
"235 1476 CURVE SMOOTH",
"164.333 1476 OFFCURVE",
"127 1427.667 OFFCURVE",
"127 1369 CURVE SMOOTH",
"127 1309 OFFCURVE",
"163 1264 OFFCURVE",
"235 1264 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 489;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"135 -437 OFFCURVE",
"240 -329 OFFCURVE",
"240 -129 CURVE SMOOTH",
"240 1082 LINE",
"186 1082 LINE",
"186 -129 LINE SMOOTH",
"186 -290.333 OFFCURVE",
"104.333 -383 OFFCURVE",
"-45 -383 CURVE SMOOTH",
"-76.333 -383 OFFCURVE",
"-108 -377 OFFCURVE",
"-140 -365 CURVE",
"-143 -417 LINE",
"-110.333 -430.333 OFFCURVE",
"-77.667 -437 OFFCURVE",
"-45 -437 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"248.667 1365 OFFCURVE",
"274 1389.333 OFFCURVE",
"274 1420 CURVE SMOOTH",
"274 1450.667 OFFCURVE",
"248.667 1476 OFFCURVE",
"218 1476 CURVE SMOOTH",
"187.333 1476 OFFCURVE",
"163 1450.667 OFFCURVE",
"163 1420 CURVE SMOOTH",
"163 1389.333 OFFCURVE",
"187.333 1365 OFFCURVE",
"218 1365 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 445;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-31 -437 OFFCURVE",
"81 -333 OFFCURVE",
"118 -125 CURVE SMOOTH",
"331 1082 LINE",
"146 1082 LINE",
"-68 -129 LINE SMOOTH",
"-87 -240 OFFCURVE",
"-138 -279 OFFCURVE",
"-221 -279 CURVE SMOOTH",
"-256 -279 OFFCURVE",
"-283 -276 OFFCURVE",
"-304 -271 CURVE",
"-330 -419 LINE",
"-297 -431 OFFCURVE",
"-261 -437 OFFCURVE",
"-220 -437 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 1264 OFFCURVE",
"385 1309 OFFCURVE",
"396 1369 CURVE SMOOTH",
"406 1429 OFFCURVE",
"376 1476 OFFCURVE",
"304 1476 CURVE SMOOTH",
"234 1476 OFFCURVE",
"188 1428 OFFCURVE",
"178 1369 CURVE SMOOTH",
"167 1309 OFFCURVE",
"195 1264 OFFCURVE",
"267 1264 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 489;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-133 -437 OFFCURVE",
"-9 -329 OFFCURVE",
"26 -129 CURVE SMOOTH",
"240 1082 LINE",
"186 1082 LINE",
"-28 -129 LINE SMOOTH",
"-56 -290 OFFCURVE",
"-154 -383 OFFCURVE",
"-303 -383 CURVE SMOOTH",
"-335 -383 OFFCURVE",
"-365 -377 OFFCURVE",
"-395 -365 CURVE",
"-407 -417 LINE",
"-377 -430 OFFCURVE",
"-346 -437 OFFCURVE",
"-313 -437 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"299 1365 OFFCURVE",
"328 1389 OFFCURVE",
"334 1420 CURVE SMOOTH",
"339 1451 OFFCURVE",
"318 1476 OFFCURVE",
"287 1476 CURVE SMOOTH",
"257 1476 OFFCURVE",
"228 1451 OFFCURVE",
"223 1420 CURVE SMOOTH",
"217 1389 OFFCURVE",
"237 1365 OFFCURVE",
"268 1365 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 445;
}
);
note = uni006A;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"400 0 LINE",
"400 330 LINE",
"504 434 LINE",
"782 0 LINE",
"1114 0 LINE",
"689 631 LINE",
"1080 1082 LINE",
"733 1082 LINE",
"400 685 LINE",
"400 1536 LINE",
"111 1536 LINE",
"111 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
58 0 74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 202 0 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1094;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"326 0 LINE",
"326 380 LINE",
"442 501 LINE",
"819 0 LINE",
"1036 0 LINE",
"566 630 LINE",
"987 1082 LINE",
"762 1082 LINE",
"326 607 LINE",
"326 1536 LINE",
"141 1536 LINE",
"141 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
58 0 74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 202 0 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1038;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"226 0 LINE",
"226 448 LINE",
"385 585 LINE",
"883 0 LINE",
"953 0 LINE",
"425 621 LINE",
"922 1082 LINE",
"845 1082 LINE",
"226 507 LINE",
"226 1536 LINE",
"172 1536 LINE",
"172 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
58 0 74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 202 0 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"135 0 LINE",
"202 380 LINE",
"340 501 LINE",
"628 0 LINE",
"845 0 LINE",
"486 630 LINE",
"987 1082 LINE",
"762 1082 LINE",
"242 607 LINE",
"406 1536 LINE",
"221 1536 LINE",
"-50 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
58 0 74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 202 0 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1038;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"114 448 LINE",
"297 585 LINE",
"692 0 LINE",
"762 0 LINE",
"344 621 LINE",
"922 1082 LINE",
"845 1082 LINE",
"125 507 LINE",
"306 1536 LINE",
"252 1536 LINE",
"-19 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
58 0 74 0 90 0 106 0 122 0 138 0 154 0 170 0 186 0 202 0 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
6 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHB[ ]	/* 21 values pushed */
54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 10 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
}
);
note = uni006B;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 1536 LINE",
"126 1536 LINE",
"126 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"341 0 LINE",
"341 1536 LINE",
"156 1536 LINE",
"156 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"239 0 LINE",
"239 1536 LINE",
"185 1536 LINE",
"185 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 422;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"150 0 LINE",
"421 1536 LINE",
"236 1536 LINE",
"-35 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"48 0 LINE",
"319 1536 LINE",
"265 1536 LINE",
"-6 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 422;
}
);
note = uni006C;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"400 0 LINE",
"400 765 LINE",
"436.667 833 OFFCURVE",
"496 867 OFFCURVE",
"578 867 CURVE SMOOTH",
"696.667 867 OFFCURVE",
"741 814.333 OFFCURVE",
"741 689 CURVE SMOOTH",
"741 0 LINE",
"1029 0 LINE",
"1029 743 LINE",
"1062.333 825.667 OFFCURVE",
"1122.333 867 OFFCURVE",
"1209 867 CURVE SMOOTH",
"1330.333 867 OFFCURVE",
"1372 812.667 OFFCURVE",
"1372 690 CURVE SMOOTH",
"1372 0 LINE",
"1662 0 LINE",
"1662 691 LINE SMOOTH",
"1662 965.667 OFFCURVE",
"1548.667 1102 OFFCURVE",
"1314 1102 CURVE SMOOTH",
"1173.333 1102 OFFCURVE",
"1065 1047 OFFCURVE",
"989 937 CURVE",
"937 1047 OFFCURVE",
"841.333 1102 OFFCURVE",
"702 1102 CURVE SMOOTH",
"571.333 1102 OFFCURVE",
"467.667 1055 OFFCURVE",
"391 961 CURVE",
"382 1082 LINE",
"111 1082 LINE",
"111 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1773;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"324 0 LINE",
"324 790 LINE",
"368.667 893.333 OFFCURVE",
"451.667 945 OFFCURVE",
"573 945 CURVE SMOOTH",
"727 945 OFFCURVE",
"804 866.333 OFFCURVE",
"804 709 CURVE SMOOTH",
"804 0 LINE",
"990 0 LINE",
"990 718 LINE",
"1004.667 856.667 OFFCURVE",
"1102.667 945 OFFCURVE",
"1240 945 CURVE SMOOTH",
"1406.667 945 OFFCURVE",
"1471 868.667 OFFCURVE",
"1471 714 CURVE SMOOTH",
"1471 0 LINE",
"1656 0 LINE",
"1656 725 LINE SMOOTH",
"1652 976.333 OFFCURVE",
"1531.333 1102 OFFCURVE",
"1294 1102 CURVE SMOOTH",
"1136.667 1102 OFFCURVE",
"1021 1032 OFFCURVE",
"949 928 CURVE",
"894.333 1044 OFFCURVE",
"791.333 1102 OFFCURVE",
"640 1102 CURVE SMOOTH",
"505.333 1102 OFFCURVE",
"398.333 1055.333 OFFCURVE",
"319 962 CURVE",
"314 1082 LINE",
"139 1082 LINE",
"139 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1795;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"216 0 LINE",
"216 684 LINE",
"253 878 OFFCURVE",
"392 1049 OFFCURVE",
"596 1049 CURVE SMOOTH",
"801.333 1049 OFFCURVE",
"890.667 944.333 OFFCURVE",
"892 727 CURVE SMOOTH",
"892 0 LINE",
"946 0 LINE",
"946 720 LINE",
"955 840 OFFCURVE",
"1080 1045 OFFCURVE",
"1330 1049 CURVE SMOOTH",
"1534 1051.667 OFFCURVE",
"1626 939.333 OFFCURVE",
"1626 702 CURVE SMOOTH",
"1626 0 LINE",
"1680 0 LINE",
"1680 706 LINE SMOOTH",
"1678.667 970 OFFCURVE",
"1566.333 1102 OFFCURVE",
"1333 1102 CURVE SMOOTH",
"1154.333 1102 OFFCURVE",
"999 1002 OFFCURVE",
"935 846 CURVE",
"899 1027.333 OFFCURVE",
"780.333 1102 OFFCURVE",
"599 1102 CURVE SMOOTH",
"433.667 1102 OFFCURVE",
"289.333 1002 OFFCURVE",
"216 826 CURVE",
"216 1082 LINE",
"161 1082 LINE",
"161 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1836;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"133 0 LINE",
"273 790 LINE",
"335 893 OFFCURVE",
"428 945 OFFCURVE",
"549 945 CURVE SMOOTH",
"703 945 OFFCURVE",
"766 866 OFFCURVE",
"738 709 CURVE SMOOTH",
"613 0 LINE",
"799 0 LINE",
"926 718 LINE",
"965 857 OFFCURVE",
"1079 945 OFFCURVE",
"1216 945 CURVE SMOOTH",
"1383 945 OFFCURVE",
"1433 869 OFFCURVE",
"1406 714 CURVE SMOOTH",
"1280 0 LINE",
"1465 0 LINE",
"1593 725 LINE SMOOTH",
"1633 976 OFFCURVE",
"1535 1102 OFFCURVE",
"1298 1102 CURVE SMOOTH",
"1140 1102 OFFCURVE",
"1012 1032 OFFCURVE",
"922 928 CURVE",
"888 1044 OFFCURVE",
"795 1102 OFFCURVE",
"644 1102 CURVE SMOOTH",
"509 1102 OFFCURVE",
"394 1055 OFFCURVE",
"298 962 CURVE",
"314 1082 LINE",
"139 1082 LINE",
"-52 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1795;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"25 0 LINE",
"146 684 LINE",
"217 878 OFFCURVE",
"386 1049 OFFCURVE",
"590 1049 CURVE SMOOTH",
"796 1049 OFFCURVE",
"866 944 OFFCURVE",
"829 727 CURVE SMOOTH",
"701 0 LINE",
"755 0 LINE",
"882 720 LINE",
"912 840 OFFCURVE",
"1073 1045 OFFCURVE",
"1324 1049 CURVE SMOOTH",
"1529 1052 OFFCURVE",
"1601 939 OFFCURVE",
"1559 702 CURVE SMOOTH",
"1435 0 LINE",
"1489 0 LINE",
"1614 706 LINE SMOOTH",
"1659 970 OFFCURVE",
"1570 1102 OFFCURVE",
"1337 1102 CURVE SMOOTH",
"1158 1102 OFFCURVE",
"985 1002 OFFCURVE",
"893 846 CURVE",
"889 1027 OFFCURVE",
"784 1102 OFFCURVE",
"603 1102 CURVE SMOOTH",
"437 1102 OFFCURVE",
"275 1002 OFFCURVE",
"171 826 CURVE",
"216 1082 LINE",
"161 1082 LINE",
"-30 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 8 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1836;
}
);
leftKerningGroup = m;
note = uni006D;
rightKerningGroup = h;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"394 0 LINE",
"394 763 LINE",
"434.667 832.333 OFFCURVE",
"495.667 867 OFFCURVE",
"577 867 CURVE SMOOTH",
"701 867 OFFCURVE",
"750 814.667 OFFCURVE",
"750 692 CURVE SMOOTH",
"750 0 LINE",
"1039 0 LINE",
"1039 699 LINE SMOOTH",
"1036.333 967 OFFCURVE",
"926.333 1102 OFFCURVE",
"697 1102 CURVE SMOOTH",
"567 1102 OFFCURVE",
"463.333 1053.667 OFFCURVE",
"386 957 CURVE",
"377 1082 LINE",
"105 1082 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1147;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"325 0 LINE",
"325 771 LINE",
"375.667 875 OFFCURVE",
"469 945 OFFCURVE",
"589 945 CURVE SMOOTH",
"737 945 OFFCURVE",
"804.667 872 OFFCURVE",
"806 716 CURVE SMOOTH",
"806 0 LINE",
"991 0 LINE",
"991 715 LINE SMOOTH",
"989 973 OFFCURVE",
"873.667 1102 OFFCURVE",
"645 1102 CURVE SMOOTH",
"511.667 1102 OFFCURVE",
"403.667 1050 OFFCURVE",
"321 946 CURVE",
"315 1082 LINE",
"140 1082 LINE",
"140 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"226 0 LINE",
"226 693 LINE",
"274 902.333 OFFCURVE",
"420.333 1049 OFFCURVE",
"607 1049 CURVE SMOOTH",
"809.667 1049 OFFCURVE",
"898.667 940 OFFCURVE",
"900 708 CURVE SMOOTH",
"900 0 LINE",
"954 0 LINE",
"954 706 LINE SMOOTH",
"952.667 971.333 OFFCURVE",
"842 1102 OFFCURVE",
"610 1102 CURVE SMOOTH",
"443.333 1102 OFFCURVE",
"296.667 998 OFFCURVE",
"226 830 CURVE",
"226 1082 LINE",
"172 1082 LINE",
"172 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"134 0 LINE",
"270 771 LINE",
"339 875 OFFCURVE",
"445 945 OFFCURVE",
"565 945 CURVE SMOOTH",
"713 945 OFFCURVE",
"768 872 OFFCURVE",
"741 716 CURVE SMOOTH",
"615 0 LINE",
"800 0 LINE",
"926 715 LINE SMOOTH",
"970 973 OFFCURVE",
"877 1102 OFFCURVE",
"649 1102 CURVE SMOOTH",
"515 1102 OFFCURVE",
"398 1050 OFFCURVE",
"297 946 CURVE",
"315 1082 LINE",
"140 1082 LINE",
"-51 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1130;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"157 693 LINE",
"242 902 OFFCURVE",
"415 1049 OFFCURVE",
"601 1049 CURVE SMOOTH",
"804 1049 OFFCURVE",
"874 940 OFFCURVE",
"834 708 CURVE SMOOTH",
"709 0 LINE",
"763 0 LINE",
"888 706 LINE SMOOTH",
"933 971 OFFCURVE",
"846 1102 OFFCURVE",
"614 1102 CURVE SMOOTH",
"447 1102 OFFCURVE",
"282 998 OFFCURVE",
"182 830 CURVE",
"226 1082 LINE",
"172 1082 LINE",
"-19 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
11 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 3 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
11 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
leftKerningGroup = m;
note = uni006E;
rightKerningGroup = h;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"891 -20 OFFCURVE",
"1091 198 OFFCURVE",
"1091 530 CURVE SMOOTH",
"1067.667 910.667 OFFCURVE",
"869 1102 OFFCURVE",
"577 1102 CURVE SMOOTH",
"203.123 1100.954 OFFCURVE",
"66 818 OFFCURVE",
"66 538 CURVE SMOOTH",
"66 194 OFFCURVE",
"267 -20 OFFCURVE",
"579 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"435 213 OFFCURVE",
"355 324.667 OFFCURVE",
"355 530 CURVE SMOOTH",
"355 760.667 OFFCURVE",
"435.667 868 OFFCURVE",
"577 868 CURVE SMOOTH",
"719.667 868 OFFCURVE",
"802 752.333 OFFCURVE",
"802 551 CURVE SMOOTH",
"802 315 OFFCURVE",
"719 213 OFFCURVE",
"579 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1158;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"895 -20 OFFCURVE",
"1076 223 OFFCURVE",
"1076 529 CURVE SMOOTH",
"1076 880.667 OFFCURVE",
"876.667 1102 OFFCURVE",
"582 1102 CURVE SMOOTH",
"275 1102 OFFCURVE",
"91 856 OFFCURVE",
"91 551 CURVE SMOOTH",
"91 202 OFFCURVE",
"290.667 -20 OFFCURVE",
"584 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"397.333 131 OFFCURVE",
"277 289 OFFCURVE",
"277 529 CURVE SMOOTH",
"277 799.667 OFFCURVE",
"399.333 950 OFFCURVE",
"582 950 CURVE SMOOTH",
"768.667 950 OFFCURVE",
"891 788.333 OFFCURVE",
"891 551 CURVE SMOOTH",
"891 285.667 OFFCURVE",
"772 131 OFFCURVE",
"584 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1168;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"865 -20 OFFCURVE",
"1037 226 OFFCURVE",
"1037 568 CURVE SMOOTH",
"1037 868 OFFCURVE",
"853 1102 OFFCURVE",
"563 1102 CURVE SMOOTH",
"267 1102 OFFCURVE",
"90 858 OFFCURVE",
"90 562 CURVE SMOOTH",
"94 140 OFFCURVE",
"411 -20 OFFCURVE",
"565 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"386 34 OFFCURVE",
"144 228 OFFCURVE",
"144 552 CURVE SMOOTH",
"144 837.333 OFFCURVE",
"316.333 1048 OFFCURVE",
"563 1048 CURVE SMOOTH",
"824 1048 OFFCURVE",
"983 818 OFFCURVE",
"983 562 CURVE SMOOTH",
"983 239 OFFCURVE",
"812 34 OFFCURVE",
"565 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"701 -20 OFFCURVE",
"925 223 OFFCURVE",
"978 529 CURVE SMOOTH",
"1040 881 OFFCURVE",
"880 1102 OFFCURVE",
"586 1102 CURVE SMOOTH",
"279 1102 OFFCURVE",
"51 856 OFFCURVE",
"-3 551 CURVE SMOOTH",
"-64 202 OFFCURVE",
"96 -20 OFFCURVE",
"390 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 131 OFFCURVE",
"137 289 OFFCURVE",
"179 529 CURVE SMOOTH",
"227 800 OFFCURVE",
"376 950 OFFCURVE",
"559 950 CURVE SMOOTH",
"745 950 OFFCURVE",
"839 788 OFFCURVE",
"797 551 CURVE SMOOTH",
"751 286 OFFCURVE",
"604 131 OFFCURVE",
"416 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1168;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"671 -20 OFFCURVE",
"886 226 OFFCURVE",
"946 568 CURVE SMOOTH",
"999 868 OFFCURVE",
"857 1102 OFFCURVE",
"567 1102 CURVE SMOOTH",
"271 1102 OFFCURVE",
"51 858 OFFCURVE",
"-2 562 CURVE SMOOTH",
"-72 140 OFFCURVE",
"217 -20 OFFCURVE",
"371 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"201 34 OFFCURVE",
"-7 228 OFFCURVE",
"51 552 CURVE SMOOTH",
"101 837 OFFCURVE",
"310 1048 OFFCURVE",
"557 1048 CURVE SMOOTH",
"818 1048 OFFCURVE",
"936 818 OFFCURVE",
"891 562 CURVE SMOOTH",
"834 239 OFFCURVE",
"627 34 OFFCURVE",
"380 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
12 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
leftKerningGroup = o;
note = uni006F;
rightKerningGroup = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"400 -416 LINE",
"400 94 LINE",
"467.333 18 OFFCURVE",
"555.667 -20 OFFCURVE",
"665 -20 CURVE SMOOTH",
"922.333 -20 OFFCURVE",
"1085 197.667 OFFCURVE",
"1085 531 CURVE SMOOTH",
"1085 546 LINE SMOOTH",
"1085 892.667 OFFCURVE",
"929.667 1102 OFFCURVE",
"663 1102 CURVE SMOOTH",
"550.333 1102 OFFCURVE",
"459 1060 OFFCURVE",
"389 976 CURVE",
"379 1082 LINE",
"111 1082 LINE",
"111 -416 LINE"
);
},
{
closed = 1;
nodes = (
"498.333 213 OFFCURVE",
"435.333 248.667 OFFCURVE",
"400 320 CURVE",
"400 763 LINE",
"434 832.333 OFFCURVE",
"496.333 867 OFFCURVE",
"587 867 CURVE SMOOTH",
"723 867 OFFCURVE",
"796 753.333 OFFCURVE",
"796 552 CURVE SMOOTH",
"796 326 OFFCURVE",
"727 213 OFFCURVE",
"589 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1153;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"325 -416 LINE",
"325 105 LINE",
"400.333 21.667 OFFCURVE",
"503.667 -20 OFFCURVE",
"635 -20 CURVE SMOOTH",
"892.333 -20 OFFCURVE",
"1054 199.667 OFFCURVE",
"1054 529 CURVE SMOOTH",
"1054 546 LINE SMOOTH",
"1054 895.333 OFFCURVE",
"892 1102 OFFCURVE",
"632 1102 CURVE SMOOTH",
"498 1102 OFFCURVE",
"393.333 1055.333 OFFCURVE",
"318 962 CURVE",
"309 1082 LINE",
"140 1082 LINE",
"140 -416 LINE"
);
},
{
closed = 1;
nodes = (
"465 131 OFFCURVE",
"380.333 180.333 OFFCURVE",
"325 279 CURVE",
"325 796 LINE",
"381 895.333 OFFCURVE",
"465 945 OFFCURVE",
"577 945 CURVE SMOOTH",
"758.333 945 OFFCURVE",
"869 794 OFFCURVE",
"869 550 CURVE SMOOTH",
"869 272.667 OFFCURVE",
"756.333 131 OFFCURVE",
"579 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"224 -416 LINE",
"224 168 LINE",
"296 50.667 OFFCURVE",
"429 -20 OFFCURVE",
"593 -20 CURVE SMOOTH",
"843.667 -20 OFFCURVE",
"999 193.667 OFFCURVE",
"999 531 CURVE SMOOTH",
"999 548 LINE SMOOTH",
"999 898.667 OFFCURVE",
"844.333 1102 OFFCURVE",
"591 1102 CURVE SMOOTH",
"429.667 1102 OFFCURVE",
"298.667 1026.333 OFFCURVE",
"224 889 CURVE",
"224 1082 LINE",
"170 1082 LINE",
"170 -416 LINE"
);
},
{
closed = 1;
nodes = (
"411.333 34 OFFCURVE",
"280 119.667 OFFCURVE",
"224 269 CURVE",
"224 775 LINE",
"280 951 OFFCURVE",
"410.667 1048 OFFCURVE",
"592 1048 CURVE SMOOTH",
"814.667 1048 OFFCURVE",
"944 862.667 OFFCURVE",
"944 552 CURVE SMOOTH",
"944 213.333 OFFCURVE",
"815.333 34 OFFCURVE",
"594 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"61 -416 LINE",
"153 105 LINE",
"213 22 OFFCURVE",
"309 -20 OFFCURVE",
"441 -20 CURVE SMOOTH",
"698 -20 OFFCURVE",
"898 200 OFFCURVE",
"956 529 CURVE SMOOTH",
"959 546 LINE SMOOTH",
"1021 895 OFFCURVE",
"896 1102 OFFCURVE",
"636 1102 CURVE SMOOTH",
"502 1102 OFFCURVE",
"389 1055 OFFCURVE",
"297 962 CURVE",
"309 1082 LINE",
"140 1082 LINE",
"-124 -416 LINE"
);
},
{
closed = 1;
nodes = (
"297 131 OFFCURVE",
"221 180 OFFCURVE",
"183 279 CURVE",
"275 796 LINE",
"348 895 OFFCURVE",
"441 945 OFFCURVE",
"553 945 CURVE SMOOTH",
"734 945 OFFCURVE",
"818 794 OFFCURVE",
"775 550 CURVE SMOOTH",
"726 273 OFFCURVE",
"589 131 OFFCURVE",
"411 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-40 -416 LINE",
"63 168 LINE",
"114 51 OFFCURVE",
"235 -20 OFFCURVE",
"399 -20 CURVE SMOOTH",
"649 -20 OFFCURVE",
"842 194 OFFCURVE",
"902 531 CURVE SMOOTH",
"905 548 LINE SMOOTH",
"967 899 OFFCURVE",
"848 1102 OFFCURVE",
"595 1102 CURVE SMOOTH",
"433 1102 OFFCURVE",
"289 1026 OFFCURVE",
"190 889 CURVE",
"224 1082 LINE",
"170 1082 LINE",
"-94 -416 LINE"
);
},
{
closed = 1;
nodes = (
"227 34 OFFCURVE",
"110 120 OFFCURVE",
"81 269 CURVE",
"170 775 LINE",
"257 951 OFFCURVE",
"405 1048 OFFCURVE",
"586 1048 CURVE SMOOTH",
"809 1048 OFFCURVE",
"905 863 OFFCURVE",
"851 552 CURVE SMOOTH",
"791 213 OFFCURVE",
"631 34 OFFCURVE",
"409 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
leftKerningGroup = m;
note = uni0070;
rightKerningGroup = b;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1041 -416 LINE",
"1041 1082 LINE",
"787 1082 LINE",
"768 969 LINE",
"699 1058 OFFCURVE",
"607 1102 OFFCURVE",
"491 1102 CURVE SMOOTH",
"227 1102 OFFCURVE",
"66 891 OFFCURVE",
"66 551 CURVE SMOOTH",
"66 252 OFFCURVE",
"183 -20 OFFCURVE",
"489 -20 CURVE SMOOTH",
"597 -20 OFFCURVE",
"684.333 17.667 OFFCURVE",
"751 93 CURVE",
"751 -416 LINE"
);
},
{
closed = 1;
nodes = (
"431 213 OFFCURVE",
"355 323.333 OFFCURVE",
"355 530 CURVE SMOOTH",
"355 764.667 OFFCURVE",
"431.667 868 OFFCURVE",
"565 868 CURVE SMOOTH",
"653 868 OFFCURVE",
"715 834 OFFCURVE",
"751 766 CURVE",
"751 319 LINE",
"714.333 248.333 OFFCURVE",
"651.667 213 OFFCURVE",
"563 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1157;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1007 -416 LINE",
"1007 1082 LINE",
"837 1082 LINE",
"829 973 LINE",
"755 1059 OFFCURVE",
"654 1102 OFFCURVE",
"526 1102 CURVE SMOOTH",
"263.333 1102 OFFCURVE",
"95 890 OFFCURVE",
"95 550 CURVE SMOOTH",
"95 201 OFFCURVE",
"262.667 -20 OFFCURVE",
"524 -20 CURVE SMOOTH",
"648 -20 OFFCURVE",
"747.333 20 OFFCURVE",
"822 100 CURVE",
"822 -416 LINE"
);
},
{
closed = 1;
nodes = (
"392.667 131 OFFCURVE",
"280 281 OFFCURVE",
"280 529 CURVE SMOOTH",
"280 806.333 OFFCURVE",
"393.333 950 OFFCURVE",
"572 950 CURVE SMOOTH",
"680 950 OFFCURVE",
"763.333 902.333 OFFCURVE",
"822 807 CURVE",
"822 277 LINE",
"764 179.667 OFFCURVE",
"680 131 OFFCURVE",
"570 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"951 -416 LINE",
"951 1082 LINE",
"897 1082 LINE",
"897 889 LINE",
"822.333 1026.333 OFFCURVE",
"691.333 1102 OFFCURVE",
"530 1102 CURVE SMOOTH",
"276.667 1102 OFFCURVE",
"122 897.333 OFFCURVE",
"122 552 CURVE SMOOTH",
"122 191.333 OFFCURVE",
"277.333 -20 OFFCURVE",
"528 -20 CURVE SMOOTH",
"688 -20 OFFCURVE",
"819.667 46.667 OFFCURVE",
"897 168 CURVE",
"897 -416 LINE"
);
},
{
closed = 1;
nodes = (
"304.333 34 OFFCURVE",
"178 224.333 OFFCURVE",
"178 531 CURVE SMOOTH",
"178 871 OFFCURVE",
"307.667 1048 OFFCURVE",
"529 1048 CURVE SMOOTH",
"703.667 1048 OFFCURVE",
"834.333 955 OFFCURVE",
"897 775 CURVE",
"897 268 LINE",
"835.667 114.667 OFFCURVE",
"705.667 34 OFFCURVE",
"527 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"743 -416 LINE",
"1007 1082 LINE",
"837 1082 LINE",
"810 973 LINE",
"751 1059 OFFCURVE",
"658 1102 OFFCURVE",
"530 1102 CURVE SMOOTH",
"267 1102 OFFCURVE",
"61 890 OFFCURVE",
"1 550 CURVE SMOOTH",
"-60 201 OFFCURVE",
"68 -20 OFFCURVE",
"330 -20 CURVE SMOOTH",
"454 -20 OFFCURVE",
"560 20 OFFCURVE",
"649 100 CURVE",
"558 -416 LINE"
);
},
{
closed = 1;
nodes = (
"225 131 OFFCURVE",
"139 281 OFFCURVE",
"182 529 CURVE SMOOTH",
"231 806 OFFCURVE",
"370 950 OFFCURVE",
"549 950 CURVE SMOOTH",
"657 950 OFFCURVE",
"732 902 OFFCURVE",
"774 807 CURVE",
"680 277 LINE",
"605 180 OFFCURVE",
"512 131 OFFCURVE",
"402 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1164;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"687 -416 LINE",
"951 1082 LINE",
"897 1082 LINE",
"863 889 LINE",
"813 1026 OFFCURVE",
"695 1102 OFFCURVE",
"534 1102 CURVE SMOOTH",
"280 1102 OFFCURVE",
"89 897 OFFCURVE",
"29 552 CURVE SMOOTH",
"-35 191 OFFCURVE",
"83 -20 OFFCURVE",
"334 -20 CURVE SMOOTH",
"494 -20 OFFCURVE",
"637 47 OFFCURVE",
"736 168 CURVE",
"633 -416 LINE"
);
},
{
closed = 1;
nodes = (
"120 34 OFFCURVE",
"27 224 OFFCURVE",
"81 531 CURVE SMOOTH",
"141 871 OFFCURVE",
"302 1048 OFFCURVE",
"523 1048 CURVE SMOOTH",
"698 1048 OFFCURVE",
"812 955 OFFCURVE",
"843 775 CURVE",
"753 268 LINE",
"665 115 OFFCURVE",
"521 34 OFFCURVE",
"342 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
leftKerningGroup = c;
note = uni0071;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"400 0 LINE",
"400 708 LINE",
"434 782 OFFCURVE",
"505.667 819 OFFCURVE",
"615 819 CURVE",
"719 811 LINE",
"723 1089 LINE",
"695 1097.667 OFFCURVE",
"665 1102 OFFCURVE",
"633 1102 CURVE SMOOTH",
"530.333 1102 OFFCURVE",
"450 1052.333 OFFCURVE",
"392 953 CURVE",
"384 1082 LINE",
"111 1082 LINE",
"111 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 11 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 747;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"325 0 LINE",
"325 768 LINE",
"368.333 871.333 OFFCURVE",
"450.667 923 OFFCURVE",
"572 923 CURVE",
"663 916 LINE",
"663 1088 LINE",
"644.333 1097.333 OFFCURVE",
"617 1102 OFFCURVE",
"581 1102 CURVE SMOOTH",
"469.667 1102 OFFCURVE",
"383.667 1053.667 OFFCURVE",
"323 957 CURVE",
"320 1082 LINE",
"140 1082 LINE",
"140 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 11 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"226 0 LINE",
"226 709 LINE",
"264.667 923.667 OFFCURVE",
"395 1049 OFFCURVE",
"579 1049 CURVE",
"649 1043 LINE",
"655 1091 LINE",
"635.667 1098.333 OFFCURVE",
"610.333 1102 OFFCURVE",
"579 1102 CURVE SMOOTH",
"401.667 1102 OFFCURVE",
"284.667 1007.667 OFFCURVE",
"226 857 CURVE",
"226 1082 LINE",
"172 1082 LINE",
"172 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 11 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 685;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"134 0 LINE",
"270 768 LINE",
"331 871 OFFCURVE",
"423 923 OFFCURVE",
"544 923 CURVE",
"634 916 LINE",
"664 1088 LINE",
"647 1097 OFFCURVE",
"621 1102 OFFCURVE",
"585 1102 CURVE SMOOTH",
"473 1102 OFFCURVE",
"379 1054 OFFCURVE",
"301 957 CURVE",
"320 1082 LINE",
"140 1082 LINE",
"-51 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 11 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"35 0 LINE",
"160 709 LINE",
"237 924 OFFCURVE",
"389 1049 OFFCURVE",
"573 1049 CURVE",
"642 1043 LINE",
"657 1091 LINE",
"639 1098 OFFCURVE",
"614 1102 OFFCURVE",
"583 1102 CURVE SMOOTH",
"405 1102 OFFCURVE",
"272 1008 OFFCURVE",
"186 857 CURVE",
"226 1082 LINE",
"172 1082 LINE",
"-19 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 11 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 685;
}
);
note = uni0072;
rightKerningGroup = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"791 -20 OFFCURVE",
"978 113.667 OFFCURVE",
"978 311 CURVE SMOOTH",
"978 449 OFFCURVE",
"901.667 546 OFFCURVE",
"749 602 CURVE SMOOTH",
"634 644 OFFCURVE",
"368 655 OFFCURVE",
"368 779 CURVE",
"368 847 OFFCURVE",
"423.667 896 OFFCURVE",
"521 896 CURVE SMOOTH",
"634.333 896 OFFCURVE",
"686 835.667 OFFCURVE",
"686 753 CURVE",
"975 753 LINE",
"975 959.667 OFFCURVE",
"796.667 1102 OFFCURVE",
"522 1102 CURVE SMOOTH",
"264.667 1102 OFFCURVE",
"90 957 OFFCURVE",
"90 765 CURVE",
"90 600.333 OFFCURVE",
"218.667 491 OFFCURVE",
"476 437 CURVE SMOOTH",
"565 419 OFFCURVE",
"697 392 OFFCURVE",
"697 299 CURVE SMOOTH",
"697 231 OFFCURVE",
"639.667 185 OFFCURVE",
"529 185 CURVE SMOOTH",
"410.333 185 OFFCURVE",
"335.333 241.333 OFFCURVE",
"330 344 CURVE",
"56 344 LINE",
"56 115 OFFCURVE",
"286 -20 OFFCURVE",
"523 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1053;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"784.667 -20 OFFCURVE",
"955 106.667 OFFCURVE",
"955 300 CURVE SMOOTH",
"955 512 OFFCURVE",
"755 582 OFFCURVE",
"561.5 625 CURVE SMOOTH",
"451 650 OFFCURVE",
"317 677 OFFCURVE",
"317 791 CURVE SMOOTH",
"317 885.667 OFFCURVE",
"397.333 950 OFFCURVE",
"532 950 CURVE SMOOTH",
"662.667 950 OFFCURVE",
"759 865.333 OFFCURVE",
"759 764 CURVE",
"945 764 LINE",
"945 961.333 OFFCURVE",
"777.333 1102 OFFCURVE",
"532 1102 CURVE SMOOTH",
"298.667 1102 OFFCURVE",
"132 962.333 OFFCURVE",
"132 785 CURVE SMOOTH",
"132 582 OFFCURVE",
"330 515 OFFCURVE",
"516.5 475 CURVE SMOOTH",
"703.833 435 OFFCURVE",
"770 387 OFFCURVE",
"770 287 CURVE SMOOTH",
"770 192.333 OFFCURVE",
"678 131 OFFCURVE",
"538 131 CURVE SMOOTH",
"386 131 OFFCURVE",
"286.667 209 OFFCURVE",
"280 333 CURVE",
"95 333 LINE",
"95 110 OFFCURVE",
"307 -20 OFFCURVE",
"538 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"739.667 -20 OFFCURVE",
"893 93.333 OFFCURVE",
"893 264 CURVE SMOOTH",
"893 469 OFFCURVE",
"720 534 OFFCURVE",
"533 577 CURVE SMOOTH",
"364 616 OFFCURVE",
"197 658 OFFCURVE",
"197 831 CURVE SMOOTH",
"197 955 OFFCURVE",
"315.667 1048 OFFCURVE",
"505 1048 CURVE SMOOTH",
"702.333 1048 OFFCURVE",
"837 938.333 OFFCURVE",
"837 793 CURVE",
"892 793 LINE",
"892 982.333 OFFCURVE",
"738.333 1102 OFFCURVE",
"505 1102 CURVE SMOOTH",
"290.333 1102 OFFCURVE",
"143 987.667 OFFCURVE",
"143 829 CURVE SMOOTH",
"143 671.667 OFFCURVE",
"233.667 590.333 OFFCURVE",
"503 533 CURVE SMOOTH",
"727 485.667 OFFCURVE",
"839 396.333 OFFCURVE",
"839 265 CURVE SMOOTH",
"839 137 OFFCURVE",
"706.333 34 OFFCURVE",
"513 34 CURVE SMOOTH",
"302.333 34 OFFCURVE",
"172.667 123 OFFCURVE",
"162 275 CURVE",
"108 275 LINE",
"108 101.667 OFFCURVE",
"270.333 -20 OFFCURVE",
"513 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1019;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"590 -20 OFFCURVE",
"783 107 OFFCURVE",
"817 300 CURVE SMOOTH",
"854 512 OFFCURVE",
"667 582 OFFCURVE",
"481 625 CURVE SMOOTH",
"375 650 OFFCURVE",
"246 677 OFFCURVE",
"266 791 CURVE SMOOTH",
"282 886 OFFCURVE",
"374 950 OFFCURVE",
"509 950 CURVE SMOOTH",
"639 950 OFFCURVE",
"721 865 OFFCURVE",
"703 764 CURVE",
"889 764 LINE",
"924 961 OFFCURVE",
"781 1102 OFFCURVE",
"536 1102 CURVE SMOOTH",
"302 1102 OFFCURVE",
"111 962 OFFCURVE",
"80 785 CURVE SMOOTH",
"44 582 OFFCURVE",
"230 515 OFFCURVE",
"409 475 CURVE SMOOTH",
"590 435 OFFCURVE",
"647 387 OFFCURVE",
"630 287 CURVE SMOOTH",
"613 192 OFFCURVE",
"510 131 OFFCURVE",
"370 131 CURVE SMOOTH",
"218 131 OFFCURVE",
"133 209 OFFCURVE",
"148 333 CURVE",
"-37 333 LINE",
"-76 110 OFFCURVE",
"113 -20 OFFCURVE",
"344 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"545 -20 OFFCURVE",
"719 93 OFFCURVE",
"749 264 CURVE SMOOTH",
"785 469 OFFCURVE",
"623 534 OFFCURVE",
"444 577 CURVE SMOOTH",
"282 616 OFFCURVE",
"122 658 OFFCURVE",
"153 831 CURVE SMOOTH",
"175 955 OFFCURVE",
"310 1048 OFFCURVE",
"499 1048 CURVE SMOOTH",
"696 1048 OFFCURVE",
"812 938 OFFCURVE",
"786 793 CURVE",
"841 793 LINE",
"874 982 OFFCURVE",
"742 1102 OFFCURVE",
"509 1102 CURVE SMOOTH",
"294 1102 OFFCURVE",
"126 988 OFFCURVE",
"98 829 CURVE SMOOTH",
"71 672 OFFCURVE",
"147 590 OFFCURVE",
"406 533 CURVE SMOOTH",
"622 486 OFFCURVE",
"718 396 OFFCURVE",
"695 265 CURVE SMOOTH",
"672 137 OFFCURVE",
"522 34 OFFCURVE",
"328 34 CURVE SMOOTH",
"118 34 OFFCURVE",
"4 123 OFFCURVE",
"20 275 CURVE",
"-34 275 LINE",
"-65 102 OFFCURVE",
"76 -20 OFFCURVE",
"319 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
28 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 28 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
36 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1019;
}
);
leftKerningGroup = s;
note = uni0073;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"538 -20 OFFCURVE",
"596.333 -11.333 OFFCURVE",
"653 6 CURVE",
"653 225 LINE",
"628.333 220.333 OFFCURVE",
"600 218 OFFCURVE",
"568 218 CURVE SMOOTH",
"481.333 218 OFFCURVE",
"457 250 OFFCURVE",
"457 330 CURVE SMOOTH",
"457 870 LINE",
"642 870 LINE",
"642 1082 LINE",
"457 1082 LINE",
"457 1348 LINE",
"168 1348 LINE",
"168 1082 LINE",
"10 1082 LINE",
"10 870 LINE",
"168 870 LINE",
"168 287 LINE SMOOTH",
"172 82.333 OFFCURVE",
"275.333 -20 OFFCURVE",
"478 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 692;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"502 -20 OFFCURVE",
"549.333 -13.333 OFFCURVE",
"598 0 CURVE",
"598 150 LINE",
"560.667 142 OFFCURVE",
"531.333 138 OFFCURVE",
"510 138 CURVE SMOOTH",
"423.333 138 OFFCURVE",
"391 181.333 OFFCURVE",
"391 268 CURVE SMOOTH",
"391 939 LINE",
"593 939 LINE",
"593 1082 LINE",
"391 1082 LINE",
"391 1344 LINE",
"206 1344 LINE",
"206 1082 LINE",
"9 1082 LINE",
"9 939 LINE",
"206 939 LINE",
"206 268 LINE SMOOTH",
"206 84 OFFCURVE",
"290.667 -20 OFFCURVE",
"456 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 669;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"512.333 -20 OFFCURVE",
"550 -16 OFFCURVE",
"572 -8 CURVE",
"563 43 LINE",
"521 37 OFFCURVE",
"485.333 34 OFFCURVE",
"456 34 CURVE SMOOTH",
"338.667 34 OFFCURVE",
"293 105.667 OFFCURVE",
"293 259 CURVE SMOOTH",
"293 1027 LINE",
"539 1027 LINE",
"539 1082 LINE",
"293 1082 LINE",
"293 1374 LINE",
"238 1374 LINE",
"238 1082 LINE",
"38 1082 LINE",
"38 1027 LINE",
"238 1027 LINE",
"238 252 LINE SMOOTH",
"239.333 64 OFFCURVE",
"301.667 -20 OFFCURVE",
"459 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 648;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"308 -20 OFFCURVE",
"356 -13 OFFCURVE",
"407 0 CURVE",
"434 150 LINE",
"395 142 OFFCURVE",
"365 138 OFFCURVE",
"344 138 CURVE SMOOTH",
"257 138 OFFCURVE",
"232 181 OFFCURVE",
"247 268 CURVE SMOOTH",
"366 939 LINE",
"568 939 LINE",
"593 1082 LINE",
"391 1082 LINE",
"437 1344 LINE",
"252 1344 LINE",
"206 1082 LINE",
"9 1082 LINE",
"-16 939 LINE",
"181 939 LINE",
"62 268 LINE SMOOTH",
"30 84 OFFCURVE",
"96 -20 OFFCURVE",
"262 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 669;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"318 -20 OFFCURVE",
"356 -16 OFFCURVE",
"380 -8 CURVE",
"380 43 LINE",
"337 37 OFFCURVE",
"301 34 OFFCURVE",
"271 34 CURVE SMOOTH",
"154 34 OFFCURVE",
"121 106 OFFCURVE",
"148 259 CURVE SMOOTH",
"283 1027 LINE",
"529 1027 LINE",
"539 1082 LINE",
"293 1082 LINE",
"344 1374 LINE",
"289 1374 LINE",
"238 1082 LINE",
"38 1082 LINE",
"28 1027 LINE",
"228 1027 LINE",
"92 252 LINE SMOOTH",
"60 64 OFFCURVE",
"107 -20 OFFCURVE",
"265 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 648;
}
);
note = uni0074;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"589 -20 OFFCURVE",
"687.667 23.333 OFFCURVE",
"759 110 CURVE",
"767 0 LINE",
"1039 0 LINE",
"1039 1082 LINE",
"749 1082 LINE",
"749 316 LINE",
"712.333 248 OFFCURVE",
"645 214 OFFCURVE",
"547 214 CURVE SMOOTH",
"444.333 214 OFFCURVE",
"393 270.333 OFFCURVE",
"393 383 CURVE SMOOTH",
"393 1082 LINE",
"104 1082 LINE",
"104 373 LINE SMOOTH",
"106.667 115.667 OFFCURVE",
"231 -20 OFFCURVE",
"463 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1146;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"630.333 -20 OFFCURVE",
"736 22.333 OFFCURVE",
"808 107 CURVE",
"812 0 LINE",
"988 0 LINE",
"988 1082 LINE",
"803 1082 LINE",
"803 295 LINE",
"756.333 189.667 OFFCURVE",
"662.333 137 OFFCURVE",
"521 137 CURVE SMOOTH",
"387.667 137 OFFCURVE",
"321 219 OFFCURVE",
"321 383 CURVE SMOOTH",
"321 1082 LINE",
"136 1082 LINE",
"136 378 LINE SMOOTH",
"137.333 115.333 OFFCURVE",
"260.333 -20 OFFCURVE",
"491 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"712 -20 OFFCURVE",
"833 55 OFFCURVE",
"897 175 CURVE",
"897 0 LINE",
"952 0 LINE",
"952 1082 LINE",
"897 1082 LINE",
"897 321 LINE",
"862.333 133 OFFCURVE",
"728.667 34 OFFCURVE",
"522 34 CURVE SMOOTH",
"327.333 34 OFFCURVE",
"224.667 153.667 OFFCURVE",
"222 383 CURVE SMOOTH",
"222 1082 LINE",
"168 1082 LINE",
"168 385 LINE SMOOTH",
"170.667 121 OFFCURVE",
"288 -20 OFFCURVE",
"524 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"436 -20 OFFCURVE",
"549 22 OFFCURVE",
"636 107 CURVE",
"621 0 LINE",
"797 0 LINE",
"988 1082 LINE",
"803 1082 LINE",
"664 295 LINE",
"599 190 OFFCURVE",
"496 137 OFFCURVE",
"354 137 CURVE SMOOTH",
"221 137 OFFCURVE",
"169 219 OFFCURVE",
"198 383 CURVE SMOOTH",
"321 1082 LINE",
"136 1082 LINE",
"12 378 LINE SMOOTH",
"-33 115 OFFCURVE",
"66 -20 OFFCURVE",
"297 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"518 -20 OFFCURVE",
"652 55 OFFCURVE",
"737 175 CURVE",
"706 0 LINE",
"761 0 LINE",
"952 1082 LINE",
"897 1082 LINE",
"763 321 LINE",
"695 133 OFFCURVE",
"544 34 OFFCURVE",
"337 34 CURVE SMOOTH",
"143 34 OFFCURVE",
"61 154 OFFCURVE",
"99 383 CURVE SMOOTH",
"222 1082 LINE",
"168 1082 LINE",
"45 385 LINE SMOOTH",
"1 121 OFFCURVE",
"94 -20 OFFCURVE",
"330 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 13 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
leftKerningGroup = u;
note = uni0075;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"654 0 LINE",
"1019 1082 LINE",
"717 1082 LINE",
"516 353 LINE",
"315 1082 LINE",
"13 1082 LINE",
"378 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1035;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"566 0 LINE",
"954 1082 LINE",
"765 1082 LINE",
"497 251 LINE",
"222 1082 LINE",
"33 1082 LINE",
"425 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 992;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"516 0 LINE",
"937 1082 LINE",
"879 1082 LINE",
"490 86 LINE",
"101 1082 LINE",
"43 1082 LINE",
"463 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"375 0 LINE",
"954 1082 LINE",
"765 1082 LINE",
"350 251 LINE",
"222 1082 LINE",
"33 1082 LINE",
"234 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 992;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"325 0 LINE",
"937 1082 LINE",
"879 1082 LINE",
"314 86 LINE",
"101 1082 LINE",
"43 1082 LINE",
"272 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
}
);
leftKerningGroup = v;
note = uni0076;
rightKerningGroup = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"545 0 LINE",
"750 681 LINE",
"955 0 LINE",
"1197 0 LINE",
"1473 1082 LINE",
"1194 1082 LINE",
"1052 393 LINE",
"855 1082 LINE",
"646 1082 LINE",
"448 394 LINE",
"307 1082 LINE",
"28 1082 LINE",
"304 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1505;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"507 0 LINE",
"763 820 LINE",
"1026 0 LINE",
"1176 0 LINE",
"1491 1082 LINE",
"1306 1082 LINE",
"1098 255 LINE",
"841 1082 LINE",
"692 1082 LINE",
"440 272 LINE",
"227 1082 LINE",
"43 1082 LINE",
"357 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1539;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"451 0 LINE",
"769 1007 LINE",
"1087 0 LINE",
"1141 0 LINE",
"1456 1082 LINE",
"1393 1082 LINE",
"1112 80 LINE",
"797 1082 LINE",
"742 1082 LINE",
"425 80 LINE",
"145 1082 LINE",
"83 1082 LINE",
"397 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1550;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"316 0 LINE",
"717 820 LINE",
"835 0 LINE",
"985 0 LINE",
"1491 1082 LINE",
"1306 1082 LINE",
"952 255 LINE",
"841 1082 LINE",
"692 1082 LINE",
"297 272 LINE",
"227 1082 LINE",
"43 1082 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1539;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"260 0 LINE",
"756 1007 LINE",
"896 0 LINE",
"950 0 LINE",
"1456 1082 LINE",
"1393 1082 LINE",
"935 80 LINE",
"797 1082 LINE",
"742 1082 LINE",
"248 80 LINE",
"145 1082 LINE",
"83 1082 LINE",
"206 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
5 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1550;
}
);
note = uni0077;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"332 0 LINE",
"524 340 LINE",
"717 0 LINE",
"1027 0 LINE",
"706 552 LINE",
"1014 1082 LINE",
"705 1082 LINE",
"523 759 LINE",
"345 1082 LINE",
"35 1082 LINE",
"342 552 LINE",
"21 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1042;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"256 0 LINE",
"506 405 LINE",
"756 0 LINE",
"970 0 LINE",
"605 547 LINE",
"959 1082 LINE",
"743 1082 LINE",
"503 687 LINE",
"266 1082 LINE",
"52 1082 LINE",
"406 547 LINE",
"41 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"122 0 LINE",
"488 508 LINE",
"855 0 LINE",
"922 0 LINE",
"522 555 LINE",
"902 1082 LINE",
"834 1082 LINE",
"489 602 LINE",
"143 1082 LINE",
"75 1082 LINE",
"455 555 LINE",
"55 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"65 0 LINE",
"387 405 LINE",
"565 0 LINE",
"779 0 LINE",
"511 547 LINE",
"959 1082 LINE",
"743 1082 LINE",
"433 687 LINE",
"266 1082 LINE",
"52 1082 LINE",
"312 547 LINE",
"-150 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-69 0 LINE",
"387 508 LINE",
"664 0 LINE",
"731 0 LINE",
"429 555 LINE",
"902 1082 LINE",
"834 1082 LINE",
"404 602 LINE",
"143 1082 LINE",
"75 1082 LINE",
"362 555 LINE",
"-136 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
6 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
9 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
}
);
leftKerningGroup = x;
note = uni0078;
rightKerningGroup = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"395 -437 OFFCURVE",
"501.333 -366.333 OFFCURVE",
"566 -225 CURVE SMOOTH",
"1025 1082 LINE",
"715 1082 LINE",
"515 409 LINE",
"314 1082 LINE",
"3 1082 LINE",
"382 -3 LINE {name = \"❌\";}",
"348 -92 LINE SMOOTH",
"317.333 -169.333 OFFCURVE",
"271.333 -200 OFFCURVE",
"118 -199 CURVE",
"118 -418 LINE",
"246 -437 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 14 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1028;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"334.667 -437 OFFCURVE",
"441.667 -347 OFFCURVE",
"509 -167 CURVE",
"944 1082 LINE",
"746 1082 LINE",
"494 271 LINE",
"224 1082 LINE",
"22 1082 LINE",
"408 12 LINE",
"367 -98 LINE SMOOTH",
"321.667 -232.667 OFFCURVE",
"259.333 -275 OFFCURVE",
"84 -271 CURVE",
"84 -421 LINE",
"188 -437 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 14 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"298 -437 OFFCURVE",
"384 -374 OFFCURVE",
"436 -248 CURVE SMOOTH",
"944 1082 LINE",
"884 1082 LINE",
"503 84 LINE",
"102 1082 LINE",
"43 1082 LINE",
"474 6 LINE",
"408 -173 LINE SMOOTH",
"343 -350 OFFCURVE",
"222 -410 OFFCURVE",
"97 -375 CURVE",
"98 -426 LINE",
"178 -437 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 14 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"67 -437 OFFCURVE",
"190 -347 OFFCURVE",
"289 -167 CURVE",
"944 1082 LINE",
"746 1082 LINE",
"351 271 LINE",
"224 1082 LINE",
"22 1082 LINE",
"219 12 LINE",
"159 -98 LINE SMOOTH",
"90 -233 OFFCURVE",
"20 -275 OFFCURVE",
"-155 -271 CURVE",
"-181 -421 LINE",
"-80 -437 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 14 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"30 -437 OFFCURVE",
"127 -374 OFFCURVE",
"201 -248 CURVE SMOOTH",
"944 1082 LINE",
"884 1082 LINE",
"327 84 LINE",
"102 1082 LINE",
"43 1082 LINE",
"284 6 LINE",
"187 -173 LINE SMOOTH",
"90 -350 OFFCURVE",
"-41 -410 OFFCURVE",
"-160 -375 CURVE",
"-168 -426 LINE",
"-90 -437 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 16 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 14 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
}
);
leftKerningGroup = v;
note = uni0079;
rightKerningGroup = v;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"972 0 LINE",
"972 233 LINE",
"443 233 LINE",
"956 911 LINE",
"956 1082 LINE",
"89 1082 LINE",
"89 848 LINE",
"583 848 LINE",
"74 176 LINE",
"74 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1042;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"947 0 LINE",
"947 151 LINE",
"314 151 LINE",
"917 951 LINE",
"917 1082 LINE",
"97 1082 LINE",
"97 929 LINE",
"685 929 LINE",
"88 136 LINE",
"88 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"930 0 LINE",
"930 54 LINE",
"160 54 LINE",
"871 1034 LINE",
"871 1082 LINE",
"118 1082 LINE",
"118 1027 LINE",
"798 1027 LINE",
"87 44 LINE",
"87 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"756 0 LINE",
"783 151 LINE",
"150 151 LINE",
"894 951 LINE",
"917 1082 LINE",
"97 1082 LINE",
"70 929 LINE",
"658 929 LINE",
"-79 136 LINE",
"-103 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"739 0 LINE",
"749 54 LINE",
"-21 54 LINE",
"863 1034 LINE",
"871 1082 LINE",
"118 1082 LINE",
"108 1027 LINE",
"788 1027 LINE",
"-96 44 LINE",
"-104 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 5 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 978;
}
);
leftKerningGroup = z;
note = uni007A;
rightKerningGroup = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"642 -198 LINE",
"541.333 -163.333 OFFCURVE",
"489.333 -68 OFFCURVE",
"486 88 CURVE SMOOTH",
"486 300 LINE SMOOTH",
"486 451.333 OFFCURVE",
"426.333 557.667 OFFCURVE",
"307 619 CURVE",
"426.333 679.667 OFFCURVE",
"486 785.333 OFFCURVE",
"486 936 CURVE SMOOTH",
"486 1146 LINE SMOOTH",
"488.667 1310 OFFCURVE",
"540.667 1398.667 OFFCURVE",
"642 1436 CURVE",
"586 1597 LINE",
"346 1529 OFFCURVE",
"226 1379.667 OFFCURVE",
"226 1133 CURVE SMOOTH",
"226 921 LINE SMOOTH",
"223.333 788.333 OFFCURVE",
"164 722 OFFCURVE",
"48 722 CURVE",
"48 515 LINE",
"166.667 515 OFFCURVE",
"226 444.667 OFFCURVE",
"226 304 CURVE SMOOTH",
"226 105 LINE SMOOTH",
"226 -137.667 OFFCURVE",
"346 -292.667 OFFCURVE",
"586 -360 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 676;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"670 -251 LINE",
"532.667 -207 OFFCURVE",
"463 -93.333 OFFCURVE",
"461 90 CURVE SMOOTH",
"461 296 LINE SMOOTH",
"461 448.667 OFFCURVE",
"405.333 555 OFFCURVE",
"294 615 CURVE",
"405.333 674.333 OFFCURVE",
"461 779.667 OFFCURVE",
"461 931 CURVE SMOOTH",
"461 1133 LINE SMOOTH",
"461 1321 OFFCURVE",
"530.667 1437.333 OFFCURVE",
"670 1482 CURVE",
"632 1597 LINE",
"393.333 1529 OFFCURVE",
"278.667 1382 OFFCURVE",
"276 1138 CURVE SMOOTH",
"276 930 LINE SMOOTH",
"276 768.667 OFFCURVE",
"205.333 688 OFFCURVE",
"64 688 CURVE",
"64 543 LINE",
"205.333 543 OFFCURVE",
"276 462 OFFCURVE",
"276 300 CURVE SMOOTH",
"276 101 LINE SMOOTH",
"276 -149.667 OFFCURVE",
"396 -299.333 OFFCURVE",
"632 -366 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"662 -395 LINE",
"472 -331 OFFCURVE",
"377 -190.667 OFFCURVE",
"377 26 CURVE SMOOTH",
"377 255 LINE SMOOTH",
"377 433.667 OFFCURVE",
"306.667 540.667 OFFCURVE",
"166 576 CURVE",
"306.667 608.667 OFFCURVE",
"377 715.667 OFFCURVE",
"377 897 CURVE SMOOTH",
"377 1125 LINE SMOOTH",
"377 1349 OFFCURVE",
"470.333 1491.333 OFFCURVE",
"657 1552 CURVE",
"642 1597 LINE",
"430 1530.333 OFFCURVE",
"324.333 1382.667 OFFCURVE",
"323 1136 CURVE SMOOTH",
"323 889 LINE SMOOTH",
"323 702.333 OFFCURVE",
"239.667 609 OFFCURVE",
"73 609 CURVE",
"73 543 LINE",
"239.667 543 OFFCURVE",
"323 449 OFFCURVE",
"323 261 CURVE SMOOTH",
"323 20 LINE SMOOTH",
"323 -226.667 OFFCURVE",
"428.667 -374.333 OFFCURVE",
"642 -441 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 660;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"435 -251 LINE",
"305 -207 OFFCURVE",
"256 -93 OFFCURVE",
"286 90 CURVE SMOOTH",
"322 296 LINE SMOOTH",
"349 449 OFFCURVE",
"312 555 OFFCURVE",
"212 615 CURVE",
"333 674 OFFCURVE",
"408 780 OFFCURVE",
"434 931 CURVE SMOOTH",
"470 1133 LINE SMOOTH",
"503 1321 OFFCURVE",
"593 1437 OFFCURVE",
"741 1482 CURVE",
"723 1597 LINE",
"472 1529 OFFCURVE",
"332 1382 OFFCURVE",
"286 1138 CURVE SMOOTH",
"249 930 LINE SMOOTH",
"221 769 OFFCURVE",
"136 688 OFFCURVE",
"-5 688 CURVE",
"-31 543 LINE",
"110 543 OFFCURVE",
"167 462 OFFCURVE",
"138 300 CURVE SMOOTH",
"103 101 LINE SMOOTH",
"59 -150 OFFCURVE",
"152 -299 OFFCURVE",
"377 -366 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"402 -395 LINE",
"223 -331 OFFCURVE",
"153 -191 OFFCURVE",
"191 26 CURVE SMOOTH",
"231 255 LINE SMOOTH",
"263 434 OFFCURVE",
"211 541 OFFCURVE",
"77 576 CURVE",
"223 609 OFFCURVE",
"312 716 OFFCURVE",
"344 897 CURVE SMOOTH",
"385 1125 LINE SMOOTH",
"424 1349 OFFCURVE",
"543 1491 OFFCURVE",
"740 1552 CURVE",
"733 1597 LINE",
"509 1530 OFFCURVE",
"377 1383 OFFCURVE",
"333 1136 CURVE SMOOTH",
"289 889 LINE SMOOTH",
"256 702 OFFCURVE",
"156 609 OFFCURVE",
"-10 609 CURVE",
"-22 543 LINE",
"145 543 OFFCURVE",
"211 449 OFFCURVE",
"178 261 CURVE SMOOTH",
"136 20 LINE SMOOTH",
"92 -227 OFFCURVE",
"172 -374 OFFCURVE",
"373 -441 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
6 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 6 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 660;
}
);
note = uni007B;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"348 -270 LINE",
"348 1456 LINE",
"173 1456 LINE",
"173 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 518;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"324 -270 LINE",
"324 1456 LINE",
"175 1456 LINE",
"175 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 499;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"235 -270 LINE",
"235 1456 LINE",
"181 1456 LINE",
"181 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 406;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"86 -270 LINE",
"390 1456 LINE",
"241 1456 LINE",
"-63 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 499;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-3 -270 LINE",
"301 1456 LINE",
"247 1456 LINE",
"-57 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 406;
}
);
note = uni007C;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"324.667 -294 OFFCURVE",
"444.667 -144.333 OFFCURVE",
"450 89 CURVE SMOOTH",
"450 306 LINE SMOOTH",
"450 445.333 OFFCURVE",
"509.333 515 OFFCURVE",
"628 515 CURVE",
"628 722 LINE",
"512 722 OFFCURVE",
"452.667 788.333 OFFCURVE",
"450 921 CURVE SMOOTH",
"450 1136 LINE SMOOTH",
"448.667 1381.333 OFFCURVE",
"328.667 1530.333 OFFCURVE",
"90 1597 CURVE",
"34 1436 LINE",
"135.333 1398 OFFCURVE",
"187.333 1301.333 OFFCURVE",
"190 1146 CURVE SMOOTH",
"190 937 LINE SMOOTH",
"190 783 OFFCURVE",
"251 676.667 OFFCURVE",
"373 618 CURVE",
"251 559.333 OFFCURVE",
"190 454.667 OFFCURVE",
"190 304 CURVE SMOOTH",
"190 92 LINE SMOOTH",
"187.333 -65.333 OFFCURVE",
"135.333 -162 OFFCURVE",
"34 -198 CURVE",
"90 -360 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 11 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 17 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 18 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 676;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"291.333 -299.333 OFFCURVE",
"414 -152.667 OFFCURVE",
"414 98 CURVE SMOOTH",
"414 300 LINE SMOOTH",
"414 462 OFFCURVE",
"484.667 543 OFFCURVE",
"626 543 CURVE",
"626 688 LINE",
"484.667 688 OFFCURVE",
"414 767.667 OFFCURVE",
"414 927 CURVE SMOOTH",
"414 1137 LINE SMOOTH",
"412.667 1383.667 OFFCURVE",
"294 1530.333 OFFCURVE",
"58 1597 CURVE",
"20 1482 LINE",
"159.333 1437.333 OFFCURVE",
"229 1321 OFFCURVE",
"229 1133 CURVE SMOOTH",
"229 930 LINE SMOOTH",
"229 774.667 OFFCURVE",
"289.333 669.667 OFFCURVE",
"410 615 CURVE",
"289.333 559 OFFCURVE",
"229 454 OFFCURVE",
"229 300 CURVE SMOOTH",
"229 80 LINE SMOOTH",
"224.333 -97.333 OFFCURVE",
"154.333 -207.667 OFFCURVE",
"19 -251 CURVE",
"58 -366 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 11 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 17 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 18 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"235 -373 OFFCURVE",
"338 -227 OFFCURVE",
"338 21 CURVE SMOOTH",
"338 258 LINE SMOOTH",
"338 448 OFFCURVE",
"421.333 543 OFFCURVE",
"588 543 CURVE",
"588 609 LINE",
"421.333 609 OFFCURVE",
"338 703.333 OFFCURVE",
"338 892 CURVE SMOOTH",
"338 1141 LINE SMOOTH",
"335.333 1382.333 OFFCURVE",
"232.333 1530.333 OFFCURVE",
"19 1597 CURVE",
"5 1552 LINE",
"191 1492 OFFCURVE",
"284 1349.333 OFFCURVE",
"284 1124 CURVE SMOOTH",
"284 897 LINE SMOOTH",
"284 715.667 OFFCURVE",
"354.333 608.667 OFFCURVE",
"495 576 CURVE",
"354.333 540.667 OFFCURVE",
"284 433.667 OFFCURVE",
"284 255 CURVE SMOOTH",
"284 22 LINE SMOOTH",
"284 -191.333 OFFCURVE",
"189.333 -330.333 OFFCURVE",
"0 -395 CURVE",
"19 -441 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 11 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 17 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 18 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 660;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"48 -299 OFFCURVE",
"196 -153 OFFCURVE",
"240 98 CURVE SMOOTH",
"276 300 LINE SMOOTH",
"305 462 OFFCURVE",
"390 543 OFFCURVE",
"531 543 CURVE",
"557 688 LINE",
"415 688 OFFCURVE",
"359 768 OFFCURVE",
"387 927 CURVE SMOOTH",
"424 1137 LINE SMOOTH",
"466 1384 OFFCURVE",
"373 1530 OFFCURVE",
"149 1597 CURVE",
"91 1482 LINE",
"222 1437 OFFCURVE",
"271 1321 OFFCURVE",
"238 1133 CURVE SMOOTH",
"202 930 LINE SMOOTH",
"175 775 OFFCURVE",
"217 670 OFFCURVE",
"328 615 CURVE",
"197 559 OFFCURVE",
"118 454 OFFCURVE",
"91 300 CURVE SMOOTH",
"52 80 LINE SMOOTH",
"16 -97 OFFCURVE",
"-73 -208 OFFCURVE",
"-216 -251 CURVE",
"-197 -366 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 11 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 17 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 18 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 693;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-22 -373 OFFCURVE",
"107 -227 OFFCURVE",
"151 21 CURVE SMOOTH",
"193 258 LINE SMOOTH",
"226 448 OFFCURVE",
"326 543 OFFCURVE",
"493 543 CURVE",
"505 609 LINE",
"338 609 OFFCURVE",
"271 703 OFFCURVE",
"304 892 CURVE SMOOTH",
"348 1141 LINE SMOOTH",
"388 1382 OFFCURVE",
"311 1530 OFFCURVE",
"110 1597 CURVE",
"88 1552 LINE",
"263 1492 OFFCURVE",
"331 1349 OFFCURVE",
"291 1124 CURVE SMOOTH",
"251 897 LINE SMOOTH",
"219 716 OFFCURVE",
"271 609 OFFCURVE",
"406 576 CURVE",
"259 541 OFFCURVE",
"170 434 OFFCURVE",
"138 255 CURVE SMOOTH",
"97 22 LINE SMOOTH",
"59 -191 OFFCURVE",
"-60 -330 OFFCURVE",
"-260 -395 CURVE",
"-250 -441 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
17 11 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
31 17 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
18 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 18 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 660;
}
);
note = uni007D;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1084 375 OFFCURVE",
"1221 545 OFFCURVE",
"1221 794 CURVE",
"1007 794 LINE",
"1007 692.667 OFFCURVE",
"951.667 612 OFFCURVE",
"873 612 CURVE SMOOTH",
"828.333 612 OFFCURVE",
"778.833 637.833 OFFCURVE",
"724.5 689.5 CURVE SMOOTH",
"615.833 792.833 OFFCURVE",
"541 827 OFFCURVE",
"437 827 CURVE SMOOTH",
"237 827 OFFCURVE",
"106 663 OFFCURVE",
"106 413 CURVE",
"321 413 LINE",
"321 517 OFFCURVE",
"373.667 591 OFFCURVE",
"451 591 CURVE SMOOTH",
"497.667 591 OFFCURVE",
"548.667 564.5 OFFCURVE",
"604 511.5 CURVE SMOOTH",
"714.667 405.5 OFFCURVE",
"789.333 375 OFFCURVE",
"888 375 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1328;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1121.667 402 OFFCURVE",
"1263 566.333 OFFCURVE",
"1263 776 CURVE",
"1110 776 LINE",
"1110 654 OFFCURVE",
"1051 596 OFFCURVE",
"973 586 CURVE SMOOTH",
"907 578 OFFCURVE",
"828 605 OFFCURVE",
"758 657.5 CURVE SMOOTH",
"632 752 OFFCURVE",
"555.333 802 OFFCURVE",
"454 802 CURVE SMOOTH",
"268.667 802 OFFCURVE",
"131 649.333 OFFCURVE",
"131 436 CURVE",
"292 436 LINE",
"292 563.333 OFFCURVE",
"350 639 OFFCURVE",
"454 639 CURVE SMOOTH",
"536 639 OFFCURVE",
"594 582 OFFCURVE",
"654.5 529 CURVE SMOOTH",
"767.167 430.333 OFFCURVE",
"843 402 OFFCURVE",
"939 402 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1393;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1139.667 443 OFFCURVE",
"1246 568 OFFCURVE",
"1246 752 CURVE",
"1190 753 LINE",
"1190 590.333 OFFCURVE",
"1111.667 496 OFFCURVE",
"977 496 CURVE SMOOTH",
"901 496 OFFCURVE",
"852.333 513.167 OFFCURVE",
"723 628.5 CURVE SMOOTH",
"593.667 743.833 OFFCURVE",
"524 774 OFFCURVE",
"428 774 CURVE SMOOTH",
"261.333 774 OFFCURVE",
"160 652.667 OFFCURVE",
"160 462 CURVE",
"215 462 LINE",
"215 632.667 OFFCURVE",
"294.667 720 OFFCURVE",
"428 720 CURVE SMOOTH",
"509.333 720 OFFCURVE",
"556.5 702 OFFCURVE",
"686.5 586 CURVE SMOOTH",
"816.5 470 OFFCURVE",
"882.333 443 OFFCURVE",
"977 443 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1412;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1002 402 OFFCURVE",
"1172 566 OFFCURVE",
"1209 776 CURVE",
"1056 776 LINE",
"1035 654 OFFCURVE",
"965 596 OFFCURVE",
"886 586 CURVE SMOOTH",
"818 578 OFFCURVE",
"744 605 OFFCURVE",
"683 658 CURVE SMOOTH",
"574 752 OFFCURVE",
"506 802 OFFCURVE",
"405 802 CURVE SMOOTH",
"219 802 OFFCURVE",
"55 649 OFFCURVE",
"17 436 CURVE",
"178 436 LINE",
"201 563 OFFCURVE",
"272 639 OFFCURVE",
"376 639 CURVE SMOOTH",
"458 639 OFFCURVE",
"506 582 OFFCURVE",
"557 529 CURVE SMOOTH",
"652 430 OFFCURVE",
"723 402 OFFCURVE",
"819 402 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1393;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"1027 443 OFFCURVE",
"1155 568 OFFCURVE",
"1188 752 CURVE",
"1132 753 LINE",
"1103 590 OFFCURVE",
"1008 496 OFFCURVE",
"874 496 CURVE SMOOTH",
"798 496 OFFCURVE",
"752 513 OFFCURVE",
"643 629 CURVE SMOOTH",
"534 744 OFFCURVE",
"470 774 OFFCURVE",
"374 774 CURVE SMOOTH",
"207 774 OFFCURVE",
"84 653 OFFCURVE",
"51 462 CURVE",
"106 462 LINE",
"136 633 OFFCURVE",
"231 720 OFFCURVE",
"364 720 CURVE SMOOTH",
"446 720 OFFCURVE",
"489 702 OFFCURVE",
"599 586 CURVE SMOOTH",
"709 470 OFFCURVE",
"770 443 OFFCURVE",
"864 443 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
17 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1412;
}
);
note = uni007E;
unicode = 007E;
},
{
glyphname = exclamdown;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"444 -369 LINE",
"411 639 LINE",
"170 639 LINE",
"137 -369 LINE"
);
},
{
closed = 1;
nodes = (
"383.333 795 OFFCURVE",
"452 858.667 OFFCURVE",
"452 948 CURVE SMOOTH",
"452 1037.333 OFFCURVE",
"387.333 1101 OFFCURVE",
"290 1101 CURVE SMOOTH",
"192.667 1101 OFFCURVE",
"128 1037.333 OFFCURVE",
"128 948 CURVE SMOOTH",
"128 858.667 OFFCURVE",
"196.667 795 OFFCURVE",
"290 795 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 2 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 578;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"351 -360 LINE",
"338 684 LINE",
"170 684 LINE",
"157 -360 LINE"
);
},
{
closed = 1;
nodes = (
"321 889 OFFCURVE",
"358 936 OFFCURVE",
"358 996 CURVE SMOOTH",
"358 1056 OFFCURVE",
"321 1101 OFFCURVE",
"249 1101 CURVE SMOOTH",
"177 1101 OFFCURVE",
"139 1056 OFFCURVE",
"139 996 CURVE SMOOTH",
"139 936 OFFCURVE",
"177 889 OFFCURVE",
"249 889 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 2 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 499;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"233 -359 LINE",
"233 696 LINE",
"179 696 LINE",
"179 -359 LINE"
);
},
{
closed = 1;
nodes = (
"228.667 992 OFFCURVE",
"253 1017.333 OFFCURVE",
"253 1048 CURVE SMOOTH",
"253 1078.667 OFFCURVE",
"228.667 1103 OFFCURVE",
"198 1103 CURVE SMOOTH",
"167.333 1103 OFFCURVE",
"142 1078.667 OFFCURVE",
"142 1048 CURVE SMOOTH",
"142 1017.333 OFFCURVE",
"167.333 992 OFFCURVE",
"198 992 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 2 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 406;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"97 -360 LINE",
"268 684 LINE",
"100 684 LINE",
"-97 -360 LINE"
);
},
{
closed = 1;
nodes = (
"287 889 OFFCURVE",
"332 936 OFFCURVE",
"343 996 CURVE SMOOTH",
"353 1056 OFFCURVE",
"324 1101 OFFCURVE",
"252 1101 CURVE SMOOTH",
"180 1101 OFFCURVE",
"134 1056 OFFCURVE",
"124 996 CURVE SMOOTH",
"113 936 OFFCURVE",
"143 889 OFFCURVE",
"215 889 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 2 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 499;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-21 -359 LINE",
"165 696 LINE",
"111 696 LINE",
"-75 -359 LINE"
);
},
{
closed = 1;
nodes = (
"213 992 OFFCURVE",
"242 1017 OFFCURVE",
"247 1048 CURVE SMOOTH",
"252 1079 OFFCURVE",
"232 1103 OFFCURVE",
"202 1103 CURVE SMOOTH",
"171 1103 OFFCURVE",
"141 1079 OFFCURVE",
"136 1048 CURVE SMOOTH",
"131 1017 OFFCURVE",
"151 992 OFFCURVE",
"182 992 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 2 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 406;
}
);
note = uni00A1;
unicode = 00A1;
},
{
glyphname = cent;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"698 -245 LINE",
"698 -11 LINE",
"904.667 27.667 OFFCURVE",
"1045.333 180.667 OFFCURVE",
"1048 374 CURVE",
"776 374 LINE",
"773.333 276.667 OFFCURVE",
"700.667 213 OFFCURVE",
"594 213 CURVE SMOOTH",
"456.667 213 OFFCURVE",
"388 302 OFFCURVE",
"388 526 CURVE SMOOTH",
"388 559 LINE SMOOTH",
"389.333 772.333 OFFCURVE",
"457 868 OFFCURVE",
"593 868 CURVE SMOOTH",
"701 868 OFFCURVE",
"773.333 793.667 OFFCURVE",
"776 679 CURVE",
"1048 679 LINE",
"1045.333 896.333 OFFCURVE",
"915.333 1054.333 OFFCURVE",
"698 1093 CURVE",
"698 1318 LINE",
"498 1318 LINE",
"498 1094 LINE",
"246 1051.333 OFFCURVE",
"99 844.667 OFFCURVE",
"99 554 CURVE SMOOTH",
"99 532 LINE SMOOTH",
"99 230.667 OFFCURVE",
"248.667 28 OFFCURVE",
"498 -12 CURVE",
"498 -245 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1178;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"669 -245 LINE",
"669 -12 LINE",
"861 22.667 OFFCURVE",
"1009 173 OFFCURVE",
"1017 341 CURVE",
"842 341 LINE",
"831.333 222.333 OFFCURVE",
"719.333 131 OFFCURVE",
"586 131 CURVE SMOOTH",
"398 131 OFFCURVE",
"290 270.667 OFFCURVE",
"290 520 CURVE SMOOTH",
"290 555 LINE SMOOTH",
"290 811 OFFCURVE",
"398 950 OFFCURVE",
"586 950 CURVE SMOOTH",
"726 950 OFFCURVE",
"831.333 850 OFFCURVE",
"842 710 CURVE",
"1017 710 LINE",
"1009 910 OFFCURVE",
"869 1064.333 OFFCURVE",
"669 1095 CURVE",
"669 1318 LINE",
"484 1318 LINE",
"484 1092 LINE",
"248 1048 OFFCURVE",
"105 844.667 OFFCURVE",
"105 562 CURVE SMOOTH",
"105 527 LINE SMOOTH",
"105 233.667 OFFCURVE",
"245.333 34.333 OFFCURVE",
"484 -11 CURVE",
"484 -245 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1120;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"604 -245 LINE",
"604 -19 LINE",
"810.667 -8.333 OFFCURVE",
"966.333 128 OFFCURVE",
"977 328 CURVE",
"923 328 LINE",
"911 144 OFFCURVE",
"772 34 OFFCURVE",
"576 34 CURVE SMOOTH",
"334.667 34 OFFCURVE",
"188 217.333 OFFCURVE",
"188 520 CURVE SMOOTH",
"188 555 LINE SMOOTH",
"188 864.333 OFFCURVE",
"332.667 1048 OFFCURVE",
"574 1048 CURVE SMOOTH",
"775.333 1048 OFFCURVE",
"913.667 919.667 OFFCURVE",
"923 725 CURVE",
"977 725 LINE",
"967.667 942.333 OFFCURVE",
"821.333 1086.333 OFFCURVE",
"604 1101 CURVE",
"604 1318 LINE",
"549 1318 LINE",
"549 1101 LINE",
"294.333 1087.667 OFFCURVE",
"134 882 OFFCURVE",
"134 562 CURVE SMOOTH",
"134 526 LINE SMOOTH",
"134 199.333 OFFCURVE",
"294.333 -5.667 OFFCURVE",
"549 -19 CURVE",
"549 -245 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"435 -245 LINE",
"476 -12 LINE",
"674 23 OFFCURVE",
"849 173 OFFCURVE",
"886 341 CURVE",
"711 341 LINE",
"680 222 OFFCURVE",
"552 131 OFFCURVE",
"418 131 CURVE SMOOTH",
"230 131 OFFCURVE",
"147 271 OFFCURVE",
"191 520 CURVE SMOOTH",
"197 555 LINE SMOOTH",
"242 811 OFFCURVE",
"375 950 OFFCURVE",
"563 950 CURVE SMOOTH",
"703 950 OFFCURVE",
"790 850 OFFCURVE",
"776 710 CURVE",
"951 710 LINE",
"979 910 OFFCURVE",
"866 1064 OFFCURVE",
"671 1095 CURVE",
"711 1318 LINE",
"526 1318 LINE",
"486 1092 LINE",
"242 1048 OFFCURVE",
"63 845 OFFCURVE",
"13 562 CURVE SMOOTH",
"7 527 LINE SMOOTH",
"-45 234 OFFCURVE",
"61 34 OFFCURVE",
"291 -11 CURVE",
"250 -245 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1120;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"370 -245 LINE",
"410 -19 LINE",
"618 -8 OFFCURVE",
"798 128 OFFCURVE",
"844 328 CURVE",
"790 328 LINE",
"746 144 OFFCURVE",
"587 34 OFFCURVE",
"391 34 CURVE SMOOTH",
"150 34 OFFCURVE",
"36 217 OFFCURVE",
"89 520 CURVE SMOOTH",
"95 555 LINE SMOOTH",
"150 864 OFFCURVE",
"327 1048 OFFCURVE",
"568 1048 CURVE SMOOTH",
"769 1048 OFFCURVE",
"885 920 OFFCURVE",
"860 725 CURVE",
"914 725 LINE",
"943 942 OFFCURVE",
"822 1086 OFFCURVE",
"607 1101 CURVE",
"646 1318 LINE",
"591 1318 LINE",
"552 1101 LINE",
"295 1088 OFFCURVE",
"99 882 OFFCURVE",
"42 562 CURVE SMOOTH",
"36 526 LINE SMOOTH",
"-22 199 OFFCURVE",
"103 -6 OFFCURVE",
"355 -19 CURVE",
"315 -245 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
note = uni00A2;
unicode = 00A2;
},
{
glyphname = sterling;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1161 0 LINE",
"1161 241 LINE",
"508 241 LINE",
"549.333 289.667 OFFCURVE",
"570 355 OFFCURVE",
"570 437 CURVE SMOOTH",
"564 576 LINE",
"864 576 LINE",
"864 812 LINE",
"555 812 LINE",
"546 1039 LINE",
"546 1167 OFFCURVE",
"611 1233 OFFCURVE",
"699 1233 CURVE SMOOTH",
"807 1233 OFFCURVE",
"867 1171.333 OFFCURVE",
"867 1058 CURVE",
"1154 1058 LINE",
"1154 1314 OFFCURVE",
"982.667 1475 OFFCURVE",
"700 1475 CURVE SMOOTH",
"424 1475 OFFCURVE",
"246 1308.333 OFFCURVE",
"246 1039 CURVE",
"253 812 LINE",
"99 812 LINE",
"99 576 LINE",
"261 576 LINE",
"266 420 LINE SMOOTH",
"266 312.667 OFFCURVE",
"242 253 OFFCURVE",
"194 241 CURVE",
"102 241 LINE",
"102 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 20 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 31 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 31 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1217;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1127 0 LINE",
"1127 157 LINE",
"395 157 LINE",
"436.333 217.667 OFFCURVE",
"457 299.333 OFFCURVE",
"449 402 CURVE",
"449 622 LINE",
"763 622 LINE",
"763 779 LINE",
"435 779 LINE",
"435 1039 LINE",
"435 1205.667 OFFCURVE",
"530 1318 OFFCURVE",
"670 1318 CURVE SMOOTH",
"818 1318 OFFCURVE",
"908 1229.667 OFFCURVE",
"908 1087 CURVE",
"1099 1087 LINE",
"1099 1323 OFFCURVE",
"940.333 1476 OFFCURVE",
"687 1476 CURVE SMOOTH",
"420.333 1476 OFFCURVE",
"242 1304.333 OFFCURVE",
"251 1039 CURVE",
"251 779 LINE",
"91 779 LINE",
"91 622 LINE",
"256 622 LINE",
"256 401 LINE",
"261 265 OFFCURVE",
"227 157 OFFCURVE",
"172 157 CURVE SMOOTH",
"95 157 LINE",
"95 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 20 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 31 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 31 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1190;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1061 0 LINE",
"1060 54 LINE",
"303 54 LINE",
"350.333 112.667 OFFCURVE",
"372.667 206.667 OFFCURVE",
"370 336 CURVE SMOOTH",
"360 667 LINE",
"728 667 LINE",
"728 721 LINE",
"358 721 LINE",
"349 1039 LINE",
"349 1283 OFFCURVE",
"465 1422 OFFCURVE",
"661 1422 CURVE SMOOTH",
"859.667 1422 OFFCURVE",
"981 1301 OFFCURVE",
"981 1089 CURVE",
"1035 1089 LINE",
"1035 1327.667 OFFCURVE",
"891.667 1476 OFFCURVE",
"661 1476 CURVE SMOOTH",
"437 1476 OFFCURVE",
"295 1311 OFFCURVE",
"295 1039 CURVE",
"304 721 LINE",
"95 721 LINE",
"95 667 LINE",
"306 667 LINE",
"316 336 LINE SMOOTH",
"318.667 193.333 OFFCURVE",
"283 72.667 OFFCURVE",
"219 54 CURVE",
"99 54 LINE",
"99 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 20 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 31 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 31 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"936 0 LINE",
"964 157 LINE",
"232 157 LINE",
"284 218 OFFCURVE",
"319 299 OFFCURVE",
"329 402 CURVE",
"368 622 LINE",
"682 622 LINE",
"710 779 LINE",
"382 779 LINE",
"427 1039 LINE",
"457 1206 OFFCURVE",
"572 1318 OFFCURVE",
"712 1318 CURVE SMOOTH",
"860 1318 OFFCURVE",
"934 1230 OFFCURVE",
"909 1087 CURVE",
"1100 1087 LINE",
"1141 1323 OFFCURVE",
"1010 1476 OFFCURVE",
"756 1476 CURVE SMOOTH",
"490 1476 OFFCURVE",
"281 1304 OFFCURVE",
"243 1039 CURVE",
"198 779 LINE",
"38 779 LINE",
"10 622 LINE",
"175 622 LINE",
"136 401 LINE",
"117 265 OFFCURVE",
"64 157 OFFCURVE",
"9 157 CURVE SMOOTH",
"-68 157 LINE",
"-96 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 20 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 31 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 31 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1190;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"870 0 LINE",
"879 54 LINE",
"122 54 LINE",
"179 113 OFFCURVE",
"218 207 OFFCURVE",
"238 336 CURVE SMOOTH",
"287 667 LINE",
"655 667 LINE",
"664 721 LINE",
"294 721 LINE",
"341 1039 LINE",
"384 1283 OFFCURVE",
"525 1422 OFFCURVE",
"721 1422 CURVE SMOOTH",
"920 1422 OFFCURVE",
"1020 1301 OFFCURVE",
"982 1089 CURVE",
"1036 1089 LINE",
"1078 1328 OFFCURVE",
"961 1476 OFFCURVE",
"730 1476 CURVE SMOOTH",
"506 1476 OFFCURVE",
"335 1311 OFFCURVE",
"287 1039 CURVE",
"240 721 LINE",
"31 721 LINE",
"22 667 LINE",
"233 667 LINE",
"184 336 LINE SMOOTH",
"162 193 OFFCURVE",
"105 73 OFFCURVE",
"38 54 CURVE",
"-82 54 LINE",
"-92 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 20 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 31 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 31 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1150;
}
);
note = uni00A3;
unicode = 00A3;
},
{
glyphname = currency;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1347 118 LINE",
"1208 259 LINE",
"1273.333 363 OFFCURVE",
"1306 479.333 OFFCURVE",
"1306 608 CURVE SMOOTH",
"1306 742.667 OFFCURVE",
"1270.333 863 OFFCURVE",
"1199 969 CURVE",
"1347 1120 LINE",
"1205 1265 LINE",
"1061 1117 LINE",
"957.667 1195 OFFCURVE",
"841.333 1234 OFFCURVE",
"712 1234 CURVE SMOOTH",
"583.333 1234 OFFCURVE",
"467.333 1195.667 OFFCURVE",
"364 1119 CURVE",
"222 1264 LINE",
"81 1120 LINE",
"225 973 LINE",
"152.333 865.667 OFFCURVE",
"116 744 OFFCURVE",
"116 608 CURVE SMOOTH",
"116 476.667 OFFCURVE",
"149.333 359 OFFCURVE",
"216 255 CURVE",
"81 118 LINE",
"222 -26 LINE",
"351 106 LINE",
"456.333 22 OFFCURVE",
"576.667 -20 OFFCURVE",
"712 -20 CURVE SMOOTH",
"846.667 -20 OFFCURVE",
"967 22.333 OFFCURVE",
"1073 107 CURVE",
"1205 -27 LINE"
);
},
{
closed = 1;
nodes = (
"480 170 OFFCURVE",
"302 367 OFFCURVE",
"302 608 CURVE SMOOTH",
"302 850 OFFCURVE",
"480 1044 OFFCURVE",
"712 1044 CURVE SMOOTH",
"945 1044 OFFCURVE",
"1121 848 OFFCURVE",
"1121 608 CURVE SMOOTH",
"1119.932 247.444 OFFCURVE",
"772 170 OFFCURVE",
"712 170 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1418;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1371 109 LINE",
"1228 253 LINE",
"1296 359 OFFCURVE",
"1330 477.333 OFFCURVE",
"1330 608 CURVE SMOOTH",
"1330 743.333 OFFCURVE",
"1293.333 865.333 OFFCURVE",
"1220 974 CURVE",
"1371 1128 LINE",
"1239 1265 LINE",
"1090 1113 LINE",
"984 1193.667 OFFCURVE",
"865.667 1234 OFFCURVE",
"735 1234 CURVE SMOOTH",
"605 1234 OFFCURVE",
"487.333 1194 OFFCURVE",
"382 1114 CURVE",
"235 1264 LINE",
"105 1128 LINE",
"252 977 LINE",
"177.333 868.333 OFFCURVE",
"140 745.333 OFFCURVE",
"140 608 CURVE SMOOTH",
"140 473.333 OFFCURVE",
"174.667 354 OFFCURVE",
"244 250 CURVE",
"105 109 LINE",
"235 -26 LINE",
"369 110 LINE",
"475 23.333 OFFCURVE",
"597 -20 OFFCURVE",
"735 -20 CURVE SMOOTH",
"874.333 -20 OFFCURVE",
"997 24 OFFCURVE",
"1103 112 CURVE",
"1239 -27 LINE"
);
},
{
closed = 1;
nodes = (
"503 151 OFFCURVE",
"311 355 OFFCURVE",
"311 608 CURVE SMOOTH",
"311 855 OFFCURVE",
"498 1062 OFFCURVE",
"735 1062 CURVE SMOOTH",
"1090.073 1057.542 OFFCURVE",
"1157 660 OFFCURVE",
"1157 608 CURVE SMOOTH",
"1157 362 OFFCURVE",
"972 151 OFFCURVE",
"735 151 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1380 13 LINE",
"1198 199 LINE",
"1292 315.667 OFFCURVE",
"1339 452 OFFCURVE",
"1339 608 CURVE SMOOTH",
"1339 770 OFFCURVE",
"1288.333 910.333 OFFCURVE",
"1187 1029 CURVE",
"1380 1225 LINE",
"1339 1265 LINE",
"1148 1070 LINE",
"1041.333 1172.667 OFFCURVE",
"902.333 1234 OFFCURVE",
"745 1234 CURVE SMOOTH",
"590.333 1234 OFFCURVE",
"456 1180 OFFCURVE",
"342 1072 CURVE",
"154 1264 LINE",
"114 1225 LINE",
"303 1032 LINE",
"200.333 913.333 OFFCURVE",
"149 772 OFFCURVE",
"149 608 CURVE SMOOTH",
"149 450 OFFCURVE",
"197 312.333 OFFCURVE",
"293 195 CURVE",
"114 13 LINE",
"154 -26 LINE",
"330 154 LINE",
"435 47 OFFCURVE",
"570 -10 OFFCURVE",
"706 -19 CURVE SMOOTH",
"869 -30 OFFCURVE",
"1034 28 OFFCURVE",
"1159 156 CURVE",
"1339 -27 LINE"
);
},
{
closed = 1;
nodes = (
"446 33 OFFCURVE",
"204 294 OFFCURVE",
"204 608 CURVE SMOOTH",
"204 919 OFFCURVE",
"446 1181 OFFCURVE",
"745 1181 CURVE SMOOTH",
"1036 1181 OFFCURVE",
"1285 928 OFFCURVE",
"1285 608 CURVE SMOOTH",
"1285 297 OFFCURVE",
"1046 33 OFFCURVE",
"745 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1502;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1199 109 LINE",
"1082 253 LINE",
"1169 359 OFFCURVE",
"1223 477 OFFCURVE",
"1246 608 CURVE SMOOTH",
"1270 743 OFFCURVE",
"1255 865 OFFCURVE",
"1201 974 CURVE",
"1379 1128 LINE",
"1271 1265 LINE",
"1095 1113 LINE",
"1004 1194 OFFCURVE",
"892 1234 OFFCURVE",
"762 1234 CURVE SMOOTH",
"632 1234 OFFCURVE",
"507 1194 OFFCURVE",
"388 1114 CURVE",
"267 1264 LINE",
"113 1128 LINE",
"233 977 LINE",
"140 868 OFFCURVE",
"81 745 OFFCURVE",
"56 608 CURVE SMOOTH",
"33 473 OFFCURVE",
"46 354 OFFCURVE",
"97 250 CURVE",
"-67 109 LINE",
"40 -26 LINE",
"198 110 LINE",
"288 23 OFFCURVE",
"403 -20 OFFCURVE",
"541 -20 CURVE SMOOTH",
"680 -20 OFFCURVE",
"810 24 OFFCURVE",
"932 112 CURVE",
"1043 -27 LINE"
);
},
{
closed = 1;
nodes = (
"339 151 OFFCURVE",
"183 355 OFFCURVE",
"227 608 CURVE SMOOTH",
"271 855 OFFCURVE",
"494 1062 OFFCURVE",
"731 1062 CURVE SMOOTH",
"1086 1058 OFFCURVE",
"1083 660 OFFCURVE",
"1073 608 CURVE SMOOTH",
"1030 362 OFFCURVE",
"808 151 OFFCURVE",
"571 151 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1460;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"1192 13 LINE",
"1042 199 LINE",
"1157 316 OFFCURVE",
"1228 452 OFFCURVE",
"1255 608 CURVE SMOOTH",
"1284 770 OFFCURVE",
"1258 910 OFFCURVE",
"1178 1029 CURVE",
"1405 1225 LINE",
"1371 1265 LINE",
"1146 1070 LINE",
"1057 1173 OFFCURVE",
"929 1234 OFFCURVE",
"772 1234 CURVE SMOOTH",
"617 1234 OFFCURVE",
"473 1180 OFFCURVE",
"340 1072 CURVE",
"186 1264 LINE",
"139 1225 LINE",
"294 1032 LINE",
"171 913 OFFCURVE",
"94 772 OFFCURVE",
"65 608 CURVE SMOOTH",
"38 450 OFFCURVE",
"61 312 OFFCURVE",
"137 195 CURVE",
"-74 13 LINE",
"-41 -26 LINE",
"166 154 LINE",
"253 47 OFFCURVE",
"377 -10 OFFCURVE",
"512 -19 CURVE SMOOTH",
"673 -30 OFFCURVE",
"848 28 OFFCURVE",
"996 156 CURVE",
"1143 -27 LINE"
);
},
{
closed = 1;
nodes = (
"261 33 OFFCURVE",
"65 294 OFFCURVE",
"120 608 CURVE SMOOTH",
"175 919 OFFCURVE",
"463 1181 OFFCURVE",
"762 1181 CURVE SMOOTH",
"1053 1181 OFFCURVE",
"1258 928 OFFCURVE",
"1201 608 CURVE SMOOTH",
"1147 297 OFFCURVE",
"861 33 OFFCURVE",
"560 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1502;
}
);
note = uni00A4;
unicode = 00A4;
},
{
glyphname = yen;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"695 0 LINE",
"695 278 LINE",
"983 278 LINE",
"983 452 LINE",
"695 452 LINE",
"695 567 LINE",
"983 567 LINE",
"983 742 LINE",
"765 742 LINE",
"1087 1456 LINE",
"774 1456 LINE",
"550 892 LINE",
"325 1456 LINE",
"10 1456 LINE",
"333 742 LINE",
"89 742 LINE",
"89 567 LINE",
"395 567 LINE",
"395 452 LINE",
"89 452 LINE",
"89 278 LINE",
"395 278 LINE",
"395 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 1 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1098;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"630 0 LINE",
"630 322 LINE",
"954 322 LINE",
"954 446 LINE",
"630 446 LINE",
"630 611 LINE",
"954 611 LINE",
"954 736 LINE",
"693 736 LINE",
"1060 1456 LINE",
"847 1456 LINE",
"539 793 LINE",
"231 1456 LINE",
"15 1456 LINE",
"382 736 LINE",
"119 736 LINE",
"119 611 LINE",
"437 611 LINE",
"437 446 LINE",
"119 446 LINE",
"119 322 LINE",
"437 322 LINE",
"437 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 1 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1075;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"543 0 LINE",
"543 326 LINE",
"935 326 LINE",
"935 381 LINE",
"543 381 LINE",
"543 621 LINE",
"935 621 LINE",
"935 676 LINE",
"568 676 LINE",
"1000 1456 LINE",
"938 1456 LINE",
"512 687 LINE",
"95 1456 LINE",
"33 1456 LINE",
"464 676 LINE",
"99 676 LINE",
"99 621 LINE",
"489 621 LINE",
"489 381 LINE",
"99 381 LINE",
"99 326 LINE",
"489 326 LINE",
"489 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 1 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1038;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"439 0 LINE",
"496 322 LINE",
"820 322 LINE",
"842 446 LINE",
"518 446 LINE",
"547 611 LINE",
"871 611 LINE",
"893 736 LINE",
"632 736 LINE",
"1126 1456 LINE",
"913 1456 LINE",
"488 793 LINE",
"297 1456 LINE",
"81 1456 LINE",
"321 736 LINE",
"58 736 LINE",
"36 611 LINE",
"354 611 LINE",
"325 446 LINE",
"7 446 LINE",
"-15 322 LINE",
"303 322 LINE",
"246 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 1 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1075;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"352 0 LINE",
"410 326 LINE",
"802 326 LINE",
"811 381 LINE",
"419 381 LINE",
"462 621 LINE",
"854 621 LINE",
"863 676 LINE",
"496 676 LINE",
"1066 1456 LINE",
"1004 1456 LINE",
"442 687 LINE",
"161 1456 LINE",
"99 1456 LINE",
"392 676 LINE",
"27 676 LINE",
"18 621 LINE",
"408 621 LINE",
"365 381 LINE",
"-25 381 LINE",
"-34 326 LINE",
"356 326 LINE",
"298 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
0 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 11 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
7 1 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1038;
}
);
note = uni00A5;
unicode = 00A5;
},
{
glyphname = brokenbar;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"388 -270 LINE",
"388 525 LINE",
"128 525 LINE",
"128 -270 LINE"
);
},
{
closed = 1;
nodes = (
"388 698 LINE",
"388 1456 LINE",
"128 1456 LINE",
"128 698 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 516;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"333 -270 LINE",
"333 521 LINE",
"147 521 LINE",
"147 -270 LINE"
);
},
{
closed = 1;
nodes = (
"333 698 LINE",
"333 1456 LINE",
"147 1456 LINE",
"147 698 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 491;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"226 698 LINE",
"226 1456 LINE",
"172 1456 LINE",
"172 698 LINE"
);
},
{
closed = 1;
nodes = (
"226 -270 LINE",
"226 482 LINE",
"172 482 LINE",
"172 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 398;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"95 -270 LINE",
"234 521 LINE",
"48 521 LINE",
"-91 -270 LINE"
);
},
{
closed = 1;
nodes = (
"265 698 LINE",
"399 1456 LINE",
"213 1456 LINE",
"79 698 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 491;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"158 698 LINE",
"292 1456 LINE",
"238 1456 LINE",
"104 698 LINE"
);
},
{
closed = 1;
nodes = (
"-12 -270 LINE",
"120 482 LINE",
"66 482 LINE",
"-66 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 1 3 
CALL[ ]	/* CallFunction */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 398;
}
);
note = uni00A6;
unicode = 00A6;
},
{
glyphname = section;
lastChange = "2020-12-16 03:16:08 +0000";
layers = (
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"916 -495 OFFCURVE",
"1100 -352 OFFCURVE",
"1100 -128 CURVE SMOOTH",
"1100 5.333 OFFCURVE",
"1051 91.667 OFFCURVE",
"959 157 CURVE",
"1083 213.667 OFFCURVE",
"1145 305 OFFCURVE",
"1145 431 CURVE SMOOTH",
"1145 706 OFFCURVE",
"925 784 OFFCURVE",
"661.5 858 CURVE SMOOTH",
"526 896 OFFCURVE",
"327 933 OFFCURVE",
"327 1112 CURVE SMOOTH",
"327 1242.667 OFFCURVE",
"440.667 1325 OFFCURVE",
"630 1325 CURVE SMOOTH",
"815.333 1325 OFFCURVE",
"937 1211.667 OFFCURVE",
"937 1045 CURVE",
"1122 1045 LINE",
"1122 1318.333 OFFCURVE",
"939.333 1476 OFFCURVE",
"630 1476 CURVE SMOOTH",
"334 1476 OFFCURVE",
"141 1331.333 OFFCURVE",
"141 1110 CURVE SMOOTH",
"141 976.667 OFFCURVE",
"190 890.333 OFFCURVE",
"278 825 CURVE",
"156.667 766.333 OFFCURVE",
"96 675 OFFCURVE",
"96 551 CURVE SMOOTH",
"96 281 OFFCURVE",
"331 235 OFFCURVE",
"563 126 CURVE SMOOTH",
"763 32 OFFCURVE",
"914 0 OFFCURVE",
"914 -130 CURVE SMOOTH",
"914 -258 OFFCURVE",
"793.333 -343 OFFCURVE",
"612 -343 CURVE SMOOTH",
"404 -343 OFFCURVE",
"276 -235.333 OFFCURVE",
"276 -62 CURVE",
"90 -64 LINE",
"90 -364 OFFCURVE",
"321 -495 OFFCURVE",
"612 -495 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"683 248 OFFCURVE",
"525 309 OFFCURVE",
"403 370 CURVE SMOOTH",
"314 414 OFFCURVE",
"282 459.667 OFFCURVE",
"282 553 CURVE SMOOTH",
"282 645 OFFCURVE",
"330 717 OFFCURVE",
"437 742 CURVE",
"812 621 OFFCURVE",
"959 578 OFFCURVE",
"959 428 CURVE SMOOTH",
"959 336 OFFCURVE",
"890 235 OFFCURVE",
"786 208 CURVE"
);
}
);
width = 1256;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"876 -495 OFFCURVE",
"1050 -362.333 OFFCURVE",
"1050 -149 CURVE SMOOTH",
"1050 0.333 OFFCURVE",
"979.333 92 OFFCURVE",
"790 164 CURVE",
"976.667 190.667 OFFCURVE",
"1094 291 OFFCURVE",
"1094 431 CURVE SMOOTH",
"1094 682 OFFCURVE",
"849 729 OFFCURVE",
"616 804 CURVE SMOOTH",
"557 823 OFFCURVE",
"220 913 OFFCURVE",
"220 1132 CURVE SMOOTH",
"220 1313.333 OFFCURVE",
"372.667 1422 OFFCURVE",
"618 1422 CURVE SMOOTH",
"860.667 1422 OFFCURVE",
"1018 1267.667 OFFCURVE",
"1018 1045 CURVE",
"1072 1045 LINE",
"1072 1319.667 OFFCURVE",
"904.667 1476 OFFCURVE",
"618 1476 CURVE SMOOTH",
"342 1476 OFFCURVE",
"166 1338.333 OFFCURVE",
"166 1129 CURVE SMOOTH",
"166 985 OFFCURVE",
"258 890 OFFCURVE",
"430 822 CURVE",
"254 795 OFFCURVE",
"121 696.333 OFFCURVE",
"121 551 CURVE SMOOTH",
"121 361.667 OFFCURVE",
"358 221 OFFCURVE",
"607 166 CURVE SMOOTH",
"813 121 OFFCURVE",
"995 59 OFFCURVE",
"995 -151 CURVE SMOOTH",
"995 -326 OFFCURVE",
"844 -441 OFFCURVE",
"600 -441 CURVE SMOOTH",
"334.667 -441 OFFCURVE",
"169 -302 OFFCURVE",
"169 -62 CURVE",
"115 -64 LINE",
"115 -338.667 OFFCURVE",
"298.667 -495 OFFCURVE",
"600 -495 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"517 222 OFFCURVE",
"409 278 OFFCURVE",
"348 309 CURVE SMOOTH",
"222 370 OFFCURVE",
"175 429 OFFCURVE",
"175 553 CURVE SMOOTH",
"175 696 OFFCURVE",
"291.333 789.333 OFFCURVE",
"482 796 CURVE",
"745 731 OFFCURVE",
"1050 648 OFFCURVE",
"1040 420 CURVE SMOOTH",
"1034 275 OFFCURVE",
"902.333 198.667 OFFCURVE",
"693 196 CURVE"
);
}
);
width = 1223;
},
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"958.667 -452 OFFCURVE",
"1153 -311.333 OFFCURVE",
"1153 -78 CURVE SMOOTH",
"1153 46 OFFCURVE",
"1108 142 OFFCURVE",
"1018 210 CURVE",
"1126 269.333 OFFCURVE",
"1180 359.667 OFFCURVE",
"1180 481 CURVE SMOOTH",
"1180 750 OFFCURVE",
"954 835 OFFCURVE",
"706 901 CURVE SMOOTH",
"579 935 OFFCURVE",
"410 965 OFFCURVE",
"410 1097 CURVE SMOOTH",
"410 1187.667 OFFCURVE",
"493.333 1243 OFFCURVE",
"640 1243 CURVE SMOOTH",
"782.667 1243 OFFCURVE",
"870 1165 OFFCURVE",
"870 1049 CURVE",
"1159 1049 LINE",
"1159 1317 OFFCURVE",
"969.333 1476 OFFCURVE",
"640 1476 CURVE SMOOTH",
"321.333 1476 OFFCURVE",
"120 1323 OFFCURVE",
"120 1095 CURVE SMOOTH",
"120 971.667 OFFCURVE",
"165.333 875.667 OFFCURVE",
"256 807 CURVE",
"148 745 OFFCURVE",
"94 654 OFFCURVE",
"94 534 CURVE SMOOTH",
"94 271 OFFCURVE",
"313 184 OFFCURVE",
"552.5 117.5 CURVE SMOOTH",
"668 86 OFFCURVE",
"864 40 OFFCURVE",
"864 -80 CURVE SMOOTH",
"864 -164 OFFCURVE",
"785.333 -218 OFFCURVE",
"636 -218 CURVE SMOOTH",
"466.667 -218 OFFCURVE",
"381 -152.667 OFFCURVE",
"381 -35 CURVE",
"92 -35 LINE",
"92 -305.667 OFFCURVE",
"293.333 -452 OFFCURVE",
"636 -452 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 370 OFFCURVE",
"519 409 OFFCURVE",
"459 444 CURVE SMOOTH",
"394 482 OFFCURVE",
"383 515 OFFCURVE",
"383 563 CURVE SMOOTH",
"383 629 OFFCURVE",
"408 676 OFFCURVE",
"458 704 CURVE",
"842 597 OFFCURVE",
"894 534.667 OFFCURVE",
"894 452 CURVE SMOOTH",
"894 390 OFFCURVE",
"866.667 343.333 OFFCURVE",
"812 312 CURVE"
);
}
);
width = 1287;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"638 -495 OFFCURVE",
"847 -352 OFFCURVE",
"887 -128 CURVE SMOOTH",
"910 5 OFFCURVE",
"876 92 OFFCURVE",
"796 157 CURVE",
"930 214 OFFCURVE",
"1008 305 OFFCURVE",
"1030 431 CURVE SMOOTH",
"1079 706 OFFCURVE",
"872 784 OFFCURVE",
"622 858 CURVE SMOOTH",
"493 896 OFFCURVE",
"301 933 OFFCURVE",
"332 1112 CURVE SMOOTH",
"355 1243 OFFCURVE",
"484 1325 OFFCURVE",
"673 1325 CURVE SMOOTH",
"858 1325 OFFCURVE",
"960 1212 OFFCURVE",
"930 1045 CURVE",
"1115 1045 LINE",
"1164 1318 OFFCURVE",
"1009 1476 OFFCURVE",
"699 1476 CURVE SMOOTH",
"403 1476 OFFCURVE",
"185 1331 OFFCURVE",
"146 1110 CURVE SMOOTH",
"122 977 OFFCURVE",
"156 890 OFFCURVE",
"233 825 CURVE",
"101 766 OFFCURVE",
"24 675 OFFCURVE",
"2 551 CURVE SMOOTH",
"-45 281 OFFCURVE",
"182 235 OFFCURVE",
"394 126 CURVE SMOOTH",
"578 32 OFFCURVE",
"723 0 OFFCURVE",
"700 -130 CURVE SMOOTH",
"678 -258 OFFCURVE",
"542 -343 OFFCURVE",
"361 -343 CURVE SMOOTH",
"153 -343 OFFCURVE",
"44 -235 OFFCURVE",
"74 -62 CURVE",
"-112 -64 LINE",
"-165 -364 OFFCURVE",
"43 -495 OFFCURVE",
"334 -495 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"536 248 OFFCURVE",
"389 309 OFFCURVE",
"277 370 CURVE SMOOTH",
"196 414 OFFCURVE",
"172 460 OFFCURVE",
"189 553 CURVE SMOOTH",
"205 645 OFFCURVE",
"266 717 OFFCURVE",
"377 742 CURVE",
"731 621 OFFCURVE",
"870 578 OFFCURVE",
"844 428 CURVE SMOOTH",
"827 336 OFFCURVE",
"741 235 OFFCURVE",
"632 208 CURVE"
);
}
);
width = 1256;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"598 -495 OFFCURVE",
"795 -362 OFFCURVE",
"833 -149 CURVE SMOOTH",
"859 0 OFFCURVE",
"805 92 OFFCURVE",
"628 164 CURVE",
"820 191 OFFCURVE",
"955 291 OFFCURVE",
"979 431 CURVE SMOOTH",
"1023 682 OFFCURVE",
"788 746 OFFCURVE",
"567 804 CURVE SMOOTH",
"368 864 OFFCURVE",
"190 913 OFFCURVE",
"229 1132 CURVE SMOOTH",
"261 1313 OFFCURVE",
"433 1422 OFFCURVE",
"678 1422 CURVE SMOOTH",
"921 1422 OFFCURVE",
"1051 1268 OFFCURVE",
"1011 1045 CURVE",
"1065 1045 LINE",
"1114 1320 OFFCURVE",
"974 1476 OFFCURVE",
"687 1476 CURVE SMOOTH",
"411 1476 OFFCURVE",
"211 1338 OFFCURVE",
"174 1129 CURVE SMOOTH",
"149 985 OFFCURVE",
"201 890 OFFCURVE",
"361 822 CURVE",
"180 795 OFFCURVE",
"53 696 OFFCURVE",
"27 551 CURVE SMOOTH",
"-6 362 OFFCURVE",
"99 251 OFFCURVE",
"445 166 CURVE SMOOTH",
"639 112 OFFCURVE",
"815 59 OFFCURVE",
"778 -151 CURVE SMOOTH",
"747 -326 OFFCURVE",
"575 -441 OFFCURVE",
"331 -441 CURVE SMOOTH",
"66 -441 OFFCURVE",
"-75 -302 OFFCURVE",
"-33 -62 CURVE",
"-87 -64 LINE",
"-136 -339 OFFCURVE",
"21 -495 OFFCURVE",
"322 -495 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"378 242 OFFCURVE",
"269 280 OFFCURVE",
"211 309 CURVE SMOOTH",
"95 367 OFFCURVE",
"60 429 OFFCURVE",
"82 553 CURVE SMOOTH",
"107 696 OFFCURVE",
"240 789 OFFCURVE",
"432 796 CURVE",
"704 716 OFFCURVE",
"965 656 OFFCURVE",
"925 428 CURVE SMOOTH",
"901 293 OFFCURVE",
"747 199 OFFCURVE",
"537 196 CURVE"
);
}
);
width = 1223;
}
);
unicode = 00A7;
},
{
glyphname = dieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"802.667 1238 OFFCURVE",
"858 1295.667 OFFCURVE",
"858 1365 CURVE SMOOTH",
"858 1435.667 OFFCURVE",
"798.667 1492 OFFCURVE",
"720 1492 CURVE SMOOTH",
"642.667 1492 OFFCURVE",
"581 1437 OFFCURVE",
"581 1365 CURVE SMOOTH",
"581 1295.667 OFFCURVE",
"637.333 1238 OFFCURVE",
"720 1238 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313.333 1239 OFFCURVE",
"371 1294.333 OFFCURVE",
"371 1365 CURVE SMOOTH",
"371 1434.333 OFFCURVE",
"314.667 1492 OFFCURVE",
"232 1492 CURVE SMOOTH",
"149.333 1492 OFFCURVE",
"94 1434.333 OFFCURVE",
"94 1365 CURVE SMOOTH",
"94 1295.667 OFFCURVE",
"149.333 1239 OFFCURVE",
"232 1239 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 956;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"712 1264 OFFCURVE",
"750 1309 OFFCURVE",
"750 1369 CURVE SMOOTH",
"750 1429 OFFCURVE",
"712 1476 OFFCURVE",
"640 1476 CURVE SMOOTH",
"568 1476 OFFCURVE",
"531 1429 OFFCURVE",
"531 1369 CURVE SMOOTH",
"531 1309 OFFCURVE",
"568 1264 OFFCURVE",
"640 1264 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 1266 OFFCURVE",
"320 1311 OFFCURVE",
"320 1371 CURVE SMOOTH",
"320 1431 OFFCURVE",
"282 1477 OFFCURVE",
"210 1477 CURVE SMOOTH",
"138 1477 OFFCURVE",
"101 1431 OFFCURVE",
"101 1371 CURVE SMOOTH",
"101 1311 OFFCURVE",
"138 1266 OFFCURVE",
"210 1266 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"704.667 1366 OFFCURVE",
"730 1390.333 OFFCURVE",
"730 1421 CURVE SMOOTH",
"730 1451.667 OFFCURVE",
"704.667 1477 OFFCURVE",
"674 1477 CURVE SMOOTH",
"643.333 1477 OFFCURVE",
"619 1451.667 OFFCURVE",
"619 1421 CURVE SMOOTH",
"619 1390.333 OFFCURVE",
"643.333 1366 OFFCURVE",
"674 1366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259.667 1366 OFFCURVE",
"285 1390.333 OFFCURVE",
"285 1421 CURVE SMOOTH",
"285 1451.667 OFFCURVE",
"259.667 1477 OFFCURVE",
"229 1477 CURVE SMOOTH",
"198.333 1477 OFFCURVE",
"174 1451.667 OFFCURVE",
"174 1421 CURVE SMOOTH",
"174 1390.333 OFFCURVE",
"198.333 1366 OFFCURVE",
"229 1366 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 906;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"744 1264 OFFCURVE",
"790 1309 OFFCURVE",
"801 1369 CURVE SMOOTH",
"811 1429 OFFCURVE",
"781 1476 OFFCURVE",
"709 1476 CURVE SMOOTH",
"637 1476 OFFCURVE",
"592 1429 OFFCURVE",
"582 1369 CURVE SMOOTH",
"571 1309 OFFCURVE",
"600 1264 OFFCURVE",
"672 1264 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"314 1266 OFFCURVE",
"360 1311 OFFCURVE",
"371 1371 CURVE SMOOTH",
"382 1431 OFFCURVE",
"352 1477 OFFCURVE",
"280 1477 CURVE SMOOTH",
"208 1477 OFFCURVE",
"163 1431 OFFCURVE",
"152 1371 CURVE SMOOTH",
"141 1311 OFFCURVE",
"170 1266 OFFCURVE",
"242 1266 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 856;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"755 1366 OFFCURVE",
"784 1390 OFFCURVE",
"790 1421 CURVE SMOOTH",
"795 1452 OFFCURVE",
"774 1477 OFFCURVE",
"744 1477 CURVE SMOOTH",
"713 1477 OFFCURVE",
"684 1452 OFFCURVE",
"679 1421 CURVE SMOOTH",
"673 1390 OFFCURVE",
"693 1366 OFFCURVE",
"724 1366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"310 1366 OFFCURVE",
"339 1390 OFFCURVE",
"345 1421 CURVE SMOOTH",
"350 1452 OFFCURVE",
"329 1477 OFFCURVE",
"299 1477 CURVE SMOOTH",
"268 1477 OFFCURVE",
"239 1452 OFFCURVE",
"234 1421 CURVE SMOOTH",
"228 1390 OFFCURVE",
"248 1366 OFFCURVE",
"279 1366 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 906;
}
);
note = uni00A8;
unicode = 00A8;
},
{
glyphname = copyright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1050.667 -20 OFFCURVE",
"1284.333 120.167 OFFCURVE",
"1411 351.5 CURVE SMOOTH",
"1474.333 467.167 OFFCURVE",
"1506 593 OFFCURVE",
"1506 729 CURVE SMOOTH",
"1506 998.333 OFFCURVE",
"1374.167 1243.833 OFFCURVE",
"1153.5 1376.5 CURVE SMOOTH",
"1043.167 1442.833 OFFCURVE",
"924 1476 OFFCURVE",
"796 1476 CURVE SMOOTH",
"540 1476 OFFCURVE",
"304.167 1334.667 OFFCURVE",
"179.5 1104 CURVE SMOOTH",
"117.167 988.667 OFFCURVE",
"86 863.667 OFFCURVE",
"86 729 CURVE SMOOTH",
"86 458.333 OFFCURVE",
"219.167 213.333 OFFCURVE",
"438.5 80 CURVE SMOOTH",
"548.167 13.333 OFFCURVE",
"667.333 -20 OFFCURVE",
"796 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"995.333 282 OFFCURVE",
"1117 393.333 OFFCURVE",
"1117 596 CURVE",
"961 596 LINE",
"961 465.333 OFFCURVE",
"900.667 417 OFFCURVE",
"782 417 CURVE SMOOTH",
"659.333 417 OFFCURVE",
"588 513 OFFCURVE",
"588 669 CURVE SMOOTH",
"588 792 LINE SMOOTH",
"588 943 OFFCURVE",
"659.333 1040 OFFCURVE",
"782 1040 CURVE SMOOTH",
"899.333 1040 OFFCURVE",
"962 989 OFFCURVE",
"962 861 CURVE",
"1118 861 LINE",
"1118 1059.667 OFFCURVE",
"999.333 1175 OFFCURVE",
"782 1175 CURVE SMOOTH",
"571.333 1175 OFFCURVE",
"433 1020 OFFCURVE",
"433 788 CURVE SMOOTH",
"433 675 LINE SMOOTH",
"433 435 OFFCURVE",
"568.667 282 OFFCURVE",
"782 282 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"583 104 OFFCURVE",
"389 223 OFFCURVE",
"285.5 415 CURVE SMOOTH",
"233.833 511 OFFCURVE",
"208 615.667 OFFCURVE",
"208 729 CURVE SMOOTH",
"210 1023 OFFCURVE",
"370 1204 OFFCURVE",
"524 1288 CURVE SMOOTH",
"644 1353 OFFCURVE",
"760 1351 OFFCURVE",
"796 1351 CURVE SMOOTH",
"1013.333 1351 OFFCURVE",
"1208 1227.5 OFFCURVE",
"1308 1037.5 CURVE SMOOTH",
"1358 942.5 OFFCURVE",
"1383 839.667 OFFCURVE",
"1383 729 CURVE SMOOTH",
"1383 506.333 OFFCURVE",
"1275 302 OFFCURVE",
"1093.5 189 CURVE SMOOTH",
"1002 132 OFFCURVE",
"903 104 OFFCURVE",
"796 104 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
39 58 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
46 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
54 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 54 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 3 31 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
10 46 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 10 16 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
14 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
17 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1606;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1065 -21 OFFCURVE",
"1300 130.667 OFFCURVE",
"1420 360 CURVE SMOOTH",
"1480 474.667 OFFCURVE",
"1510 597.667 OFFCURVE",
"1510 729 CURVE SMOOTH",
"1510 998.333 OFFCURVE",
"1378 1243.833 OFFCURVE",
"1158 1376.5 CURVE SMOOTH",
"1048 1442.833 OFFCURVE",
"929 1476 OFFCURVE",
"801 1476 CURVE SMOOTH",
"545 1476 OFFCURVE",
"309.167 1334.667 OFFCURVE",
"184.5 1104 CURVE SMOOTH",
"122.167 988.667 OFFCURVE",
"91 863.667 OFFCURVE",
"91 729 CURVE SMOOTH",
"91 463.667 OFFCURVE",
"217.833 220.5 OFFCURVE",
"438.5 82.5 CURVE SMOOTH",
"548.833 13.5 OFFCURVE",
"669.667 -21 OFFCURVE",
"801 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"998.667 283 OFFCURVE",
"1119 393 OFFCURVE",
"1119 597 CURVE",
"973 597 LINE",
"973 462.333 OFFCURVE",
"910.667 412 OFFCURVE",
"788 412 CURVE SMOOTH",
"662.667 412 OFFCURVE",
"586 510 OFFCURVE",
"586 670 CURVE SMOOTH",
"586 783 LINE SMOOTH",
"586 947 OFFCURVE",
"662.667 1044 OFFCURVE",
"788 1044 CURVE SMOOTH",
"909.333 1044 OFFCURVE",
"974 992 OFFCURVE",
"974 860 CURVE",
"1120 860 LINE",
"1120 1058.667 OFFCURVE",
"1001.333 1173 OFFCURVE",
"788 1173 CURVE SMOOTH",
"581.333 1173 OFFCURVE",
"442 1020.667 OFFCURVE",
"442 786 CURVE SMOOTH",
"442 676 LINE SMOOTH",
"442 433.333 OFFCURVE",
"578.667 283 OFFCURVE",
"788 283 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"587.667 98 OFFCURVE",
"392.667 215.167 OFFCURVE",
"286 410.5 CURVE SMOOTH",
"232.667 508.167 OFFCURVE",
"206 614.333 OFFCURVE",
"206 729 CURVE SMOOTH",
"206 955.667 OFFCURVE",
"319 1163.5 OFFCURVE",
"503 1273.5 CURVE SMOOTH",
"595 1328.5 OFFCURVE",
"694.333 1356 OFFCURVE",
"801 1356 CURVE SMOOTH",
"1015.667 1356 OFFCURVE",
"1210.667 1237.333 OFFCURVE",
"1316 1044 CURVE SMOOTH",
"1368.667 947.333 OFFCURVE",
"1395 842.333 OFFCURVE",
"1395 729 CURVE SMOOTH",
"1395 500 OFFCURVE",
"1281 292 OFFCURVE",
"1098 181 CURVE SMOOTH",
"1007 126 OFFCURVE",
"908 98 OFFCURVE",
"801 98 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
39 58 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
46 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
54 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 54 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 3 31 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
10 46 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 10 16 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
14 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
17 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1609;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1095.667 -21 OFFCURVE",
"1330.667 128.667 OFFCURVE",
"1452 358 CURVE SMOOTH",
"1512.667 472.667 OFFCURVE",
"1543 596.333 OFFCURVE",
"1543 729 CURVE SMOOTH",
"1543 998.333 OFFCURVE",
"1411.167 1243.833 OFFCURVE",
"1190.5 1376.5 CURVE SMOOTH",
"1080.167 1442.833 OFFCURVE",
"961 1476 OFFCURVE",
"833 1476 CURVE SMOOTH",
"577 1476 OFFCURVE",
"341.167 1334.667 OFFCURVE",
"216.5 1104 CURVE SMOOTH",
"154.167 988.667 OFFCURVE",
"123 863.667 OFFCURVE",
"123 729 CURVE SMOOTH",
"123 463.667 OFFCURVE",
"249.833 220.5 OFFCURVE",
"470.5 82.5 CURVE SMOOTH",
"580.833 13.5 OFFCURVE",
"701.667 -21 OFFCURVE",
"833 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1014 302 OFFCURVE",
"1124 413.333 OFFCURVE",
"1124 616 CURVE",
"1072 616 LINE",
"1072 443.333 OFFCURVE",
"990 357 OFFCURVE",
"826 357 CURVE SMOOTH",
"666 357 OFFCURVE",
"561 490.333 OFFCURVE",
"561 689 CURVE SMOOTH",
"561 763 LINE SMOOTH",
"561 969.667 OFFCURVE",
"667.333 1102 OFFCURVE",
"826 1102 CURVE SMOOTH",
"984.667 1102 OFFCURVE",
"1073 1016.667 OFFCURVE",
"1073 842 CURVE",
"1125 842 LINE",
"1125 1039.333 OFFCURVE",
"1016.667 1155 OFFCURVE",
"826 1155 CURVE SMOOTH",
"636.667 1155 OFFCURVE",
"506 998.667 OFFCURVE",
"506 768 CURVE SMOOTH",
"506 693 LINE SMOOTH",
"506 458.333 OFFCURVE",
"634 302 OFFCURVE",
"826 302 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"601 34 OFFCURVE",
"385.5 164.167 OFFCURVE",
"267.5 379.5 CURVE SMOOTH",
"208.5 487.167 OFFCURVE",
"179 603.667 OFFCURVE",
"179 729 CURVE SMOOTH",
"179 981 OFFCURVE",
"305.333 1208.667 OFFCURVE",
"508 1330 CURVE SMOOTH",
"609.333 1390.667 OFFCURVE",
"717.667 1421 OFFCURVE",
"833 1421 CURVE SMOOTH",
"1066.333 1421 OFFCURVE",
"1284 1288.167 OFFCURVE",
"1400 1075.5 CURVE SMOOTH",
"1458 969.167 OFFCURVE",
"1487 853.667 OFFCURVE",
"1487 729 CURVE SMOOTH",
"1487 481 OFFCURVE",
"1363.667 253.333 OFFCURVE",
"1161 128 CURVE SMOOTH",
"1059.667 65.333 OFFCURVE",
"950.333 34 OFFCURVE",
"833 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
39 58 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
46 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
54 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 54 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 3 31 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
10 46 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 10 16 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
14 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
17 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1666;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"871 -21 OFFCURVE",
"1132 131 OFFCURVE",
"1293 360 CURVE SMOOTH",
"1373 475 OFFCURVE",
"1425 598 OFFCURVE",
"1448 729 CURVE SMOOTH",
"1495 998 OFFCURVE",
"1407 1244 OFFCURVE",
"1210 1377 CURVE SMOOTH",
"1112 1443 OFFCURVE",
"998 1476 OFFCURVE",
"870 1476 CURVE SMOOTH",
"614 1476 OFFCURVE",
"354 1335 OFFCURVE",
"188 1104 CURVE SMOOTH",
"106 989 OFFCURVE",
"53 864 OFFCURVE",
"29 729 CURVE SMOOTH",
"-18 464 OFFCURVE",
"66 221 OFFCURVE",
"262 83 CURVE SMOOTH",
"360 14 OFFCURVE",
"475 -21 OFFCURVE",
"607 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"858 283 OFFCURVE",
"998 393 OFFCURVE",
"1033 597 CURVE",
"887 597 LINE",
"864 462 OFFCURVE",
"793 412 OFFCURVE",
"670 412 CURVE SMOOTH",
"545 412 OFFCURVE",
"485 510 OFFCURVE",
"513 670 CURVE SMOOTH",
"533 783 LINE SMOOTH",
"562 947 OFFCURVE",
"656 1044 OFFCURVE",
"781 1044 CURVE SMOOTH",
"903 1044 OFFCURVE",
"958 992 OFFCURVE",
"935 860 CURVE",
"1081 860 LINE",
"1116 1059 OFFCURVE",
"1017 1173 OFFCURVE",
"804 1173 CURVE SMOOTH",
"597 1173 OFFCURVE",
"431 1021 OFFCURVE",
"390 786 CURVE SMOOTH",
"370 676 LINE SMOOTH",
"328 433 OFFCURVE",
"438 283 OFFCURVE",
"647 283 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"414 98 OFFCURVE",
"240 215 OFFCURVE",
"168 411 CURVE SMOOTH",
"131 508 OFFCURVE",
"124 614 OFFCURVE",
"144 729 CURVE SMOOTH",
"184 956 OFFCURVE",
"333 1164 OFFCURVE",
"537 1274 CURVE SMOOTH",
"638 1329 OFFCURVE",
"743 1356 OFFCURVE",
"849 1356 CURVE SMOOTH",
"1064 1356 OFFCURVE",
"1238 1237 OFFCURVE",
"1309 1044 CURVE SMOOTH",
"1345 947 OFFCURVE",
"1353 842 OFFCURVE",
"1333 729 CURVE SMOOTH",
"1292 500 OFFCURVE",
"1142 292 OFFCURVE",
"939 181 CURVE SMOOTH",
"838 126 OFFCURVE",
"734 98 OFFCURVE",
"627 98 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
39 58 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
46 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
54 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 54 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 3 31 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
10 46 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 10 16 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
14 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
17 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1609;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"901 -21 OFFCURVE",
"1163 129 OFFCURVE",
"1324 358 CURVE SMOOTH",
"1405 473 OFFCURVE",
"1457 596 OFFCURVE",
"1481 729 CURVE SMOOTH",
"1528 998 OFFCURVE",
"1440 1244 OFFCURVE",
"1242 1377 CURVE SMOOTH",
"1144 1443 OFFCURVE",
"1030 1476 OFFCURVE",
"902 1476 CURVE SMOOTH",
"646 1476 OFFCURVE",
"386 1335 OFFCURVE",
"220 1104 CURVE SMOOTH",
"138 989 OFFCURVE",
"85 864 OFFCURVE",
"61 729 CURVE SMOOTH",
"14 464 OFFCURVE",
"98 221 OFFCURVE",
"294 83 CURVE SMOOTH",
"392 14 OFFCURVE",
"507 -21 OFFCURVE",
"639 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"876 302 OFFCURVE",
"1006 413 OFFCURVE",
"1042 616 CURVE",
"990 616 LINE",
"959 443 OFFCURVE",
"862 357 OFFCURVE",
"698 357 CURVE SMOOTH",
"538 357 OFFCURVE",
"457 490 OFFCURVE",
"492 689 CURVE SMOOTH",
"505 763 LINE SMOOTH",
"541 970 OFFCURVE",
"671 1102 OFFCURVE",
"830 1102 CURVE SMOOTH",
"988 1102 OFFCURVE",
"1061 1017 OFFCURVE",
"1031 842 CURVE",
"1083 842 LINE",
"1117 1039 OFFCURVE",
"1030 1155 OFFCURVE",
"839 1155 CURVE SMOOTH",
"650 1155 OFFCURVE",
"491 999 OFFCURVE",
"451 768 CURVE SMOOTH",
"437 693 LINE SMOOTH",
"396 458 OFFCURVE",
"496 302 OFFCURVE",
"688 302 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"416 34 OFFCURVE",
"224 164 OFFCURVE",
"144 380 CURVE SMOOTH",
"104 487 OFFCURVE",
"95 604 OFFCURVE",
"117 729 CURVE SMOOTH",
"161 981 OFFCURVE",
"328 1209 OFFCURVE",
"552 1330 CURVE SMOOTH",
"664 1391 OFFCURVE",
"777 1421 OFFCURVE",
"893 1421 CURVE SMOOTH",
"1126 1421 OFFCURVE",
"1320 1288 OFFCURVE",
"1399 1076 CURVE SMOOTH",
"1438 969 OFFCURVE",
"1447 854 OFFCURVE",
"1425 729 CURVE SMOOTH",
"1381 481 OFFCURVE",
"1218 253 OFFCURVE",
"993 128 CURVE SMOOTH",
"880 65 OFFCURVE",
"766 34 OFFCURVE",
"648 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
39 58 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
46 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
54 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 54 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 3 31 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
10 46 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 10 16 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
14 10 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
17 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
27 3 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1666;
}
);
note = uni00A9;
unicode = 00A9;
},
{
glyphname = ordfeminine;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"468.667 691 OFFCURVE",
"535.667 718.333 OFFCURVE",
"587 773 CURVE",
"591.667 745.667 OFFCURVE",
"597.333 723 OFFCURVE",
"604 705 CURVE",
"781 705 LINE",
"763.667 759 OFFCURVE",
"755 818.333 OFFCURVE",
"755 883 CURVE SMOOTH",
"755 1199 LINE SMOOTH",
"755 1376.333 OFFCURVE",
"644 1476 OFFCURVE",
"464 1476 CURVE SMOOTH",
"282.667 1476 OFFCURVE",
"153 1381.667 OFFCURVE",
"153 1243 CURVE",
"326 1229 LINE",
"326 1293 OFFCURVE",
"377.333 1328 OFFCURVE",
"464 1328 CURVE SMOOTH",
"541.333 1328 OFFCURVE",
"580 1285.667 OFFCURVE",
"580 1201 CURVE SMOOTH",
"580 1150 LINE",
"478 1150 LINE SMOOTH",
"247.333 1150 OFFCURVE",
"137 1065.667 OFFCURVE",
"137 919 CURVE SMOOTH",
"137 779 OFFCURVE",
"228.667 691 OFFCURVE",
"386 691 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"351 835 OFFCURVE",
"312 864.333 OFFCURVE",
"312 923 CURVE SMOOTH",
"312 988.333 OFFCURVE",
"372.667 1031.667 OFFCURVE",
"474 1033 CURVE SMOOTH",
"580 1033 LINE",
"580 897 LINE",
"544 863.667 OFFCURVE",
"482.333 835 OFFCURVE",
"429 835 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 38 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 11 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 909;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"481.333 691 OFFCURVE",
"549.333 719.667 OFFCURVE",
"600 777 CURVE",
"604 751.667 OFFCURVE",
"610 727.667 OFFCURVE",
"618 705 CURVE",
"783 705 LINE",
"765.667 759 OFFCURVE",
"757 818.333 OFFCURVE",
"757 883 CURVE SMOOTH",
"757 1199 LINE SMOOTH",
"757 1377.667 OFFCURVE",
"647.333 1476 OFFCURVE",
"470 1476 CURVE SMOOTH",
"287.333 1476 OFFCURVE",
"161 1380.333 OFFCURVE",
"161 1243 CURVE",
"322 1231 LINE",
"322 1299 OFFCURVE",
"378 1336 OFFCURVE",
"470 1336 CURVE SMOOTH",
"552.667 1336 OFFCURVE",
"594 1291 OFFCURVE",
"594 1201 CURVE SMOOTH",
"594 1149 LINE",
"486 1149 LINE SMOOTH",
"256.667 1149 OFFCURVE",
"147 1066 OFFCURVE",
"147 918 CURVE SMOOTH",
"147 780.667 OFFCURVE",
"237.333 691 OFFCURVE",
"396 691 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"351.667 828 OFFCURVE",
"310 859.333 OFFCURVE",
"310 922 CURVE SMOOTH",
"310 990 OFFCURVE",
"371.333 1035.667 OFFCURVE",
"482 1037 CURVE SMOOTH",
"594 1037 LINE",
"594 895 LINE",
"556.667 859 OFFCURVE",
"492.333 828 OFFCURVE",
"435 828 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 38 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 11 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 915;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"511.667 691 OFFCURVE",
"606 743 OFFCURVE",
"658 823 CURVE",
"660.667 780.333 OFFCURVE",
"668 741 OFFCURVE",
"680 705 CURVE",
"738 705 LINE",
"720.667 763 OFFCURVE",
"712 822.667 OFFCURVE",
"712 884 CURVE SMOOTH",
"712 1200 LINE SMOOTH",
"712 1376 OFFCURVE",
"612.667 1476 OFFCURVE",
"458 1476 CURVE SMOOTH",
"286 1476 OFFCURVE",
"167 1379 OFFCURVE",
"167 1243 CURVE",
"221 1243 LINE",
"221 1364.333 OFFCURVE",
"312.667 1422 OFFCURVE",
"458 1422 CURVE SMOOTH",
"591.333 1422 OFFCURVE",
"657 1339.667 OFFCURVE",
"657 1201 CURVE SMOOTH",
"657 1132 LINE",
"487 1132 LINE SMOOTH",
"284.333 1132 OFFCURVE",
"168 1045.333 OFFCURVE",
"168 900 CURVE SMOOTH",
"168 773.333 OFFCURVE",
"255.667 691 OFFCURVE",
"417 691 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"287.333 746 OFFCURVE",
"222 798.667 OFFCURVE",
"222 904 CURVE SMOOTH",
"222 1020 OFFCURVE",
"311.333 1078 OFFCURVE",
"490 1078 CURVE SMOOTH {name = \"❌\";}",
"657 1078 LINE {name = \"❌\";}",
"657 899 LINE",
"630.333 820.333 OFFCURVE",
"511.333 746 OFFCURVE",
"418 746 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 38 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 11 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 898;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"412 691 OFFCURVE",
"485 720 OFFCURVE",
"546 777 CURVE",
"546 752 OFFCURVE",
"548 728 OFFCURVE",
"552 705 CURVE",
"717 705 LINE",
"709 759 OFFCURVE",
"711 818 OFFCURVE",
"722 883 CURVE SMOOTH",
"778 1199 LINE SMOOTH",
"809 1378 OFFCURVE",
"717 1476 OFFCURVE",
"539 1476 CURVE SMOOTH",
"357 1476 OFFCURVE",
"214 1380 OFFCURVE",
"189 1243 CURVE",
"348 1231 LINE",
"360 1299 OFFCURVE",
"423 1336 OFFCURVE",
"515 1336 CURVE SMOOTH",
"597 1336 OFFCURVE",
"631 1291 OFFCURVE",
"615 1201 CURVE SMOOTH",
"606 1149 LINE",
"498 1149 LINE SMOOTH",
"268 1149 OFFCURVE",
"144 1066 OFFCURVE",
"118 918 CURVE SMOOTH",
"94 781 OFFCURVE",
"168 691 OFFCURVE",
"327 691 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 828 OFFCURVE",
"271 859 OFFCURVE",
"282 922 CURVE SMOOTH",
"294 990 OFFCURVE",
"363 1036 OFFCURVE",
"474 1037 CURVE SMOOTH",
"586 1037 LINE",
"561 895 LINE",
"517 859 OFFCURVE",
"448 828 OFFCURVE",
"390 828 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 38 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 11 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 915;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"443 691 OFFCURVE",
"546 743 OFFCURVE",
"612 823 CURVE",
"607 780 OFFCURVE",
"608 741 OFFCURVE",
"614 705 CURVE",
"672 705 LINE",
"664 763 OFFCURVE",
"666 823 OFFCURVE",
"677 884 CURVE SMOOTH",
"733 1200 LINE SMOOTH",
"764 1376 OFFCURVE",
"682 1476 OFFCURVE",
"527 1476 CURVE SMOOTH",
"355 1476 OFFCURVE",
"219 1379 OFFCURVE",
"195 1243 CURVE",
"249 1243 LINE",
"271 1364 OFFCURVE",
"373 1422 OFFCURVE",
"518 1422 CURVE SMOOTH",
"651 1422 OFFCURVE",
"702 1340 OFFCURVE",
"678 1201 CURVE SMOOTH",
"666 1132 LINE",
"496 1132 LINE SMOOTH",
"293 1132 OFFCURVE",
"162 1045 OFFCURVE",
"136 900 CURVE SMOOTH",
"114 773 OFFCURVE",
"187 691 OFFCURVE",
"348 691 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"228 746 OFFCURVE",
"172 799 OFFCURVE",
"191 904 CURVE SMOOTH",
"211 1020 OFFCURVE",
"311 1078 OFFCURVE",
"489 1078 CURVE SMOOTH {name = \"❌\";}",
"656 1078 LINE {name = \"❌\";}",
"625 899 LINE",
"584 820 OFFCURVE",
"452 746 OFFCURVE",
"359 746 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 38 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 38 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
2 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
11 4 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 11 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 898;
}
);
note = uni00AA;
unicode = 00AA;
},
{
glyphname = guillemetleft;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, -31, 0}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 354, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1023;
},
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, -6, -2}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 324, -2}";
}
);
layerId = m002;
width = 961;
},
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 37, -35}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 324, -35}";
}
);
layerId = m003;
width = 905;
},
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, -6, -2}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 324, -2}";
}
);
layerId = m004;
width = 961;
},
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 37, -35}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 324, -35}";
}
);
layerId = m005;
width = 905;
}
);
note = uni00AB;
unicode = 00AB;
},
{
glyphname = logicalnot;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"961 374 LINE",
"961 805 LINE",
"126 805 LINE",
"126 634 LINE",
"761 634 LINE",
"761 374 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"958 375 LINE",
"958 800 LINE",
"127 800 LINE",
"127 639 LINE",
"772 639 LINE",
"772 375 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1134;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"915 396 LINE",
"915 753 LINE",
"122 753 LINE",
"122 700 LINE",
"861 700 LINE",
"861 396 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1101;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"833 375 LINE",
"908 800 LINE",
"77 800 LINE",
"49 639 LINE",
"694 639 LINE",
"647 375 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1134;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"794 396 LINE",
"857 753 LINE",
"64 753 LINE",
"55 700 LINE",
"794 700 LINE",
"740 396 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1101;
}
);
note = uni00AC;
unicode = 00AC;
},
{
glyphname = registered;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1050.667 -20 OFFCURVE",
"1284.333 120.167 OFFCURVE",
"1411 351.5 CURVE SMOOTH",
"1474.333 467.167 OFFCURVE",
"1506 593 OFFCURVE",
"1506 729 CURVE SMOOTH",
"1506 998.333 OFFCURVE",
"1374.167 1243.833 OFFCURVE",
"1153.5 1376.5 CURVE SMOOTH",
"1043.167 1442.833 OFFCURVE",
"924 1476 OFFCURVE",
"796 1476 CURVE SMOOTH",
"540 1476 OFFCURVE",
"304.167 1334.667 OFFCURVE",
"179.5 1104 CURVE SMOOTH",
"117.167 988.667 OFFCURVE",
"86 863.667 OFFCURVE",
"86 729 CURVE SMOOTH",
"86 458.333 OFFCURVE",
"219.167 213.333 OFFCURVE",
"438.5 80 CURVE SMOOTH",
"548.167 13.333 OFFCURVE",
"667.333 -20 OFFCURVE",
"796 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"582.667 104 OFFCURVE",
"388.833 223 OFFCURVE",
"285.5 415 CURVE SMOOTH",
"233.833 511 OFFCURVE",
"208 615.667 OFFCURVE",
"208 729 CURVE SMOOTH",
"210 919 OFFCURVE",
"292 1084 OFFCURVE",
"414 1196 CURVE SMOOTH",
"520 1293 OFFCURVE",
"656 1351 OFFCURVE",
"796 1351 CURVE SMOOTH",
"1013 1351 OFFCURVE",
"1208 1227.5 OFFCURVE",
"1308 1037.5 CURVE SMOOTH",
"1358 942.5 OFFCURVE",
"1383 839.667 OFFCURVE",
"1383 729 CURVE SMOOTH",
"1383 506.333 OFFCURVE",
"1276.833 302.333 OFFCURVE",
"1093.5 189 CURVE SMOOTH",
"1001.833 132.333 OFFCURVE",
"902.667 104 OFFCURVE",
"796 104 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"652 316 LINE",
"652 653 LINE",
"810 653 LINE SMOOTH",
"912.667 653 OFFCURVE",
"953 611.333 OFFCURVE",
"953 510 CURVE SMOOTH",
"953 403.333 OFFCURVE",
"957.333 338.667 OFFCURVE",
"966 316 CURVE",
"1121 316 LINE",
"1121 332 LINE",
"1105.865 366.811 OFFCURVE",
"1104 414.475 OFFCURVE",
"1104 505 CURVE SMOOTH",
"1104 614.333 OFFCURVE",
"1075.333 687.667 OFFCURVE",
"994 729 CURVE",
"1069.333 770.333 OFFCURVE",
"1107 828.333 OFFCURVE",
"1107 903 CURVE SMOOTH",
"1107 1071 OFFCURVE",
"983.333 1166 OFFCURVE",
"782 1166 CURVE SMOOTH",
"501 1166 LINE",
"501 316 LINE"
);
},
{
closed = 1;
nodes = (
"652 1033 LINE",
"793 1033 LINE SMOOTH",
"917 1033 OFFCURVE",
"957 996.333 OFFCURVE",
"957 903 CURVE SMOOTH",
"957 833.667 OFFCURVE",
"886.667 787 OFFCURVE",
"788 787 CURVE SMOOTH",
"652 787 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
54 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
34 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 34 16 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
53 32 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 53 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
0 53 16 53 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 31 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
61 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1606;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1064 -21 OFFCURVE",
"1299 130.667 OFFCURVE",
"1419 360 CURVE SMOOTH",
"1479 474.667 OFFCURVE",
"1509 597.667 OFFCURVE",
"1509 729 CURVE SMOOTH",
"1509 998.333 OFFCURVE",
"1377 1243.833 OFFCURVE",
"1157 1376.5 CURVE SMOOTH",
"1047 1442.833 OFFCURVE",
"928 1476 OFFCURVE",
"800 1476 CURVE SMOOTH",
"544 1476 OFFCURVE",
"308.167 1334.667 OFFCURVE",
"183.5 1104 CURVE SMOOTH",
"121.167 988.667 OFFCURVE",
"90 863.667 OFFCURVE",
"90 729 CURVE SMOOTH",
"90 463.667 OFFCURVE",
"216.833 220.5 OFFCURVE",
"437.5 82.5 CURVE SMOOTH",
"547.833 13.5 OFFCURVE",
"668.667 -21 OFFCURVE",
"800 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"586.667 98 OFFCURVE",
"391.667 215.167 OFFCURVE",
"285 410.5 CURVE SMOOTH",
"231.667 508.167 OFFCURVE",
"205 614.333 OFFCURVE",
"205 729 CURVE SMOOTH",
"205 955.667 OFFCURVE",
"318 1163.5 OFFCURVE",
"502 1273.5 CURVE SMOOTH",
"594 1328.5 OFFCURVE",
"693.333 1356 OFFCURVE",
"800 1356 CURVE SMOOTH",
"1014.667 1356 OFFCURVE",
"1210.833 1237.167 OFFCURVE",
"1315.5 1044.5 CURVE SMOOTH",
"1367.833 948.167 OFFCURVE",
"1394 843 OFFCURVE",
"1394 729 CURVE SMOOTH",
"1394 499.667 OFFCURVE",
"1283 295.167 OFFCURVE",
"1099 182.5 CURVE SMOOTH",
"1007 126.167 OFFCURVE",
"907.333 98 OFFCURVE",
"800 98 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"653 316 LINE",
"653 654 LINE",
"829 654 LINE SMOOTH",
"964 649 OFFCURVE",
"963 572 OFFCURVE",
"963 444.5 CURVE SMOOTH",
"963 382.833 OFFCURVE",
"967.667 340 OFFCURVE",
"977 316 CURVE",
"1122 316 LINE",
"1122 332 LINE",
"1110.667 357.333 OFFCURVE",
"1105 398.667 OFFCURVE",
"1105 517 CURVE SMOOTH",
"1104.333 619.667 OFFCURVE",
"1063.333 687.667 OFFCURVE",
"982 721 CURVE",
"1067.333 764.333 OFFCURVE",
"1110 827 OFFCURVE",
"1110 909 CURVE SMOOTH",
"1110 1075.667 OFFCURVE",
"992 1165 OFFCURVE",
"788 1165 CURVE SMOOTH",
"512 1165 LINE",
"512 316 LINE"
);
},
{
closed = 1;
nodes = (
"653 1038 LINE",
"791 1038 LINE SMOOTH",
"924.333 1038 OFFCURVE",
"969 1001.333 OFFCURVE",
"969 904 CURVE SMOOTH",
"969 832 OFFCURVE",
"905 784.667 OFFCURVE",
"809 782 CURVE SMOOTH",
"653 782 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
54 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
34 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 34 16 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
53 32 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 53 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
0 53 16 53 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 31 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
61 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1610;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1087.667 -21 OFFCURVE",
"1322.667 128.667 OFFCURVE",
"1444 358 CURVE SMOOTH",
"1504.667 472.667 OFFCURVE",
"1535 596.333 OFFCURVE",
"1535 729 CURVE SMOOTH",
"1535 998.333 OFFCURVE",
"1403.167 1243.833 OFFCURVE",
"1182.5 1376.5 CURVE SMOOTH",
"1072.167 1442.833 OFFCURVE",
"953 1476 OFFCURVE",
"825 1476 CURVE SMOOTH",
"569 1476 OFFCURVE",
"333.167 1334.667 OFFCURVE",
"208.5 1104 CURVE SMOOTH",
"146.167 988.667 OFFCURVE",
"115 863.667 OFFCURVE",
"115 729 CURVE SMOOTH",
"115 463.667 OFFCURVE",
"241.833 220.5 OFFCURVE",
"462.5 82.5 CURVE SMOOTH",
"572.833 13.5 OFFCURVE",
"693.667 -21 OFFCURVE",
"825 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"589 34 OFFCURVE",
"373 168.5 OFFCURVE",
"257 382.5 CURVE SMOOTH",
"199 489.5 OFFCURVE",
"170 605 OFFCURVE",
"170 729 CURVE SMOOTH",
"170 978.333 OFFCURVE",
"293.167 1204 OFFCURVE",
"496.5 1328 CURVE SMOOTH",
"598.167 1390 OFFCURVE",
"707.667 1421 OFFCURVE",
"825 1421 CURVE SMOOTH",
"1062 1421 OFFCURVE",
"1279 1284 OFFCURVE",
"1392 1075.5 CURVE SMOOTH",
"1450 969.167 OFFCURVE",
"1479 853.667 OFFCURVE",
"1479 729 CURVE SMOOTH",
"1479 486 OFFCURVE",
"1360 256 OFFCURVE",
"1153 128 CURVE SMOOTH",
"1051.667 65.333 OFFCURVE",
"942.333 34 OFFCURVE",
"825 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"648 326 LINE",
"648 678 LINE",
"873 678 LINE SMOOTH",
"998.333 675.333 OFFCURVE",
"1044 624.667 OFFCURVE",
"1044 502 CURVE SMOOTH",
"1044 408.667 OFFCURVE",
"1048.667 350 OFFCURVE",
"1058 326 CURVE",
"1117 326 LINE",
"1117 342 LINE",
"1105.667 374.667 OFFCURVE",
"1100 428 OFFCURVE",
"1100 502 CURVE SMOOTH",
"1100 614.667 OFFCURVE",
"1056 684 OFFCURVE",
"968 710 CURVE",
"1070 751.333 OFFCURVE",
"1121 820 OFFCURVE",
"1121 916 CURVE SMOOTH",
"1121 1076 OFFCURVE",
"1024.667 1156 OFFCURVE",
"832 1156 CURVE SMOOTH",
"593 1156 LINE",
"593 326 LINE"
);
},
{
closed = 1;
nodes = (
"648 1101 LINE",
"846 1101 LINE SMOOTH",
"1002 1098.333 OFFCURVE",
"1066 1047.667 OFFCURVE",
"1066 917 CURVE SMOOTH",
"1066 807.667 OFFCURVE",
"981 734 OFFCURVE",
"853 734 CURVE SMOOTH",
"648 734 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
54 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
34 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 34 16 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
53 32 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 53 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
0 53 16 53 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 31 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
61 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1674;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"870 -21 OFFCURVE",
"1131 131 OFFCURVE",
"1292 360 CURVE SMOOTH",
"1372 475 OFFCURVE",
"1424 598 OFFCURVE",
"1447 729 CURVE SMOOTH",
"1494 998 OFFCURVE",
"1406 1244 OFFCURVE",
"1209 1377 CURVE SMOOTH",
"1111 1443 OFFCURVE",
"997 1476 OFFCURVE",
"869 1476 CURVE SMOOTH",
"613 1476 OFFCURVE",
"353 1335 OFFCURVE",
"187 1104 CURVE SMOOTH",
"105 989 OFFCURVE",
"52 864 OFFCURVE",
"28 729 CURVE SMOOTH",
"-19 464 OFFCURVE",
"65 221 OFFCURVE",
"261 83 CURVE SMOOTH",
"359 14 OFFCURVE",
"474 -21 OFFCURVE",
"606 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"413 98 OFFCURVE",
"239 215 OFFCURVE",
"167 411 CURVE SMOOTH",
"130 508 OFFCURVE",
"123 614 OFFCURVE",
"143 729 CURVE SMOOTH",
"183 956 OFFCURVE",
"332 1164 OFFCURVE",
"536 1274 CURVE SMOOTH",
"637 1329 OFFCURVE",
"742 1356 OFFCURVE",
"848 1356 CURVE SMOOTH",
"1063 1356 OFFCURVE",
"1238 1237 OFFCURVE",
"1309 1045 CURVE SMOOTH",
"1344 948 OFFCURVE",
"1352 843 OFFCURVE",
"1332 729 CURVE SMOOTH",
"1291 500 OFFCURVE",
"1144 295 OFFCURVE",
"940 183 CURVE SMOOTH",
"838 126 OFFCURVE",
"734 98 OFFCURVE",
"626 98 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"518 316 LINE",
"578 654 LINE",
"754 654 LINE SMOOTH",
"888 649 OFFCURVE",
"873 572 OFFCURVE",
"851 445 CURVE SMOOTH",
"840 383 OFFCURVE",
"837 340 OFFCURVE",
"842 316 CURVE",
"987 316 LINE",
"990 332 LINE",
"983 357 OFFCURVE",
"985 399 OFFCURVE",
"1005 517 CURVE SMOOTH",
"1023 620 OFFCURVE",
"994 688 OFFCURVE",
"918 721 CURVE",
"1011 764 OFFCURVE",
"1065 827 OFFCURVE",
"1079 909 CURVE SMOOTH",
"1109 1076 OFFCURVE",
"1007 1165 OFFCURVE",
"803 1165 CURVE SMOOTH",
"527 1165 LINE",
"377 316 LINE"
);
},
{
closed = 1;
nodes = (
"645 1038 LINE",
"783 1038 LINE SMOOTH",
"917 1038 OFFCURVE",
"955 1001 OFFCURVE",
"938 904 CURVE SMOOTH",
"925 832 OFFCURVE",
"853 785 OFFCURVE",
"756 782 CURVE SMOOTH",
"600 782 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
54 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
34 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 34 16 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
53 32 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 53 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
0 53 16 53 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 31 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
61 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1610;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"893 -21 OFFCURVE",
"1155 129 OFFCURVE",
"1316 358 CURVE SMOOTH",
"1397 473 OFFCURVE",
"1449 596 OFFCURVE",
"1473 729 CURVE SMOOTH",
"1520 998 OFFCURVE",
"1432 1244 OFFCURVE",
"1234 1377 CURVE SMOOTH",
"1136 1443 OFFCURVE",
"1022 1476 OFFCURVE",
"894 1476 CURVE SMOOTH",
"638 1476 OFFCURVE",
"378 1335 OFFCURVE",
"212 1104 CURVE SMOOTH",
"130 989 OFFCURVE",
"77 864 OFFCURVE",
"53 729 CURVE SMOOTH",
"6 464 OFFCURVE",
"90 221 OFFCURVE",
"286 83 CURVE SMOOTH",
"384 14 OFFCURVE",
"499 -21 OFFCURVE",
"631 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"404 34 OFFCURVE",
"212 169 OFFCURVE",
"134 383 CURVE SMOOTH",
"95 490 OFFCURVE",
"86 605 OFFCURVE",
"108 729 CURVE SMOOTH",
"152 978 OFFCURVE",
"315 1204 OFFCURVE",
"540 1328 CURVE SMOOTH",
"652 1390 OFFCURVE",
"767 1421 OFFCURVE",
"885 1421 CURVE SMOOTH",
"1122 1421 OFFCURVE",
"1315 1284 OFFCURVE",
"1391 1076 CURVE SMOOTH",
"1430 969 OFFCURVE",
"1439 854 OFFCURVE",
"1417 729 CURVE SMOOTH",
"1374 486 OFFCURVE",
"1214 256 OFFCURVE",
"985 128 CURVE SMOOTH",
"872 65 OFFCURVE",
"758 34 OFFCURVE",
"640 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"515 326 LINE",
"577 678 LINE",
"802 678 LINE SMOOTH",
"927 675 OFFCURVE",
"963 625 OFFCURVE",
"942 502 CURVE SMOOTH",
"925 409 OFFCURVE",
"920 350 OFFCURVE",
"925 326 CURVE",
"984 326 LINE",
"987 342 LINE",
"981 375 OFFCURVE",
"985 428 OFFCURVE",
"998 502 CURVE SMOOTH",
"1018 615 OFFCURVE",
"986 684 OFFCURVE",
"902 710 CURVE",
"1012 751 OFFCURVE",
"1075 820 OFFCURVE",
"1092 916 CURVE SMOOTH",
"1120 1076 OFFCURVE",
"1038 1156 OFFCURVE",
"845 1156 CURVE SMOOTH",
"606 1156 LINE",
"460 326 LINE"
);
},
{
closed = 1;
nodes = (
"651 1101 LINE",
"849 1101 LINE SMOOTH",
"1005 1098 OFFCURVE",
"1060 1048 OFFCURVE",
"1037 917 CURVE SMOOTH",
"1018 808 OFFCURVE",
"920 734 OFFCURVE",
"792 734 CURVE SMOOTH",
"587 734 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
54 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
19 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
34 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
0 34 16 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
53 32 34 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
191 53 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
0 53 16 53 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 31 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
61 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1674;
}
);
note = uni00AE;
unicode = 00AE;
},
{
glyphname = macron;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"858 1287 LINE",
"858 1454 LINE {name = \"❌\";}",
"168 1454 LINE {name = \"❌\";}",
"168 1287 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 4 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1026;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"814 1302 LINE",
"814 1445 LINE",
"142 1445 LINE",
"142 1302 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 4 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 938;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"699 1383 LINE",
"699 1436 LINE",
"132 1436 LINE",
"132 1383 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 4 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 811;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"853 1302 LINE",
"878 1445 LINE",
"206 1445 LINE",
"181 1302 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 4 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 938;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"752 1383 LINE",
"761 1436 LINE",
"194 1436 LINE",
"185 1383 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 4 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 811;
}
);
note = uni00AF;
unicode = 00AF;
},
{
glyphname = degree;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"543.333 928 OFFCURVE",
"666 1046.667 OFFCURVE",
"666 1200 CURVE SMOOTH",
"666 1353.333 OFFCURVE",
"543.333 1476 OFFCURVE",
"398 1476 CURVE SMOOTH",
"251.333 1476 OFFCURVE",
"126 1352 OFFCURVE",
"126 1200 CURVE SMOOTH",
"126 1046.667 OFFCURVE",
"254 928 OFFCURVE",
"398 928 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328.667 1076 OFFCURVE",
"273 1130.667 OFFCURVE",
"273 1200 CURVE SMOOTH",
"273 1269.333 OFFCURVE",
"327.333 1328 OFFCURVE",
"398 1328 CURVE SMOOTH",
"468.667 1328 OFFCURVE",
"520 1269.333 OFFCURVE",
"520 1200 CURVE SMOOTH",
"520 1129.333 OFFCURVE",
"468.667 1076 OFFCURVE",
"398 1076 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 795;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"523.667 960 OFFCURVE",
"636 1074.667 OFFCURVE",
"636 1216 CURVE SMOOTH",
"636 1356 OFFCURVE",
"523.667 1476 OFFCURVE",
"385 1476 CURVE SMOOTH",
"243.667 1476 OFFCURVE",
"130 1354.667 OFFCURVE",
"130 1216 CURVE SMOOTH",
"130 1074.667 OFFCURVE",
"245 960 OFFCURVE",
"385 960 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"311.667 1088 OFFCURVE",
"255 1144 OFFCURVE",
"255 1216 CURVE SMOOTH",
"255 1288 OFFCURVE",
"311.667 1349 OFFCURVE",
"385 1349 CURVE SMOOTH",
"457 1349 OFFCURVE",
"513 1293.333 OFFCURVE",
"513 1216 CURVE SMOOTH",
"513 1140 OFFCURVE",
"457 1088 OFFCURVE",
"385 1088 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 765;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"520 999 OFFCURVE",
"624 1105.333 OFFCURVE",
"624 1236 CURVE SMOOTH",
"624 1365.333 OFFCURVE",
"520 1476 OFFCURVE",
"392 1476 CURVE SMOOTH",
"261.333 1476 OFFCURVE",
"156 1365.333 OFFCURVE",
"156 1236 CURVE SMOOTH",
"156 1104 OFFCURVE",
"261.333 999 OFFCURVE",
"392 999 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"286.667 1055 OFFCURVE",
"211 1133.333 OFFCURVE",
"211 1236 CURVE SMOOTH",
"211 1341.333 OFFCURVE",
"288 1421 OFFCURVE",
"392 1421 CURVE SMOOTH",
"492 1421 OFFCURVE",
"568 1345.333 OFFCURVE",
"568 1236 CURVE SMOOTH",
"568 1129.333 OFFCURVE",
"493.333 1055 OFFCURVE",
"392 1055 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 783;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"502 960 OFFCURVE",
"635 1075 OFFCURVE",
"660 1216 CURVE SMOOTH",
"684 1356 OFFCURVE",
"593 1476 OFFCURVE",
"454 1476 CURVE SMOOTH",
"313 1476 OFFCURVE",
"178 1355 OFFCURVE",
"154 1216 CURVE SMOOTH",
"129 1075 OFFCURVE",
"223 960 OFFCURVE",
"363 960 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313 1088 OFFCURVE",
"266 1144 OFFCURVE",
"279 1216 CURVE SMOOTH",
"291 1288 OFFCURVE",
"359 1349 OFFCURVE",
"432 1349 CURVE SMOOTH",
"504 1349 OFFCURVE",
"550 1293 OFFCURVE",
"537 1216 CURVE SMOOTH",
"523 1140 OFFCURVE",
"458 1088 OFFCURVE",
"386 1088 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 765;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"505 999 OFFCURVE",
"628 1105 OFFCURVE",
"651 1236 CURVE SMOOTH",
"674 1365 OFFCURVE",
"589 1476 OFFCURVE",
"461 1476 CURVE SMOOTH",
"331 1476 OFFCURVE",
"206 1365 OFFCURVE",
"183 1236 CURVE SMOOTH",
"160 1104 OFFCURVE",
"247 999 OFFCURVE",
"377 999 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 1055 OFFCURVE",
"220 1133 OFFCURVE",
"238 1236 CURVE SMOOTH",
"257 1341 OFFCURVE",
"348 1421 OFFCURVE",
"452 1421 CURVE SMOOTH",
"552 1421 OFFCURVE",
"614 1345 OFFCURVE",
"595 1236 CURVE SMOOTH",
"576 1129 OFFCURVE",
"489 1055 OFFCURVE",
"387 1055 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 783;
}
);
note = uni00B0;
unicode = 00B0;
},
{
glyphname = plusminus;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"677 337 LINE",
"677 701 LINE",
"1005 701 LINE",
"1005 942 LINE",
"677 942 LINE",
"677 1285 LINE",
"424 1285 LINE",
"424 942 LINE",
"89 942 LINE",
"89 701 LINE",
"424 701 LINE",
"424 337 LINE"
);
},
{
closed = 1;
nodes = (
"977 1 LINE {name = \"❌\";}",
"977 236 LINE",
"113 236 LINE",
"113 1 LINE {name = \"❌\";}"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1100;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"649 289 LINE",
"649 703 LINE",
"1013 703 LINE",
"1013 854 LINE",
"649 854 LINE",
"649 1267 LINE",
"482 1267 LINE",
"482 854 LINE",
"97 854 LINE",
"97 703 LINE",
"482 703 LINE",
"482 289 LINE"
);
},
{
closed = 1;
nodes = (
"970 0 LINE",
"970 152 LINE",
"135 152 LINE",
"135 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1094;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"569 289 LINE",
"569 751 LINE",
"988 751 LINE",
"988 805 LINE",
"569 805 LINE",
"569 1267 LINE",
"515 1267 LINE",
"515 805 LINE",
"72 805 LINE",
"72 751 LINE",
"515 751 LINE",
"515 289 LINE"
);
},
{
closed = 1;
nodes = (
"957 -1 LINE {name = \"❌\";}",
"957 53 LINE",
"122 53 LINE",
"122 -1 LINE {name = \"❌\";}"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1077;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"509 289 LINE",
"582 703 LINE",
"946 703 LINE",
"973 854 LINE",
"609 854 LINE",
"682 1267 LINE",
"515 1267 LINE",
"442 854 LINE",
"57 854 LINE",
"30 703 LINE",
"415 703 LINE",
"342 289 LINE"
);
},
{
closed = 1;
nodes = (
"779 0 LINE",
"806 152 LINE",
"-29 152 LINE",
"-56 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1094;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"429 289 LINE",
"511 751 LINE",
"930 751 LINE",
"939 805 LINE",
"520 805 LINE",
"602 1267 LINE",
"548 1267 LINE",
"466 805 LINE",
"23 805 LINE",
"14 751 LINE",
"457 751 LINE",
"375 289 LINE"
);
},
{
closed = 1;
nodes = (
"766 -1 LINE {name = \"❌\";}",
"776 53 LINE",
"-59 53 LINE",
"-69 -1 LINE {name = \"❌\";}"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1077;
}
);
note = uni00B1;
unicode = 00B1;
},
{
glyphname = twosuperior;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"693 667 LINE",
"693 831 LINE",
"342 831 LINE",
"490 946 LINE SMOOTH",
"634 1062 OFFCURVE",
"670 1125.667 OFFCURVE",
"670 1219 CURVE SMOOTH",
"670 1377.667 OFFCURVE",
"558.333 1467 OFFCURVE",
"361 1467 CURVE SMOOTH",
"181 1467 OFFCURVE",
"55 1347.667 OFFCURVE",
"55 1193 CURVE",
"261 1193 LINE",
"261 1255.667 OFFCURVE",
"303.333 1302 OFFCURVE",
"370 1302 CURVE SMOOTH",
"433.333 1302 OFFCURVE",
"465 1274 OFFCURVE",
"465 1218 CURVE SMOOTH",
"465 1170 OFFCURVE",
"404 1101 OFFCURVE",
"360 1062 CURVE SMOOTH",
"73 805 LINE",
"73 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
22 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 14 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 763;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"683 667 LINE",
"683 795 LINE",
"284 795 LINE",
"544 1019 LINE SMOOTH",
"615.333 1090.333 OFFCURVE",
"651 1160.667 OFFCURVE",
"651 1230 CURVE SMOOTH",
"651 1376.667 OFFCURVE",
"541 1467 OFFCURVE",
"365 1467 CURVE SMOOTH",
"189 1467 OFFCURVE",
"66 1357 OFFCURVE",
"66 1205 CURVE",
"223 1205 LINE",
"223 1281 OFFCURVE",
"269 1338 OFFCURVE",
"369 1338 CURVE SMOOTH",
"449 1338 OFFCURVE",
"493 1293.333 OFFCURVE",
"493 1228 CURVE SMOOTH",
"493 1182 OFFCURVE",
"456.667 1125 OFFCURVE",
"384 1057 CURVE SMOOTH",
"84 775 LINE",
"84 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
22 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 14 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"651 664 LINE",
"651 713 LINE",
"175 713 LINE",
"492 1031 LINE SMOOTH",
"567.333 1113 OFFCURVE",
"605 1185.333 OFFCURVE",
"605 1248 CURVE SMOOTH",
"605 1378.667 OFFCURVE",
"510.667 1464 OFFCURVE",
"356 1464 CURVE SMOOTH",
"197.333 1464 OFFCURVE",
"86 1363.333 OFFCURVE",
"86 1226 CURVE",
"140 1226 LINE",
"140 1339.333 OFFCURVE",
"220 1415 OFFCURVE",
"356 1415 CURVE SMOOTH",
"485.333 1415 OFFCURVE",
"551 1349.667 OFFCURVE",
"551 1247 CURVE SMOOTH",
"551 1179 OFFCURVE",
"503.333 1105.667 OFFCURVE",
"398 1003 CURVE SMOOTH",
"108 708 LINE",
"108 664 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
22 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 14 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 728;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"610 667 LINE",
"632 795 LINE",
"233 795 LINE",
"533 1019 LINE SMOOTH",
"617 1090 OFFCURVE",
"665 1161 OFFCURVE",
"677 1230 CURVE SMOOTH",
"703 1377 OFFCURVE",
"609 1467 OFFCURVE",
"433 1467 CURVE SMOOTH",
"257 1467 OFFCURVE",
"114 1357 OFFCURVE",
"88 1205 CURVE",
"245 1205 LINE",
"258 1281 OFFCURVE",
"314 1338 OFFCURVE",
"414 1338 CURVE SMOOTH",
"494 1338 OFFCURVE",
"530 1293 OFFCURVE",
"519 1228 CURVE SMOOTH",
"511 1182 OFFCURVE",
"464 1125 OFFCURVE",
"380 1057 CURVE SMOOTH",
"30 775 LINE",
"11 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
22 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 14 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"577 664 LINE",
"586 713 LINE",
"110 713 LINE",
"483 1031 LINE SMOOTH",
"573 1113 OFFCURVE",
"623 1185 OFFCURVE",
"634 1248 CURVE SMOOTH",
"657 1379 OFFCURVE",
"578 1464 OFFCURVE",
"423 1464 CURVE SMOOTH",
"265 1464 OFFCURVE",
"136 1363 OFFCURVE",
"111 1226 CURVE",
"165 1226 LINE",
"185 1339 OFFCURVE",
"279 1415 OFFCURVE",
"415 1415 CURVE SMOOTH",
"544 1415 OFFCURVE",
"598 1350 OFFCURVE",
"580 1247 CURVE SMOOTH",
"568 1179 OFFCURVE",
"508 1106 OFFCURVE",
"384 1003 CURVE SMOOTH",
"42 708 LINE",
"34 664 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
22 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 14 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 22 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 728;
}
);
note = uni00B2;
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"559.333 656 OFFCURVE",
"693 748 OFFCURVE",
"693 888 CURVE SMOOTH",
"693 983.333 OFFCURVE",
"643 1044.667 OFFCURVE",
"543 1072 CURVE",
"633 1105.333 OFFCURVE",
"678 1161.667 OFFCURVE",
"678 1241 CURVE SMOOTH",
"678 1383.667 OFFCURVE",
"555.333 1467 OFFCURVE",
"362 1467 CURVE SMOOTH",
"187.333 1467 OFFCURVE",
"62 1378 OFFCURVE",
"62 1242 CURVE",
"267 1242 LINE",
"267 1280.667 OFFCURVE",
"312 1302 OFFCURVE",
"368 1302 CURVE SMOOTH",
"433.333 1302 OFFCURVE",
"474 1271.667 OFFCURVE",
"474 1225 CURVE SMOOTH",
"474 1166.333 OFFCURVE",
"434.333 1137 OFFCURVE",
"355 1137 CURVE SMOOTH",
"273 1137 LINE",
"273 1001 LINE",
"365 1001 LINE SMOOTH",
"446.333 1000.333 OFFCURVE",
"487 969.333 OFFCURVE",
"487 908 CURVE SMOOTH",
"487 861.333 OFFCURVE",
"454 820 OFFCURVE",
"374 820 CURVE SMOOTH",
"304.667 820 OFFCURVE",
"254 857.667 OFFCURVE",
"254 903 CURVE",
"48 903 LINE",
"48 751 OFFCURVE",
"172.667 656 OFFCURVE",
"362 656 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
111 0 127 0 143 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
15 0 31 0 47 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 14 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
29 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 763;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"541.333 656 OFFCURVE",
"666 745.667 OFFCURVE",
"666 887 CURVE SMOOTH",
"666 982.333 OFFCURVE",
"616.333 1043.667 OFFCURVE",
"517 1071 CURVE",
"605 1104.333 OFFCURVE",
"653 1168.667 OFFCURVE",
"653 1242 CURVE SMOOTH",
"653 1380.667 OFFCURVE",
"542.667 1467 OFFCURVE",
"360 1467 CURVE SMOOTH",
"194.667 1467 OFFCURVE",
"73 1376.667 OFFCURVE",
"73 1246 CURVE",
"230 1246 LINE",
"230 1300.667 OFFCURVE",
"286 1338 OFFCURVE",
"362 1338 CURVE SMOOTH",
"455.333 1338 OFFCURVE",
"495 1295 OFFCURVE",
"495 1235 CURVE SMOOTH",
"495 1171 OFFCURVE",
"447.667 1126 OFFCURVE",
"349 1126 CURVE SMOOTH",
"265 1126 LINE",
"265 1010 LINE",
"353 1010 LINE SMOOTH",
"457 1008.667 OFFCURVE",
"509 970.333 OFFCURVE",
"509 895 CURVE SMOOTH",
"509 827 OFFCURVE",
"459.333 784 OFFCURVE",
"366 784 CURVE SMOOTH",
"276.667 784 OFFCURVE",
"220 829 OFFCURVE",
"220 889 CURVE",
"62 889 LINE",
"62 746.333 OFFCURVE",
"184 656 OFFCURVE",
"360 656 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
111 0 127 0 143 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
15 0 31 0 47 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 14 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
29 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"529.667 653 OFFCURVE",
"637 741.667 OFFCURVE",
"637 875 CURVE SMOOTH",
"637 971 OFFCURVE",
"577.667 1040.333 OFFCURVE",
"463 1067 CURVE",
"563 1097.667 OFFCURVE",
"618 1170 OFFCURVE",
"618 1246 CURVE SMOOTH",
"618 1382 OFFCURVE",
"520.667 1464 OFFCURVE",
"362 1464 CURVE SMOOTH",
"210 1464 OFFCURVE",
"97 1374 OFFCURVE",
"97 1246 CURVE",
"150 1246 LINE",
"150 1347.333 OFFCURVE",
"240.667 1415 OFFCURVE",
"362 1415 CURVE SMOOTH",
"488.667 1415 OFFCURVE",
"564 1351.667 OFFCURVE",
"564 1249 CURVE SMOOTH",
"564 1157 OFFCURVE",
"479.667 1091.333 OFFCURVE",
"345 1090 CURVE SMOOTH",
"270 1090 LINE",
"270 1041 LINE",
"330 1041 LINE SMOOTH",
"498.667 1041 OFFCURVE",
"583 985.333 OFFCURVE",
"583 874 CURVE SMOOTH",
"583 766 OFFCURVE",
"504.333 701 OFFCURVE",
"367 701 CURVE SMOOTH",
"229.667 701 OFFCURVE",
"134 777 OFFCURVE",
"134 881 CURVE",
"80 881 LINE",
"80 746.333 OFFCURVE",
"201.667 653 OFFCURVE",
"367 653 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
111 0 127 0 143 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
15 0 31 0 47 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 14 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
29 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 728;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"466 656 OFFCURVE",
"607 746 OFFCURVE",
"632 887 CURVE SMOOTH",
"648 982 OFFCURVE",
"610 1044 OFFCURVE",
"515 1071 CURVE",
"609 1104 OFFCURVE",
"668 1169 OFFCURVE",
"681 1242 CURVE SMOOTH",
"706 1381 OFFCURVE",
"611 1467 OFFCURVE",
"428 1467 CURVE SMOOTH",
"263 1467 OFFCURVE",
"125 1377 OFFCURVE",
"102 1246 CURVE",
"259 1246 LINE",
"269 1301 OFFCURVE",
"331 1338 OFFCURVE",
"407 1338 CURVE SMOOTH",
"500 1338 OFFCURVE",
"533 1295 OFFCURVE",
"522 1235 CURVE SMOOTH",
"511 1171 OFFCURVE",
"455 1126 OFFCURVE",
"357 1126 CURVE SMOOTH",
"273 1126 LINE",
"252 1010 LINE",
"340 1010 LINE SMOOTH",
"444 1009 OFFCURVE",
"489 970 OFFCURVE",
"476 895 CURVE SMOOTH",
"464 827 OFFCURVE",
"407 784 OFFCURVE",
"313 784 CURVE SMOOTH",
"224 784 OFFCURVE",
"175 829 OFFCURVE",
"186 889 CURVE",
"28 889 LINE",
"3 746 OFFCURVE",
"109 656 OFFCURVE",
"285 656 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
111 0 127 0 143 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
15 0 31 0 47 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 14 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
29 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"454 653 OFFCURVE",
"577 742 OFFCURVE",
"601 875 CURVE SMOOTH",
"617 971 OFFCURVE",
"570 1040 OFFCURVE",
"460 1067 CURVE",
"566 1098 OFFCURVE",
"634 1170 OFFCURVE",
"647 1246 CURVE SMOOTH",
"671 1382 OFFCURVE",
"588 1464 OFFCURVE",
"429 1464 CURVE SMOOTH",
"277 1464 OFFCURVE",
"148 1374 OFFCURVE",
"126 1246 CURVE",
"179 1246 LINE",
"197 1347 OFFCURVE",
"299 1415 OFFCURVE",
"421 1415 CURVE SMOOTH",
"547 1415 OFFCURVE",
"612 1352 OFFCURVE",
"593 1249 CURVE SMOOTH",
"577 1157 OFFCURVE",
"481 1091 OFFCURVE",
"346 1090 CURVE SMOOTH",
"271 1090 LINE",
"263 1041 LINE",
"323 1041 LINE SMOOTH",
"491 1041 OFFCURVE",
"566 985 OFFCURVE",
"546 874 CURVE SMOOTH",
"527 766 OFFCURVE",
"437 701 OFFCURVE",
"300 701 CURVE SMOOTH",
"162 701 OFFCURVE",
"80 777 OFFCURVE",
"99 881 CURVE",
"45 881 LINE",
"21 746 OFFCURVE",
"126 653 OFFCURVE",
"291 653 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
32 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
111 0 127 0 143 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
63 0 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 7 values pushed */
15 0 31 0 47 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
95 0 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 14 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
29 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 728;
}
);
note = uni00B3;
unicode = 00B3;
},
{
glyphname = acute;
lastChange = "2020-12-14 22:00:51 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"336 1226 LINE",
"613 1536 LINE",
"298 1536 LINE",
"101 1226 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 679;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"272 1242 LINE",
"540 1536 LINE",
"316 1536 LINE",
"123 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 642;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"186 1270 LINE",
"381 1536 LINE",
"315 1536 LINE",
"126 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 511;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"300 1242 LINE",
"620 1536 LINE",
"396 1536 LINE",
"151 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 642;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"219 1270 LINE",
"461 1536 LINE",
"395 1536 LINE",
"159 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 511;
}
);
note = uni00B4;
unicode = 00B4;
},
{
glyphname = micro;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"428 -416 LINE",
"428 24 LINE",
"476 -6 OFFCURVE",
"534 -21 OFFCURVE",
"602 -21 CURVE SMOOTH",
"692.667 -21 OFFCURVE",
"767.667 8.667 OFFCURVE",
"827 68 CURVE",
"833 0 LINE",
"1102 0 LINE",
"1102 1082 LINE",
"813 1082 LINE",
"813 319 LINE",
"775.667 249 OFFCURVE",
"707.333 214 OFFCURVE",
"608 214 CURVE SMOOTH",
"476 214 OFFCURVE",
"428 291 OFFCURVE",
"428 459 CURVE SMOOTH",
"428 1082 LINE",
"139 1082 LINE",
"139 -416 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 7 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1261;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"339 -416 LINE",
"339 53 LINE",
"393 4.333 OFFCURVE",
"469 -20 OFFCURVE",
"567 -20 CURVE SMOOTH",
"680.333 -20 OFFCURVE",
"768 25 OFFCURVE",
"830 115 CURVE",
"839 0 LINE",
"1006 0 LINE",
"1006 1082 LINE",
"820 1082 LINE",
"820 282 LINE",
"778.667 180.667 OFFCURVE",
"691.667 130 OFFCURVE",
"559 130 CURVE SMOOTH",
"404.333 130 OFFCURVE",
"340.333 231.667 OFFCURVE",
"339 449 CURVE SMOOTH",
"339 1082 LINE",
"154 1082 LINE",
"154 -416 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 7 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"223 -416 LINE",
"223 171 LINE",
"279 49.667 OFFCURVE",
"386 -20 OFFCURVE",
"538 -20 CURVE SMOOTH",
"714.667 -20 OFFCURVE",
"835 54.333 OFFCURVE",
"899 203 CURVE",
"902 0 LINE",
"953 0 LINE",
"953 1082 LINE",
"899 1082 LINE",
"899 414 LINE",
"879 148.667 OFFCURVE",
"763.667 34 OFFCURVE",
"529 34 CURVE SMOOTH",
"329 34 OFFCURVE",
"227 169 OFFCURVE",
"223 421 CURVE SMOOTH",
"223 1082 LINE",
"171 1082 LINE",
"171 -416 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 7 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"75 -416 LINE",
"158 53 LINE",
"203 4 OFFCURVE",
"275 -20 OFFCURVE",
"373 -20 CURVE SMOOTH",
"486 -20 OFFCURVE",
"582 25 OFFCURVE",
"659 115 CURVE",
"648 0 LINE",
"815 0 LINE",
"1006 1082 LINE",
"820 1082 LINE",
"679 282 LINE",
"620 181 OFFCURVE",
"524 130 OFFCURVE",
"391 130 CURVE SMOOTH",
"236 130 OFFCURVE",
"190 232 OFFCURVE",
"227 449 CURVE SMOOTH",
"339 1082 LINE",
"154 1082 LINE",
"-110 -416 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 7 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1160;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-41 -416 LINE",
"62 171 LINE",
"97 50 OFFCURVE",
"192 -20 OFFCURVE",
"344 -20 CURVE SMOOTH",
"520 -20 OFFCURVE",
"654 54 OFFCURVE",
"744 203 CURVE",
"711 0 LINE",
"762 0 LINE",
"953 1082 LINE",
"899 1082 LINE",
"781 414 LINE",
"714 149 OFFCURVE",
"579 34 OFFCURVE",
"344 34 CURVE SMOOTH",
"144 34 OFFCURVE",
"66 169 OFFCURVE",
"106 421 CURVE SMOOTH",
"223 1082 LINE",
"171 1082 LINE",
"-93 -416 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
13 19 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 7 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni00B5;
unicode = 00B5;
},
{
glyphname = paragraph;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"869 0 LINE",
"869 1456 LINE",
"571 1456 LINE SMOOTH",
"264.333 1456 OFFCURVE",
"75 1272 OFFCURVE",
"75 988 CURVE SMOOTH",
"75 702.667 OFFCURVE",
"263.333 520 OFFCURVE",
"570 520 CURVE SMOOTH",
"650 520 LINE",
"650 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1003;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"832 0 LINE",
"832 1456 LINE",
"563 1456 LINE SMOOTH",
"256.333 1456 OFFCURVE",
"67 1272 OFFCURVE",
"67 988 CURVE SMOOTH",
"67 702.667 OFFCURVE",
"255.333 520 OFFCURVE",
"562 520 CURVE SMOOTH",
"646 520 LINE",
"646 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1001;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"770 0 LINE",
"770 1456 LINE",
"593 1456 LINE SMOOTH",
"289 1456 OFFCURVE",
"99 1272 OFFCURVE",
"99 988 CURVE SMOOTH",
"100.298 644.682 OFFCURVE",
"441 520 OFFCURVE",
"589 520 CURVE SMOOTH",
"716 520 LINE",
"716 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 946;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"641 0 LINE",
"898 1456 LINE",
"629 1456 LINE SMOOTH",
"322 1456 OFFCURVE",
"101 1272 OFFCURVE",
"50 988 CURVE SMOOTH",
"0 703 OFFCURVE",
"156 520 OFFCURVE",
"463 520 CURVE SMOOTH",
"547 520 LINE",
"455 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1001;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"579 0 LINE",
"836 1456 LINE",
"659 1456 LINE SMOOTH",
"355 1456 OFFCURVE",
"133 1272 OFFCURVE",
"82 988 CURVE SMOOTH",
"23 645 OFFCURVE",
"342 520 OFFCURVE",
"490 520 CURVE SMOOTH",
"617 520 LINE",
"525 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 11 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 946;
}
);
note = uni00B6;
unicode = 00B6;
},
{
glyphname = periodcentered;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"396.333 543 OFFCURVE",
"467 605 OFFCURVE",
"467 697 CURVE SMOOTH",
"467 789 OFFCURVE",
"397.667 852 OFFCURVE",
"303 852 CURVE SMOOTH",
"208.333 852 OFFCURVE",
"140 789 OFFCURVE",
"140 697 CURVE SMOOTH",
"140 607.667 OFFCURVE",
"207 543 OFFCURVE",
"303 543 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 617;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"337 619 OFFCURVE",
"377 666.333 OFFCURVE",
"377 729 CURVE SMOOTH",
"377 793 OFFCURVE",
"337 841 OFFCURVE",
"261 841 CURVE SMOOTH",
"185 841 OFFCURVE",
"147 793 OFFCURVE",
"147 729 CURVE SMOOTH",
"147 666.333 OFFCURVE",
"185 619 OFFCURVE",
"261 619 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 534;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"264.667 651 OFFCURVE",
"290 675.333 OFFCURVE",
"290 706 CURVE SMOOTH",
"290 736.667 OFFCURVE",
"264.667 762 OFFCURVE",
"234 762 CURVE SMOOTH",
"203.333 762 OFFCURVE",
"179 736.667 OFFCURVE",
"179 706 CURVE SMOOTH",
"179 675.333 OFFCURVE",
"203.333 651 OFFCURVE",
"234 651 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 472;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"255 619 OFFCURVE",
"304 666 OFFCURVE",
"315 729 CURVE SMOOTH",
"326 793 OFFCURVE",
"295 841 OFFCURVE",
"219 841 CURVE SMOOTH",
"143 841 OFFCURVE",
"96 793 OFFCURVE",
"85 729 CURVE SMOOTH",
"74 666 OFFCURVE",
"103 619 OFFCURVE",
"179 619 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 534;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"189 651 OFFCURVE",
"218 675 OFFCURVE",
"224 706 CURVE SMOOTH",
"229 737 OFFCURVE",
"208 762 OFFCURVE",
"178 762 CURVE SMOOTH",
"147 762 OFFCURVE",
"118 737 OFFCURVE",
"113 706 CURVE SMOOTH",
"107 675 OFFCURVE",
"127 651 OFFCURVE",
"158 651 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 472;
}
);
note = uni00B7;
unicode = 00B7;
},
{
glyphname = cedilla;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"356.333 -462 OFFCURVE",
"484 -370.667 OFFCURVE",
"484 -224 CURVE SMOOTH",
"484 -126.667 OFFCURVE",
"434 -69 OFFCURVE",
"334 -51 CURVE",
"345 7 LINE",
"129 7 LINE",
"98 -136 LINE",
"198 -142.667 OFFCURVE",
"240 -158 OFFCURVE",
"240 -214 CURVE SMOOTH",
"240 -268 OFFCURVE",
"202.667 -295 OFFCURVE",
"128 -295 CURVE",
"135 -462 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
19 6 35 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
1 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 548;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"313.667 -435 OFFCURVE",
"426 -354.333 OFFCURVE",
"426 -225 CURVE SMOOTH",
"426 -127.667 OFFCURVE",
"375 -70 OFFCURVE",
"273 -52 CURVE",
"285 0 LINE",
"152 0 LINE",
"120 -134 LINE",
"195 -141 OFFCURVE",
"282 -148 OFFCURVE",
"282 -229 CURVE SMOOTH",
"282 -291.667 OFFCURVE",
"221.333 -328 OFFCURVE",
"116 -328 CURVE",
"123 -435 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
19 6 35 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
1 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 507;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"265.333 -435 OFFCURVE",
"373 -358.333 OFFCURVE",
"373 -245 CURVE SMOOTH",
"373 -143 OFFCURVE",
"314 -86.667 OFFCURVE",
"196 -76 CURVE",
"207 0 LINE",
"154 0 LINE",
"129 -121 LINE",
"278.333 -137 OFFCURVE",
"318 -170.333 OFFCURVE",
"318 -245 CURVE SMOOTH",
"318 -327.667 OFFCURVE",
"215.667 -386 OFFCURVE",
"81 -386 CURVE",
"88 -435 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
19 6 35 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
1 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 490;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"46 -435 OFFCURVE",
"173 -354 OFFCURVE",
"196 -225 CURVE SMOOTH",
"213 -128 OFFCURVE",
"172 -70 OFFCURVE",
"73 -52 CURVE",
"94 0 LINE",
"-39 0 LINE",
"-94 -134 LINE",
"-21 -141 OFFCURVE",
"65 -148 OFFCURVE",
"51 -229 CURVE SMOOTH",
"40 -292 OFFCURVE",
"-27 -328 OFFCURVE",
"-133 -328 CURVE",
"-144 -435 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
19 6 35 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
1 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 507;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-2 -435 OFFCURVE",
"119 -358 OFFCURVE",
"139 -245 CURVE SMOOTH",
"157 -143 OFFCURVE",
"108 -87 OFFCURVE",
"-8 -76 CURVE",
"16 0 LINE",
"-37 0 LINE",
"-83 -121 LINE",
"63 -137 OFFCURVE",
"97 -170 OFFCURVE",
"84 -245 CURVE SMOOTH",
"69 -328 OFFCURVE",
"-43 -386 OFFCURVE",
"-178 -386 CURVE",
"-179 -435 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 15 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
19 6 35 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
1 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 490;
}
);
note = uni00B8;
unicode = 00B8;
},
{
glyphname = onesuperior;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"528 667 LINE",
"528 1453 LINE {name = \"❌\";}",
"509 1453 LINE {name = \"❌\";}",
"135 1332 LINE",
"135 1174 LINE",
"324 1215 LINE",
"324 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 763;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"495 667 LINE",
"495 1456 LINE",
"477 1456 LINE",
"122 1339 LINE",
"122 1211 LINE",
"338 1268 LINE",
"338 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"433 664 LINE",
"433 1455 LINE {name = \"❌\";}",
"424 1455 LINE {name = \"❌\";}",
"131 1358 LINE",
"131 1305 LINE",
"379 1386 LINE",
"379 664 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 728;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"422 667 LINE",
"561 1456 LINE",
"543 1456 LINE",
"167 1339 LINE",
"145 1211 LINE",
"371 1268 LINE",
"265 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"359 664 LINE",
"499 1455 LINE {name = \"❌\";}",
"490 1455 LINE {name = \"❌\";}",
"180 1358 LINE",
"170 1305 LINE",
"433 1386 LINE",
"305 664 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 7 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 22 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 3 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 728;
}
);
note = uni00B9;
unicode = 00B9;
},
{
glyphname = ordmasculine;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"675.333 690 OFFCURVE",
"811 832 OFFCURVE",
"811 1044 CURVE SMOOTH",
"811 1116 LINE SMOOTH",
"811 1337.333 OFFCURVE",
"670.667 1476 OFFCURVE",
"464 1476 CURVE SMOOTH",
"257.333 1476 OFFCURVE",
"118 1334.333 OFFCURVE",
"118 1121 CURVE SMOOTH",
"118 1049 LINE SMOOTH",
"118 831.667 OFFCURVE",
"255.333 690 OFFCURVE",
"466 690 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"359.333 836 OFFCURVE",
"293 913.333 OFFCURVE",
"293 1044 CURVE SMOOTH",
"293 1117 LINE SMOOTH",
"293 1253 OFFCURVE",
"360 1328 OFFCURVE",
"464 1328 CURVE SMOOTH",
"569.333 1328 OFFCURVE",
"636 1250.333 OFFCURVE",
"636 1121 CURVE SMOOTH",
"636 1041 LINE SMOOTH",
"634.667 911.667 OFFCURVE",
"570 836 OFFCURVE",
"466 836 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 27 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 936;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"671.333 690 OFFCURVE",
"807 831 OFFCURVE",
"807 1043 CURVE SMOOTH",
"807 1117 LINE SMOOTH",
"807 1338.333 OFFCURVE",
"670.667 1476 OFFCURVE",
"464 1476 CURVE SMOOTH",
"258.667 1476 OFFCURVE",
"122 1333.667 OFFCURVE",
"122 1123 CURVE SMOOTH",
"122 1049 LINE SMOOTH",
"122 829 OFFCURVE",
"260.667 690 OFFCURVE",
"466 690 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"354 829 OFFCURVE",
"285 909.667 OFFCURVE",
"285 1043 CURVE SMOOTH",
"285 1129 LINE SMOOTH",
"287.667 1258.333 OFFCURVE",
"356 1336 OFFCURVE",
"464 1336 CURVE SMOOTH",
"574.667 1336 OFFCURVE",
"644 1255 OFFCURVE",
"644 1123 CURVE SMOOTH",
"644 1045 LINE SMOOTH",
"644 910.333 OFFCURVE",
"576.667 829 OFFCURVE",
"466 829 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 27 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 931;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"635.333 690 OFFCURVE",
"757 822.667 OFFCURVE",
"757 1024 CURVE SMOOTH",
"757 1136 LINE SMOOTH",
"757 1344 OFFCURVE",
"634.667 1476 OFFCURVE",
"452 1476 CURVE SMOOTH",
"269.333 1476 OFFCURVE",
"148 1341 OFFCURVE",
"148 1141 CURVE SMOOTH",
"148 1029 LINE SMOOTH",
"148 819.667 OFFCURVE",
"271.333 690 OFFCURVE",
"454 690 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"295.333 744 OFFCURVE",
"202 849.333 OFFCURVE",
"202 1024 CURVE SMOOTH",
"202 1135 LINE SMOOTH",
"202 1315 OFFCURVE",
"300 1422 OFFCURVE",
"452 1422 CURVE SMOOTH",
"605.333 1422 OFFCURVE",
"704 1311.667 OFFCURVE",
"704 1141 CURVE SMOOTH",
"704 1028 LINE SMOOTH",
"704 853.333 OFFCURVE",
"608.667 744 OFFCURVE",
"454 744 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 27 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 914;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"602 690 OFFCURVE",
"763 831 OFFCURVE",
"800 1043 CURVE SMOOTH",
"813 1117 LINE SMOOTH",
"852 1338 OFFCURVE",
"740 1476 OFFCURVE",
"533 1476 CURVE SMOOTH",
"328 1476 OFFCURVE",
"166 1334 OFFCURVE",
"129 1123 CURVE SMOOTH",
"116 1049 LINE SMOOTH",
"77 829 OFFCURVE",
"192 690 OFFCURVE",
"397 690 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"309 829 OFFCURVE",
"255 910 OFFCURVE",
"278 1043 CURVE SMOOTH",
"293 1129 LINE SMOOTH",
"319 1258 OFFCURVE",
"401 1336 OFFCURVE",
"509 1336 CURVE SMOOTH",
"619 1336 OFFCURVE",
"675 1255 OFFCURVE",
"651 1123 CURVE SMOOTH",
"637 1045 LINE SMOOTH",
"614 910 OFFCURVE",
"532 829 OFFCURVE",
"421 829 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 27 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 931;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"566 690 OFFCURVE",
"711 823 OFFCURVE",
"747 1024 CURVE SMOOTH",
"767 1136 LINE SMOOTH",
"803 1344 OFFCURVE",
"704 1476 OFFCURVE",
"521 1476 CURVE SMOOTH",
"339 1476 OFFCURVE",
"194 1341 OFFCURVE",
"158 1141 CURVE SMOOTH",
"139 1029 LINE SMOOTH",
"102 820 OFFCURVE",
"202 690 OFFCURVE",
"385 690 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"236 744 OFFCURVE",
"161 849 OFFCURVE",
"192 1024 CURVE SMOOTH",
"211 1135 LINE SMOOTH",
"243 1315 OFFCURVE",
"360 1422 OFFCURVE",
"512 1422 CURVE SMOOTH",
"665 1422 OFFCURVE",
"744 1312 OFFCURVE",
"714 1141 CURVE SMOOTH",
"694 1028 LINE SMOOTH",
"664 853 OFFCURVE",
"549 744 OFFCURVE",
"394 744 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 27 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 914;
}
);
note = uni00BA;
unicode = 00BA;
},
{
glyphname = guillemetright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 5, 0}";
},
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 398, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1023;
},
{
components = (
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 13, 0}";
},
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 362, 0}";
}
);
layerId = m002;
width = 960;
},
{
components = (
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 312, 0}";
}
);
layerId = m003;
width = 897;
},
{
components = (
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 13, 0}";
},
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 362, 0}";
}
);
layerId = m004;
width = 960;
},
{
components = (
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 22, 0}";
},
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 312, 0}";
}
);
layerId = m005;
width = 897;
}
);
note = uni00BB;
unicode = 00BB;
},
{
glyphname = onequarter;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 686, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 287, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1470;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 726, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 280, 8}";
}
);
layerId = m002;
width = 1500;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 683, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 276, 8}";
}
);
layerId = m003;
width = 1467;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 726, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 280, 8}";
}
);
layerId = m004;
width = 1500;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 683, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 276, 8}";
}
);
layerId = m005;
width = 1467;
}
);
note = uni00BC;
unicode = 00BC;
},
{
glyphname = onehalf;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 0, 670}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 245, 8}";
},
{
name = two.frac0;
transform = "{1, 0, 0, 1, 784, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1559;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 58, 664}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 260, -63}";
},
{
name = two.frac0;
transform = "{1, 0, 0, 1, 848, 0}";
}
);
layerId = m002;
width = 1631;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, -100, 664}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 55, -63}";
},
{
name = two.frac0;
transform = "{1, 0, 0, 1, 641, 0}";
}
);
layerId = m003;
width = 1479;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, 58, 664}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 260, -63}";
},
{
name = two.frac0;
transform = "{1, 0, 0, 1, 848, 0}";
}
);
layerId = m004;
width = 1631;
},
{
components = (
{
name = one.frac0;
transform = "{1, 0, 0, 1, -100, 664}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 55, -63}";
},
{
name = two.frac0;
transform = "{1, 0, 0, 1, 641, 0}";
}
);
layerId = m005;
width = 1479;
}
);
note = uni00BD;
unicode = 00BD;
},
{
glyphname = threequarters;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = three.frac0;
transform = "{1, 0, 0, 1, 0, 667}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 844, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 448, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1655;
},
{
components = (
{
name = three.frac0;
transform = "{1, 0, 0, 1, 49, 667}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 818, 0}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 335, -99}";
}
);
layerId = m002;
width = 1603;
},
{
components = (
{
name = three.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 823, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 438, 8}";
}
);
layerId = m003;
width = 1686;
},
{
components = (
{
name = three.frac0;
transform = "{1, 0, 0, 1, 49, 667}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 818, 0}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 335, -99}";
}
);
layerId = m004;
width = 1603;
},
{
components = (
{
name = three.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
},
{
name = four.frac0;
transform = "{1, 0, 0, 1, 823, 0}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 438, 8}";
}
);
layerId = m005;
width = 1686;
}
);
note = uni00BE;
unicode = 00BE;
},
{
glyphname = questiondown;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"798 -385 OFFCURVE",
"969.333 -234 OFFCURVE",
"972 22 CURVE",
"683 22 LINE",
"680.333 -86 OFFCURVE",
"615.667 -149 OFFCURVE",
"513 -149 CURVE SMOOTH",
"413 -149 OFFCURVE",
"362 -99 OFFCURVE",
"359 8 CURVE SMOOTH",
"359 66.667 OFFCURVE",
"378.5 114 OFFCURVE",
"416.5 162 CURVE SMOOTH",
"435.5 186 OFFCURVE",
"471.5 222.667 OFFCURVE",
"524.5 272 CURVE SMOOTH",
"630.5 370.667 OFFCURVE",
"666 465.667 OFFCURVE",
"666 643 CURVE",
"410 643 LINE",
"407.333 524.333 OFFCURVE",
"385.667 471 OFFCURVE",
"222 318 CURVE SMOOTH",
"120 216 OFFCURVE",
"69 112 OFFCURVE",
"69 6 CURVE SMOOTH",
"69 -244.667 OFFCURVE",
"234 -385 OFFCURVE",
"518 -385 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"633.333 796 OFFCURVE",
"702 859.667 OFFCURVE",
"702 949 CURVE SMOOTH",
"702 1038.333 OFFCURVE",
"637.333 1102 OFFCURVE",
"540 1102 CURVE SMOOTH",
"442.667 1102 OFFCURVE",
"378 1038.333 OFFCURVE",
"378 949 CURVE SMOOTH",
"378 859.667 OFFCURVE",
"446.667 796 OFFCURVE",
"540 796 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 16 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1019;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"722 -385 OFFCURVE",
"885.333 -234.667 OFFCURVE",
"888 -20 CURVE",
"703 -20 LINE",
"703 -141.333 OFFCURVE",
"611.333 -224 OFFCURVE",
"478 -224 CURVE SMOOTH",
"332.667 -224 OFFCURVE",
"253 -145.333 OFFCURVE",
"253 0 CURVE",
"262.333 103 OFFCURVE",
"296.667 168.167 OFFCURVE",
"358 232.5 CURVE SMOOTH",
"419.333 296.833 OFFCURVE",
"466 348.667 OFFCURVE",
"498 388 CURVE SMOOTH",
"562 466.667 OFFCURVE",
"586.667 538.667 OFFCURVE",
"588 680 CURVE",
"403 680 LINE",
"403 582.667 OFFCURVE",
"381 508 OFFCURVE",
"228 343 CURVE SMOOTH",
"121.333 226.333 OFFCURVE",
"68 110.333 OFFCURVE",
"68 -5 CURVE SMOOTH",
"68 -243.667 OFFCURVE",
"216.667 -385 OFFCURVE",
"478 -385 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"559 890 OFFCURVE",
"596 937 OFFCURVE",
"596 997 CURVE SMOOTH",
"596 1055.667 OFFCURVE",
"559 1101 OFFCURVE",
"487 1101 CURVE SMOOTH",
"415 1101 OFFCURVE",
"377 1055.667 OFFCURVE",
"377 997 CURVE SMOOTH",
"377 937 OFFCURVE",
"415 890 OFFCURVE",
"487 890 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 16 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"677 -381 OFFCURVE",
"813.333 -243.667 OFFCURVE",
"816 -21 CURVE",
"762 -21 LINE",
"756.667 -210.333 OFFCURVE",
"645 -328 OFFCURVE",
"461 -328 CURVE SMOOTH",
"273 -328 OFFCURVE",
"162 -215.667 OFFCURVE",
"162 -17 CURVE SMOOTH",
"162 117.667 OFFCURVE",
"205.667 221.667 OFFCURVE",
"311 327 CURVE SMOOTH",
"463.667 471 OFFCURVE",
"489.833 507.833 OFFCURVE",
"502.5 556.5 CURVE SMOOTH",
"508.833 580.833 OFFCURVE",
"512.667 627 OFFCURVE",
"514 695 CURVE",
"460 695 LINE",
"456.333 547.333 OFFCURVE",
"426 502 OFFCURVE",
"361 445 CURVE SMOOTH",
"159 267 OFFCURVE",
"108 146.333 OFFCURVE",
"108 -15 CURVE SMOOTH",
"108 -235 OFFCURVE",
"241 -381 OFFCURVE",
"461 -381 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"513.667 990 OFFCURVE",
"538 1015.333 OFFCURVE",
"538 1046 CURVE SMOOTH",
"538 1076.667 OFFCURVE",
"513.667 1101 OFFCURVE",
"483 1101 CURVE SMOOTH",
"452.333 1101 OFFCURVE",
"427 1076.667 OFFCURVE",
"427 1046 CURVE SMOOTH",
"427 1015.333 OFFCURVE",
"452.333 990 OFFCURVE",
"483 990 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 16 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 912;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"463 -385 OFFCURVE",
"653 -235 OFFCURVE",
"694 -20 CURVE",
"509 -20 LINE",
"487 -141 OFFCURVE",
"381 -224 OFFCURVE",
"248 -224 CURVE SMOOTH",
"102 -224 OFFCURVE",
"37 -145 OFFCURVE",
"62 0 CURVE",
"90 103 OFFCURVE",
"136 168 OFFCURVE",
"208 233 CURVE SMOOTH",
"281 297 OFFCURVE",
"337 349 OFFCURVE",
"376 388 CURVE SMOOTH",
"454 467 OFFCURVE",
"491 539 OFFCURVE",
"517 680 CURVE",
"332 680 LINE",
"315 583 OFFCURVE",
"280 508 OFFCURVE",
"98 343 CURVE SMOOTH",
"-30 226 OFFCURVE",
"-103 110 OFFCURVE",
"-124 -5 CURVE SMOOTH",
"-166 -244 OFFCURVE",
"-42 -385 OFFCURVE",
"219 -385 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"525 890 OFFCURVE",
"570 937 OFFCURVE",
"581 997 CURVE SMOOTH",
"591 1056 OFFCURVE",
"562 1101 OFFCURVE",
"490 1101 CURVE SMOOTH",
"418 1101 OFFCURVE",
"372 1056 OFFCURVE",
"362 997 CURVE SMOOTH",
"351 937 OFFCURVE",
"381 890 OFFCURVE",
"453 890 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 16 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 969;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"419 -381 OFFCURVE",
"580 -244 OFFCURVE",
"622 -21 CURVE",
"568 -21 LINE",
"529 -210 OFFCURVE",
"396 -328 OFFCURVE",
"212 -328 CURVE SMOOTH",
"24 -328 OFFCURVE",
"-67 -216 OFFCURVE",
"-32 -17 CURVE SMOOTH",
"-8 118 OFFCURVE",
"54 222 OFFCURVE",
"178 327 CURVE SMOOTH",
"356 471 OFFCURVE",
"389 508 OFFCURVE",
"410 557 CURVE SMOOTH",
"420 581 OFFCURVE",
"432 627 OFFCURVE",
"446 695 CURVE",
"392 695 LINE",
"362 547 OFFCURVE",
"324 502 OFFCURVE",
"249 445 CURVE SMOOTH",
"15 267 OFFCURVE",
"-57 146 OFFCURVE",
"-85 -15 CURVE SMOOTH",
"-124 -235 OFFCURVE",
"-17 -381 OFFCURVE",
"203 -381 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"497 990 OFFCURVE",
"526 1015 OFFCURVE",
"532 1046 CURVE SMOOTH",
"537 1077 OFFCURVE",
"517 1101 OFFCURVE",
"486 1101 CURVE SMOOTH",
"456 1101 OFFCURVE",
"426 1077 OFFCURVE",
"421 1046 CURVE SMOOTH",
"415 1015 OFFCURVE",
"436 990 OFFCURVE",
"467 990 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
33 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 16 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 912;
}
);
note = uni00BF;
unicode = 00BF;
},
{
glyphname = AE;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"341 0 LINE",
"508 333 LINE",
"954 333 LINE",
"968 0 LINE",
"1865 0 LINE",
"1865 235 LINE",
"1247 235 LINE",
"1231 629 LINE",
"1723 629 LINE",
"1723 865 LINE",
"1221 865 LINE",
"1206 1220 LINE",
"1804 1220 LINE",
"1804 1456 LINE",
"788 1456 LINE",
"2 0 LINE"
);
},
{
closed = 1;
nodes = (
"920 1150 LINE",
"944 580 LINE",
"633 580 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1925;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"212 0 LINE",
"417 353 LINE",
"981 353 LINE",
"996 0 LINE",
"1879 0 LINE",
"1879 151 LINE",
"1174 151 LINE",
"1152 682 LINE",
"1736 682 LINE",
"1736 833 LINE",
"1146 833 LINE",
"1126 1304 LINE",
"1817 1304 LINE",
"1817 1456 LINE",
"866 1456 LINE",
"-14 0 LINE"
);
},
{
closed = 1;
nodes = (
"943 1260 LINE",
"974 527 LINE",
"518 527 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1914;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"115 0 LINE",
"371 425 LINE",
"998 425 LINE",
"1016 0 LINE",
"1768 0 LINE",
"1768 54 LINE",
"1067 54 LINE",
"1039 732 LINE",
"1625 732 LINE",
"1625 786 LINE",
"1037 786 LINE",
"1011 1402 LINE",
"1707 1402 LINE",
"1707 1456 LINE",
"931 1456 LINE",
"50 0 LINE"
);
},
{
closed = 1;
nodes = (
"957 1398 LINE",
"996 478 LINE",
"403 478 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1816;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"21 0 LINE",
"288 353 LINE",
"852 353 LINE",
"805 0 LINE",
"1688 0 LINE",
"1715 151 LINE",
"1010 151 LINE",
"1081 682 LINE",
"1665 682 LINE",
"1692 833 LINE",
"1102 833 LINE",
"1165 1304 LINE",
"1856 1304 LINE",
"1883 1456 LINE",
"932 1456 LINE",
"-205 0 LINE"
);
},
{
closed = 1;
nodes = (
"974 1260 LINE",
"876 527 LINE",
"420 527 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1914;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-76 0 LINE",
"255 425 LINE",
"882 425 LINE",
"825 0 LINE",
"1577 0 LINE",
"1587 54 LINE",
"886 54 LINE",
"977 732 LINE",
"1563 732 LINE",
"1573 786 LINE",
"985 786 LINE",
"1067 1402 LINE",
"1763 1402 LINE",
"1773 1456 LINE",
"997 1456 LINE",
"-141 0 LINE"
);
},
{
closed = 1;
nodes = (
"1013 1398 LINE",
"889 478 LINE",
"296 478 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
17 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 0 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
12 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
18 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1816;
}
);
note = uni00C6;
unicode = 00C6;
},
{
glyphname = multiply;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"539 515 LINE",
"844 205 LINE",
"1014 373 LINE",
"707 686 LINE",
"1014 999 LINE",
"844 1167 LINE",
"539 856 LINE",
"235 1167 LINE",
"65 999 LINE",
"372 686 LINE",
"65 373 LINE",
"235 205 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
9 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
10 9 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
1 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
7 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1088;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"539 543 LINE",
"870 206 LINE",
"989 329 LINE",
"659 665 LINE",
"987 1000 LINE",
"868 1123 LINE",
"539 788 LINE",
"210 1123 LINE",
"91 1000 LINE",
"419 665 LINE",
"89 329 LINE",
"208 206 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
9 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
10 9 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
1 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
7 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1092;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"521 390 LINE",
"905 -1 LINE {name = \"❌\";}",
"944 36 LINE",
"559 429 LINE",
"916 793 LINE",
"877 832 LINE",
"520 468 LINE",
"164 832 LINE",
"125 793 LINE",
"482 429 LINE",
"98 36 LINE",
"137 -1 LINE {name = \"❌\";}"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
9 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
10 9 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
1 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
7 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1052;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"444 543 LINE",
"716 206 LINE",
"856 329 LINE",
"585 665 LINE",
"973 1000 LINE",
"875 1123 LINE",
"487 788 LINE",
"217 1123 LINE",
"77 1000 LINE",
"345 665 LINE",
"-44 329 LINE",
"54 206 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
9 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
10 9 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
1 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
7 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1092;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"399 390 LINE",
"714 -1 LINE {name = \"❌\";}",
"760 36 LINE",
"444 429 LINE",
"865 793 LINE",
"833 832 LINE",
"412 468 LINE",
"120 832 LINE",
"74 793 LINE",
"367 429 LINE",
"-86 36 LINE",
"-54 -1 LINE {name = \"❌\";}"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
9 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
10 9 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 3 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
1 10 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
7 4 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1052;
}
);
note = uni00D7;
unicode = 00D7;
},
{
glyphname = Oslash;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"335 -95 LINE",
"420 50 LINE",
"507.333 3.333 OFFCURVE",
"605.667 -20 OFFCURVE",
"715 -20 CURVE SMOOTH",
"959 -20 OFFCURVE",
"1155.667 102 OFFCURVE",
"1257 318 CURVE SMOOTH",
"1307.667 426 OFFCURVE",
"1333 551.667 OFFCURVE",
"1333 695 CURVE SMOOTH",
"1333 754 LINE SMOOTH",
"1333 980 OFFCURVE",
"1273.333 1159 OFFCURVE",
"1154 1291 CURVE",
"1288 1518 LINE",
"1101 1518 LINE",
"1027 1394 LINE",
"934.333 1448.667 OFFCURVE",
"829.667 1476 OFFCURVE",
"713 1476 CURVE SMOOTH",
"470.333 1476 OFFCURVE",
"273.833 1355.5 OFFCURVE",
"170.5 1137.5 CURVE SMOOTH",
"118.833 1028.5 OFFCURVE",
"93 902.333 OFFCURVE",
"93 759 CURVE SMOOTH",
"93 702 LINE SMOOTH",
"93 462 OFFCURVE",
"158.667 277 OFFCURVE",
"290 147 CURVE",
"147 -95 LINE"
);
},
{
closed = 1;
nodes = (
"653 226 OFFCURVE",
"598.667 241.667 OFFCURVE",
"552 273 CURVE",
"992 1017 LINE",
"1017.333 947 OFFCURVE",
"1030 861.667 OFFCURVE",
"1030 761 CURVE SMOOTH",
"1030 690 LINE SMOOTH",
"1028.667 387.333 OFFCURVE",
"916.333 226 OFFCURVE",
"715 226 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"413.333 485.333 OFFCURVE",
"397 580.333 OFFCURVE",
"397 695 CURVE SMOOTH",
"397 766 LINE SMOOTH",
"398.333 1068.667 OFFCURVE",
"511.667 1228 OFFCURVE",
"713 1228 CURVE SMOOTH",
"784.333 1228 OFFCURVE",
"844.333 1207.667 OFFCURVE",
"893 1167 CURVE",
"446 410 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1411;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"306 -93 LINE",
"403 62 LINE",
"490.333 7.333 OFFCURVE",
"591 -20 OFFCURVE",
"705 -20 CURVE SMOOTH",
"939.667 -20 OFFCURVE",
"1121 94.833 OFFCURVE",
"1217 307.5 CURVE SMOOTH",
"1265 413.833 OFFCURVE",
"1289 538.333 OFFCURVE",
"1289 681 CURVE SMOOTH",
"1289 780 LINE SMOOTH",
"1287.667 976 OFFCURVE",
"1241.333 1136.333 OFFCURVE",
"1150 1261 CURVE",
"1309 1516 LINE",
"1168 1516 LINE",
"1065 1351 LINE",
"966.333 1434.333 OFFCURVE",
"845.667 1476 OFFCURVE",
"703 1476 CURVE SMOOTH",
"473.667 1476 OFFCURVE",
"288.333 1358.667 OFFCURVE",
"191 1144 CURVE SMOOTH",
"142.333 1036.667 OFFCURVE",
"118 913 OFFCURVE",
"118 773 CURVE SMOOTH",
"118 690 LINE SMOOTH",
"118 450 OFFCURVE",
"181.333 266 OFFCURVE",
"308 138 CURVE",
"164 -93 LINE"
);
},
{
closed = 1;
nodes = (
"624.333 143 OFFCURVE",
"553.667 164.333 OFFCURVE",
"493 207 CURVE",
"1042 1088 LINE",
"1079.333 1000.667 OFFCURVE",
"1098 896.333 OFFCURVE",
"1098 775 CURVE SMOOTH",
"1098 667 LINE SMOOTH",
"1094 329.667 OFFCURVE",
"953 143 OFFCURVE",
"705 143 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341.667 390 OFFCURVE",
"309 518.333 OFFCURVE",
"309 681 CURVE SMOOTH",
"309 788 LINE SMOOTH",
"313 1116 OFFCURVE",
"460.333 1311 OFFCURVE",
"703 1311 CURVE SMOOTH",
"813.667 1311 OFFCURVE",
"903 1274 OFFCURVE",
"971 1200 CURVE",
"407 296 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"243 -75 LINE",
"349 92 LINE",
"441.667 17.333 OFFCURVE",
"553 -20 OFFCURVE",
"683 -20 CURVE SMOOTH",
"900.333 -20 OFFCURVE",
"1073.5 90.5 OFFCURVE",
"1163.5 284.5 CURVE SMOOTH",
"1208.5 381.5 OFFCURVE",
"1231 493 OFFCURVE",
"1231 619 CURVE SMOOTH",
"1231 839 LINE SMOOTH",
"1230.333 1015 OFFCURVE",
"1186.667 1160.333 OFFCURVE",
"1100 1275 CURVE",
"1240 1495 LINE",
"1174 1495 LINE",
"1063 1319 LINE",
"962.333 1423.667 OFFCURVE",
"835 1476 OFFCURVE",
"681 1476 CURVE SMOOTH",
"465 1476 OFFCURVE",
"290.5 1365.667 OFFCURVE",
"200.5 1171 CURVE SMOOTH",
"155.5 1073.667 OFFCURVE",
"133 962.333 OFFCURVE",
"133 837 CURVE SMOOTH",
"133 629 LINE SMOOTH",
"133 413.667 OFFCURVE",
"191 247.333 OFFCURVE",
"307 130 CURVE",
"177 -75 LINE"
);
},
{
closed = 1;
nodes = (
"562.333 34 OFFCURVE",
"460.667 68.333 OFFCURVE",
"378 137 CURVE",
"1070 1227 LINE",
"1141.333 1126.333 OFFCURVE",
"1177 997 OFFCURVE",
"1177 839 CURVE SMOOTH",
"1177 627 LINE SMOOTH",
"1177 260.333 OFFCURVE",
"987 34 OFFCURVE",
"683 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"237.667 282 OFFCURVE",
"188 429.667 OFFCURVE",
"188 619 CURVE SMOOTH",
"188 832 LINE SMOOTH",
"188 1196 OFFCURVE",
"381 1422 OFFCURVE",
"681 1422 CURVE SMOOTH",
"827.667 1422 OFFCURVE",
"945 1372.333 OFFCURVE",
"1033 1273 CURVE",
"337 176 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1364;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"99 -93 LINE",
"223 62 LINE",
"301 7 OFFCURVE",
"397 -20 OFFCURVE",
"511 -20 CURVE SMOOTH",
"745 -20 OFFCURVE",
"947 95 OFFCURVE",
"1080 308 CURVE SMOOTH",
"1147 414 OFFCURVE",
"1193 538 OFFCURVE",
"1218 681 CURVE SMOOTH",
"1236 780 LINE SMOOTH",
"1269 976 OFFCURVE",
"1251 1136 OFFCURVE",
"1182 1261 CURVE",
"1386 1516 LINE",
"1245 1516 LINE",
"1112 1351 LINE",
"1028 1434 OFFCURVE",
"915 1476 OFFCURVE",
"772 1476 CURVE SMOOTH",
"543 1476 OFFCURVE",
"337 1359 OFFCURVE",
"202 1144 CURVE SMOOTH",
"134 1037 OFFCURVE",
"88 913 OFFCURVE",
"64 773 CURVE SMOOTH",
"49 690 LINE SMOOTH",
"7 450 OFFCURVE",
"37 266 OFFCURVE",
"142 138 CURVE",
"-43 -93 LINE"
);
},
{
closed = 1;
nodes = (
"459 143 OFFCURVE",
"392 164 OFFCURVE",
"339 207 CURVE",
"1043 1088 LINE",
"1065 1001 OFFCURVE",
"1065 896 OFFCURVE",
"1044 775 CURVE SMOOTH",
"1025 667 LINE SMOOTH",
"961 330 OFFCURVE",
"787 143 OFFCURVE",
"539 143 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"220 390 OFFCURVE",
"210 518 OFFCURVE",
"238 681 CURVE SMOOTH",
"257 788 LINE SMOOTH",
"319 1116 OFFCURVE",
"501 1311 OFFCURVE",
"743 1311 CURVE SMOOTH",
"854 1311 OFFCURVE",
"937 1274 OFFCURVE",
"992 1200 CURVE",
"268 296 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1408;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"39 -75 LINE",
"174 92 LINE",
"254 17 OFFCURVE",
"359 -20 OFFCURVE",
"489 -20 CURVE SMOOTH",
"706 -20 OFFCURVE",
"899 91 OFFCURVE",
"1023 285 CURVE SMOOTH",
"1085 382 OFFCURVE",
"1127 493 OFFCURVE",
"1149 619 CURVE SMOOTH",
"1188 839 LINE SMOOTH",
"1219 1015 OFFCURVE",
"1200 1160 OFFCURVE",
"1134 1275 CURVE",
"1313 1495 LINE",
"1247 1495 LINE",
"1105 1319 LINE",
"1023 1424 OFFCURVE",
"904 1476 OFFCURVE",
"750 1476 CURVE SMOOTH",
"534 1476 OFFCURVE",
"341 1366 OFFCURVE",
"216 1171 CURVE SMOOTH",
"154 1074 OFFCURVE",
"112 962 OFFCURVE",
"90 837 CURVE SMOOTH",
"53 629 LINE SMOOTH",
"15 414 OFFCURVE",
"44 247 OFFCURVE",
"139 130 CURVE",
"-27 -75 LINE"
);
},
{
closed = 1;
nodes = (
"378 34 OFFCURVE",
"282 68 OFFCURVE",
"211 137 CURVE",
"1096 1227 LINE",
"1149 1126 OFFCURVE",
"1162 997 OFFCURVE",
"1134 839 CURVE SMOOTH",
"1097 627 LINE SMOOTH",
"1032 260 OFFCURVE",
"802 34 OFFCURVE",
"498 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 282 OFFCURVE",
"73 430 OFFCURVE",
"106 619 CURVE SMOOTH",
"144 832 LINE SMOOTH",
"208 1196 OFFCURVE",
"441 1422 OFFCURVE",
"741 1422 CURVE SMOOTH",
"888 1422 OFFCURVE",
"996 1372 OFFCURVE",
"1067 1273 CURVE",
"177 176 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 42 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
26 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 16 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1364;
}
);
leftKerningGroup = C;
note = uni00D8;
unicode = 00D8;
},
{
glyphname = Thorn;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 287 LINE",
"664 287 LINE SMOOTH",
"984 293.667 OFFCURVE",
"1181 468.667 OFFCURVE",
"1181 738 CURVE SMOOTH",
"1181 916.667 OFFCURVE",
"1092.833 1058.5 OFFCURVE",
"933.5 1132.5 CURVE SMOOTH",
"853.833 1169.5 OFFCURVE",
"760 1188.333 OFFCURVE",
"652 1189 CURVE SMOOTH",
"422 1189 LINE",
"422 1456 LINE",
"133 1456 LINE",
"133 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 956 LINE",
"653 956 LINE SMOOTH",
"802.333 953.333 OFFCURVE",
"892 866.667 OFFCURVE",
"892 736 CURVE SMOOTH",
"892 605.333 OFFCURVE",
"801 520 OFFCURVE",
"645 520 CURVE SMOOTH",
"422 520 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1246;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"352 0 LINE",
"352 313 LINE",
"626 313 LINE SMOOTH",
"928.667 313 OFFCURVE",
"1117 479.333 OFFCURVE",
"1117 738 CURVE SMOOTH",
"1117 906 OFFCURVE",
"1034.667 1040.5 OFFCURVE",
"888 1110.5 CURVE SMOOTH",
"814.667 1145.5 OFFCURVE",
"729 1163 OFFCURVE",
"631 1163 CURVE SMOOTH",
"352 1163 LINE",
"352 1456 LINE",
"166 1456 LINE",
"166 0 LINE"
);
},
{
closed = 1;
nodes = (
"352 1011 LINE",
"635 1011 LINE SMOOTH",
"816.333 1009.667 OFFCURVE",
"931 900 OFFCURVE",
"931 736 CURVE SMOOTH",
"931 576 OFFCURVE",
"818.333 465 OFFCURVE",
"629 465 CURVE SMOOTH",
"352 465 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1210;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 334 LINE",
"639 334 LINE SMOOTH",
"907 339.333 OFFCURVE",
"1075 498 OFFCURVE",
"1075 738 CURVE SMOOTH",
"1075 910 OFFCURVE",
"989 1041 OFFCURVE",
"840 1103 CURVE SMOOTH",
"780 1128 OFFCURVE",
"710 1142 OFFCURVE",
"631 1143 CURVE SMOOTH",
"254 1143 LINE",
"254 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"254 1089 LINE",
"640 1089 LINE SMOOTH",
"872 1083.667 OFFCURVE",
"1021 940 OFFCURVE",
"1021 736 CURVE SMOOTH",
"1021 533.333 OFFCURVE",
"866.333 388 OFFCURVE",
"625 388 CURVE SMOOTH",
"254 388 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1219;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"161 0 LINE",
"216 313 LINE",
"490 313 LINE SMOOTH",
"793 313 OFFCURVE",
"1011 479 OFFCURVE",
"1056 738 CURVE SMOOTH",
"1086 906 OFFCURVE",
"1027 1041 OFFCURVE",
"893 1111 CURVE SMOOTH",
"826 1146 OFFCURVE",
"743 1163 OFFCURVE",
"645 1163 CURVE SMOOTH",
"366 1163 LINE",
"418 1456 LINE",
"232 1456 LINE",
"-25 0 LINE"
);
},
{
closed = 1;
nodes = (
"339 1011 LINE",
"622 1011 LINE SMOOTH",
"804 1010 OFFCURVE",
"899 900 OFFCURVE",
"870 736 CURVE SMOOTH",
"842 576 OFFCURVE",
"710 465 OFFCURVE",
"520 465 CURVE SMOOTH",
"243 465 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1210;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"122 334 LINE",
"507 334 LINE SMOOTH",
"776 339 OFFCURVE",
"972 498 OFFCURVE",
"1014 738 CURVE SMOOTH",
"1045 910 OFFCURVE",
"982 1041 OFFCURVE",
"844 1103 CURVE SMOOTH",
"788 1128 OFFCURVE",
"721 1142 OFFCURVE",
"642 1143 CURVE SMOOTH",
"265 1143 LINE",
"320 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"255 1089 LINE",
"641 1089 LINE SMOOTH",
"872 1084 OFFCURVE",
"996 940 OFFCURVE",
"960 736 CURVE SMOOTH",
"924 533 OFFCURVE",
"744 388 OFFCURVE",
"503 388 CURVE SMOOTH",
"132 388 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1219;
}
);
note = uni00DE;
unicode = 00DE;
},
{
glyphname = germandbls;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"904 -20 OFFCURVE",
"1004 6 OFFCURVE",
"1078 55 CURVE SMOOTH",
"1173 119 OFFCURVE",
"1224 221 OFFCURVE",
"1224 354 CURVE SMOOTH",
"1224 452.667 OFFCURVE",
"1173.667 546.667 OFFCURVE",
"1073 636 CURVE SMOOTH",
"1022 681 OFFCURVE",
"924 760 OFFCURVE",
"924 830 CURVE SMOOTH",
"924 881.333 OFFCURVE",
"941.833 936 OFFCURVE",
"977.5 994 CURVE SMOOTH",
"1013.167 1052 OFFCURVE",
"1031 1117 OFFCURVE",
"1031 1189 CURVE SMOOTH",
"1031 1417 OFFCURVE",
"863.667 1559 OFFCURVE",
"609 1559 CURVE SMOOTH",
"307.667 1559 OFFCURVE",
"135 1394.333 OFFCURVE",
"135 1101 CURVE SMOOTH",
"135 0 LINE",
"424 0 LINE",
"424 1114 LINE SMOOTH",
"427.333 1256 OFFCURVE",
"482 1327 OFFCURVE",
"588 1327 CURVE SMOOTH",
"678.667 1327 OFFCURVE",
"745 1267.333 OFFCURVE",
"745 1174 CURVE SMOOTH",
"745 1121.333 OFFCURVE",
"726.667 1064.833 OFFCURVE",
"690 1004.5 CURVE SMOOTH",
"653.333 944.167 OFFCURVE",
"635 882 OFFCURVE",
"635 818 CURVE SMOOTH",
"635 718 OFFCURVE",
"685 628 OFFCURVE",
"785 548 CURVE SMOOTH",
"894.333 460 OFFCURVE",
"936 410.333 OFFCURVE",
"936 349 CURVE SMOOTH",
"936 265 OFFCURVE",
"878.333 213 OFFCURVE",
"773 213 CURVE SMOOTH",
"692.333 213 OFFCURVE",
"619.333 230.333 OFFCURVE",
"554 265 CURVE",
"500 36 LINE",
"553.333 4 OFFCURVE",
"671 -20 OFFCURVE",
"779 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1292;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"854 -20 OFFCURVE",
"943 5 OFFCURVE",
"1008 53 CURVE SMOOTH",
"1087 110 OFFCURVE",
"1130 200 OFFCURVE",
"1130 317 CURVE SMOOTH",
"1130 418.333 OFFCURVE",
"1075.333 505 OFFCURVE",
"950 601 CURVE SMOOTH",
"824.667 697 OFFCURVE",
"781 751 OFFCURVE",
"781 819 CURVE SMOOTH",
"781 865 OFFCURVE",
"802.333 921.833 OFFCURVE",
"845 989.5 CURVE SMOOTH",
"887.667 1057.167 OFFCURVE",
"909 1132.667 OFFCURVE",
"909 1216 CURVE SMOOTH",
"909 1428 OFFCURVE",
"772 1554 OFFCURVE",
"532 1554 CURVE SMOOTH",
"284 1554 OFFCURVE",
"139 1388.333 OFFCURVE",
"139 1111 CURVE SMOOTH",
"139 0 LINE",
"324 0 LINE",
"324 1109 LINE SMOOTH",
"324 1304.333 OFFCURVE",
"396.667 1402 OFFCURVE",
"542 1402 CURVE SMOOTH",
"659.333 1402 OFFCURVE",
"734 1326.333 OFFCURVE",
"734 1201 CURVE SMOOTH",
"734 1145 OFFCURVE",
"710.833 1082.5 OFFCURVE",
"664.5 1013.5 CURVE SMOOTH",
"618.167 944.5 OFFCURVE",
"595 880.333 OFFCURVE",
"595 821 CURVE SMOOTH",
"595 713 OFFCURVE",
"650.5 626.5 OFFCURVE",
"776.5 528.5 CURVE SMOOTH",
"902.5 430.5 OFFCURVE",
"945 376.333 OFFCURVE",
"945 307 CURVE SMOOTH",
"945 197.667 OFFCURVE",
"867.667 131 OFFCURVE",
"725 131 CURVE SMOOTH",
"654.333 131 OFFCURVE",
"553.333 164.333 OFFCURVE",
"488 207 CURVE",
"445 52 LINE",
"495.667 14.667 OFFCURVE",
"637 -20 OFFCURVE",
"745 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1218;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"813.667 -21 OFFCURVE",
"940.667 37.833 OFFCURVE",
"1010 134.5 CURVE SMOOTH",
"1044.667 182.833 OFFCURVE",
"1062 237 OFFCURVE",
"1062 297 CURVE SMOOTH",
"1062 403.667 OFFCURVE",
"1005.667 487.833 OFFCURVE",
"871 588.5 CURVE SMOOTH",
"736.333 689.167 OFFCURVE",
"685 750.333 OFFCURVE",
"685 829 CURVE SMOOTH",
"685 905 OFFCURVE",
"704.833 978.667 OFFCURVE",
"744.5 1050 CURVE SMOOTH",
"784.167 1121.333 OFFCURVE",
"804 1190.333 OFFCURVE",
"804 1257 CURVE SMOOTH",
"804 1415.667 OFFCURVE",
"661 1535 OFFCURVE",
"493 1535 CURVE SMOOTH {name = \"❌\";}",
"279.667 1535 OFFCURVE",
"164 1397.667 OFFCURVE",
"164 1143 CURVE SMOOTH",
"164 0 LINE",
"218 0 LINE",
"218 1153 LINE SMOOTH",
"220.667 1371.667 OFFCURVE",
"315.667 1481 OFFCURVE",
"503 1481 CURVE SMOOTH",
"629.667 1481 OFFCURVE",
"744 1379 OFFCURVE",
"744 1259 CURVE SMOOTH",
"744 1198.333 OFFCURVE",
"725.167 1130.333 OFFCURVE",
"687.5 1055 CURVE SMOOTH",
"649.833 979.667 OFFCURVE",
"631 905 OFFCURVE",
"631 831 CURVE SMOOTH",
"631 736.333 OFFCURVE",
"683.5 662.333 OFFCURVE",
"821.5 561 CURVE SMOOTH",
"959.5 459.667 OFFCURVE",
"1008 392.667 OFFCURVE",
"1008 306 CURVE SMOOTH",
"1008 151.333 OFFCURVE",
"867 32 OFFCURVE",
"687 32 CURVE SMOOTH",
"589.667 32 OFFCURVE",
"466.667 70.333 OFFCURVE",
"408 117 CURVE",
"383 68 LINE",
"433.667 22.667 OFFCURVE",
"573.667 -21 OFFCURVE",
"695 -21 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1183;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"660 -20 OFFCURVE",
"753 5 OFFCURVE",
"827 53 CURVE SMOOTH",
"916 110 OFFCURVE",
"974 200 OFFCURVE",
"995 317 CURVE SMOOTH",
"1013 418 OFFCURVE",
"974 505 OFFCURVE",
"865 601 CURVE SMOOTH",
"757 697 OFFCURVE",
"723 751 OFFCURVE",
"735 819 CURVE SMOOTH",
"743 865 OFFCURVE",
"774 922 OFFCURVE",
"829 990 CURVE SMOOTH",
"883 1057 OFFCURVE",
"918 1133 OFFCURVE",
"933 1216 CURVE SMOOTH",
"970 1428 OFFCURVE",
"855 1554 OFFCURVE",
"615 1554 CURVE SMOOTH",
"367 1554 OFFCURVE",
"193 1388 OFFCURVE",
"144 1111 CURVE SMOOTH",
"-52 0 LINE",
"133 0 LINE",
"329 1109 LINE SMOOTH",
"363 1304 OFFCURVE",
"453 1402 OFFCURVE",
"598 1402 CURVE SMOOTH",
"716 1402 OFFCURVE",
"777 1326 OFFCURVE",
"755 1201 CURVE SMOOTH",
"745 1145 OFFCURVE",
"711 1083 OFFCURVE",
"652 1014 CURVE SMOOTH",
"594 945 OFFCURVE",
"559 880 OFFCURVE",
"549 821 CURVE SMOOTH",
"530 713 OFFCURVE",
"570 627 OFFCURVE",
"679 529 CURVE SMOOTH",
"788 431 OFFCURVE",
"821 376 OFFCURVE",
"808 307 CURVE SMOOTH",
"789 198 OFFCURVE",
"700 131 OFFCURVE",
"557 131 CURVE SMOOTH",
"487 131 OFFCURVE",
"392 164 OFFCURVE",
"334 207 CURVE",
"263 52 LINE",
"307 15 OFFCURVE",
"443 -20 OFFCURVE",
"551 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1218;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"619 -21 OFFCURVE",
"757 38 OFFCURVE",
"843 135 CURVE SMOOTH",
"886 183 OFFCURVE",
"913 237 OFFCURVE",
"924 297 CURVE SMOOTH",
"942 404 OFFCURVE",
"901 488 OFFCURVE",
"784 589 CURVE SMOOTH",
"667 689 OFFCURVE",
"627 750 OFFCURVE",
"640 829 CURVE SMOOTH",
"654 905 OFFCURVE",
"687 979 OFFCURVE",
"739 1050 CURVE SMOOTH",
"791 1121 OFFCURVE",
"823 1190 OFFCURVE",
"835 1257 CURVE SMOOTH",
"863 1416 OFFCURVE",
"741 1535 OFFCURVE",
"573 1535 CURVE SMOOTH {name = \"❌\";}",
"360 1535 OFFCURVE",
"220 1398 OFFCURVE",
"175 1143 CURVE SMOOTH",
"-27 0 LINE",
"27 0 LINE",
"231 1153 LINE SMOOTH",
"272 1372 OFFCURVE",
"386 1481 OFFCURVE",
"573 1481 CURVE SMOOTH",
"700 1481 OFFCURVE",
"796 1379 OFFCURVE",
"775 1259 CURVE SMOOTH",
"765 1198 OFFCURVE",
"734 1130 OFFCURVE",
"683 1055 CURVE SMOOTH",
"632 980 OFFCURVE",
"600 905 OFFCURVE",
"587 831 CURVE SMOOTH",
"570 736 OFFCURVE",
"610 662 OFFCURVE",
"730 561 CURVE SMOOTH",
"850 460 OFFCURVE",
"886 393 OFFCURVE",
"871 306 CURVE SMOOTH",
"844 151 OFFCURVE",
"682 32 OFFCURVE",
"502 32 CURVE SMOOTH",
"405 32 OFFCURVE",
"288 70 OFFCURVE",
"238 117 CURVE",
"204 68 LINE",
"247 23 OFFCURVE",
"379 -21 OFFCURVE",
"501 -21 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
33 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 32 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
14 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
32 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
35 5 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
40 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1183;
}
);
note = uni00DF;
unicode = 00DF;
},
{
glyphname = ae;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"632.667 -20 OFFCURVE",
"774.667 35 OFFCURVE",
"860 127 CURVE",
"952.667 29 OFFCURVE",
"1081.333 -20 OFFCURVE",
"1246 -20 CURVE SMOOTH",
"1398 -20 OFFCURVE",
"1550.667 25.333 OFFCURVE",
"1648 100 CURVE",
"1571 289 LINE",
"1455 229 OFFCURVE",
"1378.667 212 OFFCURVE",
"1276 212 CURVE SMOOTH",
"1140 212 OFFCURVE",
"1020 261 OFFCURVE",
"1013 384 CURVE SMOOTH",
"1009 450 LINE",
"1677 450 LINE",
"1677 607 LINE SMOOTH",
"1677 916.333 OFFCURVE",
"1505.667 1102 OFFCURVE",
"1223 1102 CURVE SMOOTH",
"1089.667 1103.333 OFFCURVE",
"981 1066.667 OFFCURVE",
"897 992 CURVE",
"819.667 1065.333 OFFCURVE",
"710.667 1102 OFFCURVE",
"570 1102 CURVE SMOOTH",
"292.667 1102 OFFCURVE",
"101 962.667 OFFCURVE",
"101 764 CURVE",
"390 745 LINE",
"390 814.333 OFFCURVE",
"457.667 868 OFFCURVE",
"567 868 CURVE SMOOTH",
"669.667 868 OFFCURVE",
"725 807.333 OFFCURVE",
"725 649 CURVE",
"557 649 LINE SMOOTH",
"233 649 OFFCURVE",
"66 528.333 OFFCURVE",
"66 319 CURVE SMOOTH",
"66 104.333 OFFCURVE",
"218 -20 OFFCURVE",
"466 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"407.667 192 OFFCURVE",
"355 240.333 OFFCURVE",
"355 315 CURVE SMOOTH",
"355 396.333 OFFCURVE",
"434 461 OFFCURVE",
"561 461 CURVE SMOOTH",
"725 461 LINE",
"725 272 LINE",
"673 225.333 OFFCURVE",
"586.333 192 OFFCURVE",
"521 192 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1028.333 789.333 OFFCURVE",
"1103 868 OFFCURVE",
"1223 868 CURVE SMOOTH",
"1333.667 868 OFFCURVE",
"1393 797.333 OFFCURVE",
"1393 672 CURVE SMOOTH",
"1393 644 LINE",
"1011 644 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 5 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 12 207 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
58 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 58 207 58 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
47 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1729;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"621 -20 OFFCURVE",
"778.333 45.333 OFFCURVE",
"865 160 CURVE",
"955.667 40 OFFCURVE",
"1088 -20 OFFCURVE",
"1262 -20 CURVE SMOOTH",
"1410 -20 OFFCURVE",
"1536.667 20.333 OFFCURVE",
"1642 101 CURVE",
"1578 237 LINE",
"1450.333 155.333 OFFCURVE",
"1360.667 130 OFFCURVE",
"1262 130 CURVE SMOOTH",
"1083 130 OFFCURVE",
"955 236 OFFCURVE",
"938 430 CURVE SMOOTH",
"932 497 LINE",
"1660 497 LINE",
"1660 612 LINE SMOOTH",
"1660 922.667 OFFCURVE",
"1498 1102 OFFCURVE",
"1218 1102 CURVE SMOOTH",
"1078 1102 OFFCURVE",
"960 1041.333 OFFCURVE",
"876 936 CURVE",
"809.333 1046.667 OFFCURVE",
"688.333 1102 OFFCURVE",
"535 1102 CURVE SMOOTH",
"285.667 1102 OFFCURVE",
"106 968.667 OFFCURVE",
"106 778 CURVE",
"290 759 LINE",
"290 867 OFFCURVE",
"395 950 OFFCURVE",
"535 950 CURVE SMOOTH",
"673.667 950 OFFCURVE",
"749 862.667 OFFCURVE",
"749 635 CURVE",
"526 635 LINE SMOOTH",
"231.333 635 OFFCURVE",
"78 513.333 OFFCURVE",
"78 304 CURVE SMOOTH",
"78 102.667 OFFCURVE",
"210.333 -20 OFFCURVE",
"433 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 130 OFFCURVE",
"264 197.333 OFFCURVE",
"264 300 CURVE SMOOTH",
"264 410.667 OFFCURVE",
"365 492.333 OFFCURVE",
"521 495 CURVE SMOOTH",
"749 495 LINE",
"749 258 LINE",
"682.333 186 OFFCURVE",
"565 130 OFFCURVE",
"469 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"959.667 825.333 OFFCURVE",
"1064.667 950 OFFCURVE",
"1218 950 CURVE SMOOTH",
"1382 950 OFFCURVE",
"1475 847 OFFCURVE",
"1475 671 CURVE SMOOTH",
"1475 640 LINE",
"937 640 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 5 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 12 207 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
58 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 58 207 58 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
47 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1729;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"640 -20 OFFCURVE",
"840 65 OFFCURVE",
"868 230 CURVE",
"937.333 76.667 OFFCURVE",
"1072 -20 OFFCURVE",
"1268 -20 CURVE SMOOTH",
"1414.667 -20 OFFCURVE",
"1524.667 16.667 OFFCURVE",
"1630 122 CURVE",
"1600 164 LINE",
"1514.667 77.333 OFFCURVE",
"1404 34 OFFCURVE",
"1268 34 CURVE SMOOTH",
"1016 34 OFFCURVE",
"870 209.333 OFFCURVE",
"870 500 CURVE SMOOTH",
"870 577 LINE",
"1657 577 LINE",
"1657 656 LINE SMOOTH",
"1657 940 OFFCURVE",
"1501 1102 OFFCURVE",
"1253 1102 CURVE SMOOTH",
"1079.667 1102 OFFCURVE",
"934.667 996.667 OFFCURVE",
"860 814 CURVE",
"829.333 1000.667 OFFCURVE",
"709 1102 OFFCURVE",
"521 1102 CURVE SMOOTH",
"285 1102 OFFCURVE",
"121 971.333 OFFCURVE",
"121 778 CURVE",
"174 771 LINE",
"174 937.667 OFFCURVE",
"310.333 1048 OFFCURVE",
"521 1048 CURVE SMOOTH",
"718.333 1048 OFFCURVE",
"813 928 OFFCURVE",
"813 630 CURVE",
"516 630 LINE SMOOTH",
"247 630 OFFCURVE",
"93 494.667 OFFCURVE",
"93 284 CURVE SMOOTH",
"93 97.333 OFFCURVE",
"224 -20 OFFCURVE",
"448 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"252.333 32 OFFCURVE",
"148 125.333 OFFCURVE",
"148 280 CURVE SMOOTH",
"148 456 OFFCURVE",
"289 575 OFFCURVE",
"512 575 CURVE SMOOTH",
"813 575 LINE",
"813 225 LINE",
"776 115 OFFCURVE",
"579 32 OFFCURVE",
"447 32 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"898.333 884 OFFCURVE",
"1049 1048 OFFCURVE",
"1253 1048 CURVE SMOOTH",
"1470.333 1048 OFFCURVE",
"1603 896 OFFCURVE",
"1603 664 CURVE SMOOTH",
"1603 632 LINE",
"873 632 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 5 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 12 207 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
58 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 58 207 58 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
47 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1735;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"427 -20 OFFCURVE",
"596 45 OFFCURVE",
"702 160 CURVE",
"772 40 OFFCURVE",
"894 -20 OFFCURVE",
"1068 -20 CURVE SMOOTH",
"1216 -20 OFFCURVE",
"1349 20 OFFCURVE",
"1469 101 CURVE",
"1429 237 LINE",
"1287 155 OFFCURVE",
"1193 130 OFFCURVE",
"1094 130 CURVE SMOOTH",
"915 130 OFFCURVE",
"806 236 OFFCURVE",
"823 430 CURVE SMOOTH",
"829 497 LINE",
"1557 497 LINE",
"1577 612 LINE SMOOTH",
"1632 923 OFFCURVE",
"1502 1102 OFFCURVE",
"1222 1102 CURVE SMOOTH",
"1082 1102 OFFCURVE",
"953 1041 OFFCURVE",
"850 936 CURVE",
"803 1047 OFFCURVE",
"692 1102 OFFCURVE",
"539 1102 CURVE SMOOTH",
"289 1102 OFFCURVE",
"86 969 OFFCURVE",
"52 778 CURVE",
"233 759 LINE",
"252 867 OFFCURVE",
"372 950 OFFCURVE",
"512 950 CURVE SMOOTH",
"650 950 OFFCURVE",
"710 863 OFFCURVE",
"670 635 CURVE",
"447 635 LINE SMOOTH",
"153 635 OFFCURVE",
"-22 513 OFFCURVE",
"-59 304 CURVE SMOOTH",
"-95 103 OFFCURVE",
"16 -20 OFFCURVE",
"239 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169 130 OFFCURVE",
"108 197 OFFCURVE",
"126 300 CURVE SMOOTH",
"146 411 OFFCURVE",
"261 492 OFFCURVE",
"417 495 CURVE SMOOTH",
"645 495 LINE",
"604 258 LINE",
"524 186 OFFCURVE",
"397 130 OFFCURVE",
"301 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"914 825 OFFCURVE",
"1041 950 OFFCURVE",
"1195 950 CURVE SMOOTH",
"1359 950 OFFCURVE",
"1434 847 OFFCURVE",
"1403 671 CURVE SMOOTH",
"1397 640 LINE",
"859 640 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 5 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 12 207 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
58 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 58 207 58 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
47 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1729;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"446 -20 OFFCURVE",
"661 65 OFFCURVE",
"718 230 CURVE",
"760 77 OFFCURVE",
"878 -20 OFFCURVE",
"1074 -20 CURVE SMOOTH",
"1220 -20 OFFCURVE",
"1337 17 OFFCURVE",
"1461 122 CURVE",
"1438 164 LINE",
"1338 77 OFFCURVE",
"1219 34 OFFCURVE",
"1083 34 CURVE SMOOTH",
"831 34 OFFCURVE",
"716 209 OFFCURVE",
"767 500 CURVE SMOOTH",
"781 577 LINE",
"1568 577 LINE",
"1582 656 LINE SMOOTH",
"1632 940 OFFCURVE",
"1505 1102 OFFCURVE",
"1257 1102 CURVE SMOOTH",
"1083 1102 OFFCURVE",
"920 997 OFFCURVE",
"813 814 CURVE",
"815 1001 OFFCURVE",
"713 1102 OFFCURVE",
"525 1102 CURVE SMOOTH",
"289 1102 OFFCURVE",
"101 971 OFFCURVE",
"67 778 CURVE",
"119 771 LINE",
"149 938 OFFCURVE",
"304 1048 OFFCURVE",
"515 1048 CURVE SMOOTH",
"712 1048 OFFCURVE",
"786 928 OFFCURVE",
"733 630 CURVE",
"436 630 LINE SMOOTH",
"167 630 OFFCURVE",
"-11 495 OFFCURVE",
"-48 284 CURVE SMOOTH",
"-81 97 OFFCURVE",
"30 -20 OFFCURVE",
"254 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"67 32 OFFCURVE",
"-21 125 OFFCURVE",
"7 280 CURVE SMOOTH",
"38 456 OFFCURVE",
"200 575 OFFCURVE",
"423 575 CURVE SMOOTH",
"724 575 LINE",
"662 225 LINE",
"605 115 OFFCURVE",
"394 32 OFFCURVE",
"262 32 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"863 884 OFFCURVE",
"1043 1048 OFFCURVE",
"1247 1048 CURVE SMOOTH",
"1464 1048 OFFCURVE",
"1570 896 OFFCURVE",
"1529 664 CURVE SMOOTH",
"1524 632 LINE",
"794 632 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 62 63 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
29 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 5 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 12 207 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 12 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
26 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
58 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 58 207 58 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
40 29 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
47 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1735;
}
);
note = uni00E6;
unicode = 00E6;
},
{
glyphname = eth;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"783 -20 OFFCURVE",
"949.833 85.333 OFFCURVE",
"1038.5 268 CURVE SMOOTH",
"1082.833 359.333 OFFCURVE",
"1105 462.333 OFFCURVE",
"1105 577 CURVE SMOOTH",
"1105 651 LINE SMOOTH",
"1104.333 912.333 OFFCURVE",
"1019 1130.333 OFFCURVE",
"849 1305 CURVE",
"988 1394 LINE",
"911 1508 LINE",
"740 1399 LINE",
"621.333 1487 OFFCURVE",
"482.667 1547 OFFCURVE",
"324 1579 CURVE",
"233 1355 LINE",
"331.667 1329 OFFCURVE",
"419.667 1292 OFFCURVE",
"497 1244 CURVE",
"345 1147 LINE",
"423 1033 LINE",
"614 1155 LINE",
"692 1079.667 OFFCURVE",
"747.333 991.333 OFFCURVE",
"780 890 CURVE",
"708 940.667 OFFCURVE",
"626.667 966 OFFCURVE",
"536 966 CURVE SMOOTH",
"261.333 966 OFFCURVE",
"84 776 OFFCURVE",
"84 468 CURVE SMOOTH",
"84 286.667 OFFCURVE",
"174.667 128.167 OFFCURVE",
"328 43.5 CURVE SMOOTH",
"404.667 1.167 OFFCURVE",
"491 -20 OFFCURVE",
"587 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"460.333 213 OFFCURVE",
"373 318.667 OFFCURVE",
"373 468 CURVE SMOOTH",
"373 640 OFFCURVE",
"450.333 746 OFFCURVE",
"601 746 CURVE SMOOTH",
"699 746 OFFCURVE",
"770.667 718.333 OFFCURVE",
"816 663 CURVE",
"816 552 LINE SMOOTH",
"816 341.333 OFFCURVE",
"728.333 213 OFFCURVE",
"591 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
23 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
37 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1178;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"787.667 -20 OFFCURVE",
"920.833 80.833 OFFCURVE",
"989.5 249.5 CURVE SMOOTH",
"1023.833 333.833 OFFCURVE",
"1041 429 OFFCURVE",
"1041 535 CURVE SMOOTH",
"1041 615 LINE SMOOTH",
"1041 920.333 OFFCURVE",
"963.333 1141.333 OFFCURVE",
"802 1308 CURVE",
"991 1413 LINE",
"962 1461 LINE",
"760 1348 LINE",
"660 1439.333 OFFCURVE",
"551 1501 OFFCURVE",
"383 1562 CURVE",
"338 1527 LINE",
"493.333 1469.667 OFFCURVE",
"617 1400.667 OFFCURVE",
"709 1320 CURVE",
"489 1197 LINE",
"517 1149 LINE",
"752 1280 LINE",
"870.667 1160 OFFCURVE",
"950.333 1004 OFFCURVE",
"977 780 CURVE",
"897 892 OFFCURVE",
"751.667 953 OFFCURVE",
"601 953 CURVE SMOOTH",
"331.667 953 OFFCURVE",
"173 773 OFFCURVE",
"173 465 CURVE SMOOTH",
"173 285 OFFCURVE",
"256.167 127 OFFCURVE",
"395.5 43 CURVE SMOOTH",
"465.167 1 OFFCURVE",
"543 -20 OFFCURVE",
"629 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"381 38 OFFCURVE",
"228 240 OFFCURVE",
"228 465 CURVE SMOOTH",
"228 735.667 OFFCURVE",
"365 895 OFFCURVE",
"601 895 CURVE SMOOTH",
"778.333 895 OFFCURVE",
"924.667 812 OFFCURVE",
"986 672 CURVE",
"986 520 LINE SMOOTH",
"989 233 OFFCURVE",
"841 38 OFFCURVE",
"633 38 CURVE SMOOTH"
);
}
);
width = 1183;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"780.667 -20 OFFCURVE",
"932.5 81.833 OFFCURVE",
"1010.5 250.5 CURVE SMOOTH",
"1049.5 334.833 OFFCURVE",
"1069 429.667 OFFCURVE",
"1069 535 CURVE SMOOTH",
"1069 628 LINE SMOOTH",
"1069 900.667 OFFCURVE",
"986 1125 OFFCURVE",
"820 1301 CURVE",
"988 1416 LINE",
"915 1516 LINE",
"726 1387 LINE",
"609.333 1479.667 OFFCURVE",
"471.333 1544 OFFCURVE",
"312 1580 CURVE",
"255 1421 LINE",
"377 1388.333 OFFCURVE",
"482 1341.667 OFFCURVE",
"570 1281 CURVE",
"378 1150 LINE",
"451 1051 LINE",
"669 1199 LINE",
"763 1105 OFFCURVE",
"826 993 OFFCURVE",
"858 863 CURVE",
"777.333 939 OFFCURVE",
"682.667 977 OFFCURVE",
"574 977 CURVE SMOOTH",
"294 977 OFFCURVE",
"126 749 OFFCURVE",
"126 467 CURVE SMOOTH",
"126 288.333 OFFCURVE",
"210.333 130.5 OFFCURVE",
"357 44.5 CURVE SMOOTH",
"430.333 1.5 OFFCURVE",
"512 -20 OFFCURVE",
"602 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"435.333 131 OFFCURVE",
"311 280.333 OFFCURVE",
"311 467 CURVE SMOOTH",
"311 689.667 OFFCURVE",
"424.667 825 OFFCURVE",
"618 825 CURVE SMOOTH",
"740.667 825 OFFCURVE",
"838 772.333 OFFCURVE",
"882 691 CURVE",
"884 541 LINE SMOOTH",
"884 295.667 OFFCURVE",
"772.667 131 OFFCURVE",
"606 131 CURVE SMOOTH"
);
}
);
width = 1200;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"586 -20 OFFCURVE",
"756 82 OFFCURVE",
"864 251 CURVE SMOOTH",
"918 335 OFFCURVE",
"954 430 OFFCURVE",
"973 535 CURVE SMOOTH",
"989 628 LINE SMOOTH",
"1037 901 OFFCURVE",
"994 1125 OFFCURVE",
"859 1301 CURVE",
"1047 1416 LINE",
"992 1516 LINE",
"780 1387 LINE",
"679 1480 OFFCURVE",
"553 1544 OFFCURVE",
"400 1580 CURVE",
"315 1421 LINE",
"431 1388 OFFCURVE",
"528 1342 OFFCURVE",
"605 1281 CURVE",
"390 1150 LINE",
"446 1051 LINE",
"690 1199 LINE",
"767 1105 OFFCURVE",
"810 993 OFFCURVE",
"819 863 CURVE",
"752 939 OFFCURVE",
"664 977 OFFCURVE",
"555 977 CURVE SMOOTH",
"275 977 OFFCURVE",
"67 749 OFFCURVE",
"18 467 CURVE SMOOTH",
"-14 288 OFFCURVE",
"43 131 OFFCURVE",
"174 45 CURVE SMOOTH",
"240 2 OFFCURVE",
"318 -20 OFFCURVE",
"408 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"268 131 OFFCURVE",
"170 280 OFFCURVE",
"203 467 CURVE SMOOTH",
"242 690 OFFCURVE",
"379 825 OFFCURVE",
"573 825 CURVE SMOOTH",
"695 825 OFFCURVE",
"783 772 OFFCURVE",
"813 691 CURVE",
"789 541 LINE SMOOTH",
"745 296 OFFCURVE",
"605 131 OFFCURVE",
"438 131 CURVE SMOOTH"
);
}
);
width = 1200;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"593 -20 OFFCURVE",
"744 81 OFFCURVE",
"843 250 CURVE SMOOTH",
"892 334 OFFCURVE",
"926 429 OFFCURVE",
"945 535 CURVE SMOOTH",
"959 615 LINE SMOOTH",
"1012 920 OFFCURVE",
"974 1141 OFFCURVE",
"842 1308 CURVE",
"1049 1413 LINE",
"1029 1461 LINE",
"807 1348 LINE",
"723 1439 OFFCURVE",
"625 1501 OFFCURVE",
"468 1562 CURVE",
"416 1527 LINE",
"562 1470 OFFCURVE",
"673 1401 OFFCURVE",
"751 1320 CURVE",
"509 1197 LINE",
"529 1149 LINE",
"787 1280 LINE",
"884 1160 OFFCURVE",
"937 1004 OFFCURVE",
"924 780 CURVE",
"863 892 OFFCURVE",
"729 953 OFFCURVE",
"578 953 CURVE SMOOTH",
"309 953 OFFCURVE",
"119 773 OFFCURVE",
"64 465 CURVE SMOOTH",
"32 285 OFFCURVE",
"88 127 OFFCURVE",
"212 43 CURVE SMOOTH",
"275 1 OFFCURVE",
"349 -20 OFFCURVE",
"435 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"197 38 OFFCURVE",
"80 240 OFFCURVE",
"119 465 CURVE SMOOTH",
"167 736 OFFCURVE",
"332 895 OFFCURVE",
"568 895 CURVE SMOOTH",
"745 895 OFFCURVE",
"877 812 OFFCURVE",
"914 672 CURVE",
"887 520 LINE SMOOTH",
"839 233 OFFCURVE",
"657 38 OFFCURVE",
"449 38 CURVE SMOOTH"
);
}
);
width = 1183;
}
);
note = uni00F0;
unicode = 00F0;
},
{
glyphname = divide;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1091 571 LINE",
"1091 801 LINE",
"63 801 LINE",
"63 571 LINE"
);
},
{
closed = 1;
nodes = (
"676.667 127 OFFCURVE",
"742 187.667 OFFCURVE",
"742 277 CURVE SMOOTH",
"742 369 OFFCURVE",
"672.667 429 OFFCURVE",
"578 429 CURVE SMOOTH",
"482 429 OFFCURVE",
"415 367.667 OFFCURVE",
"415 277 CURVE SMOOTH",
"415 189 OFFCURVE",
"478 127 OFFCURVE",
"578 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"676.667 939 OFFCURVE",
"742 999.667 OFFCURVE",
"742 1089 CURVE SMOOTH",
"742 1181 OFFCURVE",
"672.667 1241 OFFCURVE",
"578 1241 CURVE SMOOTH",
"482 1241 OFFCURVE",
"415 1179.667 OFFCURVE",
"415 1089 CURVE SMOOTH",
"415 1001 OFFCURVE",
"478 939 OFFCURVE",
"578 939 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1168;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1069 600 LINE",
"1069 784 LINE",
"71 784 LINE",
"71 600 LINE"
);
},
{
closed = 1;
nodes = (
"651 172 OFFCURVE",
"691 219.667 OFFCURVE",
"691 281 CURVE SMOOTH",
"691 345 OFFCURVE",
"651 393 OFFCURVE",
"575 393 CURVE SMOOTH",
"499 393 OFFCURVE",
"461 345 OFFCURVE",
"461 281 CURVE SMOOTH",
"461 219.667 OFFCURVE",
"499 172 OFFCURVE",
"575 172 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"651 989 OFFCURVE",
"691 1035.333 OFFCURVE",
"691 1098 CURVE SMOOTH",
"691 1162 OFFCURVE",
"651 1210 OFFCURVE",
"575 1210 CURVE SMOOTH",
"499 1210 OFFCURVE",
"461 1162 OFFCURVE",
"461 1098 CURVE SMOOTH",
"461 1035.333 OFFCURVE",
"499 989 OFFCURVE",
"575 989 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1169;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1071 686 LINE",
"1071 738 LINE",
"73 738 LINE",
"73 686 LINE"
);
},
{
closed = 1;
nodes = (
"614.667 246 OFFCURVE",
"640 270.333 OFFCURVE",
"640 301 CURVE SMOOTH",
"640 331.667 OFFCURVE",
"614.667 357 OFFCURVE",
"584 357 CURVE SMOOTH",
"553.333 357 OFFCURVE",
"529 331.667 OFFCURVE",
"529 301 CURVE SMOOTH",
"529 270.333 OFFCURVE",
"553.333 246 OFFCURVE",
"584 246 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"614.667 1024 OFFCURVE",
"640 1048.333 OFFCURVE",
"640 1079 CURVE SMOOTH",
"640 1109.667 OFFCURVE",
"614.667 1135 OFFCURVE",
"584 1135 CURVE SMOOTH",
"553.333 1135 OFFCURVE",
"529 1109.667 OFFCURVE",
"529 1079 CURVE SMOOTH",
"529 1048.333 OFFCURVE",
"553.333 1024 OFFCURVE",
"584 1024 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1159;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"984 600 LINE",
"1016 784 LINE",
"18 784 LINE",
"-14 600 LINE"
);
},
{
closed = 1;
nodes = (
"491 172 OFFCURVE",
"539 220 OFFCURVE",
"550 281 CURVE SMOOTH",
"561 345 OFFCURVE",
"530 393 OFFCURVE",
"454 393 CURVE SMOOTH",
"378 393 OFFCURVE",
"331 345 OFFCURVE",
"320 281 CURVE SMOOTH",
"309 220 OFFCURVE",
"339 172 OFFCURVE",
"415 172 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"635 989 OFFCURVE",
"683 1035 OFFCURVE",
"694 1098 CURVE SMOOTH",
"705 1162 OFFCURVE",
"674 1210 OFFCURVE",
"598 1210 CURVE SMOOTH",
"522 1210 OFFCURVE",
"475 1162 OFFCURVE",
"464 1098 CURVE SMOOTH",
"453 1035 OFFCURVE",
"483 989 OFFCURVE",
"559 989 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1169;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"1001 686 LINE",
"1010 738 LINE",
"12 738 LINE",
"3 686 LINE"
);
},
{
closed = 1;
nodes = (
"467 246 OFFCURVE",
"497 270 OFFCURVE",
"502 301 CURVE SMOOTH",
"508 332 OFFCURVE",
"487 357 OFFCURVE",
"456 357 CURVE SMOOTH",
"425 357 OFFCURVE",
"397 332 OFFCURVE",
"391 301 CURVE SMOOTH",
"386 270 OFFCURVE",
"406 246 OFFCURVE",
"437 246 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"604 1024 OFFCURVE",
"634 1048 OFFCURVE",
"639 1079 CURVE SMOOTH",
"645 1110 OFFCURVE",
"624 1135 OFFCURVE",
"593 1135 CURVE SMOOTH",
"563 1135 OFFCURVE",
"534 1110 OFFCURVE",
"528 1079 CURVE SMOOTH",
"523 1048 OFFCURVE",
"543 1024 OFFCURVE",
"574 1024 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
7 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1159;
}
);
note = uni00F7;
unicode = 00F7;
},
{
glyphname = oslash;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"891 -20 OFFCURVE",
"1091 198 OFFCURVE",
"1091 530 CURVE SMOOTH",
"1067.667 910.667 OFFCURVE",
"869 1102 OFFCURVE",
"577 1102 CURVE SMOOTH",
"203.123 1100.954 OFFCURVE",
"66 818 OFFCURVE",
"66 538 CURVE SMOOTH",
"66 194 OFFCURVE",
"267 -20 OFFCURVE",
"579 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"435 213 OFFCURVE",
"355 324.667 OFFCURVE",
"355 530 CURVE SMOOTH",
"355 760.667 OFFCURVE",
"435.667 868 OFFCURVE",
"577 868 CURVE SMOOTH",
"719.667 868 OFFCURVE",
"802 752.333 OFFCURVE",
"802 551 CURVE SMOOTH",
"802 315 OFFCURVE",
"719 213 OFFCURVE",
"579 213 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"412 -325 LINE",
"948 1256 LINE",
"733 1256 LINE",
"197 -325 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 35 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 27 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1158;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"895 -20 OFFCURVE",
"1076 223 OFFCURVE",
"1076 529 CURVE SMOOTH",
"1076 880.667 OFFCURVE",
"876.667 1102 OFFCURVE",
"582 1102 CURVE SMOOTH",
"275 1102 OFFCURVE",
"91 856 OFFCURVE",
"91 551 CURVE SMOOTH",
"91 202 OFFCURVE",
"290.667 -20 OFFCURVE",
"584 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"397.333 131 OFFCURVE",
"277 289 OFFCURVE",
"277 529 CURVE SMOOTH",
"277 799.667 OFFCURVE",
"399.333 950 OFFCURVE",
"582 950 CURVE SMOOTH",
"768.667 950 OFFCURVE",
"891 788.333 OFFCURVE",
"891 551 CURVE SMOOTH",
"891 285.667 OFFCURVE",
"772 131 OFFCURVE",
"584 131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"357 -245 LINE",
"964 1336 LINE",
"806 1336 LINE",
"198 -245 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 35 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 27 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1168;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"865 -20 OFFCURVE",
"1037 226 OFFCURVE",
"1037 568 CURVE SMOOTH",
"1037 868 OFFCURVE",
"853 1102 OFFCURVE",
"563 1102 CURVE SMOOTH",
"267 1102 OFFCURVE",
"90 858 OFFCURVE",
"90 562 CURVE SMOOTH",
"94 140 OFFCURVE",
"411 -20 OFFCURVE",
"565 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"386 34 OFFCURVE",
"144 228 OFFCURVE",
"144 552 CURVE SMOOTH",
"144 837.333 OFFCURVE",
"316.333 1048 OFFCURVE",
"563 1048 CURVE SMOOTH",
"824 1048 OFFCURVE",
"983 818 OFFCURVE",
"983 562 CURVE SMOOTH",
"983 239 OFFCURVE",
"812 34 OFFCURVE",
"565 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"281 -295 LINE",
"889 1286 LINE",
"830 1286 LINE",
"222 -295 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 35 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 27 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"701 -20 OFFCURVE",
"925 223 OFFCURVE",
"978 529 CURVE SMOOTH",
"1040 881 OFFCURVE",
"880 1102 OFFCURVE",
"586 1102 CURVE SMOOTH",
"279 1102 OFFCURVE",
"51 856 OFFCURVE",
"-3 551 CURVE SMOOTH",
"-64 202 OFFCURVE",
"96 -20 OFFCURVE",
"390 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 131 OFFCURVE",
"137 289 OFFCURVE",
"179 529 CURVE SMOOTH",
"227 800 OFFCURVE",
"376 950 OFFCURVE",
"559 950 CURVE SMOOTH",
"745 950 OFFCURVE",
"839 788 OFFCURVE",
"797 551 CURVE SMOOTH",
"751 286 OFFCURVE",
"604 131 OFFCURVE",
"416 131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"123 -245 LINE",
"1009 1336 LINE",
"851 1336 LINE",
"-36 -245 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 35 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 27 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1168;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"671 -20 OFFCURVE",
"886 226 OFFCURVE",
"946 568 CURVE SMOOTH",
"999 868 OFFCURVE",
"857 1102 OFFCURVE",
"567 1102 CURVE SMOOTH",
"271 1102 OFFCURVE",
"51 858 OFFCURVE",
"-2 562 CURVE SMOOTH",
"-72 140 OFFCURVE",
"217 -20 OFFCURVE",
"371 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"201 34 OFFCURVE",
"-7 228 OFFCURVE",
"51 552 CURVE SMOOTH",
"101 837 OFFCURVE",
"310 1048 OFFCURVE",
"557 1048 CURVE SMOOTH",
"818 1048 OFFCURVE",
"936 818 OFFCURVE",
"891 562 CURVE SMOOTH",
"834 239 OFFCURVE",
"627 34 OFFCURVE",
"380 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 -295 LINE",
"925 1286 LINE",
"866 1286 LINE",
"-21 -295 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
4 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 35 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 27 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1127;
}
);
note = uni00F8;
unicode = 00F8;
},
{
glyphname = thorn;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"403 -416 LINE",
"403 93 LINE",
"469.667 17.667 OFFCURVE",
"557.667 -20 OFFCURVE",
"667 -20 CURVE SMOOTH",
"924.333 -20 OFFCURVE",
"1087 197.667 OFFCURVE",
"1087 531 CURVE SMOOTH",
"1087 545 LINE SMOOTH",
"1087 895.667 OFFCURVE",
"929 1102 OFFCURVE",
"665 1102 CURVE SMOOTH",
"557 1102 OFFCURVE",
"469.667 1064.333 OFFCURVE",
"403 989 CURVE",
"403 1536 LINE",
"113 1536 LINE",
"113 -416 LINE"
);
},
{
closed = 1;
nodes = (
"501.667 213 OFFCURVE",
"439 248 OFFCURVE",
"403 318 CURVE",
"403 765 LINE",
"439 833 OFFCURVE",
"501 867 OFFCURVE",
"589 867 CURVE SMOOTH",
"725 867 OFFCURVE",
"798 753.333 OFFCURVE",
"798 552 CURVE SMOOTH",
"798 326 OFFCURVE",
"729 213 OFFCURVE",
"591 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1162;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"334 -416 LINE",
"334 105 LINE",
"409.333 21.667 OFFCURVE",
"512.667 -20 OFFCURVE",
"644 -20 CURVE SMOOTH",
"901.333 -20 OFFCURVE",
"1063 199.667 OFFCURVE",
"1063 529 CURVE SMOOTH",
"1063 546 LINE SMOOTH",
"1063 895.333 OFFCURVE",
"901 1102 OFFCURVE",
"641 1102 CURVE SMOOTH",
"511.667 1102 OFFCURVE",
"409.333 1058 OFFCURVE",
"334 970 CURVE",
"334 1536 LINE",
"149 1536 LINE",
"149 -416 LINE"
);
},
{
closed = 1;
nodes = (
"474 131 OFFCURVE",
"389.333 180.333 OFFCURVE",
"334 279 CURVE",
"334 796 LINE",
"390 895.333 OFFCURVE",
"474 945 OFFCURVE",
"586 945 CURVE SMOOTH",
"767.333 945 OFFCURVE",
"878 794 OFFCURVE",
"878 550 CURVE SMOOTH",
"878 272.667 OFFCURVE",
"765.333 131 OFFCURVE",
"588 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1180;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"224 -416 LINE",
"224 168 LINE",
"296 50.667 OFFCURVE",
"429 -20 OFFCURVE",
"593 -20 CURVE SMOOTH",
"843.667 -20 OFFCURVE",
"999 193.667 OFFCURVE",
"999 531 CURVE SMOOTH",
"999 548 LINE SMOOTH",
"999 898.667 OFFCURVE",
"844.333 1102 OFFCURVE",
"591 1102 CURVE SMOOTH",
"429.667 1102 OFFCURVE",
"298.667 1026.333 OFFCURVE",
"224 889 CURVE",
"224 1536 LINE",
"170 1536 LINE",
"170 -416 LINE"
);
},
{
closed = 1;
nodes = (
"411.333 34 OFFCURVE",
"280 119.667 OFFCURVE",
"224 269 CURVE",
"224 775 LINE",
"280 951 OFFCURVE",
"410.667 1048 OFFCURVE",
"592 1048 CURVE SMOOTH",
"814.667 1048 OFFCURVE",
"944 862.667 OFFCURVE",
"944 552 CURVE SMOOTH",
"944 213.333 OFFCURVE",
"815.333 34 OFFCURVE",
"594 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"70 -416 LINE",
"162 105 LINE",
"222 22 OFFCURVE",
"318 -20 OFFCURVE",
"450 -20 CURVE SMOOTH",
"707 -20 OFFCURVE",
"907 200 OFFCURVE",
"965 529 CURVE SMOOTH",
"968 546 LINE SMOOTH",
"1030 895 OFFCURVE",
"905 1102 OFFCURVE",
"645 1102 CURVE SMOOTH",
"515 1102 OFFCURVE",
"405 1058 OFFCURVE",
"314 970 CURVE",
"414 1536 LINE",
"229 1536 LINE",
"-115 -416 LINE"
);
},
{
closed = 1;
nodes = (
"306 131 OFFCURVE",
"230 180 OFFCURVE",
"192 279 CURVE",
"284 796 LINE",
"357 895 OFFCURVE",
"450 945 OFFCURVE",
"562 945 CURVE SMOOTH",
"743 945 OFFCURVE",
"827 794 OFFCURVE",
"784 550 CURVE SMOOTH",
"735 273 OFFCURVE",
"598 131 OFFCURVE",
"420 131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1180;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-40 -416 LINE",
"63 168 LINE",
"114 51 OFFCURVE",
"235 -20 OFFCURVE",
"399 -20 CURVE SMOOTH",
"649 -20 OFFCURVE",
"842 194 OFFCURVE",
"902 531 CURVE SMOOTH",
"905 548 LINE SMOOTH",
"967 899 OFFCURVE",
"848 1102 OFFCURVE",
"595 1102 CURVE SMOOTH",
"433 1102 OFFCURVE",
"289 1026 OFFCURVE",
"190 889 CURVE",
"304 1536 LINE",
"250 1536 LINE",
"-94 -416 LINE"
);
},
{
closed = 1;
nodes = (
"227 34 OFFCURVE",
"110 120 OFFCURVE",
"81 269 CURVE",
"170 775 LINE",
"257 951 OFFCURVE",
"405 1048 OFFCURVE",
"586 1048 CURVE SMOOTH",
"809 1048 OFFCURVE",
"905 863 OFFCURVE",
"851 552 CURVE SMOOTH",
"791 213 OFFCURVE",
"631 34 OFFCURVE",
"409 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 12 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1121;
}
);
note = uni00FE;
rightKerningGroup = b;
unicode = 00FE;
},
{
glyphname = idotless;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"423 0 LINE",
"423 1082 LINE",
"134 1082 LINE",
"134 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 561;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"341 0 LINE",
"341 1082 LINE",
"155 1082 LINE",
"155 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 506;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"235 0 LINE",
"235 1082 LINE",
"181 1082 LINE",
"181 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 406;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"150 0 LINE",
"341 1082 LINE",
"155 1082 LINE",
"-36 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 506;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"44 0 LINE",
"235 1082 LINE",
"181 1082 LINE",
"-10 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 406;
}
);
note = uni0131;
unicode = 0131;
},
{
glyphname = OE;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"782.667 -20 OFFCURVE",
"878.667 -13.333 OFFCURVE",
"990 0 CURVE",
"1876 0 LINE",
"1876 241 LINE",
"1201 241 LINE",
"1201 631 LINE",
"1776 631 LINE",
"1776 866 LINE",
"1201 866 LINE",
"1201 1213 LINE",
"1874 1213 LINE",
"1874 1456 LINE",
"990 1456 LINE",
"878.667 1469.333 OFFCURVE",
"782 1476 OFFCURVE",
"700 1476 CURVE SMOOTH",
"136.679 1473.432 OFFCURVE",
"96 934 OFFCURVE",
"96 880 CURVE SMOOTH",
"96 563 LINE SMOOTH",
"106.051 33.051 OFFCURVE",
"638 -20 OFFCURVE",
"702 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"502 212 OFFCURVE",
"385 341.333 OFFCURVE",
"385 576 CURVE SMOOTH",
"385 885 LINE SMOOTH",
"386.333 1115.667 OFFCURVE",
"500 1243 OFFCURVE",
"700 1243 CURVE SMOOTH",
"758.667 1243 OFFCURVE",
"825.333 1238.333 OFFCURVE",
"900 1229 CURVE",
"900 225 LINE",
"830.667 216.333 OFFCURVE",
"764.667 212 OFFCURVE",
"702 212 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 0 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1983;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"737 -21 OFFCURVE",
"834.333 -14 OFFCURVE",
"953 0 CURVE",
"1801 0 LINE",
"1801 157 LINE",
"1068 157 LINE",
"1068 673 LINE",
"1699 673 LINE",
"1699 830 LINE",
"1068 830 LINE",
"1068 1298 LINE",
"1791 1298 LINE",
"1791 1456 LINE",
"953 1456 LINE",
"839.667 1469.333 OFFCURVE",
"741.667 1476 OFFCURVE",
"659 1476 CURVE SMOOTH",
"257.504 1473.922 OFFCURVE",
"104 1047 OFFCURVE",
"104 880 CURVE SMOOTH",
"104 571 LINE SMOOTH",
"108.197 150.817 OFFCURVE",
"486 -21 OFFCURVE",
"661 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"426.333 130 OFFCURVE",
"290 294.667 OFFCURVE",
"290 576 CURVE SMOOTH",
"290 889 LINE SMOOTH",
"292.667 1165 OFFCURVE",
"428.333 1325 OFFCURVE",
"659 1325 CURVE SMOOTH",
"731 1325 OFFCURVE",
"803.333 1320 OFFCURVE",
"876 1310 CURVE",
"876 144 LINE",
"808 134.667 OFFCURVE",
"736.333 130 OFFCURVE",
"661 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 0 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1953;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"718.333 -21 OFFCURVE",
"828.333 -14 OFFCURVE",
"961 0 CURVE",
"1801 0 LINE",
"1801 54 LINE",
"969 54 LINE",
"969 722 LINE",
"1699 722 LINE",
"1699 776 LINE",
"969 776 LINE",
"969 1402 LINE",
"1801 1402 LINE",
"1801 1456 LINE",
"961 1456 LINE",
"834.333 1469.333 OFFCURVE",
"723.667 1476 OFFCURVE",
"629 1476 CURVE SMOOTH",
"146.562 1471.778 OFFCURVE",
"112 928 OFFCURVE",
"112 880 CURVE SMOOTH",
"112 565 LINE SMOOTH",
"112 150 OFFCURVE",
"462 -21 OFFCURVE",
"631 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"391 33 OFFCURVE",
"166 280 OFFCURVE",
"166 576 CURVE SMOOTH",
"166 875 LINE SMOOTH",
"166 1211 OFFCURVE",
"350.333 1422 OFFCURVE",
"629 1422 CURVE SMOOTH",
"748.333 1422 OFFCURVE",
"843.667 1417.667 OFFCURVE",
"915 1409 CURVE",
"915 46 LINE",
"844.333 37.333 OFFCURVE",
"749.667 33 OFFCURVE",
"631 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 0 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1873;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"543 -21 OFFCURVE",
"641 -14 OFFCURVE",
"762 0 CURVE",
"1610 0 LINE",
"1638 157 LINE",
"905 157 LINE",
"996 673 LINE",
"1627 673 LINE",
"1655 830 LINE",
"1024 830 LINE",
"1106 1298 LINE",
"1829 1298 LINE",
"1857 1456 LINE",
"1019 1456 LINE",
"908 1469 OFFCURVE",
"811 1476 OFFCURVE",
"728 1476 CURVE SMOOTH",
"327 1474 OFFCURVE",
"98 1047 OFFCURVE",
"68 880 CURVE SMOOTH",
"14 571 LINE SMOOTH",
"-56 151 OFFCURVE",
"292 -21 OFFCURVE",
"467 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"258 130 OFFCURVE",
"151 295 OFFCURVE",
"201 576 CURVE SMOOTH",
"256 889 LINE SMOOTH",
"307 1165 OFFCURVE",
"471 1325 OFFCURVE",
"702 1325 CURVE SMOOTH",
"774 1325 OFFCURVE",
"845 1320 OFFCURVE",
"916 1310 CURVE",
"711 144 LINE",
"641 135 OFFCURVE",
"568 130 OFFCURVE",
"493 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 0 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1953;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"524 -21 OFFCURVE",
"635 -14 OFFCURVE",
"770 0 CURVE",
"1610 0 LINE",
"1620 54 LINE",
"788 54 LINE",
"906 722 LINE",
"1636 722 LINE",
"1645 776 LINE",
"915 776 LINE",
"1025 1402 LINE",
"1857 1402 LINE",
"1867 1456 LINE",
"1027 1456 LINE",
"903 1469 OFFCURVE",
"793 1476 OFFCURVE",
"698 1476 CURVE SMOOTH",
"215 1472 OFFCURVE",
"85 928 OFFCURVE",
"76 880 CURVE SMOOTH",
"21 565 LINE SMOOTH",
"-52 150 OFFCURVE",
"268 -21 OFFCURVE",
"437 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"206 33 OFFCURVE",
"25 280 OFFCURVE",
"77 576 CURVE SMOOTH",
"130 875 LINE SMOOTH",
"189 1211 OFFCURVE",
"410 1422 OFFCURVE",
"689 1422 CURVE SMOOTH",
"808 1422 OFFCURVE",
"903 1418 OFFCURVE",
"973 1409 CURVE",
"732 46 LINE",
"660 37 OFFCURVE",
"565 33 OFFCURVE",
"446 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
1 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
19 0 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
22 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1873;
}
);
leftKerningGroup = C;
note = uni0152;
unicode = 0152;
},
{
glyphname = oe;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"748.333 -20 OFFCURVE",
"872 29.667 OFFCURVE",
"964 129 CURVE",
"1057.333 29.667 OFFCURVE",
"1181.667 -20 OFFCURVE",
"1337 -20 CURVE SMOOTH",
"1495.667 -20 OFFCURVE",
"1649.667 25.667 OFFCURVE",
"1747 103 CURVE",
"1668 290 LINE",
"1558.667 230 OFFCURVE",
"1480.333 212 OFFCURVE",
"1367 212 CURVE SMOOTH",
"1229.667 212 OFFCURVE",
"1138.333 299.333 OFFCURVE",
"1117 450 CURVE",
"1771 450 LINE",
"1771 608 LINE SMOOTH",
"1771 922.667 OFFCURVE",
"1596.333 1102 OFFCURVE",
"1311 1102 CURVE SMOOTH",
"1167.667 1103.333 OFFCURVE",
"1051.333 1053.667 OFFCURVE",
"962 953 CURVE",
"868.667 1052.333 OFFCURVE",
"745 1102 OFFCURVE",
"591 1102 CURVE SMOOTH",
"385.667 1102 OFFCURVE",
"225.333 1004.833 OFFCURVE",
"144 837.5 CURVE SMOOTH",
"103.333 753.833 OFFCURVE",
"83 658.333 OFFCURVE",
"83 551 CURVE SMOOTH",
"83 538 LINE SMOOTH",
"83 192.667 OFFCURVE",
"282.333 -20 OFFCURVE",
"593 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"449 212 OFFCURVE",
"372 323.333 OFFCURVE",
"372 530 CURVE SMOOTH",
"372 762 OFFCURVE",
"451 868 OFFCURVE",
"591 868 CURVE SMOOTH",
"732.333 868 OFFCURVE",
"813 755 OFFCURVE",
"813 551 CURVE SMOOTH",
"813 313.667 OFFCURVE",
"734.333 212 OFFCURVE",
"593 212 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1141.333 789.667 OFFCURVE",
"1208.333 868 OFFCURVE",
"1311 868 CURVE SMOOTH",
"1421.667 868 OFFCURVE",
"1487 802.333 OFFCURVE",
"1487 673 CURVE SMOOTH",
"1487 647 LINE",
"1120 647 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 50 51 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 8 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
46 8 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
143 46 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
31 46 47 46 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
12 8 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 8 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1847;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"779 -20 OFFCURVE",
"949 108.333 OFFCURVE",
"1013 331 CURVE",
"1074.333 121.667 OFFCURVE",
"1248 -20 OFFCURVE",
"1444 -20 CURVE SMOOTH",
"1606 -20 OFFCURVE",
"1729.667 27.667 OFFCURVE",
"1815 123 CURVE",
"1786 165 LINE",
"1712 77.667 OFFCURVE",
"1598 34 OFFCURVE",
"1444 34 CURVE SMOOTH",
"1170 34 OFFCURVE",
"1044 255 OFFCURVE",
"1044 577 CURVE",
"1855 577 LINE",
"1855 656 LINE SMOOTH",
"1855 928 OFFCURVE",
"1687.667 1102 OFFCURVE",
"1441 1102 CURVE SMOOTH",
"1241 1102 OFFCURVE",
"1076.333 961.667 OFFCURVE",
"1015 747 CURVE",
"952.333 967 OFFCURVE",
"786.333 1102 OFFCURVE",
"565 1102 CURVE SMOOTH",
"382.333 1102 OFFCURVE",
"230.833 1005.167 OFFCURVE",
"151.5 840.5 CURVE SMOOTH",
"111.833 758.167 OFFCURVE",
"92 665.333 OFFCURVE",
"92 562 CURVE SMOOTH",
"92 514 LINE SMOOTH",
"92 140 OFFCURVE",
"411 -20 OFFCURVE",
"567 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303 34 OFFCURVE",
"146 320 OFFCURVE",
"146 520 CURVE SMOOTH",
"146 837.333 OFFCURVE",
"318.333 1048 OFFCURVE",
"565 1048 CURVE SMOOTH",
"836 1048 OFFCURVE",
"985 818 OFFCURVE",
"985 531 CURVE SMOOTH",
"985 239 OFFCURVE",
"813.667 34 OFFCURVE",
"567 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1072.333 876.333 OFFCURVE",
"1230.333 1048 OFFCURVE",
"1441 1048 CURVE SMOOTH",
"1650.333 1048 OFFCURVE",
"1801 889.333 OFFCURVE",
"1801 664 CURVE SMOOTH",
"1801 631 LINE",
"1047 631 LINE"
);
}
);
width = 1924;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"759.667 -20 OFFCURVE",
"893.333 60 OFFCURVE",
"976 192 CURVE",
"1060 58.667 OFFCURVE",
"1199 -20 OFFCURVE",
"1379 -20 CURVE SMOOTH",
"1542.333 -20 OFFCURVE",
"1669.667 24 OFFCURVE",
"1761 112 CURVE",
"1687 238 LINE",
"1607 166 OFFCURVE",
"1504.333 130 OFFCURVE",
"1379 130 CURVE SMOOTH",
"1200.333 130 OFFCURVE",
"1083.333 270.333 OFFCURVE",
"1074 497 CURVE",
"1792 497 LINE",
"1792 613 LINE SMOOTH",
"1792 926.333 OFFCURVE",
"1627 1102 OFFCURVE",
"1351 1102 CURVE SMOOTH",
"1201.667 1102 OFFCURVE",
"1064.667 1021 OFFCURVE",
"978 885 CURVE",
"896.667 1018.333 OFFCURVE",
"761.667 1102 OFFCURVE",
"579 1102 CURVE SMOOTH",
"389.667 1102 OFFCURVE",
"238.167 1007.333 OFFCURVE",
"157.5 838 CURVE SMOOTH",
"117.167 753.333 OFFCURVE",
"97 657.667 OFFCURVE",
"97 551 CURVE SMOOTH",
"97 538 LINE SMOOTH",
"97 199.333 OFFCURVE",
"287.667 -20 OFFCURVE",
"581 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"395.667 130 OFFCURVE",
"282 285 OFFCURVE",
"282 529 CURVE SMOOTH",
"282 805 OFFCURVE",
"399 950 OFFCURVE",
"579 950 CURVE SMOOTH",
"763 950 OFFCURVE",
"878 793.667 OFFCURVE",
"878 551 CURVE SMOOTH",
"878 276.333 OFFCURVE",
"763.667 130 OFFCURVE",
"581 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1109.333 833 OFFCURVE",
"1219 950 OFFCURVE",
"1351 950 CURVE SMOOTH",
"1508.333 950 OFFCURVE",
"1606 841.667 OFFCURVE",
"1606 675 CURVE SMOOTH",
"1606 649 LINE",
"1080 649 LINE"
);
}
);
width = 1860;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"565 -20 OFFCURVE",
"713 60 OFFCURVE",
"819 192 CURVE",
"880 59 OFFCURVE",
"1005 -20 OFFCURVE",
"1185 -20 CURVE SMOOTH",
"1348 -20 OFFCURVE",
"1483 24 OFFCURVE",
"1590 112 CURVE",
"1538 238 LINE",
"1445 166 OFFCURVE",
"1336 130 OFFCURVE",
"1211 130 CURVE SMOOTH",
"1032 130 OFFCURVE",
"940 270 OFFCURVE",
"971 497 CURVE",
"1689 497 LINE",
"1709 613 LINE SMOOTH",
"1765 926 OFFCURVE",
"1631 1102 OFFCURVE",
"1355 1102 CURVE SMOOTH",
"1205 1102 OFFCURVE",
"1054 1021 OFFCURVE",
"943 885 CURVE",
"885 1018 OFFCURVE",
"765 1102 OFFCURVE",
"583 1102 CURVE SMOOTH",
"393 1102 OFFCURVE",
"225 1007 OFFCURVE",
"114 838 CURVE SMOOTH",
"59 753 OFFCURVE",
"22 658 OFFCURVE",
"3 551 CURVE SMOOTH",
"1 538 LINE SMOOTH",
"-59 199 OFFCURVE",
"93 -20 OFFCURVE",
"387 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"228 130 OFFCURVE",
"141 285 OFFCURVE",
"184 529 CURVE SMOOTH",
"233 805 OFFCURVE",
"376 950 OFFCURVE",
"556 950 CURVE SMOOTH",
"740 950 OFFCURVE",
"827 794 OFFCURVE",
"784 551 CURVE SMOOTH",
"736 276 OFFCURVE",
"596 130 OFFCURVE",
"413 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1065 833 OFFCURVE",
"1196 950 OFFCURVE",
"1328 950 CURVE SMOOTH",
"1485 950 OFFCURVE",
"1564 842 OFFCURVE",
"1534 675 CURVE SMOOTH",
"1530 649 LINE",
"1004 649 LINE"
);
}
);
width = 1860;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"585 -20 OFFCURVE",
"777 108 OFFCURVE",
"881 331 CURVE",
"905 122 OFFCURVE",
"1054 -20 OFFCURVE",
"1250 -20 CURVE SMOOTH",
"1412 -20 OFFCURVE",
"1544 28 OFFCURVE",
"1646 123 CURVE",
"1624 165 LINE",
"1535 78 OFFCURVE",
"1413 34 OFFCURVE",
"1259 34 CURVE SMOOTH",
"985 34 OFFCURVE",
"898 255 OFFCURVE",
"955 577 CURVE",
"1766 577 LINE",
"1780 656 LINE SMOOTH",
"1828 928 OFFCURVE",
"1691 1102 OFFCURVE",
"1445 1102 CURVE SMOOTH",
"1245 1102 OFFCURVE",
"1055 962 OFFCURVE",
"956 747 CURVE",
"932 967 OFFCURVE",
"790 1102 OFFCURVE",
"569 1102 CURVE SMOOTH",
"386 1102 OFFCURVE",
"217 1005 OFFCURVE",
"109 841 CURVE SMOOTH",
"55 758 OFFCURVE",
"19 665 OFFCURVE",
"0 562 CURVE SMOOTH",
"-8 514 LINE SMOOTH",
"-74 140 OFFCURVE",
"217 -20 OFFCURVE",
"373 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"118 34 OFFCURVE",
"12 320 OFFCURVE",
"47 520 CURVE SMOOTH",
"103 837 OFFCURVE",
"312 1048 OFFCURVE",
"559 1048 CURVE SMOOTH",
"830 1048 OFFCURVE",
"938 818 OFFCURVE",
"888 531 CURVE SMOOTH",
"836 239 OFFCURVE",
"629 34 OFFCURVE",
"382 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1036 876 OFFCURVE",
"1224 1048 OFFCURVE",
"1435 1048 CURVE SMOOTH",
"1644 1048 OFFCURVE",
"1767 889 OFFCURVE",
"1727 664 CURVE SMOOTH",
"1721 631 LINE",
"967 631 LINE"
);
}
);
width = 1924;
}
);
leftKerningGroup = c;
note = uni0153;
unicode = 0153;
},
{
glyphname = circumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"349 1244 LINE",
"503 1389 LINE",
"657 1244 LINE",
"887 1244 LINE",
"887 1256 LINE",
"587 1536 LINE",
"419 1536 LINE",
"123 1260 LINE",
"123 1244 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 7 31 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
5 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1015;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"322 1252 LINE",
"471 1422 LINE",
"621 1252 LINE",
"774 1252 LINE",
"774 1262 LINE",
"527 1536 LINE",
"415 1536 LINE",
"169 1264 LINE",
"169 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 7 31 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
5 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 964;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"216 1264 LINE",
"401 1460 LINE {name = \"❌\";}",
"588 1264 LINE",
"656 1264 LINE",
"656 1274 LINE",
"422 1517 LINE",
"382 1517 LINE",
"152 1278 LINE",
"152 1264 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 7 31 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
5 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 796;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"352 1252 LINE",
"531 1422 LINE",
"651 1252 LINE",
"804 1252 LINE",
"806 1262 LINE",
"607 1536 LINE",
"495 1536 LINE",
"201 1264 LINE",
"199 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 7 31 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
5 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 964;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"248 1264 LINE",
"468 1460 LINE {name = \"❌\";}",
"620 1264 LINE",
"688 1264 LINE",
"690 1274 LINE",
"499 1517 LINE",
"459 1517 LINE",
"187 1278 LINE",
"184 1264 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 7 31 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
5 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
3 4 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 796;
}
);
note = uni02C6;
unicode = 02C6;
},
{
glyphname = caron;
lastChange = "2020-12-14 20:14:49 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"570 1245 LINE",
"872 1537 LINE {name = \"❌\";}",
"625 1537 LINE {name = \"❌\";}",
"479 1394 LINE",
"332 1537 LINE {name = \"❌\";}",
"85 1537 LINE {name = \"❌\";}",
"387 1245 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 4 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 964;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"505 1251 LINE",
"759 1535 LINE {name = \"❌\";}",
"599 1535 LINE {name = \"❌\";}",
"449 1365 LINE",
"298 1535 LINE {name = \"❌\";}",
"141 1535 LINE {name = \"❌\";}",
"392 1251 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 4 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 909;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"425 1243 LINE",
"643 1506 LINE",
"590 1506 LINE",
"396 1289 LINE",
"203 1506 LINE",
"146 1506 LINE",
"366 1243 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 4 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 764;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"535 1251 LINE",
"839 1535 LINE {name = \"❌\";}",
"679 1535 LINE {name = \"❌\";}",
"499 1365 LINE",
"378 1535 LINE {name = \"❌\";}",
"221 1535 LINE {name = \"❌\";}",
"422 1251 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 4 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 909;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"453 1243 LINE",
"718 1506 LINE",
"665 1506 LINE",
"432 1289 LINE",
"278 1506 LINE",
"221 1506 LINE",
"394 1243 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 4 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 764;
}
);
note = uni02C7;
unicode = 02C7;
},
{
glyphname = firsttonechinese;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = macron;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1026;
},
{
components = (
{
name = macron;
}
);
layerId = m002;
width = 939;
},
{
components = (
{
name = macron;
}
);
layerId = m003;
width = 811;
},
{
components = (
{
name = macron;
}
);
layerId = m004;
width = 939;
},
{
components = (
{
name = macron;
}
);
layerId = m005;
width = 811;
}
);
note = uni02C9;
unicode = 02C9;
},
{
glyphname = breve;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"658.667 1229 OFFCURVE",
"798 1348.667 OFFCURVE",
"798 1526 CURVE",
"591 1526 LINE",
"591 1442 OFFCURVE",
"538.667 1394 OFFCURVE",
"452 1394 CURVE SMOOTH",
"364 1394 OFFCURVE",
"311 1442 OFFCURVE",
"311 1526 CURVE",
"106 1526 LINE",
"106 1346 OFFCURVE",
"245.333 1229 OFFCURVE",
"452 1229 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
9 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 909;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"607.667 1227 OFFCURVE",
"728 1333.667 OFFCURVE",
"728 1495 CURVE",
"578 1495 LINE",
"578 1400.333 OFFCURVE",
"522.333 1346 OFFCURVE",
"429 1346 CURVE SMOOTH",
"331.667 1346 OFFCURVE",
"280 1401.667 OFFCURVE",
"280 1495 CURVE",
"129 1495 LINE",
"129 1335 OFFCURVE",
"250.333 1227 OFFCURVE",
"429 1227 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
9 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 874;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"595.333 1238 OFFCURVE",
"704 1336.667 OFFCURVE",
"704 1486 CURVE",
"650 1486 LINE",
"650 1367.333 OFFCURVE",
"568.667 1294 OFFCURVE",
"426 1294 CURVE SMOOTH",
"278 1294 OFFCURVE",
"201 1364.667 OFFCURVE",
"201 1486 CURVE",
"147 1486 LINE",
"147 1336.667 OFFCURVE",
"255.333 1238 OFFCURVE",
"426 1238 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
9 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 857;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"633 1227 OFFCURVE",
"772 1334 OFFCURVE",
"801 1495 CURVE",
"651 1495 LINE",
"634 1400 OFFCURVE",
"569 1346 OFFCURVE",
"476 1346 CURVE SMOOTH",
"378 1346 OFFCURVE",
"336 1402 OFFCURVE",
"353 1495 CURVE",
"202 1495 LINE",
"174 1335 OFFCURVE",
"276 1227 OFFCURVE",
"455 1227 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
9 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 874;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"623 1238 OFFCURVE",
"749 1337 OFFCURVE",
"775 1486 CURVE",
"721 1486 LINE",
"700 1367 OFFCURVE",
"606 1294 OFFCURVE",
"463 1294 CURVE SMOOTH",
"315 1294 OFFCURVE",
"251 1365 OFFCURVE",
"272 1486 CURVE",
"218 1486 LINE",
"192 1337 OFFCURVE",
"283 1238 OFFCURVE",
"454 1238 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
9 13 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 3 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
9 4 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 857;
}
);
note = uni02D8;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"358 1238 OFFCURVE",
"414 1294 OFFCURVE",
"414 1374 CURVE SMOOTH",
"414 1454 OFFCURVE",
"358 1511 OFFCURVE",
"266 1511 CURVE SMOOTH",
"176.667 1511 OFFCURVE",
"118 1454 OFFCURVE",
"118 1374 CURVE SMOOTH",
"118 1294 OFFCURVE",
"175.333 1238 OFFCURVE",
"266 1238 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 543;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"322 1262 OFFCURVE",
"360 1307 OFFCURVE",
"360 1367 CURVE SMOOTH",
"360 1427 OFFCURVE",
"322 1474 OFFCURVE",
"250 1474 CURVE SMOOTH",
"178 1474 OFFCURVE",
"141 1427 OFFCURVE",
"141 1367 CURVE SMOOTH",
"141 1307 OFFCURVE",
"178 1262 OFFCURVE",
"250 1262 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"241.667 1342 OFFCURVE",
"267 1366.333 OFFCURVE",
"267 1397 CURVE SMOOTH",
"267 1427.667 OFFCURVE",
"241.667 1453 OFFCURVE",
"211 1453 CURVE SMOOTH {name = \"❌\";}",
"180.333 1453 OFFCURVE",
"156 1427.667 OFFCURVE",
"156 1397 CURVE SMOOTH",
"156 1366.333 OFFCURVE",
"180.333 1342 OFFCURVE",
"211 1342 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 422;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"354 1262 OFFCURVE",
"400 1307 OFFCURVE",
"410 1367 CURVE SMOOTH",
"421 1427 OFFCURVE",
"391 1474 OFFCURVE",
"319 1474 CURVE SMOOTH",
"247 1474 OFFCURVE",
"202 1427 OFFCURVE",
"191 1367 CURVE SMOOTH",
"181 1307 OFFCURVE",
"210 1262 OFFCURVE",
"282 1262 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 497;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"288 1342 OFFCURVE",
"317 1366 OFFCURVE",
"323 1397 CURVE SMOOTH",
"328 1428 OFFCURVE",
"307 1453 OFFCURVE",
"276 1453 CURVE SMOOTH {name = \"❌\";}",
"246 1453 OFFCURVE",
"217 1428 OFFCURVE",
"212 1397 CURVE SMOOTH",
"206 1366 OFFCURVE",
"226 1342 OFFCURVE",
"257 1342 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 422;
}
);
note = uni02D9;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"468.667 1124 OFFCURVE",
"565 1211.667 OFFCURVE",
"565 1325 CURVE SMOOTH",
"565 1442.333 OFFCURVE",
"464.667 1530 OFFCURVE",
"342 1530 CURVE SMOOTH",
"218 1530 OFFCURVE",
"119 1439.667 OFFCURVE",
"119 1325 CURVE SMOOTH",
"119 1214.333 OFFCURVE",
"212.667 1124 OFFCURVE",
"342 1124 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275.333 1218 OFFCURVE",
"234 1266.333 OFFCURVE",
"234 1325 CURVE SMOOTH",
"234 1386.333 OFFCURVE",
"276.667 1434 OFFCURVE",
"342 1434 CURVE SMOOTH",
"407.333 1434 OFFCURVE",
"450 1386.333 OFFCURVE",
"450 1325 CURVE SMOOTH",
"450 1266.333 OFFCURVE",
"408.667 1218 OFFCURVE",
"342 1218 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
63 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 682;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"457.333 1204 OFFCURVE",
"551 1292 OFFCURVE",
"551 1408 CURVE SMOOTH",
"551 1522.667 OFFCURVE",
"458.667 1616 OFFCURVE",
"336 1616 CURVE SMOOTH",
"213.333 1616 OFFCURVE",
"121 1522.667 OFFCURVE",
"121 1408 CURVE SMOOTH",
"121 1293.333 OFFCURVE",
"213.333 1204 OFFCURVE",
"336 1204 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"270.667 1293 OFFCURVE",
"220 1345.333 OFFCURVE",
"220 1408 CURVE SMOOTH",
"220 1472 OFFCURVE",
"269.333 1526 OFFCURVE",
"336 1526 CURVE SMOOTH",
"413 1526 OFFCURVE",
"451 1468 OFFCURVE",
"451 1410 CURVE SMOOTH",
"451 1352 OFFCURVE",
"413 1293 OFFCURVE",
"336 1293 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
63 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 685;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"381 1212 OFFCURVE",
"456 1286 OFFCURVE",
"456 1382 CURVE SMOOTH",
"456 1478 OFFCURVE",
"381 1556 OFFCURVE",
"285 1556 CURVE SMOOTH",
"191.667 1556 OFFCURVE",
"114 1482 OFFCURVE",
"114 1382 CURVE SMOOTH",
"114 1282 OFFCURVE",
"193 1212 OFFCURVE",
"285 1212 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 1266 OFFCURVE",
"168 1312.667 OFFCURVE",
"168 1382 CURVE SMOOTH",
"168 1454 OFFCURVE",
"217 1502 OFFCURVE",
"285 1502 CURVE SMOOTH",
"353 1502 OFFCURVE",
"402 1454 OFFCURVE",
"402 1382 CURVE SMOOTH",
"402 1312.667 OFFCURVE",
"353 1266 OFFCURVE",
"285 1266 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
63 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 586;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"479 1204 OFFCURVE",
"588 1292 OFFCURVE",
"608 1408 CURVE SMOOTH",
"629 1523 OFFCURVE",
"553 1616 OFFCURVE",
"430 1616 CURVE SMOOTH",
"307 1616 OFFCURVE",
"199 1523 OFFCURVE",
"178 1408 CURVE SMOOTH",
"158 1293 OFFCURVE",
"235 1204 OFFCURVE",
"358 1204 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 1293 OFFCURVE",
"266 1345 OFFCURVE",
"277 1408 CURVE SMOOTH",
"289 1472 OFFCURVE",
"348 1526 OFFCURVE",
"414 1526 CURVE SMOOTH",
"491 1526 OFFCURVE",
"519 1468 OFFCURVE",
"509 1410 CURVE SMOOTH",
"499 1352 OFFCURVE",
"450 1293 OFFCURVE",
"373 1293 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
63 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 685;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"404 1212 OFFCURVE",
"492 1286 OFFCURVE",
"509 1382 CURVE SMOOTH",
"526 1478 OFFCURVE",
"465 1556 OFFCURVE",
"369 1556 CURVE SMOOTH",
"275 1556 OFFCURVE",
"185 1482 OFFCURVE",
"167 1382 CURVE SMOOTH",
"149 1282 OFFCURVE",
"216 1212 OFFCURVE",
"308 1212 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 1266 OFFCURVE",
"209 1313 OFFCURVE",
"221 1382 CURVE SMOOTH",
"234 1454 OFFCURVE",
"291 1502 OFFCURVE",
"359 1502 CURVE SMOOTH",
"427 1502 OFFCURVE",
"468 1454 OFFCURVE",
"455 1382 CURVE SMOOTH",
"443 1313 OFFCURVE",
"385 1266 OFFCURVE",
"317 1266 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 21 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
63 7 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 586;
}
);
note = uni02DA;
unicode = 02DA;
},
{
glyphname = ogonek;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"321.333 -422 OFFCURVE",
"376.333 -407.333 OFFCURVE",
"425 -378 CURVE",
"396 -221 LINE",
"364.667 -234.333 OFFCURVE",
"338 -241 OFFCURVE",
"316 -241 CURVE SMOOTH",
"272 -241 OFFCURVE",
"250 -219.333 OFFCURVE",
"250 -176 CURVE SMOOTH",
"250 -105.333 OFFCURVE",
"305.333 -56 OFFCURVE",
"404 0 CURVE",
"256 60 LINE",
"107.333 -7.333 OFFCURVE",
"33 -98.333 OFFCURVE",
"33 -213 CURVE SMOOTH",
"33 -343.667 OFFCURVE",
"126.667 -422 OFFCURVE",
"260 -422 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
15 16 31 16 47 16 63 16 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 616;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"302 -433 OFFCURVE",
"355.333 -418.333 OFFCURVE",
"402 -389 CURVE",
"389 -268 LINE",
"354.333 -285.333 OFFCURVE",
"321 -294 OFFCURVE",
"289 -294 CURVE SMOOTH",
"237 -294 OFFCURVE",
"211 -270 OFFCURVE",
"211 -222 CURVE SMOOTH",
"211 -164.667 OFFCURVE",
"248.667 -105.667 OFFCURVE",
"382 0 CURVE",
"307 56 LINE",
"143 -18.667 OFFCURVE",
"50 -124.333 OFFCURVE",
"50 -243 CURVE SMOOTH",
"50 -357.667 OFFCURVE",
"123.333 -433 OFFCURVE",
"242 -433 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
15 16 31 16 47 16 63 16 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 554;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"264.667 -395 OFFCURVE",
"306.667 -380.333 OFFCURVE",
"344 -351 CURVE",
"328 -303 LINE",
"292.667 -328.333 OFFCURVE",
"256 -341 OFFCURVE",
"218 -341 CURVE SMOOTH",
"156 -341 OFFCURVE",
"125 -309.333 OFFCURVE",
"125 -246 CURVE SMOOTH",
"125 -166 OFFCURVE",
"250 -49 OFFCURVE",
"313 0 CURVE",
"270 20 LINE",
"137.333 -79.333 OFFCURVE",
"71 -168 OFFCURVE",
"71 -246 CURVE SMOOTH",
"71 -347.333 OFFCURVE",
"128.667 -395 OFFCURVE",
"218 -395 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
15 16 31 16 47 16 63 16 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 471;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"35 -433 OFFCURVE",
"91 -418 OFFCURVE",
"143 -389 CURVE",
"151 -268 LINE",
"113 -285 OFFCURVE",
"78 -294 OFFCURVE",
"46 -294 CURVE SMOOTH",
"-6 -294 OFFCURVE",
"-27 -270 OFFCURVE",
"-19 -222 CURVE SMOOTH",
"-9 -165 OFFCURVE",
"39 -106 OFFCURVE",
"191 0 CURVE",
"126 56 LINE",
"-51 -19 OFFCURVE",
"-163 -124 OFFCURVE",
"-184 -243 CURVE SMOOTH",
"-204 -358 OFFCURVE",
"-144 -433 OFFCURVE",
"-25 -433 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
15 16 31 16 47 16 63 16 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 554;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"4 -395 OFFCURVE",
"49 -380 OFFCURVE",
"91 -351 CURVE",
"84 -303 LINE",
"44 -328 OFFCURVE",
"5 -341 OFFCURVE",
"-33 -341 CURVE SMOOTH",
"-95 -341 OFFCURVE",
"-120 -309 OFFCURVE",
"-109 -246 CURVE SMOOTH",
"-95 -166 OFFCURVE",
"51 -49 OFFCURVE",
"122 0 CURVE",
"83 20 LINE",
"-67 -79 OFFCURVE",
"-149 -168 OFFCURVE",
"-163 -246 CURVE SMOOTH",
"-181 -347 OFFCURVE",
"-132 -395 OFFCURVE",
"-42 -395 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
5 17 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
5 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
15 16 31 16 47 16 63 16 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 471;
}
);
note = uni02DB;
unicode = 02DB;
},
{
glyphname = tilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"285 1248 LINE",
"285 1309.333 OFFCURVE",
"322.333 1344 OFFCURVE",
"369 1344 CURVE SMOOTH",
"480.203 1344 OFFCURVE",
"508.318 1258 OFFCURVE",
"643 1258 CURVE SMOOTH",
"769.667 1258 OFFCURVE",
"870 1373.333 OFFCURVE",
"870 1524 CURVE",
"703 1535 LINE {name = \"❌\";}",
"703 1473.667 OFFCURVE",
"663.667 1440 OFFCURVE",
"617 1440 CURVE SMOOTH",
"495.899 1440 OFFCURVE",
"453.84 1525 OFFCURVE",
"343 1525 CURVE SMOOTH",
"216.333 1525 OFFCURVE",
"117 1406 OFFCURVE",
"117 1248 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 8 31 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 985;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"247 1241 LINE",
"247 1306.333 OFFCURVE",
"291.333 1353 OFFCURVE",
"346 1353 CURVE SMOOTH",
"473 1353 OFFCURVE",
"468 1258 OFFCURVE",
"615 1258 CURVE SMOOTH",
"737.667 1258 OFFCURVE",
"830 1356 OFFCURVE",
"830 1500 CURVE",
"706 1512 LINE",
"706 1452 OFFCURVE",
"663.333 1399 OFFCURVE",
"606 1399 CURVE SMOOTH",
"495.176 1399 OFFCURVE",
"456.819 1495 OFFCURVE",
"337 1495 CURVE SMOOTH",
"213 1495 OFFCURVE",
"123 1390.667 OFFCURVE",
"123 1241 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 8 31 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 966;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"145 1286 LINE",
"145 1362 OFFCURVE",
"191.333 1411 OFFCURVE",
"266 1411 CURVE SMOOTH",
"377 1411 OFFCURVE",
"415 1286 OFFCURVE",
"553 1286 CURVE SMOOTH",
"653 1286 OFFCURVE",
"729 1362.667 OFFCURVE",
"729 1472 CURVE",
"674 1472 LINE",
"674 1393.333 OFFCURVE",
"625 1341 OFFCURVE",
"553 1341 CURVE SMOOTH",
"447 1341 OFFCURVE",
"400 1465 OFFCURVE",
"266 1465 CURVE SMOOTH",
"164.667 1465 OFFCURVE",
"90 1392.667 OFFCURVE",
"90 1286 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 8 31 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 817;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"275 1241 LINE",
"287 1306 OFFCURVE",
"339 1353 OFFCURVE",
"394 1353 CURVE SMOOTH",
"521 1353 OFFCURVE",
"499 1258 OFFCURVE",
"646 1258 CURVE SMOOTH",
"769 1258 OFFCURVE",
"878 1356 OFFCURVE",
"904 1500 CURVE",
"782 1512 LINE",
"771 1452 OFFCURVE",
"719 1399 OFFCURVE",
"662 1399 CURVE SMOOTH",
"551 1399 OFFCURVE",
"530 1495 OFFCURVE",
"410 1495 CURVE SMOOTH",
"286 1495 OFFCURVE",
"177 1391 OFFCURVE",
"151 1241 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 8 31 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 966;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"181 1286 LINE",
"194 1362 OFFCURVE",
"249 1411 OFFCURVE",
"324 1411 CURVE SMOOTH",
"435 1411 OFFCURVE",
"451 1286 OFFCURVE",
"589 1286 CURVE SMOOTH",
"689 1286 OFFCURVE",
"778 1363 OFFCURVE",
"798 1472 CURVE",
"743 1472 LINE",
"729 1393 OFFCURVE",
"671 1341 OFFCURVE",
"599 1341 CURVE SMOOTH",
"493 1341 OFFCURVE",
"468 1465 OFFCURVE",
"334 1465 CURVE SMOOTH",
"232 1465 OFFCURVE",
"145 1393 OFFCURVE",
"126 1286 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 8 31 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 3 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 817;
}
);
note = uni02DC;
unicode = 02DC;
},
{
glyphname = hungarumlaut;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"627 1234 LINE",
"893 1535 LINE {name = \"❌\";}",
"634 1535 LINE {name = \"❌\";}",
"409 1234 LINE"
);
},
{
closed = 1;
nodes = (
"269 1234 LINE",
"498 1535 LINE {name = \"❌\";}",
"243 1535 LINE {name = \"❌\";}",
"57 1234 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 840;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"543 1232 LINE",
"812 1535 LINE {name = \"❌\";}",
"605 1535 LINE {name = \"❌\";}",
"374 1232 LINE"
);
},
{
closed = 1;
nodes = (
"244 1232 LINE",
"462 1535 LINE {name = \"❌\";}",
"265 1535 LINE {name = \"❌\";}",
"94 1232 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 764;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"454 1232 LINE",
"742 1536 LINE",
"662 1536 LINE",
"381 1232 LINE"
);
},
{
closed = 1;
nodes = (
"215 1232 LINE",
"458 1536 LINE",
"382 1536 LINE",
"146 1232 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 783;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"569 1232 LINE",
"892 1535 LINE {name = \"❌\";}",
"685 1535 LINE {name = \"❌\";}",
"400 1232 LINE"
);
},
{
closed = 1;
nodes = (
"270 1232 LINE",
"542 1535 LINE {name = \"❌\";}",
"345 1535 LINE {name = \"❌\";}",
"120 1232 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 764;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"480 1232 LINE",
"822 1536 LINE",
"742 1536 LINE",
"407 1232 LINE"
);
},
{
closed = 1;
nodes = (
"241 1232 LINE",
"538 1536 LINE",
"462 1536 LINE",
"172 1232 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 783;
}
);
note = uni02DD;
unicode = 02DD;
},
{
glyphname = lowringmod;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"438 -399 OFFCURVE",
"515 -324.667 OFFCURVE",
"515 -230 CURVE SMOOTH",
"515 -135.333 OFFCURVE",
"438 -57 OFFCURVE",
"330 -57 CURVE SMOOTH",
"223.333 -57 OFFCURVE",
"142 -132.667 OFFCURVE",
"142 -230 CURVE SMOOTH",
"142 -327.333 OFFCURVE",
"223.333 -399 OFFCURVE",
"330 -399 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"292 -303 OFFCURVE",
"255 -278 OFFCURVE",
"255 -230 CURVE SMOOTH",
"255 -176 OFFCURVE",
"298 -149 OFFCURVE",
"338 -153 CURVE SMOOTH",
"371 -157 OFFCURVE",
"402 -182 OFFCURVE",
"402 -230 CURVE SMOOTH",
"402 -280 OFFCURVE",
"365 -304 OFFCURVE",
"329 -304 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
0 3 16 3 32 3 48 3 64 3 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
48 9 64 9 80 9 96 9 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 643;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"397.333 -405 OFFCURVE",
"469 -335.333 OFFCURVE",
"469 -242 CURVE SMOOTH",
"469 -147.333 OFFCURVE",
"394.667 -75 OFFCURVE",
"300 -75 CURVE SMOOTH",
"201.333 -75 OFFCURVE",
"126 -148.667 OFFCURVE",
"126 -242 CURVE SMOOTH",
"126 -334 OFFCURVE",
"198.667 -405 OFFCURVE",
"300 -405 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"251 -321 OFFCURVE",
"213 -294 OFFCURVE",
"213 -242 CURVE SMOOTH",
"213 -196.667 OFFCURVE",
"250.667 -156 OFFCURVE",
"300 -156 CURVE SMOOTH",
"346.667 -156 OFFCURVE",
"383 -194 OFFCURVE",
"383 -242 CURVE SMOOTH",
"383 -299 OFFCURVE",
"336 -326 OFFCURVE",
"291 -323 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
0 3 16 3 32 3 48 3 64 3 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
48 9 64 9 80 9 96 9 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 602;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"395 -335 OFFCURVE",
"456 -284.333 OFFCURVE",
"456 -219 CURVE SMOOTH",
"456 -155 OFFCURVE",
"397.667 -99 OFFCURVE",
"323 -99 CURVE SMOOTH",
"247 -99 OFFCURVE",
"189 -155 OFFCURVE",
"189 -219 CURVE SMOOTH",
"189 -284.333 OFFCURVE",
"249.667 -335 OFFCURVE",
"323 -335 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 -278 OFFCURVE",
"247 -258 OFFCURVE",
"247 -219 CURVE SMOOTH",
"247 -178 OFFCURVE",
"285 -157 OFFCURVE",
"322 -157 CURVE SMOOTH",
"361 -157 OFFCURVE",
"399 -178 OFFCURVE",
"399 -219 CURVE SMOOTH",
"399 -261 OFFCURVE",
"358 -281 OFFCURVE",
"319 -279 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
0 3 16 3 32 3 48 3 64 3 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
48 9 64 9 80 9 96 9 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 642;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"135 -405 OFFCURVE",
"219 -335 OFFCURVE",
"236 -242 CURVE SMOOTH",
"252 -147 OFFCURVE",
"191 -75 OFFCURVE",
"96 -75 CURVE SMOOTH",
"-3 -75 OFFCURVE",
"-91 -149 OFFCURVE",
"-107 -242 CURVE SMOOTH",
"-124 -334 OFFCURVE",
"-64 -405 OFFCURVE",
"38 -405 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"4 -321 OFFCURVE",
"-30 -294 OFFCURVE",
"-20 -242 CURVE SMOOTH",
"-12 -197 OFFCURVE",
"32 -156 OFFCURVE",
"82 -156 CURVE SMOOTH",
"128 -156 OFFCURVE",
"158 -194 OFFCURVE",
"150 -242 CURVE SMOOTH",
"139 -299 OFFCURVE",
"88 -326 OFFCURVE",
"43 -323 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
0 3 16 3 32 3 48 3 64 3 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
48 9 64 9 80 9 96 9 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 602;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"145 -335 OFFCURVE",
"215 -284 OFFCURVE",
"227 -219 CURVE SMOOTH",
"238 -155 OFFCURVE",
"189 -99 OFFCURVE",
"115 -99 CURVE SMOOTH",
"39 -99 OFFCURVE",
"-29 -155 OFFCURVE",
"-40 -219 CURVE SMOOTH",
"-52 -284 OFFCURVE",
"0 -335 OFFCURVE",
"73 -335 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"42 -278 OFFCURVE",
"11 -258 OFFCURVE",
"18 -219 CURVE SMOOTH",
"25 -178 OFFCURVE",
"67 -157 OFFCURVE",
"104 -157 CURVE SMOOTH",
"143 -157 OFFCURVE",
"177 -178 OFFCURVE",
"170 -219 CURVE SMOOTH",
"162 -261 OFFCURVE",
"118 -281 OFFCURVE",
"79 -279 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 11 values pushed */
0 3 16 3 32 3 48 3 64 3 5 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHB[ ]	/* 9 values pushed */
48 9 64 9 80 9 96 9 4 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
0 9 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 642;
}
);
note = uni02F3;
unicode = 02F3;
},
{
glyphname = gravecomb;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-383 1226 LINE",
"-580 1536 LINE",
"-896 1536 LINE",
"-620 1226 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-440 1242 LINE",
"-633 1536 LINE",
"-857 1536 LINE",
"-599 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-490 1270 LINE",
"-678 1536 LINE",
"-744 1536 LINE",
"-549 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-412 1242 LINE",
"-553 1536 LINE",
"-777 1536 LINE",
"-571 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-457 1270 LINE",
"-598 1536 LINE",
"-664 1536 LINE",
"-516 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 2 31 2 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0300;
unicode = 0300;
},
{
glyphname = acutecomb;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-448 1226 LINE",
"-170 1536 LINE",
"-486 1536 LINE",
"-682 1226 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-508 1242 LINE",
"-240 1536 LINE",
"-464 1536 LINE",
"-657 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-514 1270 LINE",
"-319 1536 LINE",
"-385 1536 LINE",
"-574 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-480 1242 LINE",
"-160 1536 LINE",
"-384 1536 LINE",
"-629 1242 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-481 1270 LINE",
"-239 1536 LINE",
"-305 1536 LINE",
"-541 1270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 1 31 1 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0301;
unicode = 0301;
},
{
glyphname = tildecomb;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -1044, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
},
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -1008, 0}";
}
);
layerId = m002;
width = 0;
},
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -912, 0}";
}
);
layerId = m003;
width = 0;
},
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -1008, 0}";
}
);
layerId = m004;
width = 0;
},
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -912, 0}";
}
);
layerId = m005;
width = 0;
}
);
note = uni0303;
unicode = 0303;
},
{
glyphname = dblgravecomb;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-509 1252 LINE",
"-754 1518 LINE",
"-1040 1518 LINE",
"-748 1252 LINE"
);
},
{
closed = 1;
nodes = (
"-170 1252 LINE",
"-368 1518 LINE",
"-648 1518 LINE",
"-403 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 6 31 6 47 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-510 1252 LINE",
"-760 1518 LINE",
"-985 1518 LINE",
"-679 1252 LINE"
);
},
{
closed = 1;
nodes = (
"-249 1252 LINE",
"-439 1518 LINE",
"-645 1518 LINE",
"-399 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 6 31 6 47 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-598 1252 LINE",
"-889 1518 LINE",
"-969 1518 LINE",
"-671 1252 LINE"
);
},
{
closed = 1;
nodes = (
"-373 1252 LINE",
"-619 1518 LINE",
"-695 1518 LINE",
"-442 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 6 31 6 47 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-480 1252 LINE",
"-683 1518 LINE",
"-908 1518 LINE",
"-649 1252 LINE"
);
},
{
closed = 1;
nodes = (
"-219 1252 LINE",
"-362 1518 LINE",
"-568 1518 LINE",
"-369 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 6 31 6 47 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-568 1252 LINE",
"-812 1518 LINE",
"-892 1518 LINE",
"-641 1252 LINE"
);
},
{
closed = 1;
nodes = (
"-343 1252 LINE",
"-542 1518 LINE",
"-618 1518 LINE",
"-412 1252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 6 31 6 47 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni030F;
unicode = 030F;
},
{
glyphname = dotbelowcomb;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-502.667 -373 OFFCURVE",
"-438 -312.667 OFFCURVE",
"-438 -234 CURVE SMOOTH",
"-438 -154 OFFCURVE",
"-504 -96 OFFCURVE",
"-600 -96 CURVE SMOOTH",
"-694.667 -96 OFFCURVE",
"-761 -154 OFFCURVE",
"-761 -234 CURVE SMOOTH",
"-761 -312.667 OFFCURVE",
"-697.333 -373 OFFCURVE",
"-600 -373 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-531 -350 OFFCURVE",
"-493 -305 OFFCURVE",
"-493 -245 CURVE SMOOTH",
"-493 -185 OFFCURVE",
"-531 -138 OFFCURVE",
"-603 -138 CURVE SMOOTH",
"-675 -138 OFFCURVE",
"-712 -185 OFFCURVE",
"-712 -245 CURVE SMOOTH",
"-712 -305 OFFCURVE",
"-675 -350 OFFCURVE",
"-603 -350 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-546.333 -273 OFFCURVE",
"-521 -248.667 OFFCURVE",
"-521 -218 CURVE SMOOTH",
"-521 -187.333 OFFCURVE",
"-546.333 -162 OFFCURVE",
"-577 -162 CURVE SMOOTH",
"-607.667 -162 OFFCURVE",
"-632 -187.333 OFFCURVE",
"-632 -218 CURVE SMOOTH",
"-632 -248.667 OFFCURVE",
"-607.667 -273 OFFCURVE",
"-577 -273 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-784 -350 OFFCURVE",
"-738 -305 OFFCURVE",
"-727 -245 CURVE SMOOTH",
"-716 -185 OFFCURVE",
"-746 -138 OFFCURVE",
"-818 -138 CURVE SMOOTH",
"-890 -138 OFFCURVE",
"-935 -185 OFFCURVE",
"-946 -245 CURVE SMOOTH",
"-957 -305 OFFCURVE",
"-928 -350 OFFCURVE",
"-856 -350 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-785 -273 OFFCURVE",
"-756 -249 OFFCURVE",
"-750 -218 CURVE SMOOTH",
"-745 -187 OFFCURVE",
"-766 -162 OFFCURVE",
"-796 -162 CURVE SMOOTH",
"-827 -162 OFFCURVE",
"-856 -187 OFFCURVE",
"-861 -218 CURVE SMOOTH",
"-867 -249 OFFCURVE",
"-847 -273 OFFCURVE",
"-816 -273 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
7 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni0323;
unicode = 0323;
},
{
glyphname = tonos;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"390 1256 LINE",
"553 1601 LINE",
"291 1601 LINE",
"218 1256 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 690;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"295 1262 LINE",
"411 1599 LINE",
"237 1599 LINE",
"183 1262 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 525;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"269 1305 LINE",
"372 1578 LINE",
"309 1578 LINE",
"216 1305 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 514;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"327 1262 LINE",
"502 1599 LINE",
"328 1599 LINE",
"215 1262 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 525;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"308 1305 LINE",
"459 1578 LINE",
"396 1578 LINE",
"255 1305 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 0 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
3 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 514;
}
);
note = uni0384;
unicode = 0384;
},
{
glyphname = dieresistonos;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"612 1419 LINE",
"766 1751 LINE",
"507 1751 LINE",
"464 1419 LINE"
);
},
{
closed = 1;
nodes = (
"323.667 1239 OFFCURVE",
"379 1295.667 OFFCURVE",
"379 1365 CURVE SMOOTH",
"379 1434.333 OFFCURVE",
"323.667 1492 OFFCURVE",
"241 1492 CURVE SMOOTH",
"158.333 1492 OFFCURVE",
"102 1434.333 OFFCURVE",
"102 1365 CURVE SMOOTH",
"102 1294.333 OFFCURVE",
"159.667 1239 OFFCURVE",
"241 1239 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"939.667 1238 OFFCURVE",
"996 1295.667 OFFCURVE",
"996 1365 CURVE SMOOTH",
"996 1437 OFFCURVE",
"934.333 1492 OFFCURVE",
"857 1492 CURVE SMOOTH",
"778.333 1492 OFFCURVE",
"719 1435.667 OFFCURVE",
"719 1365 CURVE SMOOTH",
"719 1295.667 OFFCURVE",
"774.333 1238 OFFCURVE",
"857 1238 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1123;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"568 1408 LINE",
"669 1672 LINE",
"481 1672 LINE",
"433 1408 LINE"
);
},
{
closed = 1;
nodes = (
"294 1266 OFFCURVE",
"332 1311 OFFCURVE",
"332 1371 CURVE SMOOTH",
"332 1431 OFFCURVE",
"294 1477 OFFCURVE",
"222 1477 CURVE SMOOTH",
"150 1477 OFFCURVE",
"113 1431 OFFCURVE",
"113 1371 CURVE SMOOTH",
"113 1311 OFFCURVE",
"150 1266 OFFCURVE",
"222 1266 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"861 1264 OFFCURVE",
"899 1309 OFFCURVE",
"899 1369 CURVE SMOOTH",
"899 1429 OFFCURVE",
"861 1476 OFFCURVE",
"789 1476 CURVE SMOOTH",
"717 1476 OFFCURVE",
"680 1429 OFFCURVE",
"680 1369 CURVE SMOOTH",
"680 1309 OFFCURVE",
"717 1264 OFFCURVE",
"789 1264 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1035;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"502 1417 LINE",
"545 1657 LINE",
"466 1657 LINE",
"443 1417 LINE"
);
},
{
closed = 1;
nodes = (
"279.667 1366 OFFCURVE",
"305 1390.333 OFFCURVE",
"305 1421 CURVE SMOOTH",
"305 1451.667 OFFCURVE",
"279.667 1477 OFFCURVE",
"249 1477 CURVE SMOOTH",
"218.333 1477 OFFCURVE",
"194 1451.667 OFFCURVE",
"194 1421 CURVE SMOOTH",
"194 1390.333 OFFCURVE",
"218.333 1366 OFFCURVE",
"249 1366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"724.667 1366 OFFCURVE",
"750 1390.333 OFFCURVE",
"750 1421 CURVE SMOOTH",
"750 1451.667 OFFCURVE",
"724.667 1477 OFFCURVE",
"694 1477 CURVE SMOOTH",
"663.333 1477 OFFCURVE",
"639 1451.667 OFFCURVE",
"639 1421 CURVE SMOOTH",
"639 1390.333 OFFCURVE",
"663.333 1366 OFFCURVE",
"694 1366 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 928;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"625 1408 LINE",
"773 1672 LINE",
"585 1672 LINE",
"490 1408 LINE"
);
},
{
closed = 1;
nodes = (
"326 1266 OFFCURVE",
"372 1311 OFFCURVE",
"383 1371 CURVE SMOOTH",
"394 1431 OFFCURVE",
"364 1477 OFFCURVE",
"292 1477 CURVE SMOOTH",
"220 1477 OFFCURVE",
"175 1431 OFFCURVE",
"164 1371 CURVE SMOOTH",
"153 1311 OFFCURVE",
"182 1266 OFFCURVE",
"254 1266 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"893 1264 OFFCURVE",
"939 1309 OFFCURVE",
"950 1369 CURVE SMOOTH",
"960 1429 OFFCURVE",
"930 1476 OFFCURVE",
"858 1476 CURVE SMOOTH",
"786 1476 OFFCURVE",
"741 1429 OFFCURVE",
"731 1369 CURVE SMOOTH",
"720 1309 OFFCURVE",
"749 1264 OFFCURVE",
"821 1264 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1035;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"561 1417 LINE",
"646 1657 LINE",
"567 1657 LINE",
"502 1417 LINE"
);
},
{
closed = 1;
nodes = (
"330 1366 OFFCURVE",
"359 1390 OFFCURVE",
"365 1421 CURVE SMOOTH",
"370 1452 OFFCURVE",
"349 1477 OFFCURVE",
"319 1477 CURVE SMOOTH",
"288 1477 OFFCURVE",
"259 1452 OFFCURVE",
"254 1421 CURVE SMOOTH",
"248 1390 OFFCURVE",
"268 1366 OFFCURVE",
"299 1366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"775 1366 OFFCURVE",
"804 1390 OFFCURVE",
"810 1421 CURVE SMOOTH",
"815 1452 OFFCURVE",
"794 1477 OFFCURVE",
"764 1477 CURVE SMOOTH",
"733 1477 OFFCURVE",
"704 1452 OFFCURVE",
"699 1421 CURVE SMOOTH",
"693 1390 OFFCURVE",
"713 1366 OFFCURVE",
"744 1366 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 928;
}
);
note = uni0385;
unicode = 0385;
},
{
glyphname = anoteleia;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = periodcentered;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 617;
},
{
components = (
{
name = periodcentered;
}
);
layerId = m002;
width = 535;
},
{
components = (
{
name = periodcentered;
}
);
layerId = m003;
width = 472;
},
{
components = (
{
name = periodcentered;
}
);
layerId = m004;
width = 535;
},
{
components = (
{
name = periodcentered;
}
);
layerId = m005;
width = 472;
}
);
note = uni0387;
unicode = 0387;
},
{
glyphname = enquad;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1044;
},
{
layerId = m003;
width = 1044;
},
{
layerId = m002;
width = 1044;
},
{
layerId = m004;
width = 1044;
},
{
layerId = m005;
width = 1044;
}
);
note = uni2000;
unicode = 2000;
},
{
glyphname = emquad;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2089;
},
{
layerId = m003;
width = 2089;
},
{
layerId = m002;
width = 2089;
},
{
layerId = m004;
width = 2089;
},
{
layerId = m005;
width = 2089;
}
);
note = uni2001;
unicode = 2001;
},
{
glyphname = enspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1044;
},
{
layerId = m003;
width = 1044;
},
{
layerId = m002;
width = 1044;
},
{
layerId = m004;
width = 1044;
},
{
layerId = m005;
width = 1044;
}
);
note = uni2002;
unicode = 2002;
},
{
glyphname = emspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2089;
},
{
layerId = m003;
width = 2089;
},
{
layerId = m002;
width = 2089;
},
{
layerId = m004;
width = 2089;
},
{
layerId = m005;
width = 2089;
}
);
note = uni2003;
unicode = 2003;
},
{
glyphname = threeperemspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 697;
},
{
layerId = m003;
width = 697;
},
{
layerId = m002;
width = 697;
},
{
layerId = m004;
width = 697;
},
{
layerId = m005;
width = 697;
}
);
note = uni2004;
unicode = 2004;
},
{
glyphname = fourperemspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 522;
},
{
layerId = m003;
width = 522;
},
{
layerId = m002;
width = 522;
},
{
layerId = m004;
width = 522;
},
{
layerId = m005;
width = 522;
}
);
note = uni2005;
unicode = 2005;
},
{
glyphname = sixperemspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 348;
},
{
layerId = m003;
width = 348;
},
{
layerId = m002;
width = 348;
},
{
layerId = m004;
width = 348;
},
{
layerId = m005;
width = 348;
}
);
note = uni2006;
unicode = 2006;
},
{
glyphname = figurespace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1151;
},
{
layerId = m003;
width = 1151;
},
{
layerId = m002;
width = 1151;
},
{
layerId = m004;
width = 1151;
},
{
layerId = m005;
width = 1151;
}
);
note = uni2007;
unicode = 2007;
},
{
glyphname = punctuationspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 560;
},
{
layerId = m003;
width = 560;
},
{
layerId = m002;
width = 560;
},
{
layerId = m004;
width = 560;
},
{
layerId = m005;
width = 560;
}
);
note = uni2008;
unicode = 2008;
},
{
glyphname = thinspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 418;
},
{
layerId = m003;
width = 418;
},
{
layerId = m002;
width = 418;
},
{
layerId = m004;
width = 418;
},
{
layerId = m005;
width = 418;
}
);
note = uni2009;
unicode = 2009;
},
{
glyphname = thinspace.locl;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 256;
},
{
layerId = m003;
width = 256;
},
{
layerId = m002;
width = 256;
},
{
layerId = m004;
width = 256;
},
{
layerId = m005;
width = 256;
}
);
note = glyph00380;
},
{
glyphname = hairspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 209;
},
{
layerId = m003;
width = 209;
},
{
layerId = m002;
width = 209;
},
{
layerId = m004;
width = 209;
},
{
layerId = m005;
width = 209;
}
);
note = uni200A;
unicode = 200A;
},
{
glyphname = zerowidthspace;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
},
{
layerId = m003;
width = 0;
},
{
layerId = m002;
width = 0;
},
{
layerId = m004;
width = 0;
},
{
layerId = m005;
width = 0;
}
);
note = uni200B;
unicode = 200B;
},
{
glyphname = hyphentwo;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 795;
},
{
components = (
{
name = hyphen;
}
);
layerId = m003;
width = 592;
},
{
components = (
{
name = hyphen;
}
);
layerId = m002;
width = 564;
},
{
components = (
{
name = hyphen;
}
);
layerId = m004;
width = 564;
},
{
components = (
{
name = hyphen;
}
);
layerId = m005;
width = 592;
}
);
note = uni2010;
unicode = 2010;
},
{
glyphname = nonbreakinghyphen;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 795;
},
{
components = (
{
name = hyphen;
}
);
layerId = m003;
width = 592;
},
{
components = (
{
name = hyphen;
}
);
layerId = m002;
width = 564;
},
{
components = (
{
name = hyphen;
}
);
layerId = m004;
width = 564;
},
{
components = (
{
name = hyphen;
}
);
layerId = m005;
width = 592;
}
);
note = uni2011;
unicode = 2011;
},
{
glyphname = endash;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = minus;
transform = "{1.2, 0, 0, 1, -24, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1294;
},
{
components = (
{
name = minus;
transform = "{1.2, 0, 0, 1, -39, 0}";
}
);
layerId = m003;
width = 1324;
},
{
components = (
{
name = minus;
transform = "{1.2, 0, 0, 1, -39, 0}";
}
);
layerId = m002;
width = 1344;
},
{
components = (
{
name = minus;
transform = "{1.2, 0, 0, 1, -39, 0}";
}
);
layerId = m004;
width = 1344;
},
{
components = (
{
name = minus;
transform = "{1.2, 0, 0, 1, -39, 0}";
}
);
layerId = m005;
width = 1324;
}
);
leftKerningGroup = hyphen;
note = uni2013;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = minus;
transform = "{1.6, 0, 0, 1, -126, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1563;
},
{
components = (
{
name = minus;
transform = "{1.6, 0, 0, 1, -151, 0}";
}
);
layerId = m003;
width = 1561;
},
{
components = (
{
name = minus;
transform = "{1.6, 0, 0, 1, -124, 0}";
}
);
layerId = m002;
width = 1599;
},
{
components = (
{
name = minus;
transform = "{1.6, 0, 0, 1, -124, 0}";
}
);
layerId = m004;
width = 1599;
},
{
components = (
{
name = minus;
transform = "{1.6, 0, 0, 1, -151, 0}";
}
);
layerId = m005;
width = 1561;
}
);
leftKerningGroup = hyphen;
note = uni2014;
unicode = 2014;
},
{
glyphname = underscoredbl;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"912 -153 LINE",
"912 0 LINE",
"1 0 LINE",
"1 -153 LINE"
);
},
{
closed = 1;
nodes = (
"912 -416 LINE",
"912 -263 LINE",
"1 -263 LINE",
"1 -416 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 913;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"923 -54 LINE",
"923 0 LINE",
"77 0 LINE",
"77 -54 LINE"
);
},
{
closed = 1;
nodes = (
"923 -288 LINE",
"923 -234 LINE",
"77 -234 LINE",
"77 -288 LINE"
);
}
);
width = 923;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"929 -151 LINE",
"929 0 LINE",
"13 0 LINE",
"13 -151 LINE"
);
},
{
closed = 1;
nodes = (
"929 -405 LINE",
"929 -254 LINE",
"13 -254 LINE",
"13 -405 LINE"
);
}
);
width = 933;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"712 -151 LINE",
"738 0 LINE",
"-178 0 LINE",
"-204 -151 LINE"
);
},
{
closed = 1;
nodes = (
"667 -405 LINE",
"693 -254 LINE",
"-223 -254 LINE",
"-249 -405 LINE"
);
}
);
width = 933;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"723 -54 LINE",
"732 0 LINE",
"-114 0 LINE",
"-123 -54 LINE"
);
},
{
closed = 1;
nodes = (
"681 -288 LINE",
"691 -234 LINE",
"-155 -234 LINE",
"-165 -288 LINE"
);
}
);
width = 923;
}
);
note = uni2017;
unicode = 2017;
},
{
glyphname = quoteleft;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"333 1048 LINE",
"333 1215 LINE SMOOTH",
"335 1308.333 OFFCURVE",
"364.667 1400.333 OFFCURVE",
"422 1491 CURVE",
"286 1570 LINE",
"183.333 1483.333 OFFCURVE",
"104 1323.333 OFFCURVE",
"104 1198 CURVE SMOOTH",
"104 1048 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 9 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 479;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"155 1168 LINE",
"155 1288 LINE SMOOTH",
"157 1372 OFFCURVE",
"186.667 1450 OFFCURVE",
"244 1522 CURVE",
"207 1554 LINE",
"139 1481.333 OFFCURVE",
"103.667 1392 OFFCURVE",
"101 1286 CURVE SMOOTH",
"101 1168 LINE"
);
}
);
width = 320;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"280 1073 LINE",
"280 1209 LINE SMOOTH",
"282 1307 OFFCURVE",
"314 1398.333 OFFCURVE",
"376 1483 CURVE",
"270 1555 LINE",
"167.333 1469.667 OFFCURVE",
"96 1325 OFFCURVE",
"96 1189 CURVE SMOOTH",
"96 1073 LINE"
);
}
);
width = 409;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"278 1073 LINE",
"302 1209 LINE SMOOTH",
"322 1307 OFFCURVE",
"370 1398 OFFCURVE",
"447 1483 CURVE",
"353 1555 LINE",
"236 1470 OFFCURVE",
"139 1325 OFFCURVE",
"115 1189 CURVE SMOOTH",
"94 1073 LINE"
);
}
);
width = 409;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"170 1168 LINE",
"191 1288 LINE SMOOTH",
"208 1372 OFFCURVE",
"252 1450 OFFCURVE",
"322 1522 CURVE",
"290 1554 LINE",
"209 1481 OFFCURVE",
"158 1392 OFFCURVE",
"137 1286 CURVE SMOOTH",
"116 1168 LINE"
);
}
);
width = 320;
}
);
leftKerningGroup = quotedbl;
note = uni2018;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"304.667 1105 OFFCURVE",
"377 1261 OFFCURVE",
"377 1381 CURVE SMOOTH",
"377 1536 LINE",
"147 1536 LINE",
"147 1367 LINE SMOOTH",
"145 1271 OFFCURVE",
"115.333 1178 OFFCURVE",
"58 1088 CURVE",
"194 1009 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 470;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"182 1223.667 OFFCURVE",
"217.333 1313 OFFCURVE",
"220 1419 CURVE SMOOTH",
"220 1536 LINE",
"165 1536 LINE",
"165 1398 LINE",
"160.333 1324 OFFCURVE",
"131 1252.333 OFFCURVE",
"77 1183 CURVE",
"114 1151 LINE"
);
}
);
width = 320;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"254.333 1127.333 OFFCURVE",
"325.667 1272.667 OFFCURVE",
"327 1406 CURVE SMOOTH",
"327 1536 LINE",
"144 1536 LINE",
"144 1392 LINE SMOOTH",
"142 1296 OFFCURVE",
"110 1204.667 OFFCURVE",
"48 1118 CURVE",
"153 1046 LINE"
);
}
);
width = 409;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"262 1127 OFFCURVE",
"359 1273 OFFCURVE",
"384 1406 CURVE SMOOTH",
"407 1536 LINE",
"224 1536 LINE",
"199 1392 LINE SMOOTH",
"180 1296 OFFCURVE",
"132 1205 OFFCURVE",
"54 1118 CURVE",
"147 1046 LINE"
);
}
);
width = 409;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"207 1224 OFFCURVE",
"258 1313 OFFCURVE",
"279 1419 CURVE SMOOTH",
"300 1536 LINE",
"245 1536 LINE",
"221 1398 LINE",
"203 1324 OFFCURVE",
"161 1252 OFFCURVE",
"95 1183 CURVE",
"126 1151 LINE"
);
}
);
width = 320;
}
);
leftKerningGroup = quotedbl;
note = uni2019;
unicode = 2019;
},
{
glyphname = quotesinglbase;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"311.333 -207.667 OFFCURVE",
"382.667 -55.667 OFFCURVE",
"384 63 CURVE SMOOTH",
"384 229 LINE",
"147 229 LINE",
"147 48 LINE SMOOTH",
"145 -50.667 OFFCURVE",
"118 -142 OFFCURVE",
"66 -226 CURVE",
"202 -305 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 508;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"152 -109.333 OFFCURVE",
"187.333 -20 OFFCURVE",
"190 86 CURVE SMOOTH",
"190 228 LINE",
"135 228 LINE",
"135 65 LINE",
"130.333 -9 OFFCURVE",
"101 -80.667 OFFCURVE",
"47 -150 CURVE",
"84 -182 LINE"
);
}
);
width = 300;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"241 -201.667 OFFCURVE",
"315 -53.667 OFFCURVE",
"315 81 CURVE SMOOTH",
"315 181 LINE",
"130 181 LINE",
"130 63 LINE SMOOTH",
"128 -34.333 OFFCURVE",
"96.667 -125.333 OFFCURVE",
"36 -210 CURVE",
"141 -283 LINE"
);
}
);
width = 407;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"15 -202 OFFCURVE",
"115 -54 OFFCURVE",
"138 81 CURVE SMOOTH",
"156 181 LINE",
"-29 181 LINE",
"-50 63 LINE SMOOTH",
"-69 -34 OFFCURVE",
"-116 -125 OFFCURVE",
"-192 -210 CURVE",
"-100 -283 LINE"
);
}
);
width = 407;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-58 -109 OFFCURVE",
"-7 -20 OFFCURVE",
"14 86 CURVE SMOOTH",
"39 228 LINE",
"-16 228 LINE",
"-44 65 LINE",
"-62 -9 OFFCURVE",
"-104 -81 OFFCURVE",
"-170 -150 CURVE",
"-139 -182 LINE"
);
}
);
width = 300;
}
);
leftKerningGroup = comma;
note = uni201A;
rightKerningGroup = comma;
unicode = 201A;
},
{
glyphname = quotereversed;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"390 1088 LINE",
"322 1201.333 OFFCURVE",
"302.333 1278.333 OFFCURVE",
"301 1373 CURVE SMOOTH",
"301 1536 LINE",
"71 1536 LINE",
"71 1382 LINE SMOOTH",
"71 1259.333 OFFCURVE",
"144.667 1103.667 OFFCURVE",
"254 1009 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 428;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"243 1183 LINE",
"189 1252.333 OFFCURVE",
"159.667 1324 OFFCURVE",
"154 1398 CURVE",
"154 1536 LINE",
"100 1536 LINE",
"100 1419 LINE SMOOTH",
"102.667 1313 OFFCURVE",
"138 1223.667 OFFCURVE",
"206 1151 CURVE"
);
}
);
width = 320;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"359 1118 LINE",
"297 1202.667 OFFCURVE",
"264.667 1293 OFFCURVE",
"262 1389 CURVE SMOOTH",
"262 1536 LINE",
"79 1536 LINE",
"79 1401 LINE SMOOTH",
"81.667 1271.667 OFFCURVE",
"150.333 1131.333 OFFCURVE",
"253 1046 CURVE"
);
}
);
width = 409;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"365 1118 LINE",
"318 1203 OFFCURVE",
"302 1293 OFFCURVE",
"316 1389 CURVE SMOOTH",
"342 1536 LINE",
"159 1536 LINE",
"135 1401 LINE SMOOTH",
"115 1272 OFFCURVE",
"159 1131 OFFCURVE",
"247 1046 CURVE"
);
}
);
width = 409;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"261 1183 LINE",
"219 1252 OFFCURVE",
"202 1324 OFFCURVE",
"210 1398 CURVE",
"234 1536 LINE",
"180 1536 LINE",
"159 1419 LINE SMOOTH",
"143 1313 OFFCURVE",
"163 1224 OFFCURVE",
"218 1151 CURVE"
);
}
);
width = 320;
}
);
leftKerningGroup = quotedbl;
note = uni201B;
unicode = 201B;
},
{
glyphname = quotedblleft;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = quoteleft;
transform = "{1, 0, 0, 1, 8, 0}";
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 351, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 831;
},
{
components = (
{
name = quoteleft;
transform = "{1, 0, 0, 1, -5, 0}";
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = m003;
width = 500;
},
{
components = (
{
name = quoteleft;
transform = "{1, 0, 0, 1, 8, 0}";
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = m002;
width = 724;
},
{
components = (
{
name = quoteleft;
transform = "{1, 0, 0, 1, 8, 0}";
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = m004;
width = 724;
},
{
components = (
{
name = quoteleft;
transform = "{1, 0, 0, 1, -5, 0}";
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = m005;
width = 500;
}
);
leftKerningGroup = quotedbl;
note = uni201C;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, 14, 0}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 361, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 837;
},
{
components = (
{
name = quoteright;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = m003;
width = 502;
},
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, 12, 0}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 319, 0}";
}
);
layerId = m002;
width = 731;
},
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, 12, 0}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 319, 0}";
}
);
layerId = m004;
width = 731;
},
{
components = (
{
name = quoteright;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = m005;
width = 502;
}
);
leftKerningGroup = quotedbl;
note = uni201D;
unicode = 201D;
},
{
glyphname = quotedblbase;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"651.667 -230.333 OFFCURVE",
"725.333 -68 OFFCURVE",
"728 60 CURVE SMOOTH",
"728 263 LINE",
"491 263 LINE",
"491 48 LINE SMOOTH",
"489 -49.333 OFFCURVE",
"459.333 -147.333 OFFCURVE",
"402 -246 CURVE",
"545 -325 LINE"
);
},
{
closed = 1;
nodes = (
"315.667 -227.667 OFFCURVE",
"382.667 -65.333 OFFCURVE",
"384 64 CURVE SMOOTH",
"384 263 LINE",
"147 263 LINE",
"147 47 LINE SMOOTH",
"145 -59 OFFCURVE",
"118 -156.667 OFFCURVE",
"66 -246 CURVE",
"209 -325 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 18 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 825;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"323 -109.333 OFFCURVE",
"358.333 -20 OFFCURVE",
"361 86 CURVE SMOOTH",
"361 228 LINE",
"306 228 LINE",
"306 65 LINE",
"301.333 -9 OFFCURVE",
"272 -80.667 OFFCURVE",
"218 -150 CURVE",
"255 -182 LINE"
);
},
{
closed = 1;
nodes = (
"152 -109.333 OFFCURVE",
"187.333 -20 OFFCURVE",
"190 86 CURVE SMOOTH",
"190 228 LINE",
"135 228 LINE",
"135 65 LINE",
"130.333 -9 OFFCURVE",
"101 -80.667 OFFCURVE",
"47 -150 CURVE",
"84 -182 LINE"
);
}
);
width = 481;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"541 -211.667 OFFCURVE",
"612 -60.667 OFFCURVE",
"612 82 CURVE SMOOTH",
"612 246 LINE",
"426 246 LINE",
"426 61 LINE SMOOTH",
"424 -41 OFFCURVE",
"392.667 -137.667 OFFCURVE",
"332 -229 CURVE",
"437 -301 LINE"
);
},
{
closed = 1;
nodes = (
"241 -215.667 OFFCURVE",
"315 -62 OFFCURVE",
"315 82 CURVE SMOOTH",
"315 246 LINE",
"130 246 LINE",
"130 61 LINE SMOOTH",
"128 -41 OFFCURVE",
"96.667 -137.667 OFFCURVE",
"36 -229 CURVE",
"141 -301 LINE"
);
}
);
width = 705;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"313 -212 OFFCURVE",
"411 -61 OFFCURVE",
"436 82 CURVE SMOOTH",
"465 246 LINE",
"279 246 LINE",
"246 61 LINE SMOOTH",
"226 -41 OFFCURVE",
"178 -138 OFFCURVE",
"101 -229 CURVE",
"193 -301 LINE"
);
},
{
closed = 1;
nodes = (
"12 -216 OFFCURVE",
"113 -62 OFFCURVE",
"139 82 CURVE SMOOTH",
"168 246 LINE",
"-17 246 LINE",
"-50 61 LINE SMOOTH",
"-70 -41 OFFCURVE",
"-118 -138 OFFCURVE",
"-195 -229 CURVE",
"-103 -301 LINE"
);
}
);
width = 705;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"113 -109 OFFCURVE",
"164 -20 OFFCURVE",
"185 86 CURVE SMOOTH",
"210 228 LINE",
"155 228 LINE",
"127 65 LINE",
"109 -9 OFFCURVE",
"67 -81 OFFCURVE",
"1 -150 CURVE",
"32 -182 LINE"
);
},
{
closed = 1;
nodes = (
"-58 -109 OFFCURVE",
"-7 -20 OFFCURVE",
"14 86 CURVE SMOOTH",
"39 228 LINE",
"-16 228 LINE",
"-44 65 LINE",
"-62 -9 OFFCURVE",
"-104 -81 OFFCURVE",
"-170 -150 CURVE",
"-139 -182 LINE"
);
}
);
width = 481;
}
);
leftKerningGroup = comma;
note = uni201E;
rightKerningGroup = comma;
unicode = 201E;
},
{
glyphname = dagger;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"694 0 LINE",
"694 841 LINE",
"1047 841 LINE",
"1047 1082 LINE",
"694 1082 LINE",
"694 1456 LINE",
"405 1456 LINE",
"405 1082 LINE",
"57 1082 LINE",
"57 841 LINE",
"405 841 LINE",
"405 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1102;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"594 0 LINE",
"594 1024 LINE",
"1055 1024 LINE",
"1055 1082 LINE",
"594 1082 LINE",
"594 1456 LINE",
"540 1456 LINE",
"540 1082 LINE",
"65 1082 LINE",
"65 1024 LINE",
"540 1024 LINE",
"540 0 LINE"
);
}
);
width = 1126;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"656 0 LINE",
"656 929 LINE",
"1060 929 LINE",
"1060 1082 LINE",
"656 1082 LINE",
"656 1456 LINE",
"470 1456 LINE",
"470 1082 LINE",
"70 1082 LINE",
"70 929 LINE",
"470 929 LINE",
"470 0 LINE"
);
}
);
width = 1129;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"465 0 LINE",
"629 929 LINE",
"1033 929 LINE",
"1060 1082 LINE",
"656 1082 LINE",
"722 1456 LINE",
"536 1456 LINE",
"470 1082 LINE",
"70 1082 LINE",
"43 929 LINE",
"443 929 LINE",
"279 0 LINE"
);
}
);
width = 1129;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"584 1024 LINE",
"1045 1024 LINE",
"1055 1082 LINE",
"594 1082 LINE",
"660 1456 LINE",
"606 1456 LINE",
"540 1082 LINE",
"65 1082 LINE",
"55 1024 LINE",
"530 1024 LINE",
"349 0 LINE"
);
}
);
width = 1126;
}
);
note = uni2020;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"734 -416 LINE",
"734 0 LINE",
"1087 0 LINE",
"1087 233 LINE",
"734 233 LINE",
"734 848 LINE",
"1087 848 LINE",
"1087 1082 LINE",
"734 1082 LINE",
"734 1456 LINE",
"444 1456 LINE",
"444 1082 LINE",
"98 1082 LINE",
"98 848 LINE",
"444 848 LINE",
"444 233 LINE",
"98 233 LINE",
"98 0 LINE",
"444 0 LINE",
"444 -416 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1185;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"590 -416 LINE",
"590 0 LINE",
"1071 0 LINE",
"1071 54 LINE",
"590 54 LINE",
"590 1027 LINE",
"1071 1027 LINE",
"1071 1082 LINE",
"590 1082 LINE",
"590 1456 LINE",
"535 1456 LINE",
"535 1082 LINE",
"82 1082 LINE",
"82 1027 LINE",
"535 1027 LINE",
"535 54 LINE",
"82 54 LINE",
"82 0 LINE",
"535 0 LINE",
"535 -416 LINE"
);
}
);
width = 1141;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"670 -416 LINE",
"670 0 LINE",
"1076 0 LINE",
"1076 151 LINE",
"670 151 LINE",
"670 929 LINE",
"1076 929 LINE",
"1076 1082 LINE",
"670 1082 LINE",
"670 1456 LINE",
"484 1456 LINE",
"484 1082 LINE",
"87 1082 LINE",
"87 929 LINE",
"484 929 LINE",
"484 151 LINE",
"87 151 LINE",
"87 0 LINE",
"484 0 LINE",
"484 -416 LINE"
);
}
);
width = 1167;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"406 -416 LINE",
"479 0 LINE",
"885 0 LINE",
"912 151 LINE",
"506 151 LINE",
"643 929 LINE",
"1049 929 LINE",
"1076 1082 LINE",
"670 1082 LINE",
"736 1456 LINE",
"550 1456 LINE",
"484 1082 LINE",
"87 1082 LINE",
"60 929 LINE",
"457 929 LINE",
"320 151 LINE",
"-77 151 LINE",
"-104 0 LINE",
"293 0 LINE",
"220 -416 LINE"
);
}
);
width = 1167;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"326 -416 LINE",
"399 0 LINE",
"880 0 LINE",
"890 54 LINE",
"409 54 LINE",
"580 1027 LINE",
"1061 1027 LINE",
"1071 1082 LINE",
"590 1082 LINE",
"656 1456 LINE",
"601 1456 LINE",
"535 1082 LINE",
"82 1082 LINE",
"72 1027 LINE",
"525 1027 LINE",
"354 54 LINE",
"-99 54 LINE",
"-109 0 LINE",
"344 0 LINE",
"271 -416 LINE"
);
}
);
width = 1141;
}
);
note = uni2021;
unicode = 2021;
},
{
glyphname = bullet;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"514.333 500 OFFCURVE",
"610 590.667 OFFCURVE",
"610 728 CURVE SMOOTH",
"610 771 LINE SMOOTH",
"607.333 905.667 OFFCURVE",
"515 996 OFFCURVE",
"371 996 CURVE SMOOTH",
"232.333 996 OFFCURVE",
"135 904.667 OFFCURVE",
"135 766 CURVE SMOOTH",
"135 731 LINE SMOOTH",
"135 588.333 OFFCURVE",
"233 500 OFFCURVE",
"373 500 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
10 14 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
10 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 736;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"419.333 545 OFFCURVE",
"489 608.333 OFFCURVE",
"489 703 CURVE SMOOTH",
"489 730 LINE SMOOTH",
"489 830 OFFCURVE",
"421 893 OFFCURVE",
"321 893 CURVE SMOOTH",
"221 893 OFFCURVE",
"155 827.667 OFFCURVE",
"155 733 CURVE SMOOTH",
"155 701 LINE SMOOTH",
"156.333 606.333 OFFCURVE",
"226 545 OFFCURVE",
"322 545 CURVE SMOOTH"
);
}
);
width = 635;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"467.333 535 OFFCURVE",
"546 616 OFFCURVE",
"546 732 CURVE SMOOTH",
"546 769 LINE SMOOTH",
"546 893 OFFCURVE",
"462.333 971 OFFCURVE",
"341 971 CURVE SMOOTH",
"218.333 971 OFFCURVE",
"138 888 OFFCURVE",
"138 772 CURVE SMOOTH",
"138 734 LINE SMOOTH",
"138 616.667 OFFCURVE",
"218 535 OFFCURVE",
"342 535 CURVE SMOOTH"
);
}
);
width = 690;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"371 535 OFFCURVE",
"464 616 OFFCURVE",
"484 732 CURVE SMOOTH",
"491 769 LINE SMOOTH",
"513 893 OFFCURVE",
"443 971 OFFCURVE",
"321 971 CURVE SMOOTH",
"199 971 OFFCURVE",
"104 888 OFFCURVE",
"83 772 CURVE SMOOTH",
"77 734 LINE SMOOTH",
"56 617 OFFCURVE",
"122 535 OFFCURVE",
"246 535 CURVE SMOOTH"
);
}
);
width = 690;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"325 545 OFFCURVE",
"405 608 OFFCURVE",
"422 703 CURVE SMOOTH",
"427 730 LINE SMOOTH",
"445 830 OFFCURVE",
"388 893 OFFCURVE",
"288 893 CURVE SMOOTH",
"188 893 OFFCURVE",
"110 828 OFFCURVE",
"93 733 CURVE SMOOTH",
"88 701 LINE SMOOTH",
"72 606 OFFCURVE",
"131 545 OFFCURVE",
"227 545 CURVE SMOOTH"
);
}
);
width = 635;
}
);
note = uni2022;
unicode = 2022;
},
{
glyphname = twodotenleader;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 7, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 480, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1068;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 38, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = m003;
width = 893;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 4, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 441, 0}";
}
);
layerId = m002;
width = 964;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 4, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 441, 0}";
}
);
layerId = m004;
width = 964;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 38, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 422, 0}";
}
);
layerId = m005;
width = 893;
}
);
leftKerningGroup = comma;
note = uni2025;
rightKerningGroup = comma;
unicode = 2025;
},
{
glyphname = ellipsis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 7, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 480, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 944, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1515;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 38, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 422, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 791, 0}";
}
);
layerId = m003;
width = 1255;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 4, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 441, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 856, 0}";
}
);
layerId = m002;
width = 1370;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 4, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 441, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 856, 0}";
}
);
layerId = m004;
width = 1370;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 38, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 422, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 791, 0}";
}
);
layerId = m005;
width = 1255;
}
);
leftKerningGroup = comma;
note = uni2026;
rightKerningGroup = comma;
unicode = 2026;
},
{
glyphname = hyphenationpoint;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"363 476 OFFCURVE",
"425 537 OFFCURVE",
"425 625 CURVE SMOOTH",
"425 713 OFFCURVE",
"363 774 OFFCURVE",
"263 774 CURVE SMOOTH",
"163 774 OFFCURVE",
"101 713 OFFCURVE",
"101 625 CURVE SMOOTH",
"101 537 OFFCURVE",
"163 476 OFFCURVE",
"263 476 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 12 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 527;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"185.667 611 OFFCURVE",
"211 635.333 OFFCURVE",
"211 666 CURVE SMOOTH",
"211 696.667 OFFCURVE",
"185.667 722 OFFCURVE",
"155 722 CURVE SMOOTH",
"124.333 722 OFFCURVE",
"100 696.667 OFFCURVE",
"100 666 CURVE SMOOTH",
"100 635.333 OFFCURVE",
"124.333 611 OFFCURVE",
"155 611 CURVE SMOOTH"
);
}
);
width = 311;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"262 514 OFFCURVE",
"300 559 OFFCURVE",
"300 619 CURVE SMOOTH",
"300 679 OFFCURVE",
"262 725 OFFCURVE",
"190 725 CURVE SMOOTH",
"118 725 OFFCURVE",
"82 679 OFFCURVE",
"82 619 CURVE SMOOTH",
"82 559 OFFCURVE",
"118 514 OFFCURVE",
"190 514 CURVE SMOOTH"
);
}
);
width = 382;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"162 514 OFFCURVE",
"208 559 OFFCURVE",
"218 619 CURVE SMOOTH",
"229 679 OFFCURVE",
"199 725 OFFCURVE",
"127 725 CURVE SMOOTH",
"55 725 OFFCURVE",
"11 679 OFFCURVE",
"0 619 CURVE SMOOTH",
"-10 559 OFFCURVE",
"18 514 OFFCURVE",
"90 514 CURVE SMOOTH"
);
}
);
width = 382;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"103 611 OFFCURVE",
"132 635 OFFCURVE",
"138 666 CURVE SMOOTH",
"143 697 OFFCURVE",
"122 722 OFFCURVE",
"92 722 CURVE SMOOTH",
"61 722 OFFCURVE",
"32 697 OFFCURVE",
"27 666 CURVE SMOOTH",
"21 635 OFFCURVE",
"41 611 OFFCURVE",
"72 611 CURVE SMOOTH"
);
}
);
width = 311;
}
);
note = uni2027;
unicode = 2027;
},
{
glyphname = perthousand;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1181 1247 LINE",
"1040 1323 LINE",
"329 185 LINE",
"470 109 LINE"
);
},
{
closed = 1;
nodes = (
"1059.333 146 OFFCURVE",
"1005 203 OFFCURVE",
"1005 279 CURVE SMOOTH",
"1005 354 LINE SMOOTH",
"1005 438 OFFCURVE",
"1054.667 490 OFFCURVE",
"1128 490 CURVE SMOOTH",
"1202.667 490 OFFCURVE",
"1252 437 OFFCURVE",
"1252 357 CURVE SMOOTH",
"1252 281 LINE SMOOTH",
"1252 191 OFFCURVE",
"1211.333 146 OFFCURVE",
"1130 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312.667 966 OFFCURVE",
"265 1020.333 OFFCURVE",
"265 1099 CURVE SMOOTH",
"265 1171 LINE SMOOTH",
"265 1256.333 OFFCURVE",
"312 1309 OFFCURVE",
"388 1309 CURVE SMOOTH",
"462.667 1309 OFFCURVE",
"512 1255 OFFCURVE",
"512 1175 CURVE SMOOTH",
"512 1102 LINE SMOOTH",
"512 1019.333 OFFCURVE",
"464.667 966 OFFCURVE",
"390 966 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"575.333 800 OFFCURVE",
"705 925.667 OFFCURVE",
"705 1099 CURVE SMOOTH",
"705 1169 LINE SMOOTH",
"705 1353 OFFCURVE",
"576 1476 OFFCURVE",
"388 1476 CURVE SMOOTH",
"210.667 1476 OFFCURVE",
"87 1349.667 OFFCURVE",
"87 1175 CURVE SMOOTH",
"87 1106 LINE SMOOTH",
"87 923.333 OFFCURVE",
"212.667 800 OFFCURVE",
"390 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1226.667 -20 OFFCURVE",
"1302 15 OFFCURVE",
"1356 85 CURVE",
"1410 15 OFFCURVE",
"1486.333 -20 OFFCURVE",
"1585 -20 CURVE SMOOTH",
"1774.333 -20 OFFCURVE",
"1900 108.333 OFFCURVE",
"1900 279 CURVE SMOOTH",
"1900 350 LINE SMOOTH",
"1900 536.667 OFFCURVE",
"1767 657 OFFCURVE",
"1583 657 CURVE SMOOTH",
"1485.667 657 OFFCURVE",
"1410 622 OFFCURVE",
"1356 552 CURVE",
"1302 622 OFFCURVE",
"1226 657 OFFCURVE",
"1128 657 CURVE SMOOTH",
"941.333 657 OFFCURVE",
"812 529 OFFCURVE",
"812 357 CURVE SMOOTH",
"812 283 LINE SMOOTH",
"812 107 OFFCURVE",
"940.667 -20 OFFCURVE",
"1130 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1511.667 146 OFFCURVE",
"1460 207 OFFCURVE",
"1460 279 CURVE SMOOTH",
"1460 354 LINE SMOOTH",
"1460 438 OFFCURVE",
"1509.667 490 OFFCURVE",
"1583 490 CURVE SMOOTH",
"1657.667 490 OFFCURVE",
"1707 437 OFFCURVE",
"1707 357 CURVE SMOOTH",
"1707 281 LINE SMOOTH",
"1707 191 OFFCURVE",
"1666.333 146 OFFCURVE",
"1585 146 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 80 81 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
43 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
49 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
69 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
76 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1965;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1129 1269 LINE",
"1084 1300 LINE",
"373 162 LINE",
"418 131 LINE"
);
},
{
closed = 1;
nodes = (
"1011.333 34 OFFCURVE",
"925 136.333 OFFCURVE",
"925 279 CURVE SMOOTH",
"925 353 LINE SMOOTH",
"925 505 OFFCURVE",
"1009.333 602 OFFCURVE",
"1140 602 CURVE SMOOTH",
"1274.667 602 OFFCURVE",
"1358 503.667 OFFCURVE",
"1358 357 CURVE SMOOTH",
"1358 284 LINE SMOOTH",
"1358 134.667 OFFCURVE",
"1271.333 34 OFFCURVE",
"1142 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"542.667 800 OFFCURVE",
"658 929.667 OFFCURVE",
"658 1099 CURVE SMOOTH",
"658 1171 LINE SMOOTH",
"658 1349.667 OFFCURVE",
"540.667 1477 OFFCURVE",
"386 1477 CURVE SMOOTH",
"230 1477 OFFCURVE",
"115 1346.667 OFFCURVE",
"115 1176 CURVE SMOOTH",
"115 1105 LINE SMOOTH",
"115 925 OFFCURVE",
"233.333 800 OFFCURVE",
"388 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"256 855 OFFCURVE",
"170 957.667 OFFCURVE",
"170 1099 CURVE SMOOTH",
"170 1169 LINE SMOOTH",
"170 1321 OFFCURVE",
"258 1422 OFFCURVE",
"386 1422 CURVE SMOOTH",
"516.667 1422 OFFCURVE",
"603 1320 OFFCURVE",
"603 1176 CURVE SMOOTH",
"603 1104 LINE SMOOTH",
"603 957.333 OFFCURVE",
"518.667 855 OFFCURVE",
"388 855 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1254 -21 OFFCURVE",
"1346.333 47 OFFCURVE",
"1385 155 CURVE",
"1429 48.333 OFFCURVE",
"1525.333 -21 OFFCURVE",
"1640 -21 CURVE SMOOTH",
"1793.333 -21 OFFCURVE",
"1910 107 OFFCURVE",
"1910 279 CURVE SMOOTH",
"1910 350 LINE SMOOTH",
"1910 531.333 OFFCURVE",
"1794 657 OFFCURVE",
"1638 657 CURVE SMOOTH",
"1522 657 OFFCURVE",
"1427.667 585 OFFCURVE",
"1385 481 CURVE",
"1347.667 585 OFFCURVE",
"1256 657 OFFCURVE",
"1140 657 CURVE SMOOTH",
"986.667 657 OFFCURVE",
"870 529 OFFCURVE",
"870 357 CURVE SMOOTH",
"870 284 LINE SMOOTH",
"870 104 OFFCURVE",
"988.667 -21 OFFCURVE",
"1142 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1496.667 34 OFFCURVE",
"1413 137.667 OFFCURVE",
"1413 279 CURVE SMOOTH",
"1413 353 LINE SMOOTH",
"1413 503.667 OFFCURVE",
"1494.667 602 OFFCURVE",
"1628 602 CURVE SMOOTH",
"1762.667 602 OFFCURVE",
"1844 506.333 OFFCURVE",
"1844 357 CURVE SMOOTH",
"1844 284 LINE SMOOTH",
"1844 137.333 OFFCURVE",
"1762 34 OFFCURVE",
"1630 34 CURVE SMOOTH"
);
}
);
width = 2034;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1140 1248 LINE",
"1036 1314 LINE",
"325 176 LINE",
"429 110 LINE"
);
},
{
closed = 1;
nodes = (
"1024.333 99 OFFCURVE",
"961 173.667 OFFCURVE",
"961 279 CURVE SMOOTH",
"961 353 LINE SMOOTH",
"961 465 OFFCURVE",
"1026.333 536 OFFCURVE",
"1121 536 CURVE SMOOTH",
"1218.333 536 OFFCURVE",
"1281 462.333 OFFCURVE",
"1281 357 CURVE SMOOTH",
"1281 283 LINE SMOOTH",
"1281 169.667 OFFCURVE",
"1219 99 OFFCURVE",
"1123 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"544 800 OFFCURVE",
"665 927 OFFCURVE",
"665 1099 CURVE SMOOTH",
"665 1171 LINE SMOOTH",
"665 1352.333 OFFCURVE",
"542 1477 OFFCURVE",
"366 1477 CURVE SMOOTH",
"191.333 1477 OFFCURVE",
"68 1350.667 OFFCURVE",
"68 1176 CURVE SMOOTH",
"68 1106 LINE SMOOTH",
"68 920.667 OFFCURVE",
"194.667 800 OFFCURVE",
"368 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"269.333 920 OFFCURVE",
"206 995 OFFCURVE",
"206 1099 CURVE SMOOTH",
"206 1172 LINE SMOOTH",
"206 1282.667 OFFCURVE",
"270 1356 OFFCURVE",
"366 1356 CURVE SMOOTH",
"464.667 1356 OFFCURVE",
"526 1280 OFFCURVE",
"526 1176 CURVE SMOOTH",
"526 1103 LINE SMOOTH",
"526 989.667 OFFCURVE",
"462.667 920 OFFCURVE",
"368 920 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1223.667 -21 OFFCURVE",
"1299.333 19 OFFCURVE",
"1350 99 CURVE",
"1402.667 19 OFFCURVE",
"1480 -21 OFFCURVE",
"1582 -21 CURVE SMOOTH",
"1755.333 -21 OFFCURVE",
"1879 104.333 OFFCURVE",
"1879 279 CURVE SMOOTH",
"1879 350 LINE SMOOTH",
"1879 535.333 OFFCURVE",
"1754.667 657 OFFCURVE",
"1580 657 CURVE SMOOTH",
"1479.333 657 OFFCURVE",
"1402.667 616.667 OFFCURVE",
"1350 536 CURVE",
"1298.667 616.667 OFFCURVE",
"1222.333 657 OFFCURVE",
"1121 657 CURVE SMOOTH",
"946.333 657 OFFCURVE",
"823 531.667 OFFCURVE",
"823 357 CURVE SMOOTH",
"823 285 LINE SMOOTH",
"823 99.667 OFFCURVE",
"949.667 -21 OFFCURVE",
"1123 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1483.667 99 OFFCURVE",
"1420 173.667 OFFCURVE",
"1420 279 CURVE SMOOTH",
"1420 353 LINE SMOOTH",
"1420 463.667 OFFCURVE",
"1483 536 OFFCURVE",
"1579 536 CURVE SMOOTH",
"1676.333 536 OFFCURVE",
"1739 462.333 OFFCURVE",
"1739 357 CURVE SMOOTH",
"1739 283 LINE SMOOTH",
"1739 173.667 OFFCURVE",
"1677 99 OFFCURVE",
"1581 99 CURVE SMOOTH"
);
}
);
width = 1962;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1169 1248 LINE",
"1077 1314 LINE",
"165 176 LINE",
"258 110 LINE"
);
},
{
closed = 1;
nodes = (
"851 99 OFFCURVE",
"801 174 OFFCURVE",
"819 279 CURVE SMOOTH",
"832 353 LINE SMOOTH",
"852 465 OFFCURVE",
"930 536 OFFCURVE",
"1025 536 CURVE SMOOTH",
"1122 536 OFFCURVE",
"1172 462 OFFCURVE",
"1153 357 CURVE SMOOTH",
"1140 283 LINE SMOOTH",
"1120 170 OFFCURVE",
"1046 99 OFFCURVE",
"950 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"494 800 OFFCURVE",
"638 927 OFFCURVE",
"668 1099 CURVE SMOOTH",
"681 1171 LINE SMOOTH",
"713 1352 OFFCURVE",
"612 1477 OFFCURVE",
"436 1477 CURVE SMOOTH",
"261 1477 OFFCURVE",
"115 1351 OFFCURVE",
"85 1176 CURVE SMOOTH",
"72 1106 LINE SMOOTH",
"40 921 OFFCURVE",
"145 800 OFFCURVE",
"318 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241 920 OFFCURVE",
"191 995 OFFCURVE",
"209 1099 CURVE SMOOTH",
"222 1172 LINE SMOOTH",
"241 1283 OFFCURVE",
"318 1356 OFFCURVE",
"414 1356 CURVE SMOOTH",
"513 1356 OFFCURVE",
"561 1280 OFFCURVE",
"543 1176 CURVE SMOOTH",
"530 1103 LINE SMOOTH",
"510 990 OFFCURVE",
"434 920 OFFCURVE",
"339 920 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1029 -21 OFFCURVE",
"1112 19 OFFCURVE",
"1177 99 CURVE",
"1215 19 OFFCURVE",
"1286 -21 OFFCURVE",
"1388 -21 CURVE SMOOTH",
"1561 -21 OFFCURVE",
"1707 104 OFFCURVE",
"1737 279 CURVE SMOOTH",
"1750 350 LINE SMOOTH",
"1783 535 OFFCURVE",
"1680 657 OFFCURVE",
"1505 657 CURVE SMOOTH",
"1404 657 OFFCURVE",
"1321 617 OFFCURVE",
"1254 536 CURVE",
"1217 617 OFFCURVE",
"1147 657 OFFCURVE",
"1046 657 CURVE SMOOTH",
"871 657 OFFCURVE",
"726 532 OFFCURVE",
"695 357 CURVE SMOOTH",
"682 285 LINE SMOOTH",
"650 100 OFFCURVE",
"755 -21 OFFCURVE",
"929 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1310 99 OFFCURVE",
"1260 174 OFFCURVE",
"1278 279 CURVE SMOOTH",
"1291 353 LINE SMOOTH",
"1311 464 OFFCURVE",
"1387 536 OFFCURVE",
"1483 536 CURVE SMOOTH",
"1580 536 OFFCURVE",
"1630 462 OFFCURVE",
"1611 357 CURVE SMOOTH",
"1598 283 LINE SMOOTH",
"1579 174 OFFCURVE",
"1504 99 OFFCURVE",
"1408 99 CURVE SMOOTH"
);
}
);
width = 1962;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"1162 1269 LINE",
"1122 1300 LINE",
"211 162 LINE",
"250 131 LINE"
);
},
{
closed = 1;
nodes = (
"827 34 OFFCURVE",
"758 136 OFFCURVE",
"783 279 CURVE SMOOTH",
"796 353 LINE SMOOTH",
"823 505 OFFCURVE",
"925 602 OFFCURVE",
"1055 602 CURVE SMOOTH",
"1190 602 OFFCURVE",
"1256 504 OFFCURVE",
"1230 357 CURVE SMOOTH",
"1217 284 LINE SMOOTH",
"1191 135 OFFCURVE",
"1087 34 OFFCURVE",
"957 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 800 OFFCURVE",
"631 930 OFFCURVE",
"661 1099 CURVE SMOOTH",
"674 1171 LINE SMOOTH",
"705 1350 OFFCURVE",
"610 1477 OFFCURVE",
"456 1477 CURVE SMOOTH",
"300 1477 OFFCURVE",
"162 1347 OFFCURVE",
"132 1176 CURVE SMOOTH",
"119 1105 LINE SMOOTH",
"87 925 OFFCURVE",
"184 800 OFFCURVE",
"338 800 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"216 855 OFFCURVE",
"148 958 OFFCURVE",
"173 1099 CURVE SMOOTH",
"185 1169 LINE SMOOTH",
"212 1321 OFFCURVE",
"318 1422 OFFCURVE",
"446 1422 CURVE SMOOTH",
"577 1422 OFFCURVE",
"645 1320 OFFCURVE",
"620 1176 CURVE SMOOTH",
"607 1104 LINE SMOOTH",
"581 957 OFFCURVE",
"479 855 OFFCURVE",
"348 855 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1060 -21 OFFCURVE",
"1164 47 OFFCURVE",
"1222 155 CURVE",
"1247 48 OFFCURVE",
"1331 -21 OFFCURVE",
"1446 -21 CURVE SMOOTH",
"1599 -21 OFFCURVE",
"1738 107 OFFCURVE",
"1768 279 CURVE SMOOTH",
"1781 350 LINE SMOOTH",
"1813 531 OFFCURVE",
"1719 657 OFFCURVE",
"1563 657 CURVE SMOOTH",
"1447 657 OFFCURVE",
"1340 585 OFFCURVE",
"1279 481 CURVE",
"1260 585 OFFCURVE",
"1181 657 OFFCURVE",
"1065 657 CURVE SMOOTH",
"912 657 OFFCURVE",
"772 529 OFFCURVE",
"742 357 CURVE SMOOTH",
"729 284 LINE SMOOTH",
"698 104 OFFCURVE",
"794 -21 OFFCURVE",
"948 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1312 34 OFFCURVE",
"1246 138 OFFCURVE",
"1271 279 CURVE SMOOTH",
"1284 353 LINE SMOOTH",
"1311 504 OFFCURVE",
"1410 602 OFFCURVE",
"1543 602 CURVE SMOOTH",
"1678 602 OFFCURVE",
"1742 506 OFFCURVE",
"1716 357 CURVE SMOOTH",
"1703 284 LINE SMOOTH",
"1677 137 OFFCURVE",
"1577 34 OFFCURVE",
"1445 34 CURVE SMOOTH"
);
}
);
width = 2034;
}
);
note = uni2030;
unicode = 2030;
},
{
glyphname = guilsinglleft;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"574 125 LINE",
"334 524 LINE",
"574 924 LINE",
"388 924 LINE",
"108 534 LINE",
"108 515 LINE",
"388 125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
2 7 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 638;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"473 181 LINE",
"179 560 LINE",
"473 940 LINE",
"403 940 LINE",
"108 570 LINE",
"108 551 LINE",
"403 181 LINE"
);
}
);
width = 604;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"544 153 LINE",
"286 550 LINE",
"544 949 LINE",
"403 949 LINE",
"108 560 LINE",
"108 541 LINE",
"403 153 LINE"
);
}
);
width = 614;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"380 153 LINE",
"192 550 LINE",
"521 949 LINE",
"380 949 LINE",
"16 560 LINE",
"13 541 LINE",
"239 153 LINE"
);
}
);
width = 614;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"314 181 LINE",
"87 560 LINE",
"448 940 LINE",
"378 940 LINE",
"18 570 LINE",
"14 551 LINE",
"244 181 LINE"
);
}
);
width = 604;
}
);
note = uni2039;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"267 124 LINE",
"547 514 LINE",
"547 533 LINE",
"267 923 LINE",
"80 923 LINE",
"320 523 LINE",
"80 124 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
3 7 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 618;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"176 171 LINE",
"470 541 LINE",
"470 560 LINE",
"176 940 LINE",
"106 940 LINE",
"399 550 LINE",
"106 171 LINE"
);
}
);
width = 604;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"231 152 LINE",
"526 541 LINE",
"526 560 LINE",
"231 949 LINE",
"89 949 LINE",
"347 550 LINE",
"89 152 LINE"
);
}
);
width = 614;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"67 152 LINE",
"431 541 LINE",
"434 560 LINE",
"208 949 LINE",
"66 949 LINE",
"253 550 LINE",
"-75 152 LINE"
);
}
);
width = 614;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"15 171 LINE",
"375 541 LINE",
"378 560 LINE",
"151 940 LINE",
"81 940 LINE",
"305 550 LINE",
"-55 171 LINE"
);
}
);
width = 604;
}
);
note = uni203A;
unicode = 203A;
},
{
glyphname = fraction;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"882 1247 LINE",
"741 1323 LINE",
"30 185 LINE",
"171 109 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 913;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"821 1269 LINE",
"776 1300 LINE",
"65 162 LINE",
"110 131 LINE"
);
}
);
width = 905;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"874 1248 LINE",
"770 1314 LINE",
"59 176 LINE",
"163 110 LINE"
);
}
);
width = 931;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"903 1248 LINE",
"811 1314 LINE",
"-101 176 LINE",
"-8 110 LINE"
);
}
);
width = 931;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"854 1269 LINE",
"814 1300 LINE",
"-97 162 LINE",
"-58 131 LINE"
);
}
);
width = 905;
}
);
note = uni2044;
unicode = 2044;
},
{
glyphname = foursuperior;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = four.frac0;
transform = "{1, 0, 0, 1, 0, 667}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 751;
},
{
components = (
{
name = four.frac0;
transform = "{1, 0, 0, 1, 0, 664}";
}
);
layerId = m003;
width = 751;
},
{
components = (
{
name = four.frac0;
transform = "{1, 0, 0, 1, 0, 667}";
}
);
layerId = m002;
width = 751;
},
{
components = (
{
name = four.frac0;
transform = "{1, 0, 0, 1, 118, 667}";
}
);
layerId = m004;
width = 751;
},
{
components = (
{
name = four.frac0;
transform = "{1, 0, 0, 1, 117, 664}";
}
);
layerId = m005;
width = 751;
}
);
note = uni2074;
unicode = 2074;
},
{
glyphname = euro;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"924 -19 OFFCURVE",
"1009.333 -9.333 OFFCURVE",
"1092 10 CURVE",
"1056 252 LINE",
"999.333 231.333 OFFCURVE",
"936 221 OFFCURVE",
"866 221 CURVE SMOOTH",
"659.333 221 OFFCURVE",
"565.667 320 OFFCURVE",
"559 516 CURVE",
"894 516 LINE",
"894 668 LINE",
"559 668 LINE",
"559 792 LINE",
"894 792 LINE",
"894 944 LINE",
"561 944 LINE",
"579 1136.667 OFFCURVE",
"682.333 1233 OFFCURVE",
"871 1233 CURVE SMOOTH",
"931.667 1233 OFFCURVE",
"993.333 1222.333 OFFCURVE",
"1056 1201 CURVE",
"1092 1444 LINE",
"1004.667 1464.667 OFFCURVE",
"926 1475 OFFCURVE",
"856 1475 CURVE SMOOTH",
"506.667 1475 OFFCURVE",
"282.667 1280 OFFCURVE",
"260 944 CURVE",
"89 944 LINE",
"89 792 LINE",
"258 792 LINE",
"258 668 LINE",
"89 668 LINE",
"89 516 LINE",
"258 516 LINE",
"268.667 180 OFFCURVE",
"485.333 -19 OFFCURVE",
"836 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
28 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
34 22 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 19 31 19 47 19 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
159 19 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
16 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1175;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"888.667 -21 OFFCURVE",
"962 -10.667 OFFCURVE",
"1032 10 CURVE",
"1032 67 LINE",
"964 44.333 OFFCURVE",
"890.667 33 OFFCURVE",
"812 33 CURVE SMOOTH",
"513.333 33 OFFCURVE",
"331 215.333 OFFCURVE",
"331 584 CURVE",
"786 584 LINE",
"786 639 LINE",
"331 639 LINE",
"331 830 LINE",
"786 830 LINE",
"786 886 LINE",
"331 886 LINE",
"332.333 1243 OFFCURVE",
"504.667 1422 OFFCURVE",
"810 1422 CURVE SMOOTH",
"883.333 1422 OFFCURVE",
"957.333 1410.333 OFFCURVE",
"1032 1387 CURVE",
"1032 1445 LINE",
"948 1465.667 OFFCURVE",
"874 1476 OFFCURVE",
"810 1476 CURVE SMOOTH",
"478 1476 OFFCURVE",
"279.667 1270.667 OFFCURVE",
"277 886 CURVE",
"72 886 LINE",
"72 830 LINE",
"277 830 LINE",
"277 639 LINE",
"72 639 LINE",
"72 584 LINE",
"277 584 LINE",
"277 186.333 OFFCURVE",
"480 -21 OFFCURVE",
"812 -21 CURVE SMOOTH"
);
}
);
width = 1121;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"892 -20 OFFCURVE",
"972 -10 OFFCURVE",
"1052 10 CURVE",
"1032 170 LINE",
"964 147.333 OFFCURVE",
"891.333 136 OFFCURVE",
"814 136 CURVE SMOOTH",
"594 136 OFFCURVE",
"470.333 281 OFFCURVE",
"465 541 CURVE",
"849 541 LINE",
"849 665 LINE",
"465 665 LINE",
"465 802 LINE",
"849 802 LINE",
"849 927 LINE",
"466 927 LINE",
"474 1177.667 OFFCURVE",
"594.333 1318 OFFCURVE",
"813 1318 CURVE SMOOTH",
"886.333 1318 OFFCURVE",
"959.333 1306.333 OFFCURVE",
"1032 1283 CURVE",
"1052 1445 LINE",
"962 1465.667 OFFCURVE",
"881.667 1476 OFFCURVE",
"811 1476 CURVE SMOOTH",
"487 1476 OFFCURVE",
"286.333 1276.333 OFFCURVE",
"273 927 CURVE",
"95 927 LINE",
"95 802 LINE",
"273 802 LINE",
"273 665 LINE",
"95 665 LINE",
"95 541 LINE",
"273 541 LINE",
"281 183.667 OFFCURVE",
"481.333 -20 OFFCURVE",
"812 -20 CURVE SMOOTH"
);
}
);
width = 1150;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"698 -20 OFFCURVE",
"779 -10 OFFCURVE",
"863 10 CURVE",
"871 170 LINE",
"799 147 OFFCURVE",
"725 136 OFFCURVE",
"647 136 CURVE SMOOTH",
"427 136 OFFCURVE",
"329 281 OFFCURVE",
"370 541 CURVE",
"754 541 LINE",
"775 665 LINE",
"391 665 LINE",
"416 802 LINE",
"800 802 LINE",
"822 927 LINE",
"439 927 LINE",
"491 1178 OFFCURVE",
"636 1318 OFFCURVE",
"855 1318 CURVE SMOOTH",
"928 1318 OFFCURVE",
"999 1306 OFFCURVE",
"1067 1283 CURVE",
"1116 1445 LINE",
"1030 1466 OFFCURVE",
"951 1476 OFFCURVE",
"880 1476 CURVE SMOOTH",
"556 1476 OFFCURVE",
"321 1276 OFFCURVE",
"246 927 CURVE",
"68 927 LINE",
"46 802 LINE",
"224 802 LINE",
"199 665 LINE",
"21 665 LINE",
"0 541 LINE",
"178 541 LINE",
"123 184 OFFCURVE",
"287 -20 OFFCURVE",
"618 -20 CURVE SMOOTH"
);
}
);
width = 1150;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"694 -21 OFFCURVE",
"769 -11 OFFCURVE",
"843 10 CURVE",
"853 67 LINE",
"781 44 OFFCURVE",
"706 33 OFFCURVE",
"627 33 CURVE SMOOTH",
"328 33 OFFCURVE",
"178 215 OFFCURVE",
"243 584 CURVE",
"698 584 LINE",
"708 639 LINE",
"253 639 LINE",
"287 830 LINE",
"742 830 LINE",
"751 886 LINE",
"296 886 LINE",
"361 1243 OFFCURVE",
"565 1422 OFFCURVE",
"870 1422 CURVE SMOOTH",
"943 1422 OFFCURVE",
"1015 1410 OFFCURVE",
"1086 1387 CURVE",
"1096 1445 LINE",
"1016 1466 OFFCURVE",
"943 1476 OFFCURVE",
"879 1476 CURVE SMOOTH",
"547 1476 OFFCURVE",
"313 1271 OFFCURVE",
"242 886 CURVE",
"37 886 LINE",
"28 830 LINE",
"233 830 LINE",
"199 639 LINE",
"-6 639 LINE",
"-16 584 LINE",
"189 584 LINE",
"119 186 OFFCURVE",
"286 -21 OFFCURVE",
"618 -21 CURVE SMOOTH"
);
}
);
width = 1121;
}
);
note = uni20AC;
unicode = 20AC;
},
{
glyphname = partialdiff;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"802 -21 OFFCURVE",
"963.167 97 OFFCURVE",
"1046.5 301 CURVE SMOOTH",
"1088.167 403 OFFCURVE",
"1109 519.667 OFFCURVE",
"1109 713 CURVE SMOOTH",
"1107 962 OFFCURVE",
"1060 1158 OFFCURVE",
"973 1297 CURVE SMOOTH",
"875 1454 OFFCURVE",
"727 1537 OFFCURVE",
"535 1537 CURVE SMOOTH {name = \"❌\";}",
"442.333 1537 OFFCURVE",
"357.667 1520.333 OFFCURVE",
"223 1461 CURVE",
"268 1254 LINE",
"382.667 1296.333 OFFCURVE",
"441.667 1305 OFFCURVE",
"511 1305 CURVE SMOOTH",
"624 1305 OFFCURVE",
"717 1240 OFFCURVE",
"779 1124 CURVE SMOOTH",
"809 1068 OFFCURVE",
"831 1000 OFFCURVE",
"845 921 CURVE",
"768.333 997.667 OFFCURVE",
"675 1036 OFFCURVE",
"565 1036 CURVE SMOOTH",
"273 1036 OFFCURVE",
"89 835 OFFCURVE",
"89 531 CURVE SMOOTH",
"89 184.667 OFFCURVE",
"288.667 -21 OFFCURVE",
"598 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"455.333 212 OFFCURVE",
"379 312.333 OFFCURVE",
"379 495 CURVE SMOOTH",
"379 708.333 OFFCURVE",
"457.333 803 OFFCURVE",
"600 803 CURVE SMOOTH",
"700 803 OFFCURVE",
"778.667 754.333 OFFCURVE",
"820 669 CURVE",
"820 559 LINE SMOOTH",
"820 328.333 OFFCURVE",
"738 212 OFFCURVE",
"598 212 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
20 40 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 12 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
33 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1172;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"769.667 -21 OFFCURVE",
"927 95.167 OFFCURVE",
"1011 294.5 CURVE SMOOTH",
"1053 394.167 OFFCURVE",
"1074 506 OFFCURVE",
"1074 721 CURVE SMOOTH",
"1072 975 OFFCURVE",
"1027 1173 OFFCURVE",
"945 1310 CURVE SMOOTH",
"858 1454 OFFCURVE",
"730 1530 OFFCURVE",
"567 1530 CURVE SMOOTH",
"430.333 1530 OFFCURVE",
"319.667 1485 OFFCURVE",
"235 1395 CURVE",
"264 1354 LINE",
"356 1443.333 OFFCURVE",
"437 1476 OFFCURVE",
"561 1476 CURVE SMOOTH",
"839.667 1476 OFFCURVE",
"999.333 1231.667 OFFCURVE",
"1018 785 CURVE",
"916.667 941 OFFCURVE",
"763.667 1022 OFFCURVE",
"581 1022 CURVE SMOOTH",
"137.729 1020.99 OFFCURVE",
"106 561 OFFCURVE",
"106 479 CURVE SMOOTH",
"106 287 OFFCURVE",
"192 123.667 OFFCURVE",
"336 41 CURVE SMOOTH",
"408 -0.333 OFFCURVE",
"489 -21 OFFCURVE",
"579 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312 33 OFFCURVE",
"161 236 OFFCURVE",
"161 511 CURVE SMOOTH",
"161 781.667 OFFCURVE",
"335.667 968 OFFCURVE",
"581 968 CURVE SMOOTH",
"808 968 OFFCURVE",
"970 831 OFFCURVE",
"1020 679 CURVE",
"1018 615 LINE SMOOTH",
"1000 256 OFFCURVE",
"825 33 OFFCURVE",
"579 33 CURVE SMOOTH"
);
}
);
width = 1172;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"780 -21 OFFCURVE",
"934 94.333 OFFCURVE",
"1014 293 CURVE SMOOTH",
"1054 392.333 OFFCURVE",
"1074 504.667 OFFCURVE",
"1074 680 CURVE SMOOTH",
"1074 922 OFFCURVE",
"1033 1116 OFFCURVE",
"956 1256 CURVE SMOOTH",
"863 1426 OFFCURVE",
"716 1516 OFFCURVE",
"524 1516 CURVE SMOOTH",
"423.333 1516 OFFCURVE",
"334.333 1500 OFFCURVE",
"208 1447 CURVE",
"224 1296 LINE",
"327.333 1335.333 OFFCURVE",
"422 1355 OFFCURVE",
"508 1355 CURVE SMOOTH",
"636 1355 OFFCURVE",
"752.5 1270.167 OFFCURVE",
"822.5 1125.5 CURVE SMOOTH",
"857.5 1053.167 OFFCURVE",
"879.667 970.333 OFFCURVE",
"889 877 CURVE",
"811.667 967.667 OFFCURVE",
"696 1022 OFFCURVE",
"572 1022 CURVE SMOOTH",
"292 1022 OFFCURVE",
"106 823.333 OFFCURVE",
"106 516 CURVE SMOOTH",
"106 188 OFFCURVE",
"297.333 -21 OFFCURVE",
"588 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"404 130 OFFCURVE",
"291 280.333 OFFCURVE",
"291 523 CURVE SMOOTH",
"291 736.333 OFFCURVE",
"403.333 870 OFFCURVE",
"590 870 CURVE SMOOTH",
"732.667 870 OFFCURVE",
"847.667 794 OFFCURVE",
"885 674 CURVE",
"889 598 LINE SMOOTH",
"889 306 OFFCURVE",
"777.333 130 OFFCURVE",
"588 130 CURVE SMOOTH"
);
}
);
width = 1167;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"586 -21 OFFCURVE",
"760 94 OFFCURVE",
"875 293 CURVE SMOOTH",
"932 392 OFFCURVE",
"972 505 OFFCURVE",
"1003 680 CURVE SMOOTH",
"1046 922 OFFCURVE",
"1039 1116 OFFCURVE",
"987 1256 CURVE SMOOTH",
"924 1426 OFFCURVE",
"793 1516 OFFCURVE",
"601 1516 CURVE SMOOTH",
"500 1516 OFFCURVE",
"408 1500 OFFCURVE",
"272 1447 CURVE",
"262 1296 LINE",
"372 1335 OFFCURVE",
"470 1355 OFFCURVE",
"556 1355 CURVE SMOOTH",
"684 1355 OFFCURVE",
"786 1270 OFFCURVE",
"830 1126 CURVE SMOOTH",
"852 1053 OFFCURVE",
"860 970 OFFCURVE",
"853 877 CURVE",
"792 968 OFFCURVE",
"685 1022 OFFCURVE",
"561 1022 CURVE SMOOTH",
"281 1022 OFFCURVE",
"60 823 OFFCURVE",
"6 516 CURVE SMOOTH",
"-52 188 OFFCURVE",
"103 -21 OFFCURVE",
"394 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"236 130 OFFCURVE",
"150 280 OFFCURVE",
"192 523 CURVE SMOOTH",
"230 736 OFFCURVE",
"366 870 OFFCURVE",
"553 870 CURVE SMOOTH",
"695 870 OFFCURVE",
"797 794 OFFCURVE",
"813 674 CURVE",
"804 598 LINE SMOOTH",
"752 306 OFFCURVE",
"609 130 OFFCURVE",
"420 130 CURVE SMOOTH"
);
}
);
width = 1167;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"575 -21 OFFCURVE",
"753 95 OFFCURVE",
"872 295 CURVE SMOOTH",
"932 394 OFFCURVE",
"972 506 OFFCURVE",
"1010 721 CURVE SMOOTH",
"1053 975 OFFCURVE",
"1043 1173 OFFCURVE",
"985 1310 CURVE SMOOTH",
"924 1454 OFFCURVE",
"809 1530 OFFCURVE",
"646 1530 CURVE SMOOTH",
"509 1530 OFFCURVE",
"391 1485 OFFCURVE",
"290 1395 CURVE",
"312 1354 LINE",
"420 1443 OFFCURVE",
"506 1476 OFFCURVE",
"630 1476 CURVE SMOOTH",
"909 1476 OFFCURVE",
"1026 1232 OFFCURVE",
"966 785 CURVE",
"892 941 OFFCURVE",
"753 1022 OFFCURVE",
"570 1022 CURVE SMOOTH",
"127 1021 OFFCURVE",
"14 561 OFFCURVE",
"0 479 CURVE SMOOTH",
"-34 287 OFFCURVE",
"23 124 OFFCURVE",
"152 41 CURVE SMOOTH",
"217 0 OFFCURVE",
"295 -21 OFFCURVE",
"385 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"127 33 OFFCURVE",
"12 236 OFFCURVE",
"60 511 CURVE SMOOTH",
"108 782 OFFCURVE",
"316 968 OFFCURVE",
"561 968 CURVE SMOOTH",
"788 968 OFFCURVE",
"926 831 OFFCURVE",
"949 679 CURVE",
"936 615 LINE SMOOTH",
"854 256 OFFCURVE",
"640 33 OFFCURVE",
"394 33 CURVE SMOOTH"
);
}
);
width = 1172;
}
);
note = uni2202;
unicode = 2202;
},
{
glyphname = product;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"454 -253 LINE",
"454 1228 LINE",
"973 1228 LINE",
"973 -253 LINE",
"1263 -253 LINE",
"1263 1456 LINE",
"164 1456 LINE",
"164 -253 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1419;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"234 -272 LINE",
"234 1402 LINE",
"1035 1402 LINE",
"1035 -272 LINE",
"1089 -272 LINE",
"1089 1456 LINE",
"180 1456 LINE",
"180 -272 LINE"
);
}
);
width = 1270;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"354 -213 LINE",
"354 1304 LINE",
"1068 1304 LINE",
"1068 -213 LINE",
"1253 -213 LINE",
"1253 1456 LINE",
"169 1456 LINE",
"169 -213 LINE"
);
}
);
width = 1422;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"126 -213 LINE",
"393 1304 LINE",
"1107 1304 LINE",
"840 -213 LINE",
"1025 -213 LINE",
"1319 1456 LINE",
"235 1456 LINE",
"-59 -213 LINE"
);
}
);
width = 1422;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-5 -272 LINE",
"290 1402 LINE",
"1091 1402 LINE",
"796 -272 LINE",
"850 -272 LINE",
"1155 1456 LINE",
"246 1456 LINE",
"-59 -272 LINE"
);
}
);
width = 1270;
}
);
note = uni220F;
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1236 -269 LINE",
"1236 -36 LINE",
"454 -36 LINE",
"931 595 LINE",
"457 1222 LINE",
"1201 1222 LINE",
"1201 1456 LINE",
"57 1456 LINE",
"57 1305 LINE",
"627 599 LINE",
"57 -118 LINE",
"57 -269 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
10 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1284;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1164 -270 LINE",
"1164 -216 LINE",
"133 -216 LINE",
"716 590 LINE",
"132 1403 LINE",
"1106 1403 LINE",
"1106 1456 LINE",
"57 1456 LINE",
"57 1412 LINE",
"653 592 LINE",
"57 -227 LINE",
"57 -270 LINE"
);
}
);
width = 1166;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1195 -269 LINE",
"1195 -117 LINE",
"294 -117 LINE",
"875 585 LINE",
"293 1304 LINE",
"1118 1304 LINE",
"1118 1456 LINE",
"69 1456 LINE",
"69 1312 LINE",
"678 585 LINE",
"69 -126 LINE",
"69 -269 LINE"
);
}
);
width = 1199;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"957 -269 LINE",
"984 -117 LINE",
"83 -117 LINE",
"787 585 LINE",
"332 1304 LINE",
"1157 1304 LINE",
"1184 1456 LINE",
"135 1456 LINE",
"110 1312 LINE",
"590 585 LINE",
"-144 -126 LINE",
"-169 -269 LINE"
);
}
);
width = 1199;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"926 -270 LINE",
"935 -216 LINE",
"-96 -216 LINE",
"629 590 LINE",
"189 1403 LINE",
"1163 1403 LINE",
"1172 1456 LINE",
"123 1456 LINE",
"115 1412 LINE",
"567 592 LINE",
"-174 -227 LINE",
"-181 -270 LINE"
);
}
);
width = 1166;
}
);
note = uni2211;
unicode = 2211;
},
{
glyphname = minus;
lastChange = "2020-12-15 23:23:53 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1010 516 LINE",
"1010 752 LINE",
"147 752 LINE",
"147 516 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1138;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1003 651 LINE",
"1003 802 LINE",
"168 802 LINE",
"168 651 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1170;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"998 721 LINE",
"998 775 LINE",
"163 775 LINE",
"163 721 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1167;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"927 651 LINE",
"954 802 LINE",
"119 802 LINE",
"92 651 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1170;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"934 721 LINE",
"944 775 LINE",
"109 775 LINE",
"99 721 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 14 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 5 values pushed */
11 5 27 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1167;
}
);
note = uni00B1;
unicode = 2212;
},
{
glyphname = radical;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"713 0 LINE",
"1135 1456 LINE",
"904 1456 LINE",
"582 294 LINE",
"443 759 LINE",
"55 759 LINE",
"55 523 LINE",
"281 523 LINE",
"467 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 9 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 1 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1157;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"479 0 LINE",
"938 1456 LINE",
"880 1456 LINE",
"452 80 LINE",
"228 705 LINE",
"65 705 LINE",
"65 651 LINE",
"189 651 LINE",
"427 1 LINE"
);
}
);
width = 1016;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"634 0 LINE",
"1176 1456 LINE",
"987 1456 LINE",
"560 284 LINE",
"378 782 LINE",
"63 782 LINE",
"63 628 LINE",
"248 628 LINE",
"493 0 LINE"
);
}
);
width = 1221;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"443 0 LINE",
"1242 1456 LINE",
"1053 1456 LINE",
"419 284 LINE",
"325 782 LINE",
"10 782 LINE",
"-17 628 LINE",
"168 628 LINE",
"302 0 LINE"
);
}
);
width = 1221;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"288 0 LINE",
"1004 1456 LINE",
"946 1456 LINE",
"275 80 LINE",
"162 705 LINE",
"-1 705 LINE",
"-11 651 LINE",
"113 651 LINE",
"236 1 LINE"
);
}
);
width = 1016;
}
);
note = uni221A;
unicode = 221A;
},
{
glyphname = infinity;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"800.667 -20 OFFCURVE",
"954.333 84 OFFCURVE",
"1069 292 CURVE",
"1183.667 84 OFFCURVE",
"1337.333 -20 OFFCURVE",
"1530 -20 CURVE SMOOTH",
"1682 -20 OFFCURVE",
"1808 36 OFFCURVE",
"1898 131 CURVE SMOOTH",
"1991 230 OFFCURVE",
"2045 370 OFFCURVE",
"2045 530 CURVE SMOOTH",
"2045 708 OFFCURVE",
"1990 853 OFFCURVE",
"1896 953 CURVE SMOOTH",
"1805 1048 OFFCURVE",
"1679 1102 OFFCURVE",
"1532 1102 CURVE SMOOTH",
"1342.667 1102 OFFCURVE",
"1183.667 1004.333 OFFCURVE",
"1069 799 CURVE",
"955.667 1001.667 OFFCURVE",
"794 1102 OFFCURVE",
"606 1102 CURVE SMOOTH",
"442 1101 OFFCURVE",
"322 1021 OFFCURVE",
"240 918 CURVE SMOOTH",
"139 792 OFFCURVE",
"94 633 OFFCURVE",
"94 550 CURVE SMOOTH",
"94 344 OFFCURVE",
"170 179 OFFCURVE",
"297 81 CURVE SMOOTH",
"381 16 OFFCURVE",
"487 -20 OFFCURVE",
"608 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"469.667 220 OFFCURVE",
"375 344.667 OFFCURVE",
"375 530 CURVE SMOOTH",
"375 744.667 OFFCURVE",
"474.333 861 OFFCURVE",
"621 861 CURVE SMOOTH",
"810 861 OFFCURVE",
"923 624 OFFCURVE",
"923 562 CURVE",
"923 533 LINE SMOOTH",
"923 484 OFFCURVE",
"816 220 OFFCURVE",
"623 220 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1321 220 OFFCURVE",
"1214 481 OFFCURVE",
"1214 533 CURVE SMOOTH",
"1214 562 LINE SMOOTH",
"1214 626 OFFCURVE",
"1331 861 OFFCURVE",
"1517 861 CURVE SMOOTH",
"1663.667 861 OFFCURVE",
"1763 736.667 OFFCURVE",
"1763 550 CURVE SMOOTH",
"1763 339.333 OFFCURVE",
"1667 220 OFFCURVE",
"1515 220 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
6 56 57 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
6 22 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
19 22 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 2143;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"813.667 -21 OFFCURVE",
"989.667 143.333 OFFCURVE",
"1103 458 CURVE",
"1211 150 OFFCURVE",
"1393 -21 OFFCURVE",
"1613 -21 CURVE SMOOTH",
"1786.333 -21 OFFCURVE",
"1931.667 76.167 OFFCURVE",
"2009 243.5 CURVE SMOOTH",
"2047.667 327.167 OFFCURVE",
"2067 418.333 OFFCURVE",
"2067 517 CURVE SMOOTH",
"2067 729 OFFCURVE",
"2001 894 OFFCURVE",
"1893 994 CURVE SMOOTH",
"1818 1064 OFFCURVE",
"1723 1102 OFFCURVE",
"1615 1102 CURVE SMOOTH",
"1395 1102 OFFCURVE",
"1209.667 927 OFFCURVE",
"1103 623 CURVE",
"996.333 928.333 OFFCURVE",
"811.667 1102 OFFCURVE",
"593 1102 CURVE SMOOTH",
"419.667 1102 OFFCURVE",
"275.333 1004.667 OFFCURVE",
"198 838 CURVE SMOOTH",
"159.333 754.667 OFFCURVE",
"140 663.667 OFFCURVE",
"140 565 CURVE SMOOTH",
"140 372 OFFCURVE",
"195 218 OFFCURVE",
"286 116 CURVE SMOOTH",
"365 28 OFFCURVE",
"472 -21 OFFCURVE",
"595 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"325 33 OFFCURVE",
"194 272 OFFCURVE",
"194 550 CURVE SMOOTH",
"194 842 OFFCURVE",
"359.667 1048 OFFCURVE",
"593 1048 CURVE SMOOTH",
"802 1048 OFFCURVE",
"975 862 OFFCURVE",
"1069 562 CURVE",
"1069 521 LINE",
"974.333 220 OFFCURVE",
"800.333 33 OFFCURVE",
"595 33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1407.667 33 OFFCURVE",
"1235.333 213.333 OFFCURVE",
"1138 520 CURVE",
"1138 562 LINE",
"1232.667 866 OFFCURVE",
"1405.667 1048 OFFCURVE",
"1615 1048 CURVE SMOOTH",
"1869 1048 OFFCURVE",
"2013 809 OFFCURVE",
"2013 530 CURVE SMOOTH",
"2013 240.667 OFFCURVE",
"1850.333 33 OFFCURVE",
"1613 33 CURVE SMOOTH"
);
}
);
width = 2223;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"777 -21 OFFCURVE",
"938 101.333 OFFCURVE",
"1046 340 CURVE",
"1152.667 104 OFFCURVE",
"1315.667 -21 OFFCURVE",
"1509 -21 CURVE SMOOTH",
"1691.667 -21 OFFCURVE",
"1848 81.333 OFFCURVE",
"1932 252 CURVE SMOOTH",
"1974 337.333 OFFCURVE",
"1995 429 OFFCURVE",
"1995 527 CURVE SMOOTH",
"1995 700 OFFCURVE",
"1944 840 OFFCURVE",
"1859 940 CURVE SMOOTH",
"1772 1041 OFFCURVE",
"1650 1102 OFFCURVE",
"1511 1102 CURVE SMOOTH",
"1316.333 1102 OFFCURVE",
"1152.667 976 OFFCURVE",
"1046 740 CURVE",
"938 978.667 OFFCURVE",
"776.333 1102 OFFCURVE",
"583 1102 CURVE SMOOTH",
"479 1102 OFFCURVE",
"389 1071 OFFCURVE",
"316 1018 CURVE SMOOTH",
"177 916 OFFCURVE",
"98 732 OFFCURVE",
"98 529 CURVE SMOOTH",
"98 327.667 OFFCURVE",
"189 145.833 OFFCURVE",
"337 50.5 CURVE SMOOTH",
"411 2.833 OFFCURVE",
"493.667 -21 OFFCURVE",
"585 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"403.667 130 OFFCURVE",
"283 291 OFFCURVE",
"283 545 CURVE SMOOTH",
"283 791.667 OFFCURVE",
"404.333 950 OFFCURVE",
"583 950 CURVE SMOOTH",
"742.726 950 OFFCURVE",
"884 799 OFFCURVE",
"947 562 CURVE",
"947 520 LINE",
"866.667 263.667 OFFCURVE",
"737 130 OFFCURVE",
"585 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1313 130 OFFCURVE",
"1184 355 OFFCURVE",
"1146 520 CURVE",
"1146 562 LINE",
"1225.667 817 OFFCURVE",
"1357.667 950 OFFCURVE",
"1511 950 CURVE SMOOTH",
"1688.333 950 OFFCURVE",
"1810 785 OFFCURVE",
"1810 553 CURVE SMOOTH",
"1810 290.667 OFFCURVE",
"1690.333 130 OFFCURVE",
"1509 130 CURVE SMOOTH"
);
}
);
width = 2106;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"583 -21 OFFCURVE",
"765 101 OFFCURVE",
"915 340 CURVE",
"980 104 OFFCURVE",
"1121 -21 OFFCURVE",
"1315 -21 CURVE SMOOTH",
"1497 -21 OFFCURVE",
"1672 81 OFFCURVE",
"1786 252 CURVE SMOOTH",
"1843 337 OFFCURVE",
"1880 429 OFFCURVE",
"1897 527 CURVE SMOOTH",
"1928 700 OFFCURVE",
"1901 840 OFFCURVE",
"1834 940 CURVE SMOOTH",
"1765 1041 OFFCURVE",
"1654 1102 OFFCURVE",
"1515 1102 CURVE SMOOTH",
"1320 1102 OFFCURVE",
"1134 976 OFFCURVE",
"986 740 CURVE",
"920 979 OFFCURVE",
"780 1102 OFFCURVE",
"587 1102 CURVE SMOOTH",
"483 1102 OFFCURVE",
"387 1071 OFFCURVE",
"305 1018 CURVE SMOOTH",
"148 916 OFFCURVE",
"36 732 OFFCURVE",
"0 529 CURVE SMOOTH",
"-35 328 OFFCURVE",
"24 146 OFFCURVE",
"155 51 CURVE SMOOTH",
"221 3 OFFCURVE",
"299 -21 OFFCURVE",
"391 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"236 130 OFFCURVE",
"144 291 OFFCURVE",
"188 545 CURVE SMOOTH",
"232 792 OFFCURVE",
"381 950 OFFCURVE",
"560 950 CURVE SMOOTH",
"719 950 OFFCURVE",
"834 799 OFFCURVE",
"855 562 CURVE",
"848 520 LINE",
"722 264 OFFCURVE",
"569 130 OFFCURVE",
"417 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1145 130 OFFCURVE",
"1056 355 OFFCURVE",
"1047 520 CURVE",
"1054 562 LINE",
"1179 817 OFFCURVE",
"1334 950 OFFCURVE",
"1488 950 CURVE SMOOTH",
"1665 950 OFFCURVE",
"1758 785 OFFCURVE",
"1717 553 CURVE SMOOTH",
"1670 291 OFFCURVE",
"1522 130 OFFCURVE",
"1341 130 CURVE SMOOTH"
);
}
);
width = 2106;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"619 -21 OFFCURVE",
"824 143 OFFCURVE",
"993 458 CURVE",
"1047 150 OFFCURVE",
"1199 -21 OFFCURVE",
"1419 -21 CURVE SMOOTH",
"1592 -21 OFFCURVE",
"1754 76 OFFCURVE",
"1861 244 CURVE SMOOTH",
"1915 327 OFFCURVE",
"1950 418 OFFCURVE",
"1967 517 CURVE SMOOTH",
"2005 729 OFFCURVE",
"1968 894 OFFCURVE",
"1877 994 CURVE SMOOTH",
"1815 1064 OFFCURVE",
"1727 1102 OFFCURVE",
"1619 1102 CURVE SMOOTH",
"1399 1102 OFFCURVE",
"1182 927 OFFCURVE",
"1022 623 CURVE",
"969 928 OFFCURVE",
"815 1102 OFFCURVE",
"597 1102 CURVE SMOOTH",
"423 1102 OFFCURVE",
"262 1005 OFFCURVE",
"155 838 CURVE SMOOTH",
"102 755 OFFCURVE",
"66 664 OFFCURVE",
"49 565 CURVE SMOOTH",
"15 372 OFFCURVE",
"43 218 OFFCURVE",
"116 116 CURVE SMOOTH",
"179 28 OFFCURVE",
"278 -21 OFFCURVE",
"401 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"140 33 OFFCURVE",
"51 272 OFFCURVE",
"100 550 CURVE SMOOTH",
"152 842 OFFCURVE",
"354 1048 OFFCURVE",
"587 1048 CURVE SMOOTH",
"796 1048 OFFCURVE",
"936 862 OFFCURVE",
"977 562 CURVE",
"970 521 LINE",
"822 220 OFFCURVE",
"615 33 OFFCURVE",
"410 33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1223 33 OFFCURVE",
"1082 213 OFFCURVE",
"1039 520 CURVE",
"1046 562 LINE",
"1195 866 OFFCURVE",
"1400 1048 OFFCURVE",
"1609 1048 CURVE SMOOTH",
"1863 1048 OFFCURVE",
"1965 809 OFFCURVE",
"1916 530 CURVE SMOOTH",
"1865 241 OFFCURVE",
"1665 33 OFFCURVE",
"1428 33 CURVE SMOOTH"
);
}
);
width = 2223;
}
);
note = uni221E;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"293 -437 OFFCURVE",
"433 -303 OFFCURVE",
"433 -47 CURVE SMOOTH",
"433 1171 LINE SMOOTH",
"433 1273 OFFCURVE",
"482 1324 OFFCURVE",
"580 1324 CURVE SMOOTH",
"616.667 1324 OFFCURVE",
"649 1320.667 OFFCURVE",
"677 1314 CURVE",
"701 1536 LINE",
"637 1550 OFFCURVE",
"584 1557 OFFCURVE",
"542 1557 CURVE SMOOTH",
"287.333 1557 OFFCURVE",
"143 1421.333 OFFCURVE",
"143 1176 CURVE SMOOTH",
"143 -59 LINE",
"140.333 -155 OFFCURVE",
"96 -203 OFFCURVE",
"10 -203 CURVE SMOOTH",
"-14.667 -203 OFFCURVE",
"-43 -199 OFFCURVE",
"-75 -191 CURVE",
"-91 -419 LINE",
"-45.667 -431 OFFCURVE",
"2.333 -437 OFFCURVE",
"53 -437 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
2 22 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 591;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"133 -437 OFFCURVE",
"238 -315.667 OFFCURVE",
"238 -89 CURVE SMOOTH",
"238 1236 LINE SMOOTH",
"238 1406.667 OFFCURVE",
"324.333 1503 OFFCURVE",
"467 1503 CURVE SMOOTH",
"511.667 1503 OFFCURVE",
"551.333 1498 OFFCURVE",
"586 1488 CURVE",
"594 1540 LINE {name = \"❌\";}",
"558.667 1551.333 OFFCURVE",
"516 1557 OFFCURVE",
"466 1557 CURVE SMOOTH",
"288.667 1557 OFFCURVE",
"184 1444 OFFCURVE",
"184 1236 CURVE SMOOTH",
"184 -89 LINE SMOOTH",
"184 -278.333 OFFCURVE",
"102.333 -383 OFFCURVE",
"-47 -383 CURVE SMOOTH",
"-81 -383 OFFCURVE",
"-114 -377 OFFCURVE",
"-146 -365 CURVE",
"-159 -417 LINE",
"-120.333 -430.333 OFFCURVE",
"-83 -437 OFFCURVE",
"-47 -437 CURVE SMOOTH"
);
}
);
width = 514;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"245.667 -437 OFFCURVE",
"357 -323 OFFCURVE",
"357 -107 CURVE SMOOTH",
"357 1186 LINE SMOOTH",
"357 1332 OFFCURVE",
"417.667 1405 OFFCURVE",
"539 1405 CURVE SMOOTH",
"575 1405 OFFCURVE",
"605.333 1401.333 OFFCURVE",
"630 1394 CURVE",
"654 1536 LINE",
"598 1550 OFFCURVE",
"550 1557 OFFCURVE",
"510 1557 CURVE SMOOTH",
"295.333 1557 OFFCURVE",
"172 1423.667 OFFCURVE",
"172 1197 CURVE SMOOTH",
"172 -108 LINE SMOOTH",
"172 -226 OFFCURVE",
"120.333 -285 OFFCURVE",
"17 -285 CURVE SMOOTH",
"-5 -285 OFFCURVE",
"-31.333 -280.667 OFFCURVE",
"-62 -272 CURVE",
"-80 -417 LINE",
"-41.333 -430.333 OFFCURVE",
"-3 -437 OFFCURVE",
"35 -437 CURVE SMOOTH"
);
}
);
width = 524;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-22 -437 OFFCURVE",
"109 -323 OFFCURVE",
"147 -107 CURVE SMOOTH",
"375 1186 LINE SMOOTH",
"401 1332 OFFCURVE",
"475 1405 OFFCURVE",
"596 1405 CURVE SMOOTH",
"632 1405 OFFCURVE",
"662 1401 OFFCURVE",
"685 1394 CURVE",
"734 1536 LINE",
"681 1550 OFFCURVE",
"634 1557 OFFCURVE",
"594 1557 CURVE SMOOTH",
"379 1557 OFFCURVE",
"232 1424 OFFCURVE",
"192 1197 CURVE SMOOTH",
"-38 -108 LINE SMOOTH",
"-59 -226 OFFCURVE",
"-121 -285 OFFCURVE",
"-224 -285 CURVE SMOOTH",
"-246 -285 OFFCURVE",
"-272 -281 OFFCURVE",
"-301 -272 CURVE",
"-344 -417 LINE",
"-308 -430 OFFCURVE",
"-271 -437 OFFCURVE",
"-233 -437 CURVE SMOOTH"
);
}
);
width = 524;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-135 -437 OFFCURVE",
"-8 -316 OFFCURVE",
"32 -89 CURVE SMOOTH",
"265 1236 LINE SMOOTH",
"295 1407 OFFCURVE",
"399 1503 OFFCURVE",
"541 1503 CURVE SMOOTH",
"586 1503 OFFCURVE",
"625 1498 OFFCURVE",
"658 1488 CURVE",
"675 1540 LINE {name = \"❌\";}",
"641 1551 OFFCURVE",
"600 1557 OFFCURVE",
"550 1557 CURVE SMOOTH",
"372 1557 OFFCURVE",
"248 1444 OFFCURVE",
"211 1236 CURVE SMOOTH",
"-22 -89 LINE SMOOTH",
"-56 -278 OFFCURVE",
"-156 -383 OFFCURVE",
"-305 -383 CURVE SMOOTH",
"-339 -383 OFFCURVE",
"-371 -377 OFFCURVE",
"-401 -365 CURVE",
"-423 -417 LINE",
"-387 -430 OFFCURVE",
"-351 -437 OFFCURVE",
"-315 -437 CURVE SMOOTH"
);
}
);
width = 514;
}
);
note = uni222B;
unicode = 222B;
},
{
glyphname = approxequal;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"914.333 661 OFFCURVE",
"988 696.333 OFFCURVE",
"1056 767 CURVE",
"1056 1004 LINE",
"988.667 920 OFFCURVE",
"912.667 878 OFFCURVE",
"828 878 CURVE SMOOTH",
"769.333 878 OFFCURVE",
"712.667 890.667 OFFCURVE",
"658 916 CURVE SMOOTH",
"520 984 LINE SMOOTH",
"463.333 1009.333 OFFCURVE",
"405.667 1021.333 OFFCURVE",
"347 1020 CURVE SMOOTH",
"259 1020 OFFCURVE",
"165 980.667 OFFCURVE",
"101 914 CURVE",
"101 677 LINE",
"161 751.667 OFFCURVE",
"262 803 OFFCURVE",
"354 803 CURVE SMOOTH",
"412.667 804.333 OFFCURVE",
"470.333 792.333 OFFCURVE",
"527 767 CURVE SMOOTH",
"665 699 LINE SMOOTH",
"719.667 673.667 OFFCURVE",
"776.333 661 OFFCURVE",
"835 661 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"912 241 OFFCURVE",
"988 276.333 OFFCURVE",
"1056 347 CURVE",
"1056 584 LINE",
"988.667 500 OFFCURVE",
"910 458 OFFCURVE",
"820 458 CURVE SMOOTH",
"762.667 458 OFFCURVE",
"707.667 470 OFFCURVE",
"655 494 CURVE SMOOTH",
"515 563 LINE SMOOTH",
"457.667 589 OFFCURVE",
"399 601.333 OFFCURVE",
"339 600 CURVE SMOOTH",
"248.333 600 OFFCURVE",
"169 564.667 OFFCURVE",
"101 494 CURVE",
"101 257 LINE",
"165 337 OFFCURVE",
"259 383 OFFCURVE",
"347 383 CURVE SMOOTH",
"405.667 384.333 OFFCURVE",
"463.333 372.333 OFFCURVE",
"520 347 CURVE SMOOTH",
"658 279 LINE SMOOTH",
"712.667 253.667 OFFCURVE",
"769.333 241 OFFCURVE",
"828 241 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
16 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
34 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
39 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1181;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"895 765 OFFCURVE",
"974 823.667 OFFCURVE",
"1042 921 CURVE",
"1035 987 LINE",
"965.667 887 OFFCURVE",
"888 827 OFFCURVE",
"803 827 CURVE SMOOTH",
"752 827 OFFCURVE",
"702 847 OFFCURVE",
"656 871 CURVE SMOOTH",
"503 950 LINE SMOOTH",
"455 975 OFFCURVE",
"402 984 OFFCURVE",
"347 983 CURVE SMOOTH",
"258 983 OFFCURVE",
"179 934 OFFCURVE",
"101 837 CURVE",
"101 771 LINE",
"187 871 OFFCURVE",
"265 921 OFFCURVE",
"350 921 CURVE SMOOTH",
"403 922 OFFCURVE",
"454 914 OFFCURVE",
"502 889 CURVE SMOOTH",
"662 806 LINE SMOOTH",
"705 784 OFFCURVE",
"754 765 OFFCURVE",
"806 765 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"884 377 OFFCURVE",
"963 435.667 OFFCURVE",
"1031 533 CURVE",
"1025 597 LINE",
"955.667 497 OFFCURVE",
"878 437 OFFCURVE",
"793 437 CURVE SMOOTH",
"742 437 OFFCURVE",
"692 457 OFFCURVE",
"646 481 CURVE SMOOTH",
"493 560 LINE SMOOTH",
"445 585 OFFCURVE",
"392 594 OFFCURVE",
"337 593 CURVE SMOOTH",
"248 593 OFFCURVE",
"169 544 OFFCURVE",
"101 447 CURVE",
"101 383 LINE",
"176 483 OFFCURVE",
"254 533 OFFCURVE",
"339 533 CURVE SMOOTH",
"392 534 OFFCURVE",
"443 526 OFFCURVE",
"491 501 CURVE SMOOTH",
"651 418 LINE SMOOTH",
"694 396 OFFCURVE",
"743 377 OFFCURVE",
"795 377 CURVE SMOOTH"
);
}
);
width = 1154;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"887.667 697 OFFCURVE",
"966.333 733.333 OFFCURVE",
"1033 806 CURVE",
"1033 996 LINE",
"967 910.667 OFFCURVE",
"888.333 868 OFFCURVE",
"799 868 CURVE SMOOTH",
"747 868 OFFCURVE",
"699 878.333 OFFCURVE",
"655 899 CURVE SMOOTH",
"503 977 LINE SMOOTH",
"453.667 1000.333 OFFCURVE",
"401.667 1011.333 OFFCURVE",
"347 1010 CURVE SMOOTH",
"259 1010 OFFCURVE",
"166 969 OFFCURVE",
"101 901 CURVE",
"101 712 LINE",
"166 792 OFFCURVE",
"259 840 OFFCURVE",
"347 840 CURVE SMOOTH",
"399.667 841.333 OFFCURVE",
"450 834 OFFCURVE",
"494 811 CURVE SMOOTH",
"655 728 LINE SMOOTH",
"699 707.333 OFFCURVE",
"747 697 OFFCURVE",
"799 697 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"886.667 280 OFFCURVE",
"965.333 316.333 OFFCURVE",
"1033 389 CURVE",
"1033 578 LINE",
"965 492.667 OFFCURVE",
"886.667 450 OFFCURVE",
"798 450 CURVE SMOOTH",
"744.667 450 OFFCURVE",
"695.333 461 OFFCURVE",
"650 483 CURVE SMOOTH",
"501 560 LINE SMOOTH",
"451.667 583.333 OFFCURVE",
"399.667 594.333 OFFCURVE",
"345 593 CURVE SMOOTH",
"257 593 OFFCURVE",
"165 551 OFFCURVE",
"101 483 CURVE",
"101 294 LINE",
"165 374 OFFCURVE",
"258 422 OFFCURVE",
"346 422 CURVE SMOOTH",
"400.667 423.333 OFFCURVE",
"452.667 412.333 OFFCURVE",
"502 389 CURVE SMOOTH",
"654 311 LINE SMOOTH",
"698 290.333 OFFCURVE",
"746 280 OFFCURVE",
"798 280 CURVE SMOOTH"
);
}
);
width = 1154;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"820 697 OFFCURVE",
"905 733 OFFCURVE",
"984 806 CURVE",
"1018 996 LINE",
"937 911 OFFCURVE",
"851 868 OFFCURVE",
"761 868 CURVE SMOOTH",
"709 868 OFFCURVE",
"663 878 OFFCURVE",
"623 899 CURVE SMOOTH",
"484 977 LINE SMOOTH",
"439 1000 OFFCURVE",
"389 1011 OFFCURVE",
"334 1010 CURVE SMOOTH",
"246 1010 OFFCURVE",
"146 969 OFFCURVE",
"69 901 CURVE",
"36 712 LINE",
"115 792 OFFCURVE",
"216 840 OFFCURVE",
"304 840 CURVE SMOOTH",
"357 841 OFFCURVE",
"406 834 OFFCURVE",
"446 811 CURVE SMOOTH",
"593 728 LINE SMOOTH",
"633 707 OFFCURVE",
"679 697 OFFCURVE",
"731 697 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"745 280 OFFCURVE",
"830 316 OFFCURVE",
"911 389 CURVE",
"944 578 LINE",
"861 493 OFFCURVE",
"775 450 OFFCURVE",
"687 450 CURVE SMOOTH",
"633 450 OFFCURVE",
"586 461 OFFCURVE",
"544 483 CURVE SMOOTH",
"409 560 LINE SMOOTH",
"364 583 OFFCURVE",
"314 594 OFFCURVE",
"259 593 CURVE SMOOTH",
"171 593 OFFCURVE",
"71 551 OFFCURVE",
"-5 483 CURVE",
"-38 294 LINE",
"40 374 OFFCURVE",
"142 422 OFFCURVE",
"230 422 CURVE SMOOTH",
"285 423 OFFCURVE",
"335 412 OFFCURVE",
"380 389 CURVE SMOOTH",
"518 311 LINE SMOOTH",
"558 290 OFFCURVE",
"605 280 OFFCURVE",
"657 280 CURVE SMOOTH"
);
}
);
width = 1154;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"839 765 OFFCURVE",
"928 824 OFFCURVE",
"1014 921 CURVE",
"1018 987 LINE",
"931 887 OFFCURVE",
"843 827 OFFCURVE",
"758 827 CURVE SMOOTH",
"707 827 OFFCURVE",
"661 847 OFFCURVE",
"619 871 CURVE SMOOTH",
"480 950 LINE SMOOTH",
"436 975 OFFCURVE",
"385 984 OFFCURVE",
"330 983 CURVE SMOOTH",
"241 983 OFFCURVE",
"153 934 OFFCURVE",
"58 837 CURVE",
"46 771 LINE",
"150 871 OFFCURVE",
"237 921 OFFCURVE",
"322 921 CURVE SMOOTH",
"375 922 OFFCURVE",
"424 914 OFFCURVE",
"468 889 CURVE SMOOTH",
"613 806 LINE SMOOTH",
"652 784 OFFCURVE",
"698 765 OFFCURVE",
"750 765 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"760 377 OFFCURVE",
"849 436 OFFCURVE",
"934 533 CURVE",
"939 597 LINE",
"853 497 OFFCURVE",
"764 437 OFFCURVE",
"679 437 CURVE SMOOTH",
"628 437 OFFCURVE",
"582 457 OFFCURVE",
"540 481 CURVE SMOOTH",
"401 560 LINE SMOOTH",
"357 585 OFFCURVE",
"306 594 OFFCURVE",
"251 593 CURVE SMOOTH",
"162 593 OFFCURVE",
"74 544 OFFCURVE",
"-11 447 CURVE",
"-22 383 LINE",
"70 483 OFFCURVE",
"157 533 OFFCURVE",
"242 533 CURVE SMOOTH",
"295 534 OFFCURVE",
"345 526 OFFCURVE",
"389 501 CURVE SMOOTH",
"534 418 LINE SMOOTH",
"573 396 OFFCURVE",
"619 377 OFFCURVE",
"671 377 CURVE SMOOTH"
);
}
);
width = 1154;
}
);
note = uni2248;
unicode = 2248;
},
{
glyphname = notequal;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"476 313 LINE",
"1030 313 LINE",
"1030 549 LINE",
"603 549 LINE",
"710 746 LINE",
"1030 746 LINE",
"1030 982 LINE",
"837 982 LINE",
"918 1132 LINE",
"799 1195 LINE",
"684 982 LINE",
"136 982 LINE",
"136 746 LINE",
"557 746 LINE",
"451 549 LINE",
"136 549 LINE",
"136 313 LINE",
"324 313 LINE",
"241 159 LINE",
"360 97 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1172;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"453 436 LINE",
"981 436 LINE",
"981 490 LINE",
"483 490 LINE",
"683 843 LINE",
"981 843 LINE",
"981 897 LINE",
"714 897 LINE",
"861 1156 LINE",
"814 1180 LINE",
"653 897 LINE",
"147 897 LINE",
"147 843 LINE",
"623 843 LINE",
"423 490 LINE",
"147 490 LINE",
"147 436 LINE",
"392 436 LINE",
"245 176 LINE",
"292 152 LINE"
);
}
);
width = 1142;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"455 399 LINE",
"986 399 LINE",
"986 559 LINE",
"549 559 LINE",
"697 814 LINE",
"986 814 LINE",
"986 975 LINE",
"791 975 LINE",
"910 1178 LINE",
"815 1237 LINE",
"662 975 LINE",
"152 975 LINE",
"152 814 LINE",
"568 814 LINE",
"419 559 LINE",
"152 559 LINE",
"152 399 LINE",
"326 399 LINE",
"218 214 LINE",
"313 155 LINE"
);
}
);
width = 1124;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"335 399 LINE",
"866 399 LINE",
"894 559 LINE",
"457 559 LINE",
"650 814 LINE",
"939 814 LINE",
"967 975 LINE",
"772 975 LINE",
"927 1178 LINE",
"842 1237 LINE",
"643 975 LINE",
"133 975 LINE",
"105 814 LINE",
"521 814 LINE",
"327 559 LINE",
"60 559 LINE",
"32 399 LINE",
"206 399 LINE",
"65 214 LINE",
"150 155 LINE"
);
}
);
width = 1124;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"339 436 LINE",
"867 436 LINE",
"877 490 LINE",
"379 490 LINE",
"641 843 LINE",
"939 843 LINE",
"948 897 LINE",
"681 897 LINE",
"874 1156 LINE",
"831 1180 LINE",
"620 897 LINE",
"114 897 LINE",
"105 843 LINE",
"581 843 LINE",
"319 490 LINE",
"43 490 LINE",
"33 436 LINE",
"278 436 LINE",
"85 176 LINE",
"128 152 LINE"
);
}
);
width = 1142;
}
);
note = uni2260;
unicode = 2260;
},
{
glyphname = lessequal;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -86, -556}";
},
{
name = less;
transform = "{1, 0, 0, 0.9, 0, 183}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1043;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -87, -720}";
},
{
name = less;
transform = "{1, 0, 0, 1.0041, 0, 90}";
}
);
layerId = m003;
width = 1053;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -106, -649}";
},
{
name = less;
transform = "{1, 0, 0, 0.9, 0, 97}";
}
);
layerId = m002;
width = 1041;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -106, -649}";
},
{
name = less;
transform = "{1, 0, 0, 0.9, 0, 97}";
}
);
layerId = m004;
width = 1041;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -87, -720}";
},
{
name = less;
transform = "{1, 0, 0, 1.0041, 0, 90}";
}
);
layerId = m005;
width = 1053;
}
);
note = uni2264;
unicode = 2264;
},
{
glyphname = greaterequal;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -26, -556}";
},
{
name = greater;
transform = "{1, 0, 0, 0.9, 0, 189}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1058;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -57, -719}";
},
{
name = greater;
transform = "{1, 0, 0, 1.0041, 0, 93}";
}
);
layerId = m003;
width = 1053;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -35, -650}";
},
{
name = greater;
transform = "{1, 0, 0, 0.9, 0, 115}";
}
);
layerId = m002;
width = 1071;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -35, -650}";
},
{
name = greater;
transform = "{1, 0, 0, 0.9, 0, 115}";
}
);
layerId = m004;
width = 1071;
},
{
components = (
{
name = minus;
transform = "{1, 0, 0, 1, -57, -719}";
},
{
name = greater;
transform = "{1, 0, 0, 1.0041, 0, 93}";
}
);
layerId = m005;
width = 1053;
}
);
note = uni2265;
unicode = 2265;
},
{
glyphname = lozenge;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"647 0 LINE",
"1015 727 LINE",
"646 1456 LINE",
"399 1456 LINE",
"31 727 LINE",
"400 0 LINE"
);
},
{
closed = 1;
nodes = (
"318 727 LINE",
"522 1152 LINE",
"727 727 LINE",
"524 303 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 10 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 0 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
8 0 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1042;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"540 0 LINE",
"960 727 LINE",
"540 1456 LINE",
"489 1456 LINE",
"68 727 LINE",
"489 0 LINE"
);
},
{
closed = 1;
nodes = (
"137 727 LINE",
"514 1391 LINE",
"892 727 LINE",
"514 62 LINE"
);
}
);
width = 1036;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"588 0 LINE",
"988 727 LINE",
"584 1456 LINE",
"444 1456 LINE",
"43 727 LINE",
"447 0 LINE"
);
},
{
closed = 1;
nodes = (
"234 727 LINE",
"513 1254 LINE",
"798 727 LINE",
"518 201 LINE"
);
}
);
width = 1032;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"397 0 LINE",
"925 727 LINE",
"650 1456 LINE",
"510 1456 LINE",
"-20 727 LINE",
"256 0 LINE"
);
},
{
closed = 1;
nodes = (
"171 727 LINE",
"543 1254 LINE",
"735 727 LINE",
"363 201 LINE"
);
}
);
width = 1032;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"349 0 LINE",
"897 727 LINE",
"606 1456 LINE",
"555 1456 LINE",
"5 727 LINE",
"298 0 LINE"
);
},
{
closed = 1;
nodes = (
"74 727 LINE",
"568 1391 LINE",
"829 727 LINE",
"334 62 LINE"
);
}
);
width = 1036;
}
);
note = uni25CA;
unicode = 25CA;
},
{
glyphname = uniEE01;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 12, 186}";
},
{
name = period;
transform = "{1, 0, 0, 1, 12, 1005}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 602;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 7, 172}";
},
{
name = period;
transform = "{1, 0, 0, 1, 12, 1134}";
}
);
layerId = m003;
width = 451;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 37, 178}";
},
{
name = period;
transform = "{1, 0, 0, 1, 37, 1060}";
}
);
layerId = m002;
width = 588;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 37, 178}";
},
{
name = period;
transform = "{1, 0, 0, 1, 37, 1060}";
}
);
layerId = m004;
width = 588;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 7, 172}";
},
{
name = period;
transform = "{1, 0, 0, 1, 12, 1134}";
}
);
layerId = m005;
width = 451;
}
);
note = uniEE01;
unicode = EE01;
},
{
glyphname = uniEE02;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"567 653 LINE",
"567 1081 LINE {name = \"❌\";}",
"404 1081 LINE {name = \"❌\";}",
"404 653 LINE"
);
},
{
closed = 1;
nodes = (
"253 653 LINE",
"253 1081 LINE {name = \"❌\";}",
"90 1081 LINE {name = \"❌\";}",
"90 653 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 657;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"180 705 LINE",
"180 1082 LINE",
"125 1082 LINE",
"125 705 LINE"
);
},
{
closed = 1;
nodes = (
"411 705 LINE",
"411 1082 LINE",
"357 1082 LINE",
"357 705 LINE"
);
}
);
width = 521;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"563 633 LINE",
"563 1082 LINE",
"422 1082 LINE",
"422 633 LINE"
);
},
{
closed = 1;
nodes = (
"251 633 LINE",
"251 1082 LINE",
"110 1082 LINE",
"110 633 LINE"
);
}
);
width = 655;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"484 633 LINE",
"563 1082 LINE",
"422 1082 LINE",
"343 633 LINE"
);
},
{
closed = 1;
nodes = (
"172 633 LINE",
"251 1082 LINE",
"110 1082 LINE",
"31 633 LINE"
);
}
);
width = 655;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"114 705 LINE",
"180 1082 LINE",
"125 1082 LINE",
"59 705 LINE"
);
},
{
closed = 1;
nodes = (
"345 705 LINE",
"411 1082 LINE",
"357 1082 LINE",
"291 705 LINE"
);
}
);
width = 521;
}
);
note = uniEE02;
unicode = EE02;
},
{
glyphname = uniF6C3;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"277.667 -66.333 OFFCURVE",
"340 80 OFFCURVE",
"340 204 CURVE SMOOTH",
"340 275 LINE",
"128 275 LINE",
"128 172 LINE SMOOTH",
"126 87.333 OFFCURVE",
"100.667 6.667 OFFCURVE",
"52 -70 CURVE",
"195 -149 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
160 4 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
48 4 64 4 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 470;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"244.667 -138.333 OFFCURVE",
"273.333 -58.333 OFFCURVE",
"274 37 CURVE SMOOTH",
"274 116 LINE",
"220 116 LINE",
"219 5 LINE",
"215 -55 OFFCURVE",
"192.333 -113.667 OFFCURVE",
"151 -171 CURVE",
"188 -203 LINE"
);
}
);
width = 459;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"286.333 -89 OFFCURVE",
"343 41.667 OFFCURVE",
"343 163 CURVE SMOOTH",
"343 239 LINE",
"166 239 LINE",
"166 147 LINE SMOOTH",
"164.667 62.333 OFFCURVE",
"140 -16.333 OFFCURVE",
"92 -89 CURVE",
"197 -161 LINE"
);
}
);
width = 515;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"80 -89 OFFCURVE",
"160 42 OFFCURVE",
"181 163 CURVE SMOOTH",
"194 239 LINE",
"17 239 LINE",
"1 147 LINE SMOOTH",
"-15 62 OFFCURVE",
"-54 -16 OFFCURVE",
"-114 -89 CURVE",
"-22 -161 LINE"
);
}
);
width = 515;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"29 -138 OFFCURVE",
"72 -58 OFFCURVE",
"90 37 CURVE SMOOTH",
"104 116 LINE",
"50 116 LINE",
"29 5 LINE",
"15 -55 OFFCURVE",
"-18 -114 OFFCURVE",
"-70 -171 CURVE",
"-39 -203 LINE"
);
}
);
width = 459;
}
);
note = uniF6C3;
unicode = F6C3;
},
{
glyphname = longs_t;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1166.333 -20 OFFCURVE",
"1224.333 -11.333 OFFCURVE",
"1281 6 CURVE",
"1281 225 LINE",
"1257.667 220.333 OFFCURVE",
"1229.667 218 OFFCURVE",
"1197 218 CURVE SMOOTH",
"1110.333 218 OFFCURVE",
"1086 250 OFFCURVE",
"1086 330 CURVE SMOOTH",
"1086 870 LINE",
"1270 870 LINE",
"1270 1082 LINE",
"1086 1082 LINE",
"1086 1450 LINE",
"898 1521.333 OFFCURVE",
"732 1557 OFFCURVE",
"588 1557 CURVE SMOOTH",
"336 1557 OFFCURVE",
"192.667 1419.333 OFFCURVE",
"190 1182 CURVE SMOOTH",
"190 1082 LINE",
"29 1082 LINE",
"29 870 LINE",
"190 870 LINE",
"190 0 LINE",
"479 0 LINE",
"479 1170 LINE SMOOTH",
"479 1272 OFFCURVE",
"528.333 1323 OFFCURVE",
"627 1323 CURVE SMOOTH",
"698.333 1323 OFFCURVE",
"755 1314 OFFCURVE",
"797 1296 CURVE",
"797 1082 LINE",
"638 1082 LINE",
"638 870 LINE",
"797 870 LINE",
"797 287 LINE SMOOTH",
"801 82.333 OFFCURVE",
"904.333 -20 OFFCURVE",
"1107 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
14 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
31 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
26 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1324;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1031.333 -20 OFFCURVE",
"1069 -16 OFFCURVE",
"1082 -8 CURVE",
"1082 43 LINE",
"1040 37 OFFCURVE",
"1004.333 34 OFFCURVE",
"975 34 CURVE SMOOTH",
"857.667 34 OFFCURVE",
"812 105.667 OFFCURVE",
"812 259 CURVE SMOOTH",
"812 1027 LINE",
"1058 1027 LINE",
"1058 1082 LINE",
"812 1082 LINE",
"812 1488 LINE",
"720 1534 OFFCURVE",
"628 1557 OFFCURVE",
"536 1557 CURVE SMOOTH",
"360 1557 OFFCURVE",
"256.667 1447 OFFCURVE",
"254 1243 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"66 1027 LINE",
"254 1027 LINE",
"254 0 LINE",
"308 0 LINE",
"308 1236 LINE SMOOTH",
"308 1406.667 OFFCURVE",
"394.333 1503 OFFCURVE",
"537 1503 CURVE",
"652.333 1493.667 OFFCURVE",
"713 1477.333 OFFCURVE",
"757 1452 CURVE {name = \"❌\";}",
"757 1082 LINE",
"557 1082 LINE",
"557 1027 LINE",
"757 1027 LINE",
"757 252 LINE SMOOTH",
"758.333 64 OFFCURVE",
"820.667 -20 OFFCURVE",
"978 -20 CURVE SMOOTH"
);
}
);
width = 1167;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1082.667 -20 OFFCURVE",
"1130.333 -13.333 OFFCURVE",
"1179 0 CURVE",
"1179 150 LINE",
"1143.333 142 OFFCURVE",
"1114.333 138 OFFCURVE",
"1091 138 CURVE SMOOTH",
"1004.333 138 OFFCURVE",
"972 181.333 OFFCURVE",
"972 268 CURVE SMOOTH",
"972 939 LINE",
"1174 939 LINE",
"1174 1082 LINE",
"972 1082 LINE",
"972 1456 LINE",
"852 1514.667 OFFCURVE",
"694 1557 OFFCURVE",
"570 1557 CURVE SMOOTH",
"356.667 1557 OFFCURVE",
"231 1424.667 OFFCURVE",
"231 1194 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE",
"416 0 LINE",
"416 1184 LINE SMOOTH",
"416 1331.333 OFFCURVE",
"477 1405 OFFCURVE",
"599 1405 CURVE SMOOTH",
"691 1399.333 OFFCURVE",
"745.333 1387.667 OFFCURVE",
"786 1369 CURVE",
"786 1082 LINE",
"589 1082 LINE",
"589 939 LINE",
"786 939 LINE",
"786 268 LINE SMOOTH",
"786 84 OFFCURVE",
"870.667 -20 OFFCURVE",
"1036 -20 CURVE SMOOTH"
);
}
);
width = 1262;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"888 -20 OFFCURVE",
"937 -13 OFFCURVE",
"988 0 CURVE",
"1015 150 LINE",
"978 142 OFFCURVE",
"948 138 OFFCURVE",
"925 138 CURVE SMOOTH",
"838 138 OFFCURVE",
"813 181 OFFCURVE",
"828 268 CURVE SMOOTH",
"947 939 LINE",
"1149 939 LINE",
"1174 1082 LINE",
"972 1082 LINE",
"1038 1456 LINE",
"928 1515 OFFCURVE",
"778 1557 OFFCURVE",
"654 1557 CURVE SMOOTH",
"440 1557 OFFCURVE",
"291 1425 OFFCURVE",
"251 1194 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"35 939 LINE",
"206 939 LINE",
"40 0 LINE",
"225 0 LINE",
"434 1184 LINE SMOOTH",
"460 1331 OFFCURVE",
"534 1405 OFFCURVE",
"656 1405 CURVE SMOOTH",
"747 1399 OFFCURVE",
"799 1388 OFFCURVE",
"837 1369 CURVE",
"786 1082 LINE",
"589 1082 LINE",
"564 939 LINE",
"761 939 LINE",
"642 268 LINE SMOOTH",
"610 84 OFFCURVE",
"676 -20 OFFCURVE",
"842 -20 CURVE SMOOTH"
);
}
);
width = 1262;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"837 -20 OFFCURVE",
"875 -16 OFFCURVE",
"890 -8 CURVE",
"899 43 LINE",
"856 37 OFFCURVE",
"820 34 OFFCURVE",
"790 34 CURVE SMOOTH",
"673 34 OFFCURVE",
"640 106 OFFCURVE",
"667 259 CURVE SMOOTH",
"802 1027 LINE",
"1048 1027 LINE",
"1058 1082 LINE",
"812 1082 LINE",
"884 1488 LINE",
"800 1534 OFFCURVE",
"712 1557 OFFCURVE",
"620 1557 CURVE SMOOTH",
"444 1557 OFFCURVE",
"321 1447 OFFCURVE",
"282 1243 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"56 1027 LINE",
"244 1027 LINE",
"63 0 LINE",
"117 0 LINE",
"335 1236 LINE SMOOTH",
"365 1407 OFFCURVE",
"469 1503 OFFCURVE",
"611 1503 CURVE",
"725 1494 OFFCURVE",
"783 1477 OFFCURVE",
"822 1452 CURVE {name = \"❌\";}",
"757 1082 LINE",
"557 1082 LINE",
"547 1027 LINE",
"747 1027 LINE",
"611 252 LINE SMOOTH",
"579 64 OFFCURVE",
"626 -20 OFFCURVE",
"784 -20 CURVE SMOOTH"
);
}
);
width = 1167;
}
);
note = glyph00448;
},
{
glyphname = nbspace;
lastChange = "2020-12-14 09:14:39 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 610;
},
{
layerId = m003;
width = 590;
},
{
layerId = m002;
width = 607;
},
{
layerId = m004;
width = 607;
},
{
layerId = m005;
width = 590;
}
);
note = uni00A0;
unicode = 00A0;
},
{
glyphname = softhyphen;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 794;
},
{
components = (
{
name = hyphen;
}
);
layerId = m003;
width = 607;
},
{
components = (
{
name = hyphen;
}
);
layerId = m002;
width = 565;
},
{
components = (
{
name = hyphen;
}
);
layerId = m004;
width = 565;
},
{
components = (
{
name = hyphen;
}
);
layerId = m005;
width = 607;
}
);
leftKerningGroup = hyphen;
note = uni00AD;
unicode = 00AD;
},
{
glyphname = Eth;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"611 0 LINE SMOOTH",
"1193.959 7.183 OFFCURVE",
"1273 594 OFFCURVE",
"1273 694 CURVE SMOOTH",
"1273 761 LINE SMOOTH",
"1273 1031.667 OFFCURVE",
"1153.5 1254.167 OFFCURVE",
"951.5 1369.5 CURVE SMOOTH",
"850.5 1427.167 OFFCURVE",
"736 1456 OFFCURVE",
"608 1456 CURVE SMOOTH",
"160 1456 LINE",
"160 825 LINE",
"-20 825 LINE",
"-20 642 LINE",
"160 642 LINE",
"160 0 LINE"
);
},
{
closed = 1;
nodes = (
"460 642 LINE",
"679 642 LINE",
"679 825 LINE",
"460 825 LINE",
"460 1213 LINE",
"608 1213 LINE SMOOTH",
"844 1213 OFFCURVE",
"969 1058 OFFCURVE",
"969 762 CURVE SMOOTH",
"969 694 LINE SMOOTH",
"969 403.333 OFFCURVE",
"842.333 241 OFFCURVE",
"605 241 CURVE SMOOTH",
"460 241 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
111 4 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 4 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1361;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"638 0 LINE SMOOTH",
"980 2 OFFCURVE",
"1234 265 OFFCURVE",
"1234 639 CURVE SMOOTH",
"1234 828 LINE SMOOTH",
"1231.333 1066.667 OFFCURVE",
"1121.667 1269.333 OFFCURVE",
"939 1376 CURVE SMOOTH",
"847.667 1429.333 OFFCURVE",
"745.667 1456 OFFCURVE",
"633 1456 CURVE SMOOTH",
"230 1456 LINE",
"230 767 LINE",
"60 767 LINE",
"60 713 LINE",
"230 713 LINE",
"230 0 LINE"
);
},
{
closed = 1;
nodes = (
"284 713 LINE",
"647 713 LINE",
"647 767 LINE",
"284 767 LINE",
"284 1402 LINE",
"641 1402 LINE SMOOTH",
"1123.992 1391.099 OFFCURVE",
"1180 877 OFFCURVE",
"1180 820 CURVE SMOOTH",
"1180 647 LINE SMOOTH",
"1180 299 OFFCURVE",
"952.333 54 OFFCURVE",
"623 54 CURVE SMOOTH",
"284 54 LINE"
);
}
);
width = 1370;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"602 0 LINE SMOOTH",
"1119.696 4.742 OFFCURVE",
"1252 514 OFFCURVE",
"1252 684 CURVE SMOOTH",
"1252 777 LINE SMOOTH",
"1250 1041 OFFCURVE",
"1131 1211 OFFCURVE",
"991 1316 CURVE SMOOTH",
"855 1417 OFFCURVE",
"698 1456 OFFCURVE",
"610 1456 CURVE SMOOTH",
"199 1456 LINE",
"199 817 LINE",
"7 817 LINE",
"7 666 LINE",
"199 666 LINE",
"199 0 LINE"
);
},
{
closed = 1;
nodes = (
"391 666 LINE",
"643 666 LINE",
"643 817 LINE",
"391 817 LINE",
"391 1298 LINE",
"615 1298 LINE SMOOTH",
"900.333 1295.333 OFFCURVE",
"1062 1103.667 OFFCURVE",
"1062 773 CURVE SMOOTH",
"1062 680 LINE SMOOTH",
"1060.667 348 OFFCURVE",
"888 157 OFFCURVE",
"592 157 CURVE SMOOTH",
"391 157 LINE"
);
}
);
width = 1373;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"411 0 LINE SMOOTH",
"930 5 OFFCURVE",
"1152 514 OFFCURVE",
"1182 684 CURVE SMOOTH",
"1198 777 LINE SMOOTH",
"1243 1041 OFFCURVE",
"1154 1211 OFFCURVE",
"1032 1316 CURVE SMOOTH",
"914 1417 OFFCURVE",
"764 1456 OFFCURVE",
"676 1456 CURVE SMOOTH",
"265 1456 LINE",
"152 817 LINE",
"-40 817 LINE",
"-66 666 LINE",
"126 666 LINE",
"8 0 LINE"
);
},
{
closed = 1;
nodes = (
"318 666 LINE",
"570 666 LINE",
"596 817 LINE",
"344 817 LINE",
"429 1298 LINE",
"653 1298 LINE SMOOTH",
"938 1295 OFFCURVE",
"1066 1104 OFFCURVE",
"1008 773 CURVE SMOOTH",
"991 680 LINE SMOOTH",
"931 348 OFFCURVE",
"725 157 OFFCURVE",
"429 157 CURVE SMOOTH",
"228 157 LINE"
);
}
);
width = 1373;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"447 0 LINE SMOOTH",
"790 2 OFFCURVE",
"1090 265 OFFCURVE",
"1156 639 CURVE SMOOTH",
"1189 828 LINE SMOOTH",
"1229 1067 OFFCURVE",
"1155 1269 OFFCURVE",
"991 1376 CURVE SMOOTH",
"909 1429 OFFCURVE",
"812 1456 OFFCURVE",
"699 1456 CURVE SMOOTH",
"296 1456 LINE",
"174 767 LINE",
"4 767 LINE",
"-5 713 LINE",
"165 713 LINE",
"39 0 LINE"
);
},
{
closed = 1;
nodes = (
"219 713 LINE",
"582 713 LINE",
"591 767 LINE",
"228 767 LINE",
"340 1402 LINE",
"697 1402 LINE SMOOTH",
"1178 1391 OFFCURVE",
"1144 877 OFFCURVE",
"1134 820 CURVE SMOOTH",
"1103 647 LINE SMOOTH",
"1042 299 OFFCURVE",
"771 54 OFFCURVE",
"442 54 CURVE SMOOTH",
"103 54 LINE"
);
}
);
width = 1370;
}
);
note = uni00D0;
unicode = 00D0;
},
{
glyphname = Agrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 271, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1378;
},
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 252, 319}";
}
);
layerId = m003;
width = 1223;
},
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 304, 310}";
}
);
layerId = m002;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 304, 310}";
}
);
layerId = m004;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 252, 319}";
}
);
layerId = m005;
width = 1223;
}
);
leftKerningGroup = A;
note = uni00C0;
unicode = 00C0;
},
{
glyphname = Aacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 452, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1378;
},
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 446, 319}";
}
);
layerId = m003;
width = 1223;
},
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 447, 310}";
}
);
layerId = m002;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 447, 310}";
}
);
layerId = m004;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 446, 319}";
}
);
layerId = m005;
width = 1223;
}
);
leftKerningGroup = A;
note = uni00C1;
unicode = 00C1;
},
{
glyphname = Acircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 189, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1378;
},
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 210, 319}";
}
);
layerId = m003;
width = 1223;
},
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 201, 310}";
}
);
layerId = m002;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 201, 310}";
}
);
layerId = m004;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 210, 319}";
}
);
layerId = m005;
width = 1223;
}
);
leftKerningGroup = A;
note = uni00C2;
unicode = 00C2;
},
{
glyphname = Atilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 198, 308}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1378;
},
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 211, 334}";
}
);
layerId = m003;
width = 1223;
},
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 197, 314}";
}
);
layerId = m002;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 197, 314}";
}
);
layerId = m004;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 211, 334}";
}
);
layerId = m005;
width = 1223;
}
);
leftKerningGroup = A;
note = uni00C3;
unicode = 00C3;
},
{
glyphname = Adieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 216, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1378;
},
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 162, 319}";
}
);
layerId = m003;
width = 1223;
},
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 249, 310}";
}
);
layerId = m002;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 249, 310}";
}
);
layerId = m004;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 162, 319}";
}
);
layerId = m005;
width = 1223;
}
);
leftKerningGroup = A;
note = uni00C4;
unicode = 00C4;
},
{
glyphname = Aring;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 351, 405}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1378;
},
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 329, 319}";
}
);
layerId = m003;
width = 1223;
},
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 336, 321}";
}
);
layerId = m002;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 336, 321}";
}
);
layerId = m004;
width = 1336;
},
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 329, 319}";
}
);
layerId = m005;
width = 1223;
}
);
leftKerningGroup = A;
note = uni00C5;
unicode = 00C5;
},
{
glyphname = Ccedilla;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 452, -1}";
},
{
name = C;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1340;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 499, -9}";
},
{
name = C;
}
);
layerId = m003;
width = 1327;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 466, -9}";
},
{
name = C;
}
);
layerId = m002;
width = 1333;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 466, -9}";
},
{
name = C;
}
);
layerId = m004;
width = 1333;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 499, -9}";
},
{
name = C;
}
);
layerId = m005;
width = 1327;
}
);
leftKerningGroup = C;
note = uni00C7;
rightKerningGroup = C;
unicode = 00C7;
},
{
glyphname = Egrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 214, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
},
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 259, 319}";
}
);
layerId = m003;
width = 1166;
},
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 251, 322}";
}
);
layerId = m002;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 251, 322}";
}
);
layerId = m004;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 259, 319}";
}
);
layerId = m005;
width = 1166;
}
);
note = uni00C8;
unicode = 00C8;
},
{
glyphname = Eacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 395, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
},
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 453, 319}";
}
);
layerId = m003;
width = 1166;
},
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 394, 322}";
}
);
layerId = m002;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 394, 322}";
}
);
layerId = m004;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 453, 319}";
}
);
layerId = m005;
width = 1166;
}
);
note = uni00C9;
unicode = 00C9;
},
{
glyphname = Ecircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 132, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
},
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 217, 319}";
}
);
layerId = m003;
width = 1166;
},
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 148, 322}";
}
);
layerId = m002;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 148, 322}";
}
);
layerId = m004;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 217, 319}";
}
);
layerId = m005;
width = 1166;
}
);
note = uni00CA;
unicode = 00CA;
},
{
glyphname = Edieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 159, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1152;
},
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 169, 319}";
}
);
layerId = m003;
width = 1166;
},
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 196, 322}";
}
);
layerId = m002;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 196, 322}";
}
);
layerId = m004;
width = 1164;
},
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 169, 319}";
}
);
layerId = m005;
width = 1166;
}
);
note = uni00CB;
unicode = 00CB;
},
{
glyphname = Igrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -122, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 597;
},
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -91, 319}";
}
);
layerId = m003;
width = 534;
},
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -89, 322}";
}
);
layerId = m002;
width = 557;
},
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -89, 322}";
}
);
layerId = m004;
width = 557;
},
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -91, 319}";
}
);
layerId = m005;
width = 534;
}
);
note = uni00CC;
unicode = 00CC;
},
{
glyphname = Iacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 58, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 597;
},
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 102, 319}";
}
);
layerId = m003;
width = 534;
},
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 53, 322}";
}
);
layerId = m002;
width = 557;
},
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 53, 322}";
}
);
layerId = m004;
width = 557;
},
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 102, 319}";
}
);
layerId = m005;
width = 534;
}
);
note = uni00CD;
unicode = 00CD;
},
{
glyphname = Icircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -204, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 597;
},
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -133, 319}";
}
);
layerId = m003;
width = 534;
},
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -192, 322}";
}
);
layerId = m002;
width = 557;
},
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -192, 322}";
}
);
layerId = m004;
width = 557;
},
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -133, 319}";
}
);
layerId = m005;
width = 534;
}
);
note = uni00CE;
unicode = 00CE;
},
{
glyphname = Idieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -177, 313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 597;
},
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -181, 319}";
}
);
layerId = m003;
width = 534;
},
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -144, 322}";
}
);
layerId = m002;
width = 557;
},
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -144, 322}";
}
);
layerId = m004;
width = 557;
},
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -181, 319}";
}
);
layerId = m005;
width = 534;
}
);
note = uni00CF;
unicode = 00CF;
},
{
glyphname = Ntilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 232, 308}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1446;
},
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 325, 334}";
}
);
layerId = m003;
width = 1449;
},
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 251, 314}";
}
);
layerId = m002;
width = 1460;
},
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 251, 314}";
}
);
layerId = m004;
width = 1460;
},
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 325, 334}";
}
);
layerId = m005;
width = 1449;
}
);
note = uni00D1;
unicode = 00D1;
},
{
glyphname = Ograve;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 285, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
},
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 316, 340}";
}
);
layerId = m003;
width = 1364;
},
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 338, 312}";
}
);
layerId = m002;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 338, 312}";
}
);
layerId = m004;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 316, 340}";
}
);
layerId = m005;
width = 1364;
}
);
leftKerningGroup = C;
note = uni00D2;
unicode = 00D2;
},
{
glyphname = Oacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 466, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
},
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 510, 340}";
}
);
layerId = m003;
width = 1364;
},
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 481, 312}";
}
);
layerId = m002;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 481, 312}";
}
);
layerId = m004;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 510, 340}";
}
);
layerId = m005;
width = 1364;
}
);
leftKerningGroup = C;
note = uni00D3;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 203, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
},
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 274, 340}";
}
);
layerId = m003;
width = 1364;
},
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 235, 312}";
}
);
layerId = m002;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 235, 312}";
}
);
layerId = m004;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 274, 340}";
}
);
layerId = m005;
width = 1364;
}
);
leftKerningGroup = C;
note = uni00D4;
unicode = 00D4;
},
{
glyphname = Otilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 212, 308}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
},
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 275, 355}";
}
);
layerId = m003;
width = 1364;
},
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 231, 316}";
}
);
layerId = m002;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 231, 316}";
}
);
layerId = m004;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 275, 355}";
}
);
layerId = m005;
width = 1364;
}
);
leftKerningGroup = C;
note = uni00D5;
unicode = 00D5;
},
{
glyphname = Odieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 230, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
},
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 226, 340}";
}
);
layerId = m003;
width = 1364;
},
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 283, 312}";
}
);
layerId = m002;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 283, 312}";
}
);
layerId = m004;
width = 1408;
},
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 226, 340}";
}
);
layerId = m005;
width = 1364;
}
);
leftKerningGroup = C;
note = uni00D6;
unicode = 00D6;
},
{
glyphname = Ugrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 249, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1348;
},
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 337, 319}";
}
);
layerId = m003;
width = 1365;
},
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 299, 310}";
}
);
layerId = m002;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 299, 310}";
}
);
layerId = m004;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 337, 319}";
}
);
layerId = m005;
width = 1365;
}
);
leftKerningGroup = U;
note = uni00D9;
unicode = 00D9;
},
{
glyphname = Uacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 430, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1348;
},
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 531, 319}";
}
);
layerId = m003;
width = 1365;
},
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 442, 310}";
}
);
layerId = m002;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 442, 310}";
}
);
layerId = m004;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 531, 319}";
}
);
layerId = m005;
width = 1365;
}
);
leftKerningGroup = U;
note = uni00DA;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 167, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1348;
},
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 295, 319}";
}
);
layerId = m003;
width = 1365;
},
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 196, 310}";
}
);
layerId = m002;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 196, 310}";
}
);
layerId = m004;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 295, 319}";
}
);
layerId = m005;
width = 1365;
}
);
leftKerningGroup = U;
note = uni00DB;
unicode = 00DB;
},
{
glyphname = Udieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 194, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1348;
},
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 247, 319}";
}
);
layerId = m003;
width = 1365;
},
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 244, 310}";
}
);
layerId = m002;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 244, 310}";
}
);
layerId = m004;
width = 1328;
},
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 247, 319}";
}
);
layerId = m005;
width = 1365;
}
);
leftKerningGroup = U;
note = uni00DC;
unicode = 00DC;
},
{
glyphname = Yacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 395, 310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1266;
},
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 442, 308}";
}
);
layerId = m003;
width = 1223;
},
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 392, 310}";
}
);
layerId = m002;
width = 1230;
},
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 392, 310}";
}
);
layerId = m004;
width = 1230;
},
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 442, 308}";
}
);
layerId = m005;
width = 1223;
}
);
leftKerningGroup = Y;
note = uni00DD;
unicode = 00DD;
},
{
glyphname = agrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 130, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
},
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 217, 0}";
}
);
layerId = m003;
width = 1081;
},
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 213, 0}";
}
);
layerId = m002;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 213, 0}";
}
);
layerId = m004;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 217, 0}";
}
);
layerId = m005;
width = 1081;
}
);
leftKerningGroup = a;
note = uni00E0;
unicode = 00E0;
},
{
glyphname = aacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 311, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
},
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 411, 0}";
}
);
layerId = m003;
width = 1081;
},
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = m002;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = m004;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 411, 0}";
}
);
layerId = m005;
width = 1081;
}
);
leftKerningGroup = a;
note = uni00E1;
unicode = 00E1;
},
{
glyphname = acircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 48, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
},
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 175, 0}";
}
);
layerId = m003;
width = 1081;
},
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = m002;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = m004;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 175, 0}";
}
);
layerId = m005;
width = 1081;
}
);
leftKerningGroup = a;
note = uni00E2;
unicode = 00E2;
},
{
glyphname = atilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 57, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
},
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 176, 14}";
}
);
layerId = m003;
width = 1081;
},
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 106, 4}";
}
);
layerId = m002;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 106, 4}";
}
);
layerId = m004;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 176, 14}";
}
);
layerId = m005;
width = 1081;
}
);
leftKerningGroup = a;
note = uni00E3;
unicode = 00E3;
},
{
glyphname = adieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 75, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
},
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 127, 0}";
}
);
layerId = m003;
width = 1081;
},
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = m002;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = m004;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 127, 0}";
}
);
layerId = m005;
width = 1081;
}
);
leftKerningGroup = a;
note = uni00E4;
unicode = 00E4;
},
{
glyphname = aring;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 210, 95}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1098;
},
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = m003;
width = 1081;
},
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 245, 11}";
}
);
layerId = m002;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 245, 11}";
}
);
layerId = m004;
width = 1114;
},
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = m005;
width = 1081;
}
);
leftKerningGroup = a;
note = uni00E5;
unicode = 00E5;
},
{
glyphname = ccedilla;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 321, -1}";
},
{
name = c;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1068;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 368, -9}";
},
{
name = c;
}
);
layerId = m003;
width = 1039;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 319, -9}";
},
{
name = c;
}
);
layerId = m002;
width = 1072;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 319, -9}";
},
{
name = c;
}
);
layerId = m004;
width = 1072;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, 368, -9}";
},
{
name = c;
}
);
layerId = m005;
width = 1039;
}
);
leftKerningGroup = c;
note = uni00E7;
rightKerningGroup = c;
unicode = 00E7;
},
{
glyphname = egrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 123, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1107;
},
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, -1}";
}
);
layerId = m003;
width = 1032;
},
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 197, 0}";
}
);
layerId = m002;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 197, 0}";
}
);
layerId = m004;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, -1}";
}
);
layerId = m005;
width = 1032;
}
);
leftKerningGroup = c;
note = uni00E8;
unicode = 00E8;
},
{
glyphname = eacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 304, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1107;
},
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 401, -1}";
}
);
layerId = m003;
width = 1032;
},
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = m002;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = m004;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 401, -1}";
}
);
layerId = m005;
width = 1032;
}
);
leftKerningGroup = c;
note = uni00E9;
unicode = 00E9;
},
{
glyphname = ecircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 41, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1107;
},
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 165, -1}";
}
);
layerId = m003;
width = 1032;
},
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = m002;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = m004;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 165, -1}";
}
);
layerId = m005;
width = 1032;
}
);
leftKerningGroup = c;
note = uni00EA;
unicode = 00EA;
},
{
glyphname = edieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 68, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1107;
},
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 117, -1}";
}
);
layerId = m003;
width = 1032;
},
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 142, 0}";
}
);
layerId = m002;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 142, 0}";
}
);
layerId = m004;
width = 1085;
},
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 117, -1}";
}
);
layerId = m005;
width = 1032;
}
);
leftKerningGroup = c;
note = uni00EB;
unicode = 00EB;
},
{
glyphname = igrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = grave;
transform = "{1, 0, 0, 1, -140, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 561;
},
{
components = (
{
name = idotless;
},
{
name = grave;
transform = "{1, 0, 0, 1, -150, -23}";
}
);
layerId = m003;
width = 406;
},
{
components = (
{
name = idotless;
},
{
name = grave;
transform = "{1, 0, 0, 1, -115, -1}";
}
);
layerId = m002;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = grave;
transform = "{1, 0, 0, 1, -115, -1}";
}
);
layerId = m004;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = grave;
transform = "{1, 0, 0, 1, -150, -23}";
}
);
layerId = m005;
width = 406;
}
);
note = uni00EC;
unicode = 00EC;
},
{
glyphname = iacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acute;
transform = "{1, 0, 0, 1, 40, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 561;
},
{
components = (
{
name = idotless;
},
{
name = acute;
transform = "{1, 0, 0, 1, 43, -23}";
}
);
layerId = m003;
width = 406;
},
{
components = (
{
name = idotless;
},
{
name = acute;
transform = "{1, 0, 0, 1, 27, -1}";
}
);
layerId = m002;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = acute;
transform = "{1, 0, 0, 1, 27, -1}";
}
);
layerId = m004;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = acute;
transform = "{1, 0, 0, 1, 43, -23}";
}
);
layerId = m005;
width = 406;
}
);
note = uni00ED;
unicode = 00ED;
},
{
glyphname = icircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -222, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 561;
},
{
components = (
{
name = idotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -192, -23}";
}
);
layerId = m003;
width = 406;
},
{
components = (
{
name = idotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -218, -1}";
}
);
layerId = m002;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -218, -1}";
}
);
layerId = m004;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -192, -23}";
}
);
layerId = m005;
width = 406;
}
);
note = uni00EE;
unicode = 00EE;
},
{
glyphname = idieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -195, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 561;
},
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -240, -23}";
}
);
layerId = m003;
width = 406;
},
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -170, -1}";
}
);
layerId = m002;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -170, -1}";
}
);
layerId = m004;
width = 506;
},
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -240, -23}";
}
);
layerId = m005;
width = 406;
}
);
note = uni00EF;
unicode = 00EF;
},
{
glyphname = ntilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 81, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1147;
},
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 177, 12}";
}
);
layerId = m003;
width = 1121;
},
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 97, 4}";
}
);
layerId = m002;
width = 1130;
},
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 97, 4}";
}
);
layerId = m004;
width = 1130;
},
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 177, 12}";
}
);
layerId = m005;
width = 1121;
}
);
leftKerningGroup = m;
note = uni00F1;
rightKerningGroup = h;
unicode = 00F1;
},
{
glyphname = ograve;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 155, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1158;
},
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, -2}";
}
);
layerId = m003;
width = 1127;
},
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = m002;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = m004;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 207, -2}";
}
);
layerId = m005;
width = 1127;
}
);
leftKerningGroup = o;
note = uni00F2;
unicode = 00F2;
},
{
glyphname = oacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 336, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1158;
},
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 401, -2}";
}
);
layerId = m003;
width = 1127;
},
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 350, 0}";
}
);
layerId = m002;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 350, 0}";
}
);
layerId = m004;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 401, -2}";
}
);
layerId = m005;
width = 1127;
}
);
leftKerningGroup = o;
note = uni00F3;
unicode = 00F3;
},
{
glyphname = ocircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 73, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1158;
},
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 165, -2}";
}
);
layerId = m003;
width = 1127;
},
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = m002;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = m004;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 165, -2}";
}
);
layerId = m005;
width = 1127;
}
);
leftKerningGroup = o;
note = uni00F4;
unicode = 00F4;
},
{
glyphname = otilde;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 82, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1158;
},
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 166, 12}";
}
);
layerId = m003;
width = 1127;
},
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 100, 4}";
}
);
layerId = m002;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 100, 4}";
}
);
layerId = m004;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 166, 12}";
}
);
layerId = m005;
width = 1127;
}
);
leftKerningGroup = o;
note = uni00F5;
unicode = 00F5;
},
{
glyphname = odieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1158;
},
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 117, -2}";
}
);
layerId = m003;
width = 1127;
},
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 152, 0}";
}
);
layerId = m002;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 152, 0}";
}
);
layerId = m004;
width = 1168;
},
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 117, -2}";
}
);
layerId = m005;
width = 1127;
}
);
leftKerningGroup = o;
note = uni00F6;
unicode = 00F6;
},
{
glyphname = ugrave;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 151, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1146;
},
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 220, 0}";
}
);
layerId = m003;
width = 1121;
},
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 199, 0}";
}
);
layerId = m002;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 199, 0}";
}
);
layerId = m004;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 220, 0}";
}
);
layerId = m005;
width = 1121;
}
);
leftKerningGroup = u;
note = uni00F9;
unicode = 00F9;
},
{
glyphname = uacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 332, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1146;
},
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = m003;
width = 1121;
},
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 342, 0}";
}
);
layerId = m002;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 342, 0}";
}
);
layerId = m004;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = m005;
width = 1121;
}
);
leftKerningGroup = u;
note = uni00FA;
unicode = 00FA;
},
{
glyphname = ucircumflex;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 69, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1146;
},
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 178, 0}";
}
);
layerId = m003;
width = 1121;
},
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 96, 0}";
}
);
layerId = m002;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 96, 0}";
}
);
layerId = m004;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 178, 0}";
}
);
layerId = m005;
width = 1121;
}
);
leftKerningGroup = u;
note = uni00FB;
unicode = 00FB;
},
{
glyphname = udieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 96, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1146;
},
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 130, 0}";
}
);
layerId = m003;
width = 1121;
},
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 144, 0}";
}
);
layerId = m002;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 144, 0}";
}
);
layerId = m004;
width = 1129;
},
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 130, 0}";
}
);
layerId = m005;
width = 1121;
}
);
leftKerningGroup = u;
note = uni00FC;
unicode = 00FC;
},
{
glyphname = yacute;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 280, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1028;
},
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = m003;
width = 978;
},
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 283, 0}";
}
);
layerId = m002;
width = 969;
},
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 283, 0}";
}
);
layerId = m004;
width = 969;
},
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = m005;
width = 978;
}
);
leftKerningGroup = v;
note = uni00FD;
unicode = 00FD;
},
{
glyphname = ydieresis;
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1028;
},
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 69, 0}";
}
);
layerId = m003;
width = 978;
},
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = m002;
width = 969;
},
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = m004;
width = 969;
},
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 69, 0}";
}
);
layerId = m005;
width = 978;
}
);
leftKerningGroup = v;
note = uni00FF;
unicode = 00FF;
},
{
glyphname = f_f_i.liga;
lastChange = "2020-12-16 20:59:54 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"480 0 LINE",
"480 870 LINE",
"836 870 LINE",
"836 0 LINE",
"1126 0 LINE",
"1126 870 LINE",
"1339 870 LINE",
"1339 1082 LINE",
"1126 1082 LINE",
"1126 1176 LINE SMOOTH",
"1126 1255 OFFCURVE",
"1193.333 1305 OFFCURVE",
"1328 1305 CURVE SMOOTH",
"1410.667 1305 OFFCURVE",
"1466.333 1297.667 OFFCURVE",
"1597 1259 CURVE",
"1639 1498 LINE",
"1509 1537.333 OFFCURVE",
"1399.333 1557 OFFCURVE",
"1310 1557 CURVE SMOOTH",
"1010 1557 OFFCURVE",
"836 1395 OFFCURVE",
"836 1192 CURVE SMOOTH",
"836 1082 LINE",
"480 1082 LINE",
"480 1169 LINE SMOOTH",
"480 1271 OFFCURVE",
"534.333 1322 OFFCURVE",
"643 1322 CURVE SMOOTH",
"677.667 1322 OFFCURVE",
"707 1319 OFFCURVE",
"731 1313 CURVE",
"734 1537 LINE {name = \"❌\";}",
"676 1550.333 OFFCURVE",
"627 1557 OFFCURVE",
"587 1557 CURVE SMOOTH",
"336.333 1557 OFFCURVE",
"190 1416.667 OFFCURVE",
"190 1174 CURVE SMOOTH",
"190 1082 LINE",
"29 1082 LINE",
"29 870 LINE",
"190 870 LINE",
"190 0 LINE"
);
},
{
closed = 1;
nodes = (
"1773 0 LINE",
"1773 1082 LINE",
"1483 1082 LINE",
"1483 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 43 44 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
21 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
30 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
41 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
39 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1901;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"308 0 LINE",
"308 1027 LINE",
"830 1027 LINE",
"830 0 LINE",
"884 0 LINE",
"884 1027 LINE",
"1170 1027 LINE",
"1170 1082 LINE",
"884 1082 LINE",
"884 1214 LINE SMOOTH",
"884 1395.333 OFFCURVE",
"987.333 1503 OFFCURVE",
"1154 1503 CURVE SMOOTH",
"1232 1503 OFFCURVE",
"1298.667 1492.667 OFFCURVE",
"1413 1448 CURVE",
"1421 1500 LINE",
"1339 1538 OFFCURVE",
"1249.667 1557 OFFCURVE",
"1153 1557 CURVE SMOOTH",
"950.333 1557 OFFCURVE",
"831.333 1432.667 OFFCURVE",
"830 1218 CURVE SMOOTH",
"830 1082 LINE",
"308 1082 LINE",
"308 1236 LINE SMOOTH",
"308 1406.667 OFFCURVE",
"395.333 1503 OFFCURVE",
"538 1503 CURVE SMOOTH",
"582.667 1503 OFFCURVE",
"622.333 1498 OFFCURVE",
"657 1488 CURVE",
"665 1540 LINE {name = \"❌\";}",
"629 1551.333 OFFCURVE",
"586.333 1557 OFFCURVE",
"537 1557 CURVE SMOOTH",
"359.667 1557 OFFCURVE",
"255.333 1440 OFFCURVE",
"254 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"66 1027 LINE",
"254 1027 LINE",
"254 0 LINE"
);
},
{
closed = 1;
nodes = (
"1460 0 LINE",
"1460 1082 LINE",
"1406 1082 LINE",
"1406 0 LINE"
);
}
);
width = 1643;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 939 LINE",
"816 939 LINE",
"816 0 LINE",
"1001 0 LINE",
"1001 939 LINE",
"1223 939 LINE",
"1223 1082 LINE",
"1001 1082 LINE",
"1001 1176 LINE SMOOTH",
"1001 1320 OFFCURVE",
"1066.333 1390 OFFCURVE",
"1225 1390 CURVE SMOOTH",
"1301 1390 OFFCURVE",
"1380.667 1373.333 OFFCURVE",
"1464 1340 CURVE",
"1495 1496 LINE",
"1381 1536.667 OFFCURVE",
"1286.667 1557 OFFCURVE",
"1212 1557 CURVE SMOOTH",
"960 1557 OFFCURVE",
"816 1415.333 OFFCURVE",
"816 1174 CURVE SMOOTH",
"816 1082 LINE",
"416 1082 LINE",
"416 1196 LINE SMOOTH",
"416 1326.667 OFFCURVE",
"484 1399 OFFCURVE",
"604 1399 CURVE SMOOTH",
"639.333 1399 OFFCURVE",
"672.667 1396 OFFCURVE",
"704 1390 CURVE",
"714 1540 LINE {name = \"❌\";}",
"672 1551.333 OFFCURVE",
"629.667 1557 OFFCURVE",
"587 1557 CURVE SMOOTH",
"360.333 1557 OFFCURVE",
"231 1425 OFFCURVE",
"231 1193 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE"
);
},
{
closed = 1;
nodes = (
"1586 0 LINE",
"1586 1082 LINE",
"1401 1082 LINE",
"1401 0 LINE"
);
}
);
width = 1748;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"225 0 LINE",
"391 939 LINE",
"791 939 LINE",
"625 0 LINE",
"810 0 LINE",
"976 939 LINE",
"1198 939 LINE",
"1223 1082 LINE",
"1001 1082 LINE",
"1018 1176 LINE SMOOTH",
"1043 1320 OFFCURVE",
"1121 1390 OFFCURVE",
"1279 1390 CURVE SMOOTH",
"1355 1390 OFFCURVE",
"1432 1373 OFFCURVE",
"1509 1340 CURVE",
"1568 1496 LINE",
"1461 1537 OFFCURVE",
"1370 1557 OFFCURVE",
"1296 1557 CURVE SMOOTH",
"1044 1557 OFFCURVE",
"875 1415 OFFCURVE",
"832 1174 CURVE SMOOTH",
"816 1082 LINE",
"416 1082 LINE",
"436 1196 LINE SMOOTH",
"459 1327 OFFCURVE",
"540 1399 OFFCURVE",
"660 1399 CURVE SMOOTH",
"695 1399 OFFCURVE",
"728 1396 OFFCURVE",
"758 1390 CURVE",
"795 1540 LINE {name = \"❌\";}",
"755 1551 OFFCURVE",
"713 1557 OFFCURVE",
"671 1557 CURVE SMOOTH",
"444 1557 OFFCURVE",
"291 1425 OFFCURVE",
"251 1193 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"35 939 LINE",
"206 939 LINE",
"40 0 LINE"
);
},
{
closed = 1;
nodes = (
"1395 0 LINE",
"1586 1082 LINE",
"1401 1082 LINE",
"1210 0 LINE"
);
}
);
width = 1748;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"117 0 LINE",
"298 1027 LINE",
"820 1027 LINE",
"639 0 LINE",
"693 0 LINE",
"874 1027 LINE",
"1160 1027 LINE",
"1170 1082 LINE",
"884 1082 LINE",
"907 1214 LINE SMOOTH",
"939 1395 OFFCURVE",
"1062 1503 OFFCURVE",
"1228 1503 CURVE SMOOTH",
"1306 1503 OFFCURVE",
"1371 1493 OFFCURVE",
"1478 1448 CURVE",
"1495 1500 LINE",
"1419 1538 OFFCURVE",
"1333 1557 OFFCURVE",
"1237 1557 CURVE SMOOTH",
"1034 1557 OFFCURVE",
"893 1433 OFFCURVE",
"854 1218 CURVE SMOOTH",
"830 1082 LINE",
"308 1082 LINE",
"335 1236 LINE SMOOTH",
"365 1407 OFFCURVE",
"470 1503 OFFCURVE",
"612 1503 CURVE SMOOTH",
"657 1503 OFFCURVE",
"696 1498 OFFCURVE",
"729 1488 CURVE",
"746 1540 LINE {name = \"❌\";}",
"712 1551 OFFCURVE",
"670 1557 OFFCURVE",
"621 1557 CURVE SMOOTH",
"443 1557 OFFCURVE",
"318 1440 OFFCURVE",
"282 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"56 1027 LINE",
"244 1027 LINE",
"63 0 LINE"
);
},
{
closed = 1;
nodes = (
"1269 0 LINE",
"1460 1082 LINE",
"1406 1082 LINE",
"1215 0 LINE"
);
}
);
width = 1643;
}
);
note = uniFB03;
},
{
glyphname = f_f_l.liga;
lastChange = "2020-12-16 21:00:13 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"480 0 LINE",
"480 870 LINE",
"836 870 LINE",
"836 0 LINE",
"1126 0 LINE",
"1126 870 LINE",
"1341 870 LINE",
"1341 1082 LINE",
"1126 1082 LINE",
"1126 1155 LINE SMOOTH",
"1126 1266.333 OFFCURVE",
"1191.333 1322 OFFCURVE",
"1322 1322 CURVE SMOOTH",
"1372 1322 OFFCURVE",
"1425.667 1318.667 OFFCURVE",
"1483 1312 CURVE",
"1483 0 LINE",
"1773 0 LINE",
"1773 1525 LINE",
"1542.333 1546.333 OFFCURVE",
"1379 1557 OFFCURVE",
"1283 1557 CURVE SMOOTH",
"1001.667 1557 OFFCURVE",
"837.333 1417.667 OFFCURVE",
"836 1163 CURVE SMOOTH",
"836 1082 LINE",
"480 1082 LINE",
"480 1169 LINE SMOOTH",
"480 1271 OFFCURVE",
"534.333 1322 OFFCURVE",
"643 1322 CURVE SMOOTH",
"677.667 1322 OFFCURVE",
"707 1319 OFFCURVE",
"731 1313 CURVE",
"734 1537 LINE {name = \"❌\";}",
"676 1550.333 OFFCURVE",
"627 1557 OFFCURVE",
"587 1557 CURVE SMOOTH",
"336.333 1557 OFFCURVE",
"190 1416.667 OFFCURVE",
"190 1174 CURVE SMOOTH",
"190 1082 LINE",
"29 1082 LINE",
"29 870 LINE",
"190 870 LINE",
"190 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
19 40 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
31 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
35 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1901;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"308 0 LINE",
"308 1027 LINE",
"830 1027 LINE",
"830 0 LINE",
"884 0 LINE",
"884 1027 LINE",
"1170 1027 LINE",
"1170 1082 LINE",
"884 1082 LINE",
"884 1236 LINE SMOOTH",
"884 1406.667 OFFCURVE",
"971.333 1503 OFFCURVE",
"1114 1503 CURVE SMOOTH",
"1182 1503 OFFCURVE",
"1279.333 1488.667 OFFCURVE",
"1406 1460 CURVE {name = \"❌\";}",
"1406 0 LINE",
"1460 0 LINE",
"1460 1496 LINE",
"1310.667 1536.667 OFFCURVE",
"1195 1557 OFFCURVE",
"1113 1557 CURVE SMOOTH",
"935.667 1557 OFFCURVE",
"831.333 1440 OFFCURVE",
"830 1240 CURVE SMOOTH",
"830 1082 LINE",
"308 1082 LINE",
"308 1236 LINE SMOOTH",
"308 1406.667 OFFCURVE",
"395.333 1503 OFFCURVE",
"538 1503 CURVE SMOOTH",
"582.667 1503 OFFCURVE",
"622.333 1498 OFFCURVE",
"657 1488 CURVE",
"665 1540 LINE {name = \"❌\";}",
"629 1551.333 OFFCURVE",
"586.333 1557 OFFCURVE",
"537 1557 CURVE SMOOTH",
"359.667 1557 OFFCURVE",
"255.333 1440 OFFCURVE",
"254 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"66 1027 LINE",
"254 1027 LINE",
"254 0 LINE"
);
}
);
width = 1643;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 939 LINE",
"816 939 LINE",
"816 0 LINE",
"1001 0 LINE",
"1001 939 LINE",
"1232 939 LINE",
"1232 1082 LINE",
"1001 1082 LINE",
"1001 1189 LINE SMOOTH",
"1001 1329 OFFCURVE",
"1067.667 1399 OFFCURVE",
"1201 1399 CURVE SMOOTH",
"1251.667 1399 OFFCURVE",
"1318.333 1392.333 OFFCURVE",
"1401 1379 CURVE",
"1401 0 LINE",
"1586 0 LINE",
"1586 1496 LINE",
"1386.667 1536.667 OFFCURVE",
"1253.333 1557 OFFCURVE",
"1186 1557 CURVE SMOOTH",
"950 1557 OFFCURVE",
"817.333 1430.667 OFFCURVE",
"816 1200 CURVE SMOOTH",
"816 1082 LINE",
"416 1082 LINE",
"416 1196 LINE SMOOTH",
"416 1326.667 OFFCURVE",
"484 1399 OFFCURVE",
"604 1399 CURVE SMOOTH",
"639.333 1399 OFFCURVE",
"672.667 1396 OFFCURVE",
"704 1390 CURVE",
"714 1540 LINE {name = \"❌\";}",
"672 1551.333 OFFCURVE",
"629.667 1557 OFFCURVE",
"587 1557 CURVE SMOOTH",
"360.333 1557 OFFCURVE",
"231 1425 OFFCURVE",
"231 1193 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE"
);
}
);
width = 1748;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"225 0 LINE",
"391 939 LINE",
"791 939 LINE",
"625 0 LINE",
"810 0 LINE",
"976 939 LINE",
"1207 939 LINE",
"1232 1082 LINE",
"1001 1082 LINE",
"1020 1189 LINE SMOOTH",
"1045 1329 OFFCURVE",
"1124 1399 OFFCURVE",
"1257 1399 CURVE SMOOTH",
"1308 1399 OFFCURVE",
"1373 1392 OFFCURVE",
"1453 1379 CURVE",
"1210 0 LINE",
"1395 0 LINE",
"1659 1496 LINE",
"1467 1537 OFFCURVE",
"1337 1557 OFFCURVE",
"1270 1557 CURVE SMOOTH",
"1034 1557 OFFCURVE",
"879 1431 OFFCURVE",
"837 1200 CURVE SMOOTH",
"816 1082 LINE",
"416 1082 LINE",
"436 1196 LINE SMOOTH",
"459 1327 OFFCURVE",
"540 1399 OFFCURVE",
"660 1399 CURVE SMOOTH",
"695 1399 OFFCURVE",
"728 1396 OFFCURVE",
"758 1390 CURVE",
"795 1540 LINE {name = \"❌\";}",
"755 1551 OFFCURVE",
"713 1557 OFFCURVE",
"671 1557 CURVE SMOOTH",
"444 1557 OFFCURVE",
"291 1425 OFFCURVE",
"251 1193 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"35 939 LINE",
"206 939 LINE",
"40 0 LINE"
);
}
);
width = 1748;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"117 0 LINE",
"298 1027 LINE",
"820 1027 LINE",
"639 0 LINE",
"693 0 LINE",
"874 1027 LINE",
"1160 1027 LINE",
"1170 1082 LINE",
"884 1082 LINE",
"911 1236 LINE SMOOTH",
"941 1407 OFFCURVE",
"1046 1503 OFFCURVE",
"1188 1503 CURVE SMOOTH",
"1256 1503 OFFCURVE",
"1351 1489 OFFCURVE",
"1473 1460 CURVE {name = \"❌\";}",
"1215 0 LINE",
"1269 0 LINE",
"1533 1496 LINE",
"1391 1537 OFFCURVE",
"1279 1557 OFFCURVE",
"1197 1557 CURVE SMOOTH",
"1019 1557 OFFCURVE",
"894 1440 OFFCURVE",
"858 1240 CURVE SMOOTH",
"830 1082 LINE",
"308 1082 LINE",
"335 1236 LINE SMOOTH",
"365 1407 OFFCURVE",
"470 1503 OFFCURVE",
"612 1503 CURVE SMOOTH",
"657 1503 OFFCURVE",
"696 1498 OFFCURVE",
"729 1488 CURVE",
"746 1540 LINE {name = \"❌\";}",
"712 1551 OFFCURVE",
"670 1557 OFFCURVE",
"621 1557 CURVE SMOOTH",
"443 1557 OFFCURVE",
"318 1440 OFFCURVE",
"282 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"56 1027 LINE",
"244 1027 LINE",
"63 0 LINE"
);
}
);
width = 1643;
}
);
note = uniFB04;
},
{
glyphname = fi.liga;
lastChange = "2020-12-16 20:59:25 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"471 0 LINE",
"471 870 LINE",
"684 870 LINE",
"684 1082 LINE",
"471 1082 LINE",
"471 1126 LINE SMOOTH",
"471 1245.333 OFFCURVE",
"538.333 1305 OFFCURVE",
"673 1305 CURVE SMOOTH",
"755.667 1305 OFFCURVE",
"810.333 1297.667 OFFCURVE",
"941 1259 CURVE",
"983 1498 LINE",
"854.333 1537.333 OFFCURVE",
"745 1557 OFFCURVE",
"655 1557 CURVE SMOOTH",
"355 1557 OFFCURVE",
"183.667 1404 OFFCURVE",
"181 1132 CURVE SMOOTH",
"181 1082 LINE",
"20 1082 LINE",
"20 870 LINE",
"181 870 LINE",
"181 0 LINE"
);
},
{
closed = 1;
nodes = (
"1118 0 LINE",
"1118 1082 LINE",
"828 1082 LINE",
"828 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 26 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
24 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1246;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"308 0 LINE",
"308 1027 LINE",
"594 1027 LINE",
"594 1082 LINE",
"308 1082 LINE",
"308 1214 LINE SMOOTH",
"308 1395.333 OFFCURVE",
"411.333 1503 OFFCURVE",
"578 1503 CURVE SMOOTH",
"656 1503 OFFCURVE",
"722.667 1492.667 OFFCURVE",
"837 1448 CURVE",
"845 1500 LINE",
"763 1538 OFFCURVE",
"673.667 1557 OFFCURVE",
"577 1557 CURVE SMOOTH",
"374.333 1557 OFFCURVE",
"255.333 1432.667 OFFCURVE",
"254 1218 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"66 1027 LINE",
"254 1027 LINE",
"254 0 LINE"
);
},
{
closed = 1;
nodes = (
"884 0 LINE",
"884 1082 LINE",
"830 1082 LINE",
"830 0 LINE"
);
}
);
width = 1067;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"388 0 LINE",
"388 939 LINE",
"609 939 LINE",
"609 1082 LINE",
"388 1082 LINE",
"388 1176 LINE SMOOTH",
"388 1318.667 OFFCURVE",
"453.333 1390 OFFCURVE",
"612 1390 CURVE SMOOTH",
"687.333 1390 OFFCURVE",
"766.667 1373.333 OFFCURVE",
"850 1340 CURVE",
"881 1496 LINE",
"767 1536.667 OFFCURVE",
"672.667 1557 OFFCURVE",
"598 1557 CURVE SMOOTH",
"346 1557 OFFCURVE",
"202 1415.333 OFFCURVE",
"202 1174 CURVE SMOOTH",
"202 1082 LINE",
"31 1082 LINE",
"31 939 LINE",
"202 939 LINE",
"202 0 LINE"
);
},
{
closed = 1;
nodes = (
"973 0 LINE",
"973 1082 LINE",
"787 1082 LINE",
"787 0 LINE"
);
}
);
width = 1134;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"197 0 LINE",
"363 939 LINE",
"584 939 LINE",
"609 1082 LINE",
"388 1082 LINE",
"405 1176 LINE SMOOTH",
"430 1319 OFFCURVE",
"508 1390 OFFCURVE",
"666 1390 CURVE SMOOTH",
"742 1390 OFFCURVE",
"818 1373 OFFCURVE",
"895 1340 CURVE",
"954 1496 LINE",
"847 1537 OFFCURVE",
"756 1557 OFFCURVE",
"682 1557 CURVE SMOOTH",
"430 1557 OFFCURVE",
"261 1415 OFFCURVE",
"218 1174 CURVE SMOOTH",
"202 1082 LINE",
"31 1082 LINE",
"6 939 LINE",
"177 939 LINE",
"11 0 LINE"
);
},
{
closed = 1;
nodes = (
"782 0 LINE",
"973 1082 LINE",
"787 1082 LINE",
"596 0 LINE"
);
}
);
width = 1134;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"117 0 LINE",
"298 1027 LINE",
"584 1027 LINE",
"594 1082 LINE",
"308 1082 LINE",
"331 1214 LINE SMOOTH",
"363 1395 OFFCURVE",
"486 1503 OFFCURVE",
"652 1503 CURVE SMOOTH",
"730 1503 OFFCURVE",
"795 1493 OFFCURVE",
"902 1448 CURVE",
"919 1500 LINE",
"843 1538 OFFCURVE",
"757 1557 OFFCURVE",
"661 1557 CURVE SMOOTH",
"458 1557 OFFCURVE",
"317 1433 OFFCURVE",
"278 1218 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"56 1027 LINE",
"244 1027 LINE",
"63 0 LINE"
);
},
{
closed = 1;
nodes = (
"693 0 LINE",
"884 1082 LINE",
"830 1082 LINE",
"639 0 LINE"
);
}
);
width = 1067;
}
);
note = uniFB01;
},
{
glyphname = fl.liga;
lastChange = "2020-12-16 20:59:37 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"480 0 LINE",
"480 870 LINE",
"695 870 LINE",
"695 1082 LINE",
"480 1082 LINE",
"480 1155 LINE SMOOTH",
"480 1266.333 OFFCURVE",
"545.333 1322 OFFCURVE",
"676 1322 CURVE SMOOTH",
"725.333 1322 OFFCURVE",
"778.667 1318.667 OFFCURVE",
"836 1312 CURVE",
"836 0 LINE",
"1126 0 LINE",
"1126 1525 LINE",
"900 1546.333 OFFCURVE",
"736.667 1557 OFFCURVE",
"636 1557 CURVE SMOOTH",
"353.333 1557 OFFCURVE",
"192.667 1416.667 OFFCURVE",
"190 1166 CURVE SMOOTH",
"190 1082 LINE",
"29 1082 LINE",
"29 870 LINE",
"190 870 LINE",
"190 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
18 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
22 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1255;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"308 0 LINE",
"308 1027 LINE",
"594 1027 LINE",
"594 1082 LINE",
"308 1082 LINE",
"308 1236 LINE SMOOTH",
"308 1406.667 OFFCURVE",
"395.333 1503 OFFCURVE",
"538 1503 CURVE SMOOTH",
"606 1503 OFFCURVE",
"703.333 1488.667 OFFCURVE",
"830 1460 CURVE {name = \"❌\";}",
"830 0 LINE",
"884 0 LINE",
"884 1496 LINE",
"734.667 1536.667 OFFCURVE",
"619 1557 OFFCURVE",
"537 1557 CURVE SMOOTH",
"359.667 1557 OFFCURVE",
"255.333 1440 OFFCURVE",
"254 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"66 1027 LINE",
"254 1027 LINE",
"254 0 LINE"
);
}
);
width = 1067;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 939 LINE",
"647 939 LINE",
"647 1082 LINE",
"416 1082 LINE",
"416 1189 LINE SMOOTH",
"416 1329 OFFCURVE",
"482.667 1399 OFFCURVE",
"616 1399 CURVE SMOOTH",
"666.667 1399 OFFCURVE",
"733.333 1392.333 OFFCURVE",
"816 1379 CURVE",
"816 0 LINE",
"1001 0 LINE",
"1001 1496 LINE",
"801.667 1536.667 OFFCURVE",
"668.333 1557 OFFCURVE",
"601 1557 CURVE SMOOTH",
"365 1557 OFFCURVE",
"232.333 1430.667 OFFCURVE",
"231 1200 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"60 939 LINE",
"231 939 LINE",
"231 0 LINE"
);
}
);
width = 1163;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"225 0 LINE",
"391 939 LINE",
"622 939 LINE",
"647 1082 LINE",
"416 1082 LINE",
"435 1189 LINE SMOOTH",
"460 1329 OFFCURVE",
"539 1399 OFFCURVE",
"672 1399 CURVE SMOOTH",
"723 1399 OFFCURVE",
"788 1392 OFFCURVE",
"868 1379 CURVE",
"625 0 LINE",
"810 0 LINE",
"1074 1496 LINE",
"882 1537 OFFCURVE",
"752 1557 OFFCURVE",
"685 1557 CURVE SMOOTH",
"449 1557 OFFCURVE",
"294 1431 OFFCURVE",
"252 1200 CURVE SMOOTH",
"231 1082 LINE",
"60 1082 LINE",
"35 939 LINE",
"206 939 LINE",
"40 0 LINE"
);
}
);
width = 1163;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"117 0 LINE",
"298 1027 LINE",
"584 1027 LINE",
"594 1082 LINE",
"308 1082 LINE",
"335 1236 LINE SMOOTH",
"365 1407 OFFCURVE",
"470 1503 OFFCURVE",
"612 1503 CURVE SMOOTH",
"680 1503 OFFCURVE",
"775 1489 OFFCURVE",
"897 1460 CURVE {name = \"❌\";}",
"639 0 LINE",
"693 0 LINE",
"957 1496 LINE",
"815 1537 OFFCURVE",
"703 1557 OFFCURVE",
"621 1557 CURVE SMOOTH",
"443 1557 OFFCURVE",
"318 1440 OFFCURVE",
"282 1240 CURVE SMOOTH",
"254 1082 LINE",
"66 1082 LINE",
"56 1027 LINE",
"244 1027 LINE",
"63 0 LINE"
);
}
);
width = 1067;
}
);
note = uniFB02;
},
{
glyphname = "ha-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ha.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
components = (
{
name = ha.base;
}
);
layerId = m002;
width = 1247;
},
{
components = (
{
name = ha.base;
}
);
layerId = m003;
width = 1241;
},
{
components = (
{
name = ha.base;
}
);
layerId = m004;
width = 1249;
},
{
components = (
{
name = ha.base;
}
);
layerId = m005;
width = 1241;
}
);
unicode = 1200;
},
{
glyphname = "hu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1031, -309}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1264;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1021, -277}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1247;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1077, -363}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1241;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 973, -277}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1249;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1013, -363}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1241;
}
);
unicode = 1201;
},
{
glyphname = "hi-ethiopic";
lastChange = "2020-12-16 02:01:10 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1108, -395}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1264;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1069, -355}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 997, -334}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1247;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 919, -428}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 840, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1241;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 983, -376}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 917, -354}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1249;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 863, -428}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1241;
}
);
unicode = 1202;
},
{
glyphname = "haa-ethiopic";
lastChange = "2020-12-16 02:00:16 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1264;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 997, -334}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1247;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 840, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1241;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 917, -354}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1249;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1241;
}
);
unicode = 1203;
},
{
glyphname = "hee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 949, -349}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1264;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1016, -339}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1247;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 933, -328}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1241;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 957, -339}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1249;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -328}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1241;
}
);
unicode = 1204;
},
{
glyphname = "he-ethiopic";
lastChange = "2020-12-16 01:56:16 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 384, 824}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.outer = 1;
};
width = 1264;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 389, 824}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.outer = 1;
};
width = 1247;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 377, 824}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.outer = 1;
};
width = 1241;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 535, 824}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.outer = 1;
};
width = 1249;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 522, 824}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.outer = 1;
};
width = 1241;
}
);
unicode = 1205;
},
{
glyphname = "ho-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1143, 79}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring = 1;
};
width = 1264;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1074, 17}";
}
);
layerId = m002;
userData = {
_smart.ho.ring = 1;
};
width = 1247;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1033, -24}";
}
);
layerId = m003;
userData = {
_smart.ho.ring = 1;
};
width = 1241;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1044, 17}";
}
);
layerId = m004;
userData = {
_smart.ho.ring = 1;
};
width = 1249;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1029, -24}";
}
);
layerId = m005;
userData = {
_smart.ho.ring = 1;
};
width = 1241;
}
);
unicode = 1206;
},
{
glyphname = "hoa-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1143, 79}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 195, 721}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1264;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1074, 17}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 192, 823}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1247;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1033, -24}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 194, 756}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1241;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1044, 17}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 338, 823}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1249;
},
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1029, -24}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 327, 756}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1241;
}
);
unicode = 1207;
},
{
glyphname = "la-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = la.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1266;
},
{
components = (
{
name = la.base;
}
);
layerId = m002;
width = 1251;
},
{
components = (
{
name = la.base;
}
);
layerId = m003;
width = 1241;
},
{
components = (
{
name = la.base;
}
);
layerId = m004;
width = 1248;
},
{
components = (
{
name = la.base;
}
);
layerId = m005;
width = 1241;
}
);
unicode = 1208;
},
{
glyphname = "lu-ethiopic";
lastChange = "2020-12-14 21:22:56 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1051, -321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1266;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1063, -300}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1251;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1053, -300}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1241;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1010, -300}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1248;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -300}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1241;
}
);
unicode = 1209;
},
{
glyphname = "li-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1057, 25}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 1266;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 1251;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1050, -77}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 1241;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 1248;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1036, -77}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 1241;
}
);
unicode = 120A;
},
{
glyphname = "laa-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 978, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1266;
},
{
components = (
{
name = la.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -370}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1251;
},
{
components = (
{
name = la.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 979, -378}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1241;
},
{
components = (
{
name = la.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 924, -370}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1248;
},
{
components = (
{
name = la.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 912, -378}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1241;
}
);
unicode = 120B;
},
{
glyphname = "lee-ethiopic";
lastChange = "2020-12-14 22:59:04 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 935, -283}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1266;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -272}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1251;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 851, -218}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1241;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 994, -294}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1248;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 813, -218}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1241;
}
);
unicode = 120C;
},
{
glyphname = "le-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1258, 436}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring.uniq = 1;
};
width = 1266;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1282, 449}";
}
);
layerId = m002;
userData = {
_smart.ho.ring.uniq = 1;
};
width = 1251;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1265, 187}";
}
);
layerId = m003;
userData = {
_smart.ho.ring.uniq = 1;
};
width = 1241;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1350, 449}";
}
);
layerId = m004;
userData = {
_smart.ho.ring.uniq = 1;
};
width = 1248;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1288, 177}";
}
);
layerId = m005;
userData = {
_smart.ho.ring.uniq = 1;
};
width = 1241;
}
);
unicode = 120D;
},
{
glyphname = "lo-ethiopic";
lastChange = "2020-12-16 04:42:37 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1266, -629}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring = 1;
};
width = 1266;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1255, -543}";
}
);
layerId = m002;
userData = {
_smart.ho.ring = 1;
};
width = 1251;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1210, -435}";
}
);
layerId = m003;
userData = {
_smart.ho.ring = 1;
};
width = 1241;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1164, -613}";
}
);
layerId = m004;
userData = {
_smart.ho.ring = 1;
};
width = 1248;
},
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1139, -575}";
}
);
layerId = m005;
userData = {
_smart.ho.ring = 1;
};
width = 1241;
}
);
unicode = 120E;
},
{
glyphname = "lwa-ethiopic";
lastChange = "2020-12-14 22:29:44 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 976, -402}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 1266;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -398}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 1251;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 991, -402}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 1241;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 867, -466}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 1248;
},
{
components = (
{
name = la.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 920, -402}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 1241;
}
);
unicode = 120F;
},
{
glyphname = "hha-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
}
);
layerId = m002;
userData = {
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
}
);
layerId = m003;
userData = {
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
}
);
layerId = m004;
userData = {
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
}
);
layerId = m005;
userData = {
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1210;
},
{
glyphname = "hhu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1721, -305}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1705, -304}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1774, -304}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1650, -304}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1720, -304}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1211;
},
{
glyphname = "hhi-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1701, 25}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1697, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1775, -67}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1696, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1763, -67}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1212;
},
{
glyphname = "hhaa-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1598, -313}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1635, -374}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1710, -366}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1568, -374}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1645, -366}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1213;
},
{
glyphname = "hhee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1557, -289}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1662, -411}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1564, -188}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1589, -411}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1531, -188}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1214;
},
{
glyphname = "hhe-ethiopic";
lastChange = "2020-12-14 19:14:21 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 707, 193}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 747, 263}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 858, 273}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 809, 233}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 911, 253}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1215;
},
{
glyphname = "hho-ethiopic";
lastChange = "2020-12-16 04:01:31 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 283, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -359}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 252, -360}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 215, -362}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 191, -361}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1216;
},
{
glyphname = "hhwa-ethiopic";
lastChange = "2020-12-16 04:18:33 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 944, 1130}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1599, -318}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 934, 1130}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1607, -398}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 935, 1130}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1713, -358}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1132, 1130}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1527, -428}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1134, 1130}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1656, -366}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1956;
}
);
unicode = 1217;
},
{
glyphname = "ma-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ma.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1851;
},
{
components = (
{
name = ma.base;
}
);
layerId = m002;
width = 1918;
},
{
components = (
{
name = ma.base;
}
);
layerId = m003;
width = 1980;
},
{
components = (
{
name = ma.base;
}
);
layerId = m004;
width = 1918;
},
{
components = (
{
name = ma.base;
}
);
layerId = m005;
width = 1980;
}
);
unicode = 1218;
},
{
glyphname = "mu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1643, -307}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1851;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1706, -306}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1778, -306}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1980;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1672, -306}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1724, -306}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1980;
}
);
unicode = 1219;
},
{
glyphname = "mi-ethiopic";
lastChange = "2020-12-16 19:01:54 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1588, -389}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1496, -319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1851;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1642, -376}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1576, -354}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1714, -441}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1650, -348}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1980;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1565, -379}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1505, -354}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1716, -441}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1670, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1980;
}
);
unicode = 121A;
},
{
glyphname = "maa-ethiopic";
lastChange = "2020-12-16 19:02:01 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1496, -319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1851;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1576, -354}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1650, -348}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1980;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1505, -354}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1670, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1980;
}
);
unicode = 121B;
},
{
glyphname = "mee-ethiopic";
lastChange = "2020-12-14 20:07:53 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1515, -349}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1851;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1606, -339}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1584, -328}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1980;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1546, -339}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1526, -338}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1980;
}
);
unicode = 121C;
},
{
glyphname = "me-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 748, -98}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.bottom = 1;
};
width = 1851;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 829, -98}";
}
);
layerId = m002;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 841, -98}";
}
);
layerId = m003;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1980;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 811, -98}";
}
);
layerId = m004;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 823, -98}";
}
);
layerId = m005;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1980;
}
);
unicode = 121D;
},
{
glyphname = "mo-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 755, -350}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
};
width = 1851;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 776, -350}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 796, -350}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
};
width = 1980;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 714, -350}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 734, -350}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
};
width = 1980;
}
);
unicode = 121E;
},
{
glyphname = "mwa-ethiopic";
lastChange = "2020-12-14 21:20:52 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1550, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 1851;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1611, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1623, -368}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 1980;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1520, -408}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 1918;
},
{
components = (
{
name = ma.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1558, -418}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 1980;
}
);
unicode = 121F;
},
{
glyphname = "sza-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = sa.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1880;
},
{
components = (
{
name = sa.base;
}
);
layerId = m002;
width = 1893;
},
{
components = (
{
name = sa.base;
}
);
layerId = m003;
width = 1976;
},
{
components = (
{
name = sa.base;
}
);
layerId = m004;
width = 1895;
},
{
components = (
{
name = sa.base;
}
);
layerId = m005;
width = 1976;
}
);
unicode = 1220;
},
{
glyphname = "szu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1668, -267}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1880;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1695, -266}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1893;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1775, -266}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1976;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1649, -266}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1895;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1728, -266}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1976;
}
);
unicode = 1221;
},
{
glyphname = "szi-ethiopic";
lastChange = "2020-12-16 19:02:59 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1602, -411}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1474, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1880;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1615, -396}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1548, -384}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1893;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1677, -433}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1580, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1976;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1462, -416}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1398, -384}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1895;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1600, -433}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1520, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1976;
}
);
unicode = 1222;
},
{
glyphname = "szaa-ethiopic";
lastChange = "2020-12-16 19:03:06 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1474, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1880;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1548, -384}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1893;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1580, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1976;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1398, -384}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1895;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1520, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1976;
}
);
unicode = 1223;
},
{
glyphname = "szee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1538, -349}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1880;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1643, -339}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1893;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1569, -328}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1976;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1584, -339}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1895;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1511, -328}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1976;
}
);
unicode = 1224;
},
{
glyphname = "sze-ethiopic";
lastChange = "2020-12-14 20:05:37 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 249, -375}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
};
width = 1880;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 314, -375}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
};
width = 1893;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 292, -345}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
};
width = 1976;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 254, -375}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
};
width = 1895;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 231, -345}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
};
width = 1976;
}
);
unicode = 1225;
},
{
glyphname = "szo-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 851, -91}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.bottom = 1;
};
width = 1880;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 876, -91}";
}
);
layerId = m002;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1893;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 886, -91}";
}
);
layerId = m003;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1976;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 861, -91}";
}
);
layerId = m004;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1895;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 870, -91}";
}
);
layerId = m005;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1976;
}
);
unicode = 1226;
},
{
glyphname = "szwa-ethiopic";
lastChange = "2020-12-16 02:06:40 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1491, -398}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 1880;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1506, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 1893;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1626, -368}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 1976;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1395, -438}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 1895;
},
{
components = (
{
name = sa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1501, -438}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 1976;
}
);
unicode = 1227;
},
{
glyphname = "ra-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1101;
},
{
components = (
{
name = ra.base;
}
);
layerId = m002;
width = 1092;
},
{
components = (
{
name = ra.base;
}
);
layerId = m003;
width = 1157;
},
{
components = (
{
name = ra.base;
}
);
layerId = m004;
width = 1166;
},
{
components = (
{
name = ra.base;
}
);
layerId = m005;
width = 1156;
}
);
unicode = 1228;
},
{
glyphname = "ru-ethiopic";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
alignment = -1;
name = _smart.hu;
transform = "{1, 0, 0, 1, 602, -1100}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1002;
},
{
components = (
{
name = ra.base;
},
{
alignment = -1;
name = _smart.hu;
transform = "{1, 0, 0, 1, 686, -1060}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1086;
},
{
components = (
{
name = ra.base;
},
{
alignment = -1;
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, -1100}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1106;
},
{
components = (
{
name = ra.base;
},
{
alignment = -1;
name = _smart.hu;
transform = "{1, 0, 0, 1, 686, -1060}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1086;
},
{
components = (
{
name = ra.base;
},
{
alignment = -1;
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, -1100}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1106;
}
);
unicode = 1229;
},
{
glyphname = "ri-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1114, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ri = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1137, -26}";
}
);
layerId = m002;
userData = {
_smart.ri = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1071, -6}";
}
);
layerId = m003;
userData = {
_smart.ri = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 984, 0}";
}
);
layerId = m004;
userData = {
_smart.ri = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 970, 34}";
}
);
layerId = m005;
userData = {
_smart.ri = 1;
};
width = 1156;
}
);
unicode = 122A;
},
{
glyphname = "raa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1108, 41}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.raa = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1165, 39}";
}
);
layerId = m002;
userData = {
_smart.raa = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1379, 115}";
}
);
layerId = m003;
userData = {
_smart.raa = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1205, 65}";
}
);
layerId = m004;
userData = {
_smart.raa = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1186, 65}";
}
);
layerId = m005;
userData = {
_smart.raa = 1;
};
width = 1156;
}
);
unicode = 122B;
},
{
glyphname = "ree-ethiopic";
lastChange = "2020-12-17 00:37:57 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.hee;
transform = "{0.75364, 0, 0, 0.75364, 1040, 416}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hee;
transform = "{0.68123, 0, 0, 0.68123, 1096, 407}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hee;
transform = "{0.83375, 0, 0, 0.83375, 1008, 348}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hee;
transform = "{0.75364, 0, 0, 0.75364, 1198, 424}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hee;
transform = "{0.81707, 0, 0, 0.81707, 990, 332}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1156;
}
);
leftMetricsKey = l;
rightMetricsKey = x;
unicode = 122C;
},
{
glyphname = "re-ethiopic";
lastChange = "2020-12-16 04:11:25 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 493, 931}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 515, 961}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 929}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 801, 948}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 696, 929}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
};
width = 1060;
}
);
unicode = 122D;
},
{
glyphname = "ro-ethiopic";
lastChange = "2020-12-16 02:52:18 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1062, -240}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1012, -172}";
}
);
layerId = m002;
userData = {
_smart.ho.ring = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 831, -84}";
}
);
layerId = m003;
userData = {
_smart.ho.ring = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1050, -251}";
}
);
layerId = m004;
userData = {
_smart.ho.ring = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 864, -84}";
}
);
layerId = m005;
userData = {
_smart.ho.ring = 1;
};
width = 1060;
}
);
unicode = 122E;
},
{
glyphname = "rwa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1108, 41}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 339, 1029}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.raa = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1165, 39}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 355, 1028}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.raa = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1379, 115}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 357, 1029}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.raa = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1205, 65}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 548, 1029}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.raa = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.raa;
transform = "{1, 0, 0, 1, 1186, 65}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 545, 1029}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.raa = 1;
};
width = 1156;
}
);
unicode = 122F;
},
{
glyphname = "sa-ethiopic";
lastChange = "2020-12-16 20:39:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
}
);
layerId = m002;
userData = {
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
}
);
layerId = m003;
userData = {
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
}
);
layerId = m004;
userData = {
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
}
);
layerId = m005;
userData = {
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1230;
},
{
glyphname = "su-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1072, -295}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1059, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1052, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1007, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1231;
},
{
glyphname = "si-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1072, 15}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1073, -67}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1061, -67}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1232;
},
{
glyphname = "saa-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 976, -315}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -374}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -353}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -374}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 921, -346}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1233;
},
{
glyphname = "see-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 947, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -279}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -248}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 936, -279}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 831, -248}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1234;
},
{
glyphname = "se-ethiopic";
lastChange = "2020-12-15 17:28:45 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 603, 108}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 584, 158}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 570, 108}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 626, 118}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 622, 118}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1235;
},
{
glyphname = "so-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -363}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 264, -373}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -370}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 204, -374}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1236;
},
{
glyphname = "swa-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1237;
},
{
glyphname = "sha-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1238;
},
{
glyphname = "shu-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1072, -295}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1059, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1052, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1007, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -294}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 1239;
},
{
glyphname = "shi-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1072, 15}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1073, -67}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1061, -67}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 123A;
},
{
glyphname = "shaa-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 976, -315}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -374}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -353}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -374}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 921, -346}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 123B;
},
{
glyphname = "shee-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 947, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -279}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -248}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 936, -279}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 831, -248}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 123C;
},
{
glyphname = "she-ethiopic";
lastChange = "2020-12-15 17:29:33 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 603, 108}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 584, 158}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 570, 108}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 626, 118}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 622, 118}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 123D;
},
{
glyphname = "sho-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -370}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -363}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 264, -373}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -370}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 204, -374}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 123E;
},
{
glyphname = "shwa-ethiopic";
lastChange = "2020-12-16 20:42:30 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 657, 1148}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 618, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 849, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 844, 1138}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1241;
}
);
unicode = 123F;
},
{
glyphname = "qa-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1240;
},
{
glyphname = "qu-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1684, -225}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1479, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1390, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1439, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1351, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1241;
},
{
glyphname = "qi-ethiopic";
lastChange = "2020-12-16 02:30:30 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1104, -440}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 943, -384}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 875, -416}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 861, -424}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 801, -416}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1242;
},
{
glyphname = "qaa-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 905, -107}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 750, -127}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 751, -87}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 727, -127}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 735, -87}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1243;
},
{
glyphname = "qee-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 999, -349}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 959, -339}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 824, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 899, -339}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 766, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1244;
},
{
glyphname = "qe-ethiopic";
lastChange = "2020-12-16 01:58:35 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 939, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.he.acute.top = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 825, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.he.acute.top = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 763, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.he.acute.top = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 851, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.he.acute.top = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 789, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.he.acute.top = 1;
};
width = 1529;
}
);
unicode = 1245;
},
{
glyphname = "qo-ethiopic";
lastChange = "2020-12-16 01:58:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1188, 216}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1069, 219}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 944, 257}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1072, 219}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 995, 257}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1529;
}
);
unicode = 1246;
},
{
glyphname = "qoa-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1247;
},
{
glyphname = "qwa-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1248;
},
{
glyphname = "qwi-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 124A;
},
{
glyphname = "qwaa-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 124B;
},
{
glyphname = "qwee-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 124C;
},
{
glyphname = "qwe-ethiopic";
lastChange = "2020-12-16 02:28:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 124D;
},
{
glyphname = "qha-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1250;
},
{
glyphname = "qhu-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1684, -225}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1479, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1390, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1439, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1351, -224}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1251;
},
{
glyphname = "qhi-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1104, -440}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 943, -384}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 875, -416}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 861, -424}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 801, -416}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1252;
},
{
glyphname = "qhaa-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 905, -107}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 750, -127}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 751, -87}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 727, -127}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 735, -87}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1253;
},
{
glyphname = "qhee-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 999, -349}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 959, -339}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 824, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 899, -339}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 766, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1254;
},
{
glyphname = "qhe-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 939, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 825, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 763, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 851, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 789, 146}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 1529;
}
);
unicode = 1255;
},
{
glyphname = "qho-ethiopic";
lastChange = "2020-12-16 02:36:42 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1188, 216}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1069, 219}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 944, 257}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1072, 219}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 995, 257}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1529;
}
);
unicode = 1256;
},
{
glyphname = "qhwa-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 1258;
},
{
glyphname = "qhwi-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 125A;
},
{
glyphname = "qhwaa-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 125B;
},
{
glyphname = "qhwee-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 125C;
},
{
glyphname = "qhwe-ethiopic";
lastChange = "2020-12-16 02:36:43 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 945, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1028, 1351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 832, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 883, 1351}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 734, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 840, 1251}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 1027, 1116}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1112, 1351}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 933, 1126}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 1081, 1251}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1529;
}
);
unicode = 125D;
},
{
glyphname = "ba-ethiopic";
lastChange = "2020-12-16 18:42:05 +0000";
layers = (
{
components = (
{
name = ba.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
components = (
{
name = ba.base;
}
);
layerId = m002;
width = 1251;
},
{
components = (
{
name = ba.base;
}
);
layerId = m003;
width = 1242;
},
{
components = (
{
name = ba.base;
}
);
layerId = m004;
width = 1250;
},
{
components = (
{
name = ba.base;
}
);
layerId = m005;
width = 1241;
}
);
unicode = 1260;
},
{
glyphname = "bu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1072, -295}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1059, -294}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1052, -294}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1007, -294}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -294}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1241;
}
);
unicode = 1261;
},
{
glyphname = "bi-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1072, 15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1073, -67}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1061, -67}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 1241;
}
);
unicode = 1262;
},
{
glyphname = "baa-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 976, -315}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -374}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -353}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -374}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 921, -346}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1241;
}
);
unicode = 1263;
},
{
glyphname = "bee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 947, -299}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -279}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -248}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 936, -279}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 831, -248}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1241;
}
);
unicode = 1264;
},
{
glyphname = "be-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 446, 601}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.left.inner = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 391, 601}";
}
);
layerId = m002;
userData = {
_smart.he.left.inner = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 349, 601}";
}
);
layerId = m003;
userData = {
_smart.he.left.inner = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 497, 601}";
}
);
layerId = m004;
userData = {
_smart.he.left.inner = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 455, 601}";
}
);
layerId = m005;
userData = {
_smart.he.left.inner = 1;
};
width = 1241;
}
);
unicode = 1265;
},
{
glyphname = "bo-ethiopic";
lastChange = "2020-12-16 01:52:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -363}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 264, -373}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -370}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 204, -374}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
};
width = 1241;
}
);
unicode = 1266;
},
{
glyphname = "bwa-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 1241;
}
);
unicode = 1267;
},
{
glyphname = "va-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
};
width = 1241;
}
);
unicode = 1268;
},
{
glyphname = "vu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1072, -295}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1059, -294}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1052, -294}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1007, -294}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -294}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 1241;
}
);
unicode = 1269;
},
{
glyphname = "vi-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1072, 15}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1073, -67}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1061, -67}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 1241;
}
);
unicode = 126A;
},
{
glyphname = "vaa-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 976, -315}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -374}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -353}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -374}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 921, -346}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1241;
}
);
unicode = 126B;
},
{
glyphname = "vee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 947, -299}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -279}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -248}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 936, -279}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 831, -248}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 1241;
}
);
unicode = 126C;
},
{
glyphname = "ve-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 446, 601}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.he.left.inner = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 391, 601}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.he.left.inner = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 349, 601}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.he.left.inner = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 497, 601}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.he.left.inner = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 455, 601}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.he.left.inner = 1;
};
width = 1241;
}
);
unicode = 126D;
},
{
glyphname = "vo-ethiopic";
lastChange = "2020-12-16 01:52:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -370}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.ho = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -363}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.ho = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 264, -373}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.ho = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -370}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.ho = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 204, -374}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.ho = 1;
};
width = 1241;
}
);
unicode = 126E;
},
{
glyphname = "vwa-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 632, 1370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 629, 1370}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 649, 1270}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 871, 1370}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 991, 1270}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1241;
}
);
unicode = 126F;
},
{
glyphname = "ta-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
}
);
layerId = m002;
userData = {
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
}
);
layerId = m003;
userData = {
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
}
);
layerId = m004;
userData = {
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
}
);
layerId = m005;
userData = {
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1270;
},
{
glyphname = "tu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 463, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 458, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 378, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 404, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 325, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1271;
},
{
glyphname = "ti-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 488, 15}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 465, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 384, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 464, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 370, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1272;
},
{
glyphname = "taa-ethiopic";
lastChange = "2020-12-16 04:14:03 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 319, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 332, -7}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 323, -6}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 331, -7}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 323, -8}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1273;
},
{
glyphname = "tee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 388, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 471, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 367, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 417, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 309, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1274;
},
{
glyphname = "te-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 343, 81}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 336, 81}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 256, 81}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 349, 81}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 270, 81}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
};
width = 735;
}
);
unicode = 1275;
},
{
glyphname = "to-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 627, 230}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 613, 163}";
}
);
layerId = m002;
userData = {
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 534, 192}";
}
);
layerId = m003;
userData = {
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 547, 163}";
}
);
layerId = m004;
userData = {
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 568, 192}";
}
);
layerId = m005;
userData = {
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1276;
},
{
glyphname = "twa-ethiopic";
lastChange = "2020-12-16 02:11:47 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 393, -356}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 362, -378}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 325, -348}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 275, -428}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 268, -348}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1277;
},
{
glyphname = "ca-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1278;
},
{
glyphname = "cu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 463, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 458, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 378, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 404, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 325, -298}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 1279;
},
{
glyphname = "ci-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 488, 15}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 465, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 384, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 464, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 370, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 127A;
},
{
glyphname = "caa-ethiopic";
lastChange = "2020-12-16 04:14:05 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 319, -7}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 332, -7}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 323, -6}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 331, -7}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 323, -8}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.he.acute.top = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 127B;
},
{
glyphname = "cee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 388, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 471, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 367, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 417, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 309, -328}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 127C;
},
{
glyphname = "ce-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 343, 81}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 336, 81}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 256, 81}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 349, 81}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 270, 81}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.he.acute.top = 1;
};
width = 735;
}
);
unicode = 127D;
},
{
glyphname = "co-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 627, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 613, 163}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 534, 192}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 547, 163}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 568, 192}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 127E;
},
{
glyphname = "cwa-ethiopic";
lastChange = "2020-12-16 02:12:15 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 393, -356}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 360, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 339, 1327}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 362, -378}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 353, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 338, 1327}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 325, -348}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 294, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 342, 1227}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 275, -428}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 547, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 571, 1327}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 268, -348}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 489, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1227}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 735;
}
);
unicode = 127F;
},
{
glyphname = "xa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 814;
}
);
unicode = 1280;
},
{
glyphname = "xu-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 786, -330}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 655, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 728, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 618, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 814;
}
);
unicode = 1281;
},
{
glyphname = "xi-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 808, 5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 710, -5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 658, -77}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 780, -5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 665, -77}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 814;
}
);
unicode = 1282;
},
{
glyphname = "xaa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 625, -37}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 583, -28}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 592, -57}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 653, -41}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 605, -42}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 814;
}
);
unicode = 1283;
},
{
glyphname = "xee-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 693, -296}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 721, -299}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 597, -288}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 738, -299}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 567, -288}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 814;
}
);
unicode = 1284;
},
{
glyphname = "xe-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
},
{
name = _smart.nose.extend;
transform = "{1, 0, 0, 1, 76, -30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
},
{
name = _smart.nose.extend;
transform = "{1, 0, 0, 1, -46, 76}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
},
{
name = _smart.nose.extend;
transform = "{1, 0, 0, 1, 38, 23}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
},
{
name = _smart.nose.extend;
transform = "{1, 0, 0, 1, -3, 45}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
},
{
name = _smart.nose.extend;
transform = "{1, 0, 0, 1, 9, 32}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
};
width = 814;
}
);
leftMetricsKey = "xa-ethiopic";
rightMetricsKey = "xa-ethiopic";
unicode = 1285;
},
{
glyphname = "xo-ethiopic";
lastChange = "2020-12-16 02:52:20 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 809, -332}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1062, -240}";
},
{
alignment = -1;
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 273, 1278}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1040;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 895, -390}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1012, -172}";
},
{
alignment = -1;
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 240, 1227}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1097;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 896, -365}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 831, -84}";
},
{
alignment = -1;
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 152, 1344}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 969;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -381}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1050, -251}";
},
{
alignment = -1;
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 460, 1287}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 1097;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 858, -365}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 864, -84}";
},
{
alignment = -1;
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 442, 1283}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.he.left.outer = 1;
_smart.ho.ring = 1;
};
width = 969;
}
);
unicode = 1286;
},
{
glyphname = "xoa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 1287;
},
{
glyphname = "xwa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 1288;
},
{
glyphname = "xwi-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 128A;
},
{
glyphname = "xwaa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 128B;
},
{
glyphname = "xwee-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 128C;
},
{
glyphname = "xwe-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -271, 1134}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -247, 1214}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -227, 1134}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 24, 1204}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -6, 1134}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
_smart.nose = 1;
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 128D;
},
{
glyphname = "na-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
}
);
layerId = m002;
userData = {
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
}
);
layerId = m003;
userData = {
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
}
);
layerId = m004;
userData = {
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
}
);
layerId = m005;
userData = {
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 1290;
},
{
glyphname = "nu-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 786, -330}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 655, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 728, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 618, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 1291;
},
{
glyphname = "ni-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 808, 5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 710, -5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 658, -77}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 780, -5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 665, -77}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 1292;
},
{
glyphname = "naa-ethiopic";
lastChange = "2020-12-16 04:11:35 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 809, -332}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 493, 931}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 895, -390}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 515, 961}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 896, -365}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 929}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -381}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 801, 948}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 858, -365}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 696, 929}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
};
width = 1060;
}
);
unicode = 1293;
},
{
glyphname = "nee-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 693, -296}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 721, -299}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 597, -288}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 738, -299}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 567, -288}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 1294;
},
{
glyphname = "ne-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 618, 580}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.left.outer = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 546, 633}";
}
);
layerId = m002;
userData = {
_smart.he.left.outer = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 556, 742}";
}
);
layerId = m003;
userData = {
_smart.he.left.outer = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 711, 610}";
}
);
layerId = m004;
userData = {
_smart.he.left.outer = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 701, 671}";
}
);
layerId = m005;
userData = {
_smart.he.left.outer = 1;
};
width = 814;
}
);
leftMetricsKey = "na-ethiopic";
rightMetricsKey = "na-ethiopic";
unicode = 1295;
},
{
glyphname = "no-ethiopic";
lastChange = "2020-12-16 02:52:17 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1062, -240}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 809, -332}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1012, -172}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 895, -390}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 831, -84}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 896, -365}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1050, -251}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -381}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 864, -84}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 858, -365}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1060;
}
);
unicode = 1296;
},
{
glyphname = "nwa-ethiopic";
lastChange = "2020-12-16 02:52:18 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1062, -240}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 809, -412}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1012, -172}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 861, -404}";
}
);
layerId = m002;
userData = {
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 831, -84}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 903, -445}";
}
);
layerId = m003;
userData = {
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1050, -251}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 867, -458}";
}
);
layerId = m004;
userData = {
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 864, -84}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 861, -378}";
}
);
layerId = m005;
userData = {
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1060;
}
);
unicode = 1297;
},
{
glyphname = "nya-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 157, 1234}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 217, 1304}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 256, 1164}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 517, 1304}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 483, 1164}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 1298;
},
{
glyphname = "nyu-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 786, -330}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 157, 1234}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 217, 1304}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 655, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 256, 1164}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 728, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 517, 1304}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 618, -329}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 483, 1164}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 1299;
},
{
glyphname = "nyi-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 808, 5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 157, 1234}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 710, -5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 217, 1304}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 658, -77}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 256, 1164}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 780, -5}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 517, 1304}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 665, -77}";
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 483, 1164}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 129A;
},
{
glyphname = "nyaa-ethiopic";
lastChange = "2020-12-16 04:11:35 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 809, -332}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1266}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 493, 931}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hat.left = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 895, -390}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 607, 1266}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 515, 961}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hat.left = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 896, -365}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 612, 1166}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 929}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hat.left = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -381}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 828, 1263}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 801, 948}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hat.left = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 858, -365}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 845, 1166}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 696, 929}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hat.left = 1;
};
width = 1060;
}
);
unicode = 129B;
},
{
glyphname = "nyee-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 105, 901}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 157, 1234}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 693, -296}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 111, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 217, 1304}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 721, -299}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 85, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 256, 1164}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 597, -288}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 363, 1032}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 517, 1304}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 738, -299}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck.left;
transform = "{1, 0, 0, 1, 294, 1065}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 483, 1164}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 567, -288}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.neck.left = 1;
};
width = 814;
}
);
unicode = 129C;
},
{
glyphname = "nye-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 618, 580}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.he.left.outer = 1;
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 546, 633}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.he.left.outer = 1;
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 556, 742}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.he.left.outer = 1;
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 711, 610}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.he.left.outer = 1;
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 701, 671}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.he.left.outer = 1;
_smart.neck = 1;
};
width = 814;
}
);
leftMetricsKey = "na-ethiopic";
rightMetricsKey = "na-ethiopic";
unicode = 129D;
},
{
glyphname = "nyo-ethiopic";
lastChange = "2020-12-16 02:52:20 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1062, -240}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 809, -332}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1266}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1012, -172}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 895, -390}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 607, 1266}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 831, -84}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 896, -365}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 612, 1166}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1050, -251}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -381}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 828, 1263}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 864, -84}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 858, -365}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 845, 1166}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1060;
}
);
unicode = 129E;
},
{
glyphname = "nywa-ethiopic";
lastChange = "2020-12-16 02:52:20 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1062, -240}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 809, -412}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 558, 1266}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1013;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1012, -172}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 861, -404}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 607, 1266}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1062;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 831, -84}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 903, -445}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 612, 1166}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1081;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1050, -251}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 867, -458}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 828, 1263}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1077;
},
{
components = (
{
name = na.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 864, -84}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 861, -378}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 845, 1166}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 1060;
}
);
unicode = 129F;
},
{
glyphname = "aGlottal-ethiopic";
lastChange = "2020-12-14 23:24:06 +0000";
layers = (
{
components = (
{
name = abesha.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1266;
},
{
components = (
{
name = abesha.base;
}
);
layerId = m002;
width = 1251;
},
{
components = (
{
name = abesha.base;
}
);
layerId = m003;
width = 1241;
},
{
components = (
{
name = abesha.base;
}
);
layerId = m004;
width = 1248;
},
{
components = (
{
name = abesha.base;
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12A0;
},
{
glyphname = "uGlottal-ethiopic";
lastChange = "2020-12-14 23:24:38 +0000";
layers = (
{
components = (
{
name = abesha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1051, -321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1266;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1063, -300}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1251;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1053, -300}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1241;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1010, -300}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1248;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -300}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1241;
}
);
unicode = 12A1;
},
{
glyphname = "iGlottal-ethiopic";
lastChange = "2020-12-14 23:24:44 +0000";
layers = (
{
components = (
{
name = abesha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1057, 25}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 1266;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 1251;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1050, -77}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 1241;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 1248;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1036, -77}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 1241;
}
);
unicode = 12A2;
},
{
glyphname = "aaGlottal-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = abesha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 978, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1266;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -370}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1251;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 979, -378}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1241;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 924, -370}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1248;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 912, -378}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1241;
}
);
unicode = 12A3;
},
{
glyphname = "eeGlottal-ethiopic";
lastChange = "2020-12-14 23:24:57 +0000";
layers = (
{
components = (
{
name = abesha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 935, -283}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1266;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -272}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1251;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 851, -218}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1241;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 994, -294}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1248;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 813, -218}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1241;
}
);
unicode = 12A4;
},
{
glyphname = "eGlottal-ethiopic";
lastChange = "2020-12-16 19:16:00 +0000";
layers = (
{
components = (
{
name = abesha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, -348, 1799}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.left.inner = 1;
};
width = 1266;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, -245, 1730}";
}
);
layerId = m002;
userData = {
_smart.he.left.inner = 1;
};
width = 1251;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, -18, 1762}";
}
);
layerId = m003;
userData = {
_smart.he.left.inner = 1;
};
width = 1241;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 105, 1807}";
}
);
layerId = m004;
userData = {
_smart.he.left.inner = 1;
};
width = 1248;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 209, 1764}";
}
);
layerId = m005;
userData = {
_smart.he.left.inner = 1;
};
width = 1241;
}
);
unicode = 12A5;
},
{
glyphname = "oGlottal-ethiopic";
lastChange = "2020-12-14 23:25:28 +0000";
layers = (
{
components = (
{
name = abesha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 269, -371}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
};
width = 1266;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 293, -371}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
};
width = 1251;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 264, -371}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
};
width = 1241;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 212, -371}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
};
width = 1248;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 198, -371}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
};
width = 1241;
}
);
unicode = 12A6;
},
{
glyphname = "waGlottal-ethiopic";
lastChange = "2020-12-17 01:12:21 +0000";
layers = (
{
components = (
{
name = abesha.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 96, 1668}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
};
width = 1266;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 133, 1558}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
};
width = 1251;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 182, 1578}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
};
width = 1241;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 372, 1648}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
};
width = 1248;
},
{
components = (
{
name = abesha.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 371, 1568}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
};
width = 1241;
}
);
unicode = 12A7;
},
{
glyphname = "ka-ethiopic";
lastChange = "2020-12-16 19:59:43 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
}
);
layerId = m002;
userData = {
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
}
);
layerId = m003;
userData = {
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
}
);
layerId = m004;
userData = {
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
}
);
layerId = m005;
userData = {
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12A8;
},
{
glyphname = "ku-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1072, -295}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1059, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1052, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1007, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12A9;
},
{
glyphname = "ki-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1072, 15}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1073, -67}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1061, -67}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12AA;
},
{
glyphname = "kaa-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 976, -315}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -374}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -353}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -374}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 921, -346}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12AB;
},
{
glyphname = "kee-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 947, -299}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -279}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -248}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 936, -279}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 831, -248}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12AC;
},
{
glyphname = "ke-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 446, 601}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 391, 601}";
}
);
layerId = m002;
userData = {
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 349, 601}";
}
);
layerId = m003;
userData = {
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 497, 601}";
}
);
layerId = m004;
userData = {
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 455, 601}";
}
);
layerId = m005;
userData = {
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12AD;
},
{
glyphname = "ko-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -370}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -363}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 264, -373}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -370}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 204, -374}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12AE;
},
{
glyphname = "koa-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12AF;
},
{
glyphname = "kwa-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{249, 743}";
},
{
name = haa;
position = "{915, 0}";
},
{
name = hat;
position = "{582.635, 1382}";
},
{
name = hat.left;
position = "{267, 1312}";
},
{
name = he.acute.top;
position = "{543, 1174}";
},
{
name = he.left.inner;
position = "{325.829, 560}";
},
{
name = he.left.outer;
position = "{135.001, 634}";
},
{
name = hee;
position = "{888, 50}";
},
{
name = hi;
position = "{1006, 130}";
},
{
name = ho;
position = "{218, -20}";
},
{
name = hu;
position = "{1009.969, 673}";
},
{
name = hwa;
position = "{924, -40}";
},
{
name = ka;
position = "{553.199, 1040}";
},
{
name = neck;
position = "{597.861, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
anchors = (
{
name = aGl;
position = "{250, 765}";
},
{
name = haa;
position = "{929, -30}";
},
{
name = hat;
position = "{574, 1382}";
},
{
name = hat.left;
position = "{234, 1322}";
},
{
name = he.acute.top;
position = "{554, 1154}";
},
{
name = he.left.inner;
position = "{321, 560}";
},
{
name = he.left.outer;
position = "{133, 634}";
},
{
name = hee;
position = "{846, 60}";
},
{
name = hi;
position = "{991, 110}";
},
{
name = ho;
position = "{222, 10}";
},
{
name = hu;
position = "{995, 673}";
},
{
name = hwa;
position = "{901, -39}";
},
{
name = ka;
position = "{545, 1040}";
},
{
name = neck;
position = "{589, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
anchors = (
{
name = aGl;
position = "{259, 721}";
},
{
name = haa;
position = "{928, 2}";
},
{
name = hat;
position = "{569.936, 1382}";
},
{
name = hat.left;
position = "{232, 1232}";
},
{
name = he.acute.top;
position = "{510, 1154}";
},
{
name = he.left.inner;
position = "{289, 560}";
},
{
name = he.left.outer;
position = "{132.058, 634}";
},
{
name = hee;
position = "{820, 80}";
},
{
name = hi;
position = "{1014, 60}";
},
{
name = ho;
position = "{200, 10}";
},
{
name = hu;
position = "{987.956, 673}";
},
{
name = hwa;
position = "{925, 0}";
},
{
name = ka;
position = "{541.142, 1040}";
},
{
name = neck;
position = "{584.83, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
anchors = (
{
name = aGl;
position = "{194, 765}";
},
{
name = haa;
position = "{733, -30}";
},
{
name = hat;
position = "{627, 1382}";
},
{
name = hat.left;
position = "{276, 1322}";
},
{
name = he.acute.top;
position = "{567, 1154}";
},
{
name = he.left.inner;
position = "{229, 560}";
},
{
name = he.left.outer;
position = "{54, 634}";
},
{
name = hee;
position = "{666, 60}";
},
{
name = hi;
position = "{820, 110}";
},
{
name = ho;
position = "{33, 10}";
},
{
name = hu;
position = "{923, 673}";
},
{
name = hwa;
position = "{703, -39}";
},
{
name = ka;
position = "{538, 1040}";
},
{
name = neck;
position = "{595, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
anchors = (
{
name = aGl;
position = "{195, 721}";
},
{
name = haa;
position = "{738, 2}";
},
{
name = hat;
position = "{623, 1382}";
},
{
name = hat.left;
position = "{258, 1232}";
},
{
name = he.acute.top;
position = "{523, 1154}";
},
{
name = he.left.inner;
position = "{197, 560}";
},
{
name = he.left.outer;
position = "{53, 634}";
},
{
name = hee;
position = "{643, 80}";
},
{
name = hi;
position = "{834, 60}";
},
{
name = ho;
position = "{11, 10}";
},
{
name = hu;
position = "{916, 673}";
},
{
name = hwa;
position = "{734, 0}";
},
{
name = ka;
position = "{534, 1040}";
},
{
name = neck;
position = "{590, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12B0;
},
{
glyphname = "kwi-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12B2;
},
{
glyphname = "kwaa-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12B3;
},
{
glyphname = "kwee-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12B4;
},
{
glyphname = "kwe-ethiopic";
lastChange = "2020-12-16 19:59:46 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{249, 743}";
},
{
name = haa;
position = "{915, 0}";
},
{
name = hat;
position = "{582.635, 1382}";
},
{
name = hat.left;
position = "{267, 1312}";
},
{
name = he.acute.top;
position = "{543, 1174}";
},
{
name = he.left.inner;
position = "{325.829, 560}";
},
{
name = he.left.outer;
position = "{135.001, 634}";
},
{
name = hee;
position = "{888, 50}";
},
{
name = hi;
position = "{1006, 130}";
},
{
name = ho;
position = "{218, -20}";
},
{
name = hu;
position = "{1009.969, 673}";
},
{
name = hwa;
position = "{924, -40}";
},
{
name = ka;
position = "{553.199, 1040}";
},
{
name = neck;
position = "{597.861, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
anchors = (
{
name = aGl;
position = "{250, 765}";
},
{
name = haa;
position = "{929, -30}";
},
{
name = hat;
position = "{574, 1382}";
},
{
name = hat.left;
position = "{234, 1322}";
},
{
name = he.acute.top;
position = "{554, 1154}";
},
{
name = he.left.inner;
position = "{321, 560}";
},
{
name = he.left.outer;
position = "{133, 634}";
},
{
name = hee;
position = "{846, 60}";
},
{
name = hi;
position = "{991, 110}";
},
{
name = ho;
position = "{222, 10}";
},
{
name = hu;
position = "{995, 673}";
},
{
name = hwa;
position = "{901, -39}";
},
{
name = ka;
position = "{545, 1040}";
},
{
name = neck;
position = "{589, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
anchors = (
{
name = aGl;
position = "{259, 721}";
},
{
name = haa;
position = "{928, 2}";
},
{
name = hat;
position = "{569.936, 1382}";
},
{
name = hat.left;
position = "{232, 1232}";
},
{
name = he.acute.top;
position = "{510, 1154}";
},
{
name = he.left.inner;
position = "{289, 560}";
},
{
name = he.left.outer;
position = "{132.058, 634}";
},
{
name = hee;
position = "{820, 80}";
},
{
name = hi;
position = "{1014, 60}";
},
{
name = ho;
position = "{200, 10}";
},
{
name = hu;
position = "{987.956, 673}";
},
{
name = hwa;
position = "{925, 0}";
},
{
name = ka;
position = "{541.142, 1040}";
},
{
name = neck;
position = "{584.83, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
anchors = (
{
name = aGl;
position = "{194, 765}";
},
{
name = haa;
position = "{733, -30}";
},
{
name = hat;
position = "{627, 1382}";
},
{
name = hat.left;
position = "{276, 1322}";
},
{
name = he.acute.top;
position = "{567, 1154}";
},
{
name = he.left.inner;
position = "{229, 560}";
},
{
name = he.left.outer;
position = "{54, 634}";
},
{
name = hee;
position = "{666, 60}";
},
{
name = hi;
position = "{820, 110}";
},
{
name = ho;
position = "{33, 10}";
},
{
name = hu;
position = "{923, 673}";
},
{
name = hwa;
position = "{703, -39}";
},
{
name = ka;
position = "{538, 1040}";
},
{
name = neck;
position = "{595, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
anchors = (
{
name = aGl;
position = "{195, 721}";
},
{
name = haa;
position = "{738, 2}";
},
{
name = hat;
position = "{623, 1382}";
},
{
name = hat.left;
position = "{258, 1232}";
},
{
name = he.acute.top;
position = "{523, 1154}";
},
{
name = he.left.inner;
position = "{197, 560}";
},
{
name = he.left.outer;
position = "{53, 634}";
},
{
name = hee;
position = "{643, 80}";
},
{
name = hi;
position = "{834, 60}";
},
{
name = ho;
position = "{11, 10}";
},
{
name = hu;
position = "{916, 673}";
},
{
name = hwa;
position = "{734, 0}";
},
{
name = ka;
position = "{534, 1040}";
},
{
name = neck;
position = "{590, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12B5;
},
{
glyphname = "kxa-ethiopic";
lastChange = "2020-12-16 20:44:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12B8;
},
{
glyphname = "kxu-ethiopic";
lastChange = "2020-12-16 20:44:25 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1072, -295}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1059, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1052, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1007, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -294}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12B9;
},
{
glyphname = "kxi-ethiopic";
lastChange = "2020-12-16 20:44:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1072, 15}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1073, -67}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1051, -5}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1061, -67}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12BA;
},
{
glyphname = "kxaa-ethiopic";
lastChange = "2020-12-16 20:44:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 976, -315}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 989, -374}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 980, -353}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -374}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 921, -346}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12BB;
},
{
glyphname = "kxee-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 947, -299}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -279}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -248}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 936, -279}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 831, -248}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12BC;
},
{
glyphname = "kxe-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 446, 601}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 391, 601}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 349, 601}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 497, 601}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 455, 601}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.he.left.inner = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12BD;
},
{
glyphname = "kxo-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -370}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -363}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 264, -373}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -370}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 204, -374}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12BE;
},
{
glyphname = "kxwa-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{249, 743}";
},
{
name = haa;
position = "{915, 0}";
},
{
name = hat;
position = "{582.635, 1382}";
},
{
name = hat.left;
position = "{267, 1312}";
},
{
name = he.acute.top;
position = "{543, 1174}";
},
{
name = he.left.inner;
position = "{325.829, 560}";
},
{
name = he.left.outer;
position = "{135.001, 634}";
},
{
name = hee;
position = "{888, 50}";
},
{
name = hi;
position = "{1006, 130}";
},
{
name = ho;
position = "{218, -20}";
},
{
name = hu;
position = "{1009.969, 673}";
},
{
name = hwa;
position = "{924, -40}";
},
{
name = ka;
position = "{553.199, 1040}";
},
{
name = neck;
position = "{597.861, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
anchors = (
{
name = aGl;
position = "{250, 765}";
},
{
name = haa;
position = "{929, -30}";
},
{
name = hat;
position = "{574, 1382}";
},
{
name = hat.left;
position = "{234, 1322}";
},
{
name = he.acute.top;
position = "{554, 1154}";
},
{
name = he.left.inner;
position = "{321, 560}";
},
{
name = he.left.outer;
position = "{133, 634}";
},
{
name = hee;
position = "{846, 60}";
},
{
name = hi;
position = "{991, 110}";
},
{
name = ho;
position = "{222, 10}";
},
{
name = hu;
position = "{995, 673}";
},
{
name = hwa;
position = "{901, -39}";
},
{
name = ka;
position = "{545, 1040}";
},
{
name = neck;
position = "{589, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
anchors = (
{
name = aGl;
position = "{259, 721}";
},
{
name = haa;
position = "{928, 2}";
},
{
name = hat;
position = "{569.936, 1382}";
},
{
name = hat.left;
position = "{232, 1232}";
},
{
name = he.acute.top;
position = "{510, 1154}";
},
{
name = he.left.inner;
position = "{289, 560}";
},
{
name = he.left.outer;
position = "{132.058, 634}";
},
{
name = hee;
position = "{820, 80}";
},
{
name = hi;
position = "{1014, 60}";
},
{
name = ho;
position = "{200, 10}";
},
{
name = hu;
position = "{987.956, 673}";
},
{
name = hwa;
position = "{925, 0}";
},
{
name = ka;
position = "{541.142, 1040}";
},
{
name = neck;
position = "{584.83, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
anchors = (
{
name = aGl;
position = "{194, 765}";
},
{
name = haa;
position = "{733, -30}";
},
{
name = hat;
position = "{627, 1382}";
},
{
name = hat.left;
position = "{276, 1322}";
},
{
name = he.acute.top;
position = "{567, 1154}";
},
{
name = he.left.inner;
position = "{229, 560}";
},
{
name = he.left.outer;
position = "{54, 634}";
},
{
name = hee;
position = "{666, 60}";
},
{
name = hi;
position = "{820, 110}";
},
{
name = ho;
position = "{33, 10}";
},
{
name = hu;
position = "{923, 673}";
},
{
name = hwa;
position = "{703, -39}";
},
{
name = ka;
position = "{538, 1040}";
},
{
name = neck;
position = "{595, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
anchors = (
{
name = aGl;
position = "{195, 721}";
},
{
name = haa;
position = "{738, 2}";
},
{
name = hat;
position = "{623, 1382}";
},
{
name = hat.left;
position = "{258, 1232}";
},
{
name = he.acute.top;
position = "{523, 1154}";
},
{
name = he.left.inner;
position = "{197, 560}";
},
{
name = he.left.outer;
position = "{53, 634}";
},
{
name = hee;
position = "{643, 80}";
},
{
name = hi;
position = "{834, 60}";
},
{
name = ho;
position = "{11, 10}";
},
{
name = hu;
position = "{916, 673}";
},
{
name = hwa;
position = "{734, 0}";
},
{
name = ka;
position = "{534, 1040}";
},
{
name = neck;
position = "{590, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12C0;
},
{
glyphname = "kxwi-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{249, 743}";
},
{
name = haa;
position = "{915, 0}";
},
{
name = hat;
position = "{582.635, 1382}";
},
{
name = hat.left;
position = "{267, 1312}";
},
{
name = he.acute.top;
position = "{543, 1174}";
},
{
name = he.left.inner;
position = "{325.829, 560}";
},
{
name = he.left.outer;
position = "{135.001, 634}";
},
{
name = hee;
position = "{888, 50}";
},
{
name = hi;
position = "{1006, 130}";
},
{
name = ho;
position = "{218, -20}";
},
{
name = hu;
position = "{1009.969, 673}";
},
{
name = hwa;
position = "{924, -40}";
},
{
name = ka;
position = "{553.199, 1040}";
},
{
name = neck;
position = "{597.861, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
anchors = (
{
name = aGl;
position = "{250, 765}";
},
{
name = haa;
position = "{929, -30}";
},
{
name = hat;
position = "{574, 1382}";
},
{
name = hat.left;
position = "{234, 1322}";
},
{
name = he.acute.top;
position = "{554, 1154}";
},
{
name = he.left.inner;
position = "{321, 560}";
},
{
name = he.left.outer;
position = "{133, 634}";
},
{
name = hee;
position = "{846, 60}";
},
{
name = hi;
position = "{991, 110}";
},
{
name = ho;
position = "{222, 10}";
},
{
name = hu;
position = "{995, 673}";
},
{
name = hwa;
position = "{901, -39}";
},
{
name = ka;
position = "{545, 1040}";
},
{
name = neck;
position = "{589, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
anchors = (
{
name = aGl;
position = "{259, 721}";
},
{
name = haa;
position = "{928, 2}";
},
{
name = hat;
position = "{569.936, 1382}";
},
{
name = hat.left;
position = "{232, 1232}";
},
{
name = he.acute.top;
position = "{510, 1154}";
},
{
name = he.left.inner;
position = "{289, 560}";
},
{
name = he.left.outer;
position = "{132.058, 634}";
},
{
name = hee;
position = "{820, 80}";
},
{
name = hi;
position = "{1014, 60}";
},
{
name = ho;
position = "{200, 10}";
},
{
name = hu;
position = "{987.956, 673}";
},
{
name = hwa;
position = "{925, 0}";
},
{
name = ka;
position = "{541.142, 1040}";
},
{
name = neck;
position = "{584.83, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
anchors = (
{
name = aGl;
position = "{194, 765}";
},
{
name = haa;
position = "{733, -30}";
},
{
name = hat;
position = "{627, 1382}";
},
{
name = hat.left;
position = "{276, 1322}";
},
{
name = he.acute.top;
position = "{567, 1154}";
},
{
name = he.left.inner;
position = "{229, 560}";
},
{
name = he.left.outer;
position = "{54, 634}";
},
{
name = hee;
position = "{666, 60}";
},
{
name = hi;
position = "{820, 110}";
},
{
name = ho;
position = "{33, 10}";
},
{
name = hu;
position = "{923, 673}";
},
{
name = hwa;
position = "{703, -39}";
},
{
name = ka;
position = "{538, 1040}";
},
{
name = neck;
position = "{595, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
anchors = (
{
name = aGl;
position = "{195, 721}";
},
{
name = haa;
position = "{738, 2}";
},
{
name = hat;
position = "{623, 1382}";
},
{
name = hat.left;
position = "{258, 1232}";
},
{
name = he.acute.top;
position = "{523, 1154}";
},
{
name = he.left.inner;
position = "{197, 560}";
},
{
name = he.left.outer;
position = "{53, 634}";
},
{
name = hee;
position = "{643, 80}";
},
{
name = hi;
position = "{834, 60}";
},
{
name = ho;
position = "{11, 10}";
},
{
name = hu;
position = "{916, 673}";
},
{
name = hwa;
position = "{734, 0}";
},
{
name = ka;
position = "{534, 1040}";
},
{
name = neck;
position = "{590, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12C2;
},
{
glyphname = "kxwaa-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.hwa.cap = 1;
_smart.ka = 1;
};
width = 1264;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.hwa.cap = 1;
_smart.ka = 1;
};
width = 1251;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.hwa.cap = 1;
_smart.ka = 1;
};
width = 1242;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.hwa.cap = 1;
_smart.ka = 1;
};
width = 1250;
},
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.hwa.cap = 1;
_smart.ka = 1;
};
width = 1241;
}
);
unicode = 12C3;
},
{
glyphname = "kxwee-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{249, 743}";
},
{
name = haa;
position = "{915, 0}";
},
{
name = hat;
position = "{582.635, 1382}";
},
{
name = hat.left;
position = "{267, 1312}";
},
{
name = he.acute.top;
position = "{543, 1174}";
},
{
name = he.left.inner;
position = "{325.829, 560}";
},
{
name = he.left.outer;
position = "{135.001, 634}";
},
{
name = hee;
position = "{888, 50}";
},
{
name = hi;
position = "{1006, 130}";
},
{
name = ho;
position = "{218, -20}";
},
{
name = hu;
position = "{1009.969, 673}";
},
{
name = hwa;
position = "{924, -40}";
},
{
name = ka;
position = "{553.199, 1040}";
},
{
name = neck;
position = "{597.861, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
anchors = (
{
name = aGl;
position = "{250, 765}";
},
{
name = haa;
position = "{929, -30}";
},
{
name = hat;
position = "{574, 1382}";
},
{
name = hat.left;
position = "{234, 1322}";
},
{
name = he.acute.top;
position = "{554, 1154}";
},
{
name = he.left.inner;
position = "{321, 560}";
},
{
name = he.left.outer;
position = "{133, 634}";
},
{
name = hee;
position = "{846, 60}";
},
{
name = hi;
position = "{991, 110}";
},
{
name = ho;
position = "{222, 10}";
},
{
name = hu;
position = "{995, 673}";
},
{
name = hwa;
position = "{901, -39}";
},
{
name = ka;
position = "{545, 1040}";
},
{
name = neck;
position = "{589, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
anchors = (
{
name = aGl;
position = "{259, 721}";
},
{
name = haa;
position = "{928, 2}";
},
{
name = hat;
position = "{569.936, 1382}";
},
{
name = hat.left;
position = "{232, 1232}";
},
{
name = he.acute.top;
position = "{510, 1154}";
},
{
name = he.left.inner;
position = "{289, 560}";
},
{
name = he.left.outer;
position = "{132.058, 634}";
},
{
name = hee;
position = "{820, 80}";
},
{
name = hi;
position = "{1014, 60}";
},
{
name = ho;
position = "{200, 10}";
},
{
name = hu;
position = "{987.956, 673}";
},
{
name = hwa;
position = "{925, 0}";
},
{
name = ka;
position = "{541.142, 1040}";
},
{
name = neck;
position = "{584.83, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
anchors = (
{
name = aGl;
position = "{194, 765}";
},
{
name = haa;
position = "{733, -30}";
},
{
name = hat;
position = "{627, 1382}";
},
{
name = hat.left;
position = "{276, 1322}";
},
{
name = he.acute.top;
position = "{567, 1154}";
},
{
name = he.left.inner;
position = "{229, 560}";
},
{
name = he.left.outer;
position = "{54, 634}";
},
{
name = hee;
position = "{666, 60}";
},
{
name = hi;
position = "{820, 110}";
},
{
name = ho;
position = "{33, 10}";
},
{
name = hu;
position = "{923, 673}";
},
{
name = hwa;
position = "{703, -39}";
},
{
name = ka;
position = "{538, 1040}";
},
{
name = neck;
position = "{595, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
anchors = (
{
name = aGl;
position = "{195, 721}";
},
{
name = haa;
position = "{738, 2}";
},
{
name = hat;
position = "{623, 1382}";
},
{
name = hat.left;
position = "{258, 1232}";
},
{
name = he.acute.top;
position = "{523, 1154}";
},
{
name = he.left.inner;
position = "{197, 560}";
},
{
name = he.left.outer;
position = "{53, 634}";
},
{
name = hee;
position = "{643, 80}";
},
{
name = hi;
position = "{834, 60}";
},
{
name = ho;
position = "{11, 10}";
},
{
name = hu;
position = "{916, 673}";
},
{
name = hwa;
position = "{734, 0}";
},
{
name = ka;
position = "{534, 1040}";
},
{
name = neck;
position = "{590, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12C4;
},
{
glyphname = "kxwe-ethiopic";
lastChange = "2020-12-16 20:44:26 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{249, 743}";
},
{
name = haa;
position = "{915, 0}";
},
{
name = hat;
position = "{582.635, 1382}";
},
{
name = hat.left;
position = "{267, 1312}";
},
{
name = he.acute.top;
position = "{543, 1174}";
},
{
name = he.left.inner;
position = "{325.829, 560}";
},
{
name = he.left.outer;
position = "{135.001, 634}";
},
{
name = hee;
position = "{888, 50}";
},
{
name = hi;
position = "{1006, 130}";
},
{
name = ho;
position = "{218, -20}";
},
{
name = hu;
position = "{1009.969, 673}";
},
{
name = hwa;
position = "{924, -40}";
},
{
name = ka;
position = "{553.199, 1040}";
},
{
name = neck;
position = "{597.861, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1112, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1300}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 978, -310}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1264;
},
{
anchors = (
{
name = aGl;
position = "{250, 765}";
},
{
name = haa;
position = "{929, -30}";
},
{
name = hat;
position = "{574, 1382}";
},
{
name = hat.left;
position = "{234, 1322}";
},
{
name = he.acute.top;
position = "{554, 1154}";
},
{
name = he.left.inner;
position = "{321, 560}";
},
{
name = he.left.outer;
position = "{133, 634}";
},
{
name = hee;
position = "{846, 60}";
},
{
name = hi;
position = "{991, 110}";
},
{
name = ho;
position = "{222, 10}";
},
{
name = hu;
position = "{995, 673}";
},
{
name = hwa;
position = "{901, -39}";
},
{
name = ka;
position = "{545, 1040}";
},
{
name = neck;
position = "{589, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1145, 6}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 289, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 961, -387}";
}
);
layerId = m002;
width = 1251;
},
{
anchors = (
{
name = aGl;
position = "{259, 721}";
},
{
name = haa;
position = "{928, 2}";
},
{
name = hat;
position = "{569.936, 1382}";
},
{
name = hat.left;
position = "{232, 1232}";
},
{
name = he.acute.top;
position = "{510, 1154}";
},
{
name = he.left.inner;
position = "{289, 560}";
},
{
name = he.left.outer;
position = "{132.058, 634}";
},
{
name = hee;
position = "{820, 80}";
},
{
name = hi;
position = "{1014, 60}";
},
{
name = ho;
position = "{200, 10}";
},
{
name = hu;
position = "{987.956, 673}";
},
{
name = hwa;
position = "{925, 0}";
},
{
name = ka;
position = "{541.142, 1040}";
},
{
name = neck;
position = "{584.83, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1221, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 287, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = m003;
width = 1242;
},
{
anchors = (
{
name = aGl;
position = "{194, 765}";
},
{
name = haa;
position = "{733, -30}";
},
{
name = hat;
position = "{627, 1382}";
},
{
name = hat.left;
position = "{276, 1322}";
},
{
name = he.acute.top;
position = "{567, 1154}";
},
{
name = he.left.inner;
position = "{229, 560}";
},
{
name = he.left.outer;
position = "{54, 634}";
},
{
name = hee;
position = "{666, 60}";
},
{
name = hi;
position = "{820, 110}";
},
{
name = ho;
position = "{33, 10}";
},
{
name = hu;
position = "{923, 673}";
},
{
name = hwa;
position = "{703, -39}";
},
{
name = ka;
position = "{538, 1040}";
},
{
name = neck;
position = "{595, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1226, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 520, 1310}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 882, -432}";
}
);
layerId = m004;
width = 1250;
},
{
anchors = (
{
name = aGl;
position = "{195, 721}";
},
{
name = haa;
position = "{738, 2}";
},
{
name = hat;
position = "{623, 1382}";
},
{
name = hat.left;
position = "{258, 1232}";
},
{
name = he.acute.top;
position = "{523, 1154}";
},
{
name = he.left.inner;
position = "{197, 560}";
},
{
name = he.left.outer;
position = "{53, 634}";
},
{
name = hee;
position = "{643, 80}";
},
{
name = hi;
position = "{834, 60}";
},
{
name = ho;
position = "{11, 10}";
},
{
name = hu;
position = "{916, 673}";
},
{
name = hwa;
position = "{734, 0}";
},
{
name = ka;
position = "{534, 1040}";
},
{
name = neck;
position = "{590, 1114}";
}
);
components = (
{
name = ba.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 1222, 5}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 502, 1220}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 931, -325}";
}
);
layerId = m005;
width = 1241;
}
);
unicode = 12C5;
},
{
glyphname = "wa-ethiopic";
lastChange = "2020-12-14 08:55:35 +0000";
layers = (
{
components = (
{
name = wa.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1882;
},
{
components = (
{
name = wa.base;
}
);
layerId = m002;
width = 1655;
},
{
components = (
{
name = wa.base;
}
);
layerId = m003;
width = 1529;
},
{
components = (
{
name = wa.base;
}
);
layerId = m004;
width = 1655;
},
{
components = (
{
name = wa.base;
}
);
layerId = m005;
width = 1529;
}
);
unicode = 12C8;
},
{
glyphname = "wu-ethiopic";
lastChange = "2020-12-14 08:55:35 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1684, -225}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1479, -224}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1390, -224}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1439, -224}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1351, -224}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1529;
}
);
unicode = 12C9;
},
{
glyphname = "wi-ethiopic";
lastChange = "2020-12-16 02:30:30 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1104, -440}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 943, -384}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 875, -416}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 861, -424}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 801, -416}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1529;
}
);
unicode = 12CA;
},
{
glyphname = "waa-ethiopic";
lastChange = "2020-12-16 01:58:46 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -364}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 775, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 800, -364}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 715, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1529;
}
);
unicode = 12CB;
},
{
glyphname = "wee-ethiopic";
lastChange = "2020-12-14 08:55:35 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 999, -349}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 959, -339}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 824, -328}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 899, -339}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 766, -328}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1529;
}
);
unicode = 12CC;
},
{
glyphname = "we-ethiopic";
lastChange = "2020-12-14 08:55:35 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1684, -225}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1479, -224}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1390, -224}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1439, -224}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1351, -224}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1529;
}
);
unicode = 12CD;
},
{
glyphname = "wo-ethiopic";
lastChange = "2020-12-14 08:55:35 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 905, -107}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 750, -127}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 751, -87}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 727, -127}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 735, -87}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
};
width = 1529;
}
);
unicode = 12CE;
},
{
glyphname = "woa-ethiopic";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 921, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 1882;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 764, -408}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 1529;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 729, -448}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 1655;
},
{
components = (
{
name = wa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 699, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 1529;
}
);
unicode = 12CF;
},
{
glyphname = "aPharyngeal-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = oPh.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
}
);
layerId = m002;
userData = {
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
}
);
layerId = m003;
userData = {
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
}
);
layerId = m004;
userData = {
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
}
);
layerId = m005;
userData = {
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 12D0;
},
{
glyphname = "uPharyngeal-ethiopic";
lastChange = "2020-12-15 23:53:27 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1041, -297}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1102, -116}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1103, -226}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1041, -296}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1063, -226}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1248;
}
);
unicode = 12D1;
},
{
glyphname = "iPharyngeal-ethiopic";
lastChange = "2020-12-16 02:33:18 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 957, -407}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 828, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 958, -368}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 886, -354}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 988, -439}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 897, -357}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 826, -364}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 910, -439}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 859, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1248;
}
);
unicode = 12D2;
},
{
glyphname = "aaPharyngeal-ethiopic";
lastChange = "2020-12-16 02:33:23 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 828, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 886, -354}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 826, -364}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 859, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1248;
}
);
unicode = 12D3;
},
{
glyphname = "eePharyngeal-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 915, -388}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 994, -378}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 891, -367}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 928, -378}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 826, -367}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1248;
}
);
unicode = 12D4;
},
{
glyphname = "ePharyngeal-ethiopic";
lastChange = "2020-12-16 02:42:21 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 630, 1135}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 629, 1138}";
}
);
layerId = m002;
userData = {
_smart.neck = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 630, 1135}";
}
);
layerId = m003;
userData = {
_smart.neck = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 848, 1145}";
}
);
layerId = m004;
userData = {
_smart.neck = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 828, 1135}";
}
);
layerId = m005;
userData = {
_smart.neck = 1;
};
width = 1248;
}
);
unicode = 12D5;
},
{
glyphname = "oPharyngeal-ethiopic";
lastChange = "2020-12-15 17:38:43 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 589, -59}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 644, -79}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 623, -89}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 579, -59}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 569, -89}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
};
width = 1248;
}
);
unicode = 12D6;
},
{
glyphname = "za-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = za.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1268;
},
{
components = (
{
name = za.base;
}
);
layerId = m002;
width = 1205;
},
{
components = (
{
name = za.base;
}
);
layerId = m003;
width = 1243;
},
{
components = (
{
name = za.base;
}
);
layerId = m004;
width = 1205;
},
{
components = (
{
name = za.base;
}
);
layerId = m005;
width = 1243;
}
);
unicode = 12D8;
},
{
glyphname = "zu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1093, -287}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1030, -286}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1112, -286}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 979, -286}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1061, -286}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1243;
}
);
unicode = 12D9;
},
{
glyphname = "zi-ethiopic";
lastChange = "2020-12-16 02:31:49 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1107, 12}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 976, 2}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1047, -90}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1008, 2}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1031, -90}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 1243;
}
);
unicode = 12DA;
},
{
glyphname = "zaa-ethiopic";
lastChange = "2020-12-16 04:16:00 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 977, -321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 940, -368}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 984, -352}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 875, -368}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -344}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1243;
}
);
unicode = 12DB;
},
{
glyphname = "zee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 937, -285}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 939, -271}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 850, -204}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 891, -271}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 814, -204}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1243;
}
);
unicode = 12DC;
},
{
glyphname = "ze-ethiopic";
lastChange = "2020-12-15 17:42:17 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 305, 76}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 290, 86}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 299, 76}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 299, 96}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 298, 116}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
};
width = 1243;
}
);
unicode = 12DD;
},
{
glyphname = "zo-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -351}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.ho = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 277, -359}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.ho = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 259, -361}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.ho = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 214, -359}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.ho = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 195, -361}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.ho = 1;
};
width = 1243;
}
);
unicode = 12DE;
},
{
glyphname = "zwa-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 968, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.hwa = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 915, -398}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.hwa = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 995, -368}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.hwa = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 828, -438}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.hwa = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 930, -368}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.hwa = 1;
};
width = 1243;
}
);
unicode = 12DF;
},
{
glyphname = "zha-ethiopic";
lastChange = "2020-12-15 23:08:41 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E0;
},
{
glyphname = "zhu-ethiopic";
lastChange = "2020-12-15 23:00:50 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1093, -287}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1030, -286}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1112, -286}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 979, -286}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1061, -286}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E1;
},
{
glyphname = "zhi-ethiopic";
lastChange = "2020-12-16 02:32:00 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1107, 12}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 976, 2}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1047, -90}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1008, 2}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1031, -90}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E2;
},
{
glyphname = "zhaa-ethiopic";
lastChange = "2020-12-16 04:16:02 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 977, -321}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 940, -368}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 984, -352}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 875, -368}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 923, -344}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E3;
},
{
glyphname = "zhee-ethiopic";
lastChange = "2020-12-15 23:00:50 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 937, -285}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 939, -271}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 850, -204}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 891, -271}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 814, -204}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E4;
},
{
glyphname = "zhe-ethiopic";
lastChange = "2020-12-15 23:00:50 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 305, 76}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 290, 86}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 299, 76}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 299, 96}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 298, 116}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E5;
},
{
glyphname = "zho-ethiopic";
lastChange = "2020-12-15 23:00:50 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 274, -351}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 277, -359}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 259, -361}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 214, -359}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 195, -361}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E6;
},
{
glyphname = "zhwa-ethiopic";
lastChange = "2020-12-15 23:00:50 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 968, -368}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 643, -66}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.zha = 1;
};
width = 1268;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 915, -398}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 598, 24}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 995, -368}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 620, 14}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.zha = 1;
};
width = 1243;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 828, -438}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 602, 24}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.zha = 1;
};
width = 1205;
},
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 930, -368}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 622, 14}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.zha = 1;
};
width = 1243;
}
);
unicode = 12E7;
},
{
glyphname = "ya-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1135;
},
{
components = (
{
name = ya.base;
}
);
layerId = m002;
width = 1143;
},
{
components = (
{
name = ya.base;
}
);
layerId = m003;
width = 1132;
},
{
components = (
{
name = ya.base;
}
);
layerId = m004;
width = 1131;
},
{
components = (
{
name = ya.base;
}
);
layerId = m005;
width = 1128;
}
);
unicode = 12E8;
},
{
glyphname = "yu-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 181, -441}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 29, -391}";
}
);
layerId = m002;
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 261, -391}";
}
);
layerId = m003;
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 121, -421}";
}
);
layerId = m004;
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 90, -391}";
}
);
layerId = m005;
width = 1128;
}
);
unicode = 12E9;
},
{
glyphname = "yi-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.yi;
transform = "{1, 0, 0, 1, 91, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.yi = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yi;
transform = "{1, 0, 0, 1, 29, -345}";
}
);
layerId = m002;
userData = {
_smart.yi = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yi;
transform = "{1, 0, 0, 1, 91, -345}";
}
);
layerId = m003;
userData = {
_smart.yi = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yi;
transform = "{1, 0, 0, 1, 91, -345}";
}
);
layerId = m004;
userData = {
_smart.yi = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yi;
transform = "{1, 0, 0, 1, 90, -345}";
}
);
layerId = m005;
userData = {
_smart.yi = 1;
};
width = 1128;
}
);
leftMetricsKey = "ya-ethiopic";
rightMetricsKey = "ya-ethiopic";
unicode = 12EA;
},
{
glyphname = "yaa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 473, -51}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 397, -42}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 482, -62}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 509, -63}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 473, -72}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
};
width = 1128;
}
);
leftMetricsKey = "ya-ethiopic";
rightMetricsKey = "ya-ethiopic";
unicode = 12EB;
},
{
glyphname = "yee-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.yee;
transform = "{1, 0, 0, 1, 570, -85}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.yee = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yee;
transform = "{1, 0, 0, 1, 419, -87}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.yee = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yee;
transform = "{1, 0, 0, 1, 436, -42}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.yee = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yee;
transform = "{1, 0, 0, 1, 375, -58}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.yee = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.yee;
transform = "{1, 0, 0, 1, 320, -15}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.yee = 1;
};
width = 1128;
}
);
unicode = 12EC;
},
{
glyphname = "ye-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.ye;
transform = "{1, 0, 0, 1, 89, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.ye;
transform = "{1, 0, 0, 1, 37, 20}";
}
);
layerId = m002;
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.ye;
transform = "{1, 0, 0, 1, 175, -20}";
}
);
layerId = m003;
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.ye;
transform = "{1, 0, 0, 1, -278, 30}";
}
);
layerId = m004;
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.ye;
transform = "{1, 0, 0, 1, -215, 13}";
}
);
layerId = m005;
width = 1128;
}
);
unicode = 12ED;
},
{
glyphname = "yo-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1277, 802}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1219, 797}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1181, 809}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1414, 797}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1354, 809}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
};
width = 1128;
}
);
unicode = 12EE;
},
{
glyphname = "yoa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1277, 802}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 353, 1127}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1219, 797}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 244, 1011}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1181, 809}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 314, 1011}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1414, 797}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 631, 1121}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1354, 809}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 626, 1111}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
};
width = 1128;
}
);
unicode = 12EF;
},
{
glyphname = "da-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
};
width = 1128;
}
);
unicode = 12F0;
},
{
glyphname = "du-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 899, 10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.du = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 870, 10}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.du = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 966, -60}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.du = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 774, 10}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.du = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 662, -110}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.du = 1;
};
width = 1128;
}
);
unicode = 12F1;
},
{
glyphname = "di-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 795, -423}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.di = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 827, -383}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.di = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 1064, -293}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.di = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 766, -363}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.di = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 660, -333}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.di = 1;
};
width = 1128;
}
);
unicode = 12F2;
},
{
glyphname = "daa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 808, -317}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.haa = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 838, -354}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.haa = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 868, -348}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.haa = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 751, -354}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.haa = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 745, -368}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.haa = 1;
};
width = 1128;
}
);
unicode = 12F3;
},
{
glyphname = "dee-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 777, -305}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hee = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 915, -286}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hee = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 929, -316}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hee = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 969, -316}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hee = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 829, -327}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hee = 1;
};
width = 1128;
}
);
unicode = 12F4;
},
{
glyphname = "de-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1277, 802}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.he = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1219, 797}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.he = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1181, 809}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.he = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1414, 797}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.he = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1354, 809}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.he = 1;
};
width = 1128;
}
);
unicode = 12F5;
},
{
glyphname = "do-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 231, -360}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.ho = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 170, -360}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.ho = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 184, -361}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.ho = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 110, -360}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.ho = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 83, -370}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.ho = 1;
};
width = 1128;
}
);
unicode = 12F6;
},
{
glyphname = "dwa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 809, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hwa = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hwa = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 873, -368}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hwa = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 694, -428}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hwa = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 748, -418}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hwa = 1;
};
width = 1128;
}
);
unicode = 12F7;
},
{
glyphname = "dda-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12F8;
},
{
glyphname = "ddu-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 899, 10}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 870, 10}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 966, -60}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 774, 10}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 662, -110}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12F9;
},
{
glyphname = "ddi-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 795, -423}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 827, -383}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 1064, -293}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 766, -363}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 660, -333}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12FA;
},
{
glyphname = "ddaa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 808, -317}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 838, -354}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 868, -348}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 751, -354}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 745, -368}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12FB;
},
{
glyphname = "ddee-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 777, -305}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 915, -286}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 929, -316}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 969, -316}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 829, -327}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12FC;
},
{
glyphname = "dde-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1277, 802}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1219, 797}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1181, 809}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1414, 797}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1354, 809}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12FD;
},
{
glyphname = "ddo-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 231, -360}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 170, -360}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 184, -361}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 110, -360}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 83, -370}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12FE;
},
{
glyphname = "ddwa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 809, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 873, -368}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 694, -428}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 748, -418}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 12FF;
},
{
glyphname = "ja-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1300;
},
{
glyphname = "ju-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 899, 10}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 870, 10}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 966, -60}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 774, 10}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.du;
transform = "{1, 0, 0, 1, 662, -110}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.du = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1301;
},
{
glyphname = "ji-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 795, -423}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 827, -383}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 1064, -293}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 766, -363}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.di;
transform = "{1, 0, 0, 1, 660, -333}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.di = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1302;
},
{
glyphname = "jaa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 808, -317}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 838, -354}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 868, -348}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 751, -354}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 745, -368}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1303;
},
{
glyphname = "jee-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 777, -305}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 915, -286}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 929, -316}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 969, -316}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 829, -327}";
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1304;
},
{
glyphname = "je-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1277, 802}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1219, 797}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1181, 809}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1414, 797}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1354, 809}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1305;
},
{
glyphname = "jo-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 231, -360}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 170, -360}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 184, -361}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 110, -360}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 83, -370}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1306;
},
{
glyphname = "jwa-ethiopic";
lastChange = "2020-12-17 00:06:55 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 249, 78}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 569, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 1329}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 809, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1135;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 225, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 551, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 510, 1329}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 811, -368}";
}
);
layerId = m002;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1143;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 281, -102}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 679, 1229}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 873, -368}";
}
);
layerId = m003;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1132;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 47, -2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 876, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 870, 1349}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 694, -428}";
}
);
layerId = m004;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1131;
},
{
components = (
{
name = ya.base;
},
{
name = _smart.da;
transform = "{1, 0, 0, 1, 53, -112}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 852, 1136}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 796, 1229}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 748, -418}";
}
);
layerId = m005;
userData = {
_smart.da = 1;
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1128;
}
);
unicode = 1307;
},
{
glyphname = "ga-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 934;
},
{
components = (
{
name = ga.base;
}
);
layerId = m002;
width = 908;
},
{
components = (
{
name = ga.base;
}
);
layerId = m003;
width = 793;
},
{
components = (
{
name = ga.base;
}
);
layerId = m004;
width = 918;
},
{
components = (
{
name = ga.base;
}
);
layerId = m005;
width = 814;
}
);
leftKerningGroup = "ra-ethiopic";
unicode = 1308;
},
{
glyphname = "gu-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 786, -330}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, -329}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 655, -329}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 728, -329}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 618, -329}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 814;
}
);
unicode = 1309;
},
{
glyphname = "gi-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 808, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 710, -5}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 658, -77}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 780, -5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 665, -77}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 814;
}
);
unicode = 130A;
},
{
glyphname = "gaa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 625, -37}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 583, -28}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 592, -57}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 653, -41}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 605, -42}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
};
width = 814;
}
);
unicode = 130B;
},
{
glyphname = "gee-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 693, -296}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 721, -299}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 597, -288}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 738, -299}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 567, -288}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 814;
}
);
unicode = 130C;
},
{
glyphname = "ge-ethiopic";
lastChange = "2020-12-17 00:47:47 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.ho.ring;
transform = "{0.83375, 0, 0, 0.83375, 390, -332}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.ho.ring;
transform = "{0.75364, 0, 0, 0.75364, 318, -134}";
}
);
layerId = m002;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.ho.ring;
transform = "{0.88584, 0, 0, 0.88584, 422, -121}";
}
);
layerId = m003;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.ho.ring;
transform = "{0.7238, 0, 0, 0.7238, 387, -106}";
}
);
layerId = m004;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.ho.ring;
transform = "{0.85076, 0, 0, 0.85076, 405, -83}";
}
);
layerId = m005;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
};
width = 814;
}
);
rightMetricsKey = n;
unicode = 130D;
},
{
glyphname = "go-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
}
);
layerId = m002;
userData = {
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
}
);
layerId = m003;
userData = {
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
}
);
layerId = m004;
userData = {
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
}
);
layerId = m005;
userData = {
_smart.neck = 1;
};
width = 814;
}
);
unicode = 130E;
},
{
glyphname = "goa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
anchors = (
{
name = ho.ring;
position = "{500, 755}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.xwaa = 1;
};
width = 934;
},
{
anchors = (
{
name = ho.ring;
position = "{456, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
}
);
layerId = m002;
userData = {
_smart.xwaa = 1;
};
width = 908;
},
{
anchors = (
{
name = ho.ring;
position = "{390, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
}
);
layerId = m003;
userData = {
_smart.xwaa = 1;
};
width = 793;
},
{
anchors = (
{
name = ho.ring;
position = "{387, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
}
);
layerId = m004;
userData = {
_smart.xwaa = 1;
};
width = 918;
},
{
anchors = (
{
name = ho.ring;
position = "{352, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
}
);
layerId = m005;
userData = {
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 130F;
},
{
glyphname = "gwa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
anchors = (
{
name = ho.ring;
position = "{500, 755}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.xwaa = 1;
};
width = 934;
},
{
anchors = (
{
name = ho.ring;
position = "{456, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
}
);
layerId = m002;
userData = {
_smart.xwaa = 1;
};
width = 908;
},
{
anchors = (
{
name = ho.ring;
position = "{390, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
}
);
layerId = m003;
userData = {
_smart.xwaa = 1;
};
width = 793;
},
{
anchors = (
{
name = ho.ring;
position = "{387, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
}
);
layerId = m004;
userData = {
_smart.xwaa = 1;
};
width = 918;
},
{
anchors = (
{
name = ho.ring;
position = "{352, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
}
);
layerId = m005;
userData = {
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 1310;
},
{
glyphname = "gwi-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
anchors = (
{
name = ho.ring;
position = "{500, 755}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.xwaa = 1;
};
width = 934;
},
{
anchors = (
{
name = ho.ring;
position = "{456, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
}
);
layerId = m002;
userData = {
_smart.xwaa = 1;
};
width = 908;
},
{
anchors = (
{
name = ho.ring;
position = "{390, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
}
);
layerId = m003;
userData = {
_smart.xwaa = 1;
};
width = 793;
},
{
anchors = (
{
name = ho.ring;
position = "{387, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
}
);
layerId = m004;
userData = {
_smart.xwaa = 1;
};
width = 918;
},
{
anchors = (
{
name = ho.ring;
position = "{352, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
}
);
layerId = m005;
userData = {
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 1312;
},
{
glyphname = "gwaa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
anchors = (
{
name = ho.ring;
position = "{500, 755}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.xwaa = 1;
};
width = 934;
},
{
anchors = (
{
name = ho.ring;
position = "{456, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
}
);
layerId = m002;
userData = {
_smart.xwaa = 1;
};
width = 908;
},
{
anchors = (
{
name = ho.ring;
position = "{390, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
}
);
layerId = m003;
userData = {
_smart.xwaa = 1;
};
width = 793;
},
{
anchors = (
{
name = ho.ring;
position = "{387, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
}
);
layerId = m004;
userData = {
_smart.xwaa = 1;
};
width = 918;
},
{
anchors = (
{
name = ho.ring;
position = "{352, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
}
);
layerId = m005;
userData = {
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 1313;
},
{
glyphname = "gwee-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
anchors = (
{
name = ho.ring;
position = "{500, 755}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.xwaa = 1;
};
width = 934;
},
{
anchors = (
{
name = ho.ring;
position = "{456, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
}
);
layerId = m002;
userData = {
_smart.xwaa = 1;
};
width = 908;
},
{
anchors = (
{
name = ho.ring;
position = "{390, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
}
);
layerId = m003;
userData = {
_smart.xwaa = 1;
};
width = 793;
},
{
anchors = (
{
name = ho.ring;
position = "{387, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
}
);
layerId = m004;
userData = {
_smart.xwaa = 1;
};
width = 918;
},
{
anchors = (
{
name = ho.ring;
position = "{352, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
}
);
layerId = m005;
userData = {
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 1314;
},
{
glyphname = "gwe-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
anchors = (
{
name = ho.ring;
position = "{500, 755}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.xwaa = 1;
};
width = 934;
},
{
anchors = (
{
name = ho.ring;
position = "{456, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
}
);
layerId = m002;
userData = {
_smart.xwaa = 1;
};
width = 908;
},
{
anchors = (
{
name = ho.ring;
position = "{390, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
}
);
layerId = m003;
userData = {
_smart.xwaa = 1;
};
width = 793;
},
{
anchors = (
{
name = ho.ring;
position = "{387, 691}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
}
);
layerId = m004;
userData = {
_smart.xwaa = 1;
};
width = 918;
},
{
anchors = (
{
name = ho.ring;
position = "{352, 868}";
}
);
components = (
{
name = ga.base;
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
}
);
layerId = m005;
userData = {
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 1315;
},
{
glyphname = "gga-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 814;
}
);
unicode = 1318;
},
{
glyphname = "ggu-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 786, -330}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, -329}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 655, -329}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 728, -329}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 618, -329}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 814;
}
);
unicode = 1319;
},
{
glyphname = "ggi-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 808, 5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 710, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 658, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 780, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 665, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 814;
}
);
unicode = 131A;
},
{
glyphname = "ggaa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 625, -37}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 583, -28}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 592, -57}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 653, -41}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 605, -42}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 814;
}
);
unicode = 131B;
},
{
glyphname = "ggee-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 693, -296}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 721, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 597, -288}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 738, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 567, -288}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 814;
}
);
unicode = 131C;
},
{
glyphname = "gge-ethiopic";
lastChange = "2020-12-17 00:47:57 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
},
{
name = _smart.ho.ring;
transform = "{0.76902, 0, 0, 0.76902, 391, -262}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
_smart.neck = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
},
{
name = _smart.ho.ring;
transform = "{0.76902, 0, 0, 0.76902, 318, -151}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
_smart.neck = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
},
{
name = _smart.ho.ring;
transform = "{0.83375, 0, 0, 0.83375, 422, -65}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
_smart.neck = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
},
{
name = _smart.ho.ring;
transform = "{0.81695, 0.01426, -0.01426, 0.81695, 378, -210}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
_smart.neck = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
},
{
name = _smart.ho.ring;
transform = "{0.83375, 0, 0, 0.83375, 405, -65}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.ho.ring.uniq = 1;
_smart.neck = 1;
};
width = 814;
}
);
unicode = 131D;
},
{
glyphname = "ggo-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
},
{
name = _smart.ring;
transform = "{1, 0, 0, 1, -105, 25}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
},
{
name = _smart.ring;
transform = "{1, 0, 0, 1, -91, 5}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
},
{
name = _smart.ring;
transform = "{1, 0, 0, 1, 45, -15}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
},
{
name = _smart.ring;
transform = "{1, 0, 0, 1, 9, 85}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
},
{
name = _smart.ring;
transform = "{1, 0, 0, 1, 26, 35}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
};
width = 814;
}
);
unicode = 131E;
},
{
glyphname = "ggwaa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 343, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 293, 1355}";
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 9, -18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat = 1;
_smart.neck = 1;
_smart.xwaa = 1;
};
width = 934;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 315, 1096}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 275, 1355}";
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 14, -18}";
}
);
layerId = m002;
userData = {
_smart.hat = 1;
_smart.neck = 1;
_smart.xwaa = 1;
};
width = 908;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 273, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 386, 1255}";
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 52, -18}";
}
);
layerId = m003;
userData = {
_smart.hat = 1;
_smart.neck = 1;
_smart.xwaa = 1;
};
width = 793;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 584, 1106}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 584, 1355}";
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 84, -18}";
}
);
layerId = m004;
userData = {
_smart.hat = 1;
_smart.neck = 1;
_smart.xwaa = 1;
};
width = 918;
},
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 493, 1126}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 628, 1255}";
},
{
name = _smart.xwaa;
transform = "{1, 0, 0, 1, 73, -18}";
}
);
layerId = m005;
userData = {
_smart.hat = 1;
_smart.neck = 1;
_smart.xwaa = 1;
};
width = 814;
}
);
unicode = 131F;
},
{
glyphname = "tha-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1891;
},
{
components = (
{
name = hha.base;
}
);
layerId = m002;
width = 1897;
},
{
components = (
{
name = hha.base;
}
);
layerId = m003;
width = 1956;
},
{
components = (
{
name = hha.base;
}
);
layerId = m004;
width = 1895;
},
{
components = (
{
name = hha.base;
}
);
layerId = m005;
width = 1956;
}
);
unicode = 1320;
},
{
glyphname = "thu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1721, -305}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1705, -304}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1774, -304}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1650, -304}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1720, -304}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1956;
}
);
unicode = 1321;
},
{
glyphname = "thi-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1701, 25}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1697, -5}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1775, -67}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1696, -5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1763, -67}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 1956;
}
);
unicode = 1322;
},
{
glyphname = "thaa-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1598, -313}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1635, -374}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1710, -366}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1568, -374}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1645, -366}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1956;
}
);
unicode = 1323;
},
{
glyphname = "thee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1557, -289}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1662, -411}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1564, -188}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1589, -411}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1531, -188}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1956;
}
);
unicode = 1324;
},
{
glyphname = "the-ethiopic";
lastChange = "2020-12-14 17:45:04 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.bottom = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1139, 0}";
}
);
layerId = m002;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1091, 0}";
}
);
layerId = m003;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1098, 0}";
}
);
layerId = m004;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1131, 0}";
}
);
layerId = m005;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1956;
}
);
unicode = 1325;
},
{
glyphname = "tho-ethiopic";
lastChange = "2020-12-16 04:01:57 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 283, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -359}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 252, -360}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 215, -362}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 191, -361}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
};
width = 1956;
}
);
unicode = 1326;
},
{
glyphname = "thwa-ethiopic";
lastChange = "2020-12-16 04:18:30 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1599, -318}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1607, -398}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1713, -358}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1527, -428}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1656, -366}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 1956;
}
);
unicode = 1327;
},
{
glyphname = "cha-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
};
width = 1956;
}
);
unicode = 1328;
},
{
glyphname = "chu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1721, -305}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
_smart.hu = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1705, -304}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
_smart.hu = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1774, -304}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
_smart.hu = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1650, -304}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
_smart.hu = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1720, -304}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
_smart.hu = 1;
};
width = 1956;
}
);
unicode = 1329;
},
{
glyphname = "chi-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1701, 25}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
_smart.hi = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1697, -5}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
_smart.hi = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1775, -67}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
_smart.hi = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1696, -5}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
_smart.hi = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1763, -67}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
_smart.hi = 1;
};
width = 1956;
}
);
unicode = 132A;
},
{
glyphname = "chaa-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1598, -313}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
_smart.haa = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1635, -374}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
_smart.haa = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1710, -366}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
_smart.haa = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1568, -374}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
_smart.haa = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1645, -366}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
_smart.haa = 1;
};
width = 1956;
}
);
unicode = 132B;
},
{
glyphname = "chee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1557, -289}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
_smart.hee = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1662, -411}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
_smart.hee = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1564, -188}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
_smart.hee = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1589, -411}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
_smart.hee = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1531, -188}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
_smart.hee = 1;
};
width = 1956;
}
);
unicode = 132C;
},
{
glyphname = "che-ethiopic";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
_smart.he.acute.bottom = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1139, 0}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
_smart.he.acute.bottom = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1091, 0}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
_smart.he.acute.bottom = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1098, 0}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
_smart.he.acute.bottom = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 1131, 0}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
_smart.he.acute.bottom = 1;
};
width = 1956;
}
);
unicode = 132D;
},
{
glyphname = "cho-ethiopic";
lastChange = "2020-12-16 04:01:57 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 283, -370}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
_smart.ho = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 278, -359}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
_smart.ho = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 252, -360}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
_smart.ho = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 215, -362}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
_smart.ho = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 191, -361}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
_smart.ho = 1;
};
width = 1956;
}
);
unicode = 132E;
},
{
glyphname = "chwa-ethiopic";
lastChange = "2020-12-16 04:18:28 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1599, -318}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 983, -15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha = 1;
_smart.hwa = 1;
};
width = 1891;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1607, -398}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 936, -27}";
}
);
layerId = m002;
userData = {
_smart.cha = 1;
_smart.hwa = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1713, -358}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 957, -27}";
}
);
layerId = m003;
userData = {
_smart.cha = 1;
_smart.hwa = 1;
};
width = 1956;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1527, -428}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 930, -27}";
}
);
layerId = m004;
userData = {
_smart.cha = 1;
_smart.hwa = 1;
};
width = 1895;
},
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1656, -366}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 952, -27}";
}
);
layerId = m005;
userData = {
_smart.cha = 1;
_smart.hwa = 1;
};
width = 1956;
}
);
unicode = 132F;
},
{
glyphname = "pha-ethiopic";
lastChange = "2020-12-15 23:58:45 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
}
);
layerId = m002;
userData = {
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
}
);
layerId = m003;
userData = {
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
}
);
layerId = m004;
userData = {
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
}
);
layerId = m005;
userData = {
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1330;
},
{
glyphname = "phu-ethiopic";
lastChange = "2020-12-15 23:58:38 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 782, -509}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 945, -438}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 884, -508}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 876, -448}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 795, -508}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1331;
},
{
glyphname = "phi-ethiopic";
lastChange = "2020-12-15 23:58:45 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 883, 5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 936, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 936, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 937, -5}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 923, -77}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1332;
},
{
glyphname = "phaa-ethiopic";
lastChange = "2020-12-16 04:17:07 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 824, -325}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 924, -373}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 886, -354}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 859, -373}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 826, -344}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1333;
},
{
glyphname = "phee-ethiopic";
lastChange = "2020-12-15 23:58:45 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 803, -299}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 930, -289}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 789, -258}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 880, -289}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 745, -258}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1334;
},
{
glyphname = "phe-ethiopic";
lastChange = "2020-12-15 23:58:45 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1217, 834}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1198, 829}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1048, 841}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1345, 829}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1187, 841}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1335;
},
{
glyphname = "pho-ethiopic";
lastChange = "2020-12-16 02:14:19 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 226, -360}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 234, -359}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 203, -359}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 173, -359}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 140, -363}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1336;
},
{
glyphname = "phwa-ethiopic";
lastChange = "2020-12-15 23:58:45 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 825, -368}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 499, 1109}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 896, -398}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 577, 1139}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 890, -362}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 530, 1129}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 810, -438}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 777, 1139}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 827, -362}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 730, 1129}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 1106;
}
);
unicode = 1337;
},
{
glyphname = "tsa-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = tsa.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1082;
},
{
components = (
{
name = tsa.base;
}
);
layerId = m002;
width = 1146;
},
{
components = (
{
name = tsa.base;
}
);
layerId = m003;
width = 1105;
},
{
components = (
{
name = tsa.base;
}
);
layerId = m004;
width = 1148;
},
{
components = (
{
name = tsa.base;
}
);
layerId = m005;
width = 1106;
}
);
unicode = 1338;
},
{
glyphname = "tsu-ethiopic";
lastChange = "2020-12-15 23:58:45 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 782, -509}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 945, -438}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 884, -508}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 876, -448}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 795, -508}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 1106;
}
);
unicode = 1339;
},
{
glyphname = "tsi-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 883, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 936, -5}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 936, -77}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 937, -5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 923, -77}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 1106;
}
);
unicode = 133A;
},
{
glyphname = "tsaa-ethiopic";
lastChange = "2020-12-16 04:17:16 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 824, -325}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 924, -373}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 886, -354}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 859, -373}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 826, -344}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 1106;
}
);
unicode = 133B;
},
{
glyphname = "tsee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 803, -299}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 930, -289}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 789, -258}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 880, -289}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 745, -258}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 1106;
}
);
unicode = 133C;
},
{
glyphname = "tse-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1217, 834}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1198, 829}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1048, 841}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1345, 829}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1187, 841}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
};
width = 1106;
}
);
unicode = 133D;
},
{
glyphname = "tso-ethiopic";
lastChange = "2020-12-16 02:15:09 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 226, -360}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 234, -359}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 203, -359}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 173, -359}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 140, -363}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
};
width = 1106;
}
);
unicode = 133E;
},
{
glyphname = "tswa-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 825, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 1082;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 896, -398}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 1146;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 890, -362}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 1105;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 810, -438}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 1148;
},
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 827, -362}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 1106;
}
);
unicode = 133F;
},
{
glyphname = "tza-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
}
);
layerId = m002;
userData = {
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
}
);
layerId = m003;
userData = {
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
}
);
layerId = m004;
userData = {
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
}
);
layerId = m005;
userData = {
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1340;
},
{
glyphname = "tzu-ethiopic";
lastChange = "2020-12-15 23:55:07 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1041, -297}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1102, -116}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1103, -226}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1041, -296}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1063, -226}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1341;
},
{
glyphname = "tzi-ethiopic";
lastChange = "2020-12-16 02:33:23 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 957, -407}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 828, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 958, -368}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 886, -354}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 988, -439}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -338}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 897, -357}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 826, -364}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 910, -439}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 859, -338}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1342;
},
{
glyphname = "tzaa-ethiopic";
lastChange = "2020-12-16 02:33:23 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 828, -345}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 886, -354}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 919, -338}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 826, -364}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 859, -338}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1343;
},
{
glyphname = "tzee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 915, -388}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 994, -378}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 891, -367}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 928, -378}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 826, -367}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1344;
},
{
glyphname = "tze-ethiopic";
lastChange = "2020-12-16 02:42:23 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 630, 1135}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck = 1;
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 629, 1138}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
}
);
layerId = m002;
userData = {
_smart.neck = 1;
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 630, 1135}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
}
);
layerId = m003;
userData = {
_smart.neck = 1;
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 848, 1145}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
}
);
layerId = m004;
userData = {
_smart.neck = 1;
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 828, 1135}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
}
);
layerId = m005;
userData = {
_smart.neck = 1;
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1345;
},
{
glyphname = "tzo-ethiopic";
lastChange = "2020-12-15 17:42:42 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 589, -59}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 644, -79}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 623, -89}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 579, -59}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 569, -89}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1346;
},
{
glyphname = "tzoa-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = oPh.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 912, -368}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 625, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
_smart.tsa.belt = 1;
};
width = 1279;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 911, -368}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 628, -52}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
_smart.tsa.belt = 1;
};
width = 1285;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 912, -368}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 649, -52}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
_smart.tsa.belt = 1;
};
width = 1247;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 830, -408}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 620, -52}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
_smart.tsa.belt = 1;
};
width = 1289;
},
{
components = (
{
name = oPh.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 847, -368}";
},
{
name = _smart.tsa.belt;
transform = "{1, 0, 0, 1, 640, -52}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
_smart.tsa.belt = 1;
};
width = 1248;
}
);
unicode = 1347;
},
{
glyphname = "fa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
};
width = 1156;
}
);
unicode = 1348;
},
{
glyphname = "fu-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 686, -48}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.haa.acute = 1;
_smart.hu = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 743, -67}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.haa.acute = 1;
_smart.hu = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 739, -78}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.haa.acute = 1;
_smart.hu = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 816, -48}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.haa.acute = 1;
_smart.hu = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 727, -88}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.haa.acute = 1;
_smart.hu = 1;
};
width = 1156;
}
);
unicode = 1349;
},
{
glyphname = "fi-ethiopic";
lastChange = "2020-12-16 04:00:08 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1114, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.hi = 1;
_smart.ri = 1;
};
width = 1101;
},
{
components = (
{
alignment = -1;
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1137, -26}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.hi = 1;
_smart.ri = 1;
};
width = 1152;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1071, -6}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.hi = 1;
_smart.ri = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 984, 0}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.hi = 1;
_smart.ri = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 970, 34}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.hi = 1;
_smart.ri = 1;
};
width = 1156;
}
);
leftMetricsKey = "ra-ethiopic";
rightMetricsKey = "ra-ethiopic";
unicode = 134A;
},
{
glyphname = "faa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 709, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.haa = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 757, -387}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.haa = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 726, -391}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.haa = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 699, -407}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.haa = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 623, -431}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.haa = 1;
};
width = 1156;
}
);
unicode = 134B;
},
{
glyphname = "fee-ethiopic";
lastChange = "2020-12-17 00:31:22 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
},
{
name = _smart.hee;
transform = "{0.73857, 0, 0, 0.73857, 1040, 421}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.hee = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
},
{
name = _smart.hee;
transform = "{0.66761, 0, 0, 0.66761, 1095, 412}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.hee = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
},
{
name = _smart.hee;
transform = "{0.81707, 0, 0, 0.81707, 1008, 353}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.hee = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
},
{
name = _smart.hee;
transform = "{0.75364, 0, 0, 0.75364, 1198, 424}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.hee = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
},
{
name = _smart.hee;
transform = "{0.83375, 0, 0, 0.83375, 992, 327}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.hee = 1;
};
width = 1156;
}
);
unicode = 134C;
},
{
glyphname = "fe-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 587, 925}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.hat = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 622, 948}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.hat = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 939}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.hat = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 805, 949}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.hat = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 689, 939}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.hat = 1;
};
width = 1156;
}
);
unicode = 134D;
},
{
glyphname = "fo-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1114, -102}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1064, -171}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 935, -98}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1016, -211}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 887, -98}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 1156;
}
);
unicode = 134E;
},
{
glyphname = "fwa-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 326, 57}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 587, 925}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 688, -364}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 353, 47}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 622, 948}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 709, -334}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 17}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 524, 939}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 696, -364}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 47}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 805, 949}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 643, -404}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 360, 16}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 689, 939}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 565, -388}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.hat = 1;
_smart.hwa = 1;
};
width = 1156;
}
);
unicode = 134F;
},
{
glyphname = "pa-ethiopic";
lastChange = "2020-12-14 08:55:35 +0000";
layers = (
{
components = (
{
name = pa.base;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 801;
},
{
components = (
{
name = pa.base;
}
);
layerId = m002;
width = 784;
},
{
components = (
{
name = pa.base;
}
);
layerId = m003;
width = 735;
},
{
components = (
{
name = pa.base;
}
);
layerId = m004;
width = 784;
},
{
components = (
{
name = pa.base;
}
);
layerId = m005;
width = 735;
}
);
unicode = 1350;
},
{
glyphname = "pu-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 463, -299}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 458, -298}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 378, -298}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 404, -298}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 325, -298}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
};
width = 735;
}
);
unicode = 1351;
},
{
glyphname = "pi-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 488, 15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 465, -5}";
}
);
layerId = m002;
userData = {
_smart.hi = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 384, -77}";
}
);
layerId = m003;
userData = {
_smart.hi = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 464, -5}";
}
);
layerId = m004;
userData = {
_smart.hi = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 370, -77}";
}
);
layerId = m005;
userData = {
_smart.hi = 1;
};
width = 735;
}
);
unicode = 1352;
},
{
glyphname = "paa-ethiopic";
lastChange = "2020-12-14 20:10:37 +0000";
layers = (
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 79, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"333 0 LINE",
"333 160 LINE",
"70 160 LINE",
"70 0 LINE"
);
}
);
userData = {
_smart.haa.acute = 1;
};
width = 880;
},
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"342 0 LINE",
"342 112 LINE",
"70 112 LINE",
"70 0 LINE"
);
}
);
userData = {
_smart.haa.acute = 1;
};
width = 799;
},
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 7, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"355 0 LINE",
"355 45 LINE",
"98 45 LINE",
"98 0 LINE"
);
}
);
userData = {
_smart.haa.acute = 1;
};
width = 742;
},
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 5, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"151 0 LINE",
"171 112 LINE",
"-101 112 LINE",
"-121 0 LINE"
);
}
);
userData = {
_smart.haa.acute = 1;
};
width = 789;
},
{
components = (
{
name = pa.base;
transform = "{1, 0, 0, 1, 27, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"164 0 LINE",
"172 45 LINE",
"-85 45 LINE",
"-93 0 LINE"
);
}
);
userData = {
_smart.haa.acute = 1;
};
width = 762;
}
);
leftMetricsKey = "pa-ethiopic";
rightMetricsKey = "pa-ethiopic";
unicode = 1353;
},
{
glyphname = "pee-ethiopic";
lastChange = "2020-12-14 17:39:46 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 388, -299}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 471, -299}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 367, -328}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 417, -299}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 309, -328}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
};
width = 735;
}
);
unicode = 1354;
},
{
glyphname = "pe-ethiopic";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 601, -273}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 553, -302}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 445, -296}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 499, -302}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 393, -296}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
};
width = 735;
}
);
unicode = 1355;
},
{
glyphname = "po-ethiopic";
lastChange = "2020-12-16 04:14:05 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 319, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 332, -7}";
}
);
layerId = m002;
userData = {
_smart.haa.acute = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 323, -6}";
}
);
layerId = m003;
userData = {
_smart.haa.acute = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 331, -7}";
}
);
layerId = m004;
userData = {
_smart.haa.acute = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 323, -8}";
}
);
layerId = m005;
userData = {
_smart.haa.acute = 1;
};
width = 735;
}
);
unicode = 1356;
},
{
glyphname = "pwa-ethiopic";
lastChange = "2020-12-16 02:15:09 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 393, -356}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa = 1;
};
width = 801;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 362, -378}";
}
);
layerId = m002;
userData = {
_smart.hwa = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 325, -348}";
}
);
layerId = m003;
userData = {
_smart.hwa = 1;
};
width = 735;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 275, -428}";
}
);
layerId = m004;
userData = {
_smart.hwa = 1;
};
width = 784;
},
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 268, -348}";
}
);
layerId = m005;
userData = {
_smart.hwa = 1;
};
width = 735;
}
);
unicode = 1357;
},
{
glyphname = "rya-ethiopic";
lastChange = "2020-12-17 00:05:14 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 339, 1029}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1114, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left = 1;
_smart.ri = 1;
};
width = 1101;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 355, 1028}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1137, -26}";
}
);
layerId = m002;
userData = {
_smart.hat.left = 1;
_smart.ri = 1;
};
width = 1092;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 357, 1029}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 1071, -6}";
}
);
layerId = m003;
userData = {
_smart.hat.left = 1;
_smart.ri = 1;
};
width = 1157;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 548, 1029}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 984, 0}";
}
);
layerId = m004;
userData = {
_smart.hat.left = 1;
_smart.ri = 1;
};
width = 1166;
},
{
components = (
{
name = ra.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 545, 1029}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 970, 34}";
}
);
layerId = m005;
userData = {
_smart.hat.left = 1;
_smart.ri = 1;
};
width = 1156;
}
);
unicode = 1358;
},
{
glyphname = "ha-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1348;
},
{
components = (
{
name = ha.base.cap;
}
);
layerId = m002;
width = 1328;
},
{
components = (
{
name = ha.base.cap;
}
);
layerId = m003;
width = 1365;
},
{
components = (
{
name = ha.base.cap;
}
);
layerId = m004;
width = 1328;
},
{
components = (
{
name = ha.base.cap;
}
);
layerId = m005;
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "hu-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1166, 118}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu = 1;
_smart.hu.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1160, 119}";
}
);
layerId = m002;
userData = {
_smart.hu = 1;
_smart.hu.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1254, 119}";
}
);
layerId = m003;
userData = {
_smart.hu = 1;
_smart.hu.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1181, 119}";
}
);
layerId = m004;
userData = {
_smart.hu = 1;
_smart.hu.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1275, 119}";
}
);
layerId = m005;
userData = {
_smart.hu = 1;
_smart.hu.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "hi-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1100, -415}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1041, -322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1162, -365}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1115, -346}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1186, -397}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1111, -308}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1108, -365}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1054, -346}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1116, -397}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1057, -308}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "haa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1041, -322}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1115, -346}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1111, -308}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1054, -346}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1057, -308}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.haa.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "hee-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1003, -334}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee = 1;
_smart.hee.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1154, -321}";
}
);
layerId = m002;
userData = {
_smart.hee = 1;
_smart.hee.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1023, -329}";
}
);
layerId = m003;
userData = {
_smart.hee = 1;
_smart.hee.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1097, -321}";
}
);
layerId = m004;
userData = {
_smart.hee = 1;
_smart.hee.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 965, -329}";
}
);
layerId = m005;
userData = {
_smart.hee = 1;
_smart.hee.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "he-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 375, 1123}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.inner.cap = 1;
_smart.he.left.outer = 1;
};
width = 1348;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 299, 1124}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.inner.cap = 1;
_smart.he.left.outer = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 256, 1124}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.inner.cap = 1;
_smart.he.left.outer = 1;
};
width = 1365;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 497, 1124}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.inner.cap = 1;
_smart.he.left.outer = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 454, 1124}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
_smart.he.left.inner = 1;
_smart.he.left.inner.cap = 1;
_smart.he.left.outer = 1;
};
width = 1365;
}
);
},
{
glyphname = "ho-ethiopic.liga";
lastChange = "2020-12-14 06:09:50 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1272, 440}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1214, 386}";
}
);
layerId = m002;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1198, 384}";
}
);
layerId = m003;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1266, 386}";
}
);
layerId = m004;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1266, 384}";
}
);
layerId = m005;
userData = {
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "hoa-ethiopic.liga";
lastChange = "2020-12-14 06:10:52 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1272, 440}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 171, 1122}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.he.left.outer.cap = 1;
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1214, 386}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 168, 1122}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.he.left.outer.cap = 1;
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1198, 384}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 153, 1122}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.he.left.outer.cap = 1;
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1266, 386}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 366, 1122}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.he.left.outer.cap = 1;
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1328;
},
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1266, 384}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 351, 1122}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
_smart.he.left.outer = 1;
_smart.he.left.outer.cap = 1;
_smart.ho.ring = 1;
_smart.ho.ring.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "la-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = la.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1338;
},
{
components = (
{
name = la.base.cap;
}
);
layerId = m002;
width = 1304;
},
{
components = (
{
name = la.base.cap;
}
);
layerId = m003;
width = 1211;
},
{
components = (
{
name = la.base.cap;
}
);
layerId = m004;
width = 1304;
},
{
components = (
{
name = la.base.cap;
}
);
layerId = m005;
width = 1211;
}
);
},
{
glyphname = "lu-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 866, 113}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1338;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 817, 114}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 775, 114}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1211;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 837, 114}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 795, 114}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1211;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "li-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1246, 20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.hu.cap = 1;
};
width = 1338;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1249, -6}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.hu.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1194, -77}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.hu.cap = 1;
};
width = 1211;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1248, -6}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.hu.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1180, -77}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.hu.cap = 1;
};
width = 1211;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "laa-ethiopic.liga";
lastChange = "2020-12-16 02:58:52 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1205, -303}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1338;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1215, -352}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1138, -366}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1211;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1153, -352}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1080, -326}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 1211;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "lee-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1177, -278}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1338;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1231, -292}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1034, -251}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1211;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1180, -292}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 990, -251}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1211;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "le-ethiopic.liga";
lastChange = "2020-12-15 19:41:20 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1256, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring.uniq.cap = 1;
};
width = 1338;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1288, 544}";
}
);
layerId = m002;
userData = {
_smart.ho.ring.uniq.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1049, 70}";
}
);
layerId = m003;
userData = {
_smart.ho.ring.uniq.cap = 1;
};
width = 1211;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1287, 514}";
}
);
layerId = m004;
userData = {
_smart.ho.ring.uniq.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring.uniq;
transform = "{1, 0, 0, 1, 1073, 110}";
}
);
layerId = m005;
userData = {
_smart.ho.ring.uniq.cap = 1;
};
width = 1211;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "lo-ethiopic.liga";
lastChange = "2020-12-16 02:27:50 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1250, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring.cap = 1;
};
width = 1338;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1198, -35}";
}
);
layerId = m002;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1105, -7}";
}
);
layerId = m003;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1211;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1218, 5}";
}
);
layerId = m004;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1104, -7}";
}
);
layerId = m005;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1211;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "lwa-ethiopic.liga";
lastChange = "2020-12-16 02:59:23 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1157, -493}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1338;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1188, -400}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1146, -429}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1211;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1101, -440}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1304;
},
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1083, -359}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1211;
}
);
leftMetricsKey = A;
},
{
glyphname = "hha-ethiopic.liga";
lastChange = "2020-12-15 04:33:23 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
}
);
layerId = m002;
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
}
);
layerId = m003;
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
}
);
layerId = m004;
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
}
);
layerId = m005;
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
leftMetricsKey = M;
rightMetricsKey = M;
},
{
glyphname = "hhu-ethiopic.liga";
lastChange = "2020-12-15 04:33:36 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1647, 113}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1625, 114}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1621, 114}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1646, 114}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1641, 114}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "hhi-ethiopic.liga";
lastChange = "2020-12-15 04:33:36 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1629, -5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1623, -5}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1612, -77}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1623, -5}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1598, -77}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "hhaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1539, -347}";
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.neck.haa.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1556, -394}";
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.neck.haa.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1530, -365}";
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.neck.haa.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1486, -394}";
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.neck.haa.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1419, -365}";
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.neck.haa.caps.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "hhee-ethiopic.liga";
lastChange = "2020-12-15 04:33:36 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1493, -285}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1562, -285}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1438, -274}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1512, -285}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1390, -274}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "hhe-ethiopic.liga";
lastChange = "2020-12-15 04:33:36 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 678, 354}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 706, 334}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 753, 334}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 765, 334}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 812, 334}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "hho-ethiopic.liga";
lastChange = "2020-12-15 04:33:36 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 239, -398}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
_smart.ho.cap = 1;
_smart.ho.caps.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 249, -398}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
_smart.ho.cap = 1;
_smart.ho.caps.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 226, -398}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
_smart.ho.cap = 1;
_smart.ho.caps.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 179, -398}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
_smart.ho.cap = 1;
_smart.ho.caps.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 156, -398}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
_smart.ho.cap = 1;
_smart.ho.caps.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "hhwa-ethiopic.liga";
lastChange = "2020-12-15 04:33:36 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1790, -78}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1528, -397}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1839, 122}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1524, -416}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1766, 64}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1528, -377}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1859, 152}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1434, -456}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.neck.hha.caps;
transform = "{1, 0, 0, 1, 1806, 157}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1462, -377}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
leftMetricsKey = M;
},
{
glyphname = "ma-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1794;
},
{
components = (
{
name = ma.base.cap;
}
);
layerId = m002;
width = 1788;
},
{
components = (
{
name = ma.base.cap;
}
);
layerId = m003;
width = 1756;
},
{
components = (
{
name = ma.base.cap;
}
);
layerId = m004;
width = 1788;
},
{
components = (
{
name = ma.base.cap;
}
);
layerId = m005;
width = 1755;
}
);
},
{
glyphname = "mu-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1622, -117}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1794;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1594, -136}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1614, -176}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1756;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1570, -136}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1583, -176}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1755;
}
);
},
{
glyphname = "mi-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1597, -389}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1535, -305}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1794;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1601, -389}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1554, -344}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1580, -441}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1516, -338}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1756;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1533, -389}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1493, -344}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1502, -441}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1456, -338}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1755;
}
);
},
{
glyphname = "maa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1535, -305}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1794;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1554, -344}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1516, -338}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1756;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1493, -344}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1456, -338}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1755;
}
);
},
{
glyphname = "mee-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1474, -349}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1794;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1574, -339}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1510, -328}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1756;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1514, -339}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1452, -328}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1755;
}
);
},
{
glyphname = "me-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 367, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.bottom = 1;
};
width = 1794;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 596, 2}";
}
);
layerId = m002;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 517, 2}";
}
);
layerId = m003;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1756;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 596, 2}";
}
);
layerId = m004;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.he.acute.bottom;
transform = "{1, 0, 0, 1, 517, 2}";
}
);
layerId = m005;
userData = {
_smart.he.acute.bottom = 1;
};
width = 1755;
}
);
},
{
glyphname = "mo-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 374, -350}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
};
width = 1794;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 543, -350}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 472, -350}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
};
width = 1756;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 481, -350}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 410, -350}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
};
width = 1755;
}
);
},
{
glyphname = "mwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1538, -368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1794;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1528, -368}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1519, -368}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1756;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1446, -408}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1454, -368}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1755;
}
);
},
{
glyphname = "sza-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1791;
},
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
}
);
layerId = m002;
width = 1817;
},
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
}
);
layerId = m003;
width = 1855;
},
{
anchors = (
{
name = ho;
position = "{308, 6}";
}
);
components = (
{
name = sa.base.cap;
}
);
layerId = m004;
width = 1817;
},
{
anchors = (
{
name = ho;
position = "{308, 6}";
}
);
components = (
{
name = sa.base.cap;
}
);
layerId = m005;
width = 1855;
}
);
leftMetricsKey = W;
rightMetricsKey = W;
},
{
glyphname = "szu-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1608, -12}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1791;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1674, -11}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1709, -11}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1855;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1672, -11}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1707, -11}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1855;
}
);
leftMetricsKey = W;
},
{
glyphname = "szi-ethiopic.liga";
lastChange = "2020-12-15 23:41:32 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1438, -403}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1304, -338}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1791;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1442, -403}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1368, -357}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1441, -415}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1362, -361}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1855;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1371, -403}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1297, -367}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1367, -415}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1298, -368}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1855;
}
);
leftMetricsKey = W;
},
{
glyphname = "szaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1304, -338}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1791;
},
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1368, -357}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1817;
},
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1362, -361}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1855;
},
{
anchors = (
{
name = ho;
position = "{308, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1297, -367}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1817;
},
{
anchors = (
{
name = ho;
position = "{308, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1298, -368}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1855;
}
);
leftMetricsKey = W;
},
{
glyphname = "szee-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1247, -329}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1791;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1345, -319}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1287, -308}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1855;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1289, -319}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1233, -308}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1855;
}
);
leftMetricsKey = W;
rightMetricsKey = W;
},
{
glyphname = "sze-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 467, -339}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
};
width = 1791;
},
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 487, -339}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
};
width = 1817;
},
{
anchors = (
{
name = ho;
position = "{498, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 482, -339}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
};
width = 1855;
},
{
anchors = (
{
name = ho;
position = "{308, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 427, -339}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
};
width = 1817;
},
{
anchors = (
{
name = ho;
position = "{308, 6}";
}
);
components = (
{
name = sa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 422, -339}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
};
width = 1855;
}
);
leftMetricsKey = W;
},
{
glyphname = "szo-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
alignment = -1;
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 671, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
};
width = 1791;
},
{
components = (
{
name = sa.base.cap;
},
{
alignment = -1;
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 717, 0}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
alignment = -1;
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 695, 0}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1855;
},
{
components = (
{
name = sa.base.cap;
},
{
alignment = -1;
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 717, 0}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
alignment = -1;
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 695, 0}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1855;
}
);
leftMetricsKey = W;
},
{
glyphname = "szwa-ethiopic.liga";
lastChange = "2020-12-16 04:18:56 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1319, -449}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1791;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1340, -412}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1386, -319}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1855;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1250, -452}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1817;
},
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1317, -359}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1855;
}
);
leftMetricsKey = W;
},
{
glyphname = "ra-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1109;
},
{
components = (
{
name = ra.base.cap;
}
);
layerId = m002;
width = 1102;
},
{
components = (
{
name = ra.base.cap;
}
);
layerId = m003;
width = 1057;
},
{
components = (
{
name = ra.base.cap;
}
);
layerId = m004;
width = 1102;
},
{
components = (
{
name = ra.base.cap;
}
);
layerId = m005;
width = 1057;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
},
{
glyphname = "ru-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 711, -312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 746, -341}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 606, -335}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 686, -341}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 547, -335}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1057;
}
);
},
{
glyphname = "ri-ethiopic.liga";
lastChange = "2020-12-15 19:42:02 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{-1, 0, 0, 1, 1164, -896}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{-1, 0, 0, 1, 1179, -1013}";
}
);
layerId = m002;
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{-1, 0, 0, 1, 1099, -1090}";
}
);
layerId = m003;
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{-1, 0, 0, 1, 1047, -938}";
}
);
layerId = m004;
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{-1, 0, 0, 1, 986, -1035}";
}
);
layerId = m005;
width = 1057;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
},
{
glyphname = "raa-ethiopic.liga";
lastChange = "2020-12-15 19:42:26 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 530, -876}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 570, -964}";
}
);
layerId = m002;
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 670, -1108}";
}
);
layerId = m003;
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 433, -997}";
}
);
layerId = m004;
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 518, -1064}";
}
);
layerId = m005;
width = 1057;
}
);
},
{
glyphname = "ree-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1199, -179}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1151, -259}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -308}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1105, -259}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 931, -308}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1057;
}
);
},
{
glyphname = "re-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = na.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1095;
},
{
components = (
{
name = na.base.cap;
}
);
layerId = m002;
width = 1128;
},
{
components = (
{
name = na.base.cap;
}
);
layerId = m003;
width = 1124;
},
{
components = (
{
name = na.base.cap;
}
);
layerId = m004;
width = 1129;
},
{
components = (
{
name = na.base.cap;
}
);
layerId = m005;
width = 1125;
}
);
leftMetricsKey = C;
},
{
glyphname = "ro-ethiopic.liga";
lastChange = "2020-12-14 06:55:46 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1157, -135}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1131, -32}";
}
);
layerId = m002;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1174, 114}";
}
);
layerId = m003;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 18}";
}
);
layerId = m004;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1187, 104}";
}
);
layerId = m005;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "rwa-ethiopic.liga";
lastChange = "2020-12-15 19:42:52 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 530, -896}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 313, 1348}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 570, -1000}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 311, 1348}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 670, -1111}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 298, 1348}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 451, -989}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 549, 1348}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 516, -1116}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 536, 1348}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
};
width = 1057;
}
);
},
{
glyphname = "sa-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
}
);
layerId = m002;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
}
);
layerId = m003;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
}
);
layerId = m004;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
}
);
layerId = m005;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "su-ethiopic.liga";
lastChange = "2020-12-16 19:12:59 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1221, -102}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1215, -101}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1228, -101}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1199, -101}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1220, -101}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "si-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1181, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1170, -22}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1197, -74}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1168, -22}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1184, -74}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
},
{
glyphname = "saa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1114, -340}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.neck.caps = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1138, -369}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1145, -363}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1074, -369}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1081, -363}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "see-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1073, -290}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -290}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1010, -209}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1099, -290}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 973, -209}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "se-ethiopic.liga";
lastChange = "2020-12-15 23:37:01 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 644, 410}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 619, 395}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 681, 395}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 689, 395}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 750, 395}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "so-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 227, -390}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 221, -379}";
}
);
layerId = m002;
userData = {
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -369}";
}
);
layerId = m003;
userData = {
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, -379}";
}
);
layerId = m004;
userData = {
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 152, -369}";
}
);
layerId = m005;
userData = {
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "swa-ethiopic.liga";
lastChange = "2020-12-16 04:19:12 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1111, -406}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1115, -390}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1152, -345}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1030, -430}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1094, -373}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "sha-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "shu-ethiopic.liga";
lastChange = "2020-12-16 19:12:57 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1221, -102}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1215, -101}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1228, -101}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1199, -101}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1220, -101}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "shi-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1181, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1170, -22}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1197, -74}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1168, -22}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1184, -74}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "shaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1114, -340}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1138, -369}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1145, -363}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1074, -369}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1081, -363}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "shee-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1073, -290}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -290}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1010, -209}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1099, -290}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 973, -209}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "she-ethiopic.liga";
lastChange = "2020-12-15 23:37:05 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 644, 410}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 619, 395}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 681, 395}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 689, 395}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 750, 395}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "sho-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 227, -390}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 221, -379}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -369}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, -379}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 152, -369}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "shwa-ethiopic.liga";
lastChange = "2020-12-16 04:19:14 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 678, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1111, -406}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 674, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1115, -390}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 694, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1152, -345}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 677, 13}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1030, -430}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 701, 36}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1094, -373}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
},
{
glyphname = "qa-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
rightMetricsKey = O;
},
{
glyphname = "qu-ethiopic.liga";
lastChange = "2020-12-16 19:12:43 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1749, 75}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1653, 76}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1481, 76}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1667, 76}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1565, 76}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qi-ethiopic.liga";
lastChange = "2020-12-16 02:34:31 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1079, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1033, -378}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 898, -460}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 910, -368}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 834, -470}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qaa-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 973, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 902, -113}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 829, -93}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 873, -113}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 813, -93}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qee-ethiopic.liga";
lastChange = "2020-12-16 03:01:28 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1372, -430}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1388, -420}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1196, -379}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1340, -410}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -369}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qe-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 921, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 878, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 805, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 960, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 887, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qo-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1226, 540}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1165, 513}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1031, 541}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 563}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1128, 541}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qwaa-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1226, 540}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1165, 513}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 989, -342}";
}
);
layerId = m002;
userData = {
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1031, 541}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 847, -342}";
}
);
layerId = m003;
userData = {
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 563}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 863, -432}";
}
);
layerId = m004;
userData = {
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1128, 541}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 788, -342}";
}
);
layerId = m005;
userData = {
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qha-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qhu-ethiopic.liga";
lastChange = "2020-12-16 19:12:45 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1749, 75}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1653, 76}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1481, 76}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1667, 76}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1565, 76}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qhi-ethiopic.liga";
lastChange = "2020-12-16 02:34:31 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1079, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1033, -378}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 898, -460}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 910, -368}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 834, -470}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qhaa-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 973, -52}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 902, -113}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 829, -93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 873, -113}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 813, -93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qhee-ethiopic.liga";
lastChange = "2020-12-16 03:01:33 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1372, -430}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 984, -16}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1388, -420}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 927, -16}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1196, -379}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 846, 7}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1340, -410}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 925, -16}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -369}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 848, 7}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qhe-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 921, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 878, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 805, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 960, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 887, 460}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.acute.top.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qho-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1226, 540}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1165, 513}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1031, 541}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 563}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1128, 541}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "qhwaa-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1226, 540}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 890, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1165, 513}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 989, -342}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 899, 1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1031, 541}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 847, -342}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 563}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 863, -432}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 900, 1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1128, 541}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 788, -342}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 783, -6}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
_smart.hwa.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "ba-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1348;
},
{
components = (
{
name = ba.base.cap;
}
);
layerId = m002;
width = 1340;
},
{
components = (
{
name = ba.base.cap;
}
);
layerId = m003;
width = 1365;
},
{
components = (
{
name = ba.base.cap;
}
);
layerId = m004;
width = 1341;
},
{
components = (
{
name = ba.base.cap;
}
);
layerId = m005;
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "bu-ethiopic.liga";
lastChange = "2020-12-16 19:12:59 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1221, -102}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1215, -101}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1228, -101}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1199, -101}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1220, -101}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "bi-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1181, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1170, -22}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1197, -74}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1168, -22}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1184, -74}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "baa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1114, -340}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1138, -369}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1145, -363}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1074, -369}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1081, -363}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "bee-ethiopic.liga";
lastChange = "2020-12-13 10:32:30 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1073, -290}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -290}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1010, -209}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1099, -290}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 973, -209}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "be-ethiopic.liga";
lastChange = "2020-12-16 19:13:58 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 410, 813}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.left.inner.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 313, 813}";
}
);
layerId = m002;
userData = {
_smart.he.left.inner.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 280, 813}";
}
);
layerId = m003;
userData = {
_smart.he.left.inner.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 457, 813}";
}
);
layerId = m004;
userData = {
_smart.he.left.inner.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 424, 813}";
}
);
layerId = m005;
userData = {
_smart.he.left.inner.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "bo-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 227, -390}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 221, -379}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -369}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, -379}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 152, -369}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "bwa-ethiopic.liga";
lastChange = "2020-12-16 04:19:14 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1111, -406}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1115, -390}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1152, -345}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1030, -430}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1094, -373}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "va-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "vu-ethiopic.liga";
lastChange = "2020-12-16 19:12:59 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1221, -102}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1215, -101}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1228, -101}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1199, -101}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1220, -101}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
},
{
glyphname = "vi-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1181, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1170, -22}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1197, -74}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1168, -22}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1184, -74}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
},
{
glyphname = "vaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1114, -340}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1138, -369}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1145, -363}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1074, -369}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1081, -363}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "vee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1073, -290}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -290}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1010, -209}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1099, -290}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 973, -209}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ve-ethiopic.liga";
lastChange = "2020-12-16 19:13:49 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 410, 813}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.he.left.inner.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 313, 813}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.left.inner.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 280, 813}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.left.inner.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 457, 813}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.left.inner.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 424, 813}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.left.inner.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "vo-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 227, -390}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 221, -379}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -369}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, -379}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 152, -369}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "vwa-ethiopic.liga";
lastChange = "2020-12-16 04:19:14 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1111, -406}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 614, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1115, -390}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 646, 11}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1152, -345}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 561, 24}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1030, -430}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 649, 11}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1094, -373}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 565, 24}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ta-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
}
);
layerId = m002;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
}
);
layerId = m003;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
}
);
layerId = m004;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
}
);
layerId = m005;
userData = {
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "tu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 736, 15}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 712, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 713, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 715, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ti-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 761, -1}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 699, -1}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 669, -73}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 699, -1}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 656, -73}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "taa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 572, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 590, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 619, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 593, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 622, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "tee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 627, -297}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 723, -287}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 700, -256}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 672, -287}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 655, -256}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "te-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 570, 435}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 579, 425}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 608, 445}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 654, 425}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 686, 445}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = "T-24";
rightMetricsKey = T;
},
{
glyphname = "to-ethiopic.liga";
lastChange = "2020-12-15 18:42:27 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 894, 477}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 871, 450}";
}
);
layerId = m002;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 821, 558}";
}
);
layerId = m003;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 939, 470}";
}
);
layerId = m004;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 960, 558}";
}
);
layerId = m005;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "twa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 589, -420}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 616, -420}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 614, -400}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 525, -460}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 544, -400}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ca-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "cu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 736, 15}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 712, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 713, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 715, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, 16}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ci-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 761, -1}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 699, -1}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 669, -73}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 699, -1}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 656, -73}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "caa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 572, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 590, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 619, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 593, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 622, 19}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "cee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 627, -297}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 723, -287}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 700, -256}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 672, -287}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 655, -256}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "ce-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 570, 435}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.ho.ring.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 579, 425}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 608, 445}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.ho.ring.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 654, 425}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 686, 445}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.he.acute.top = 1;
_smart.ho.ring.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "co-ethiopic.liga";
lastChange = "2020-12-15 18:42:30 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 894, 477}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 871, 450}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 821, 558}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 939, 470}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 960, 558}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.ring.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "cwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 589, -420}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 620, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 523, -31}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 616, -420}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 614, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 614, -400}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 617, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 567, 82}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 525, -460}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 626, 70}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 579, -1}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 544, -400}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 633, 93}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 581, 82}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "xa-ethiopic.liga";
lastChange = "2020-12-16 04:08:38 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -290, 1524}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -215, 1524}";
}
);
layerId = m002;
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -277, 1524}";
}
);
layerId = m003;
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 54, 1524}";
}
);
layerId = m004;
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -8, 1524}";
}
);
layerId = m005;
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "xu-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 805, -13}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -290, 1524}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 808, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -215, 1524}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 787, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -277, 1524}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 806, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 54, 1524}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 784, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -8, 1524}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "xi-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 836, 20}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -290, 1524}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 821, -27}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -215, 1524}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 829, -62}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -277, 1524}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 817, -27}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 54, 1524}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 818, -62}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -8, 1524}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "xaa-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 650, 11}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -290, 1524}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 701, 11}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -215, 1524}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 682, 11}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -277, 1524}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 703, 11}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 54, 1524}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 684, 11}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -8, 1524}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "xee-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 671, -338}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -290, 1524}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 752, -328}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -215, 1524}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 650, -317}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -277, 1524}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 694, -328}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 54, 1524}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 594, -317}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -8, 1524}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "xe-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -290, 1524}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-242 904 LINE",
"-87 904 LINE",
"-87 1428 LINE",
"-242 1428 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -215, 1524}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-151 1045 LINE",
"-27 1045 LINE",
"-27 1499 LINE",
"-151 1499 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -277, 1524}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-78 1245 LINE",
"-46 1245 LINE",
"-46 1536 LINE",
"-78 1536 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 396, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 35, 1524}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-158 1045 LINE",
"-34 1045 LINE",
"47 1499 LINE",
"-77 1499 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 314, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 21, 1524}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-49 1245 LINE",
"-17 1245 LINE",
"34 1536 LINE",
"2 1536 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 955;
}
);
rightMetricsKey = N;
},
{
glyphname = "xo-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 951, -332}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -35, 1440}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.nose.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1010, -361}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 8, 1350}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.nose.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1028, -355}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 4, 1350}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.nose.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 946, -361}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 247, 1350}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.nose.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 242, 1350}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.nose.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "xwaa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -290, 1524}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"981 -399 LINE",
"981.069 6 LINE",
"322 6 LINE",
"322 -149 LINE {name = \"❌\";}",
"796.144 -149 LINE",
"800 -550 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.left = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 1048;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -215, 1524}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"967 -361 LINE",
"967 36 LINE {name = \"❌\";}",
"312 36 LINE",
"312 -78 LINE",
"860 -78 LINE",
"860 -465 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.left = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, -277, 1524}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"844 -288 LINE",
"844 43 LINE",
"329 43 LINE",
"329 -1 LINE",
"791.037 -1 LINE",
"791 -323 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.left = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 957;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 399, 1465}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 70, 1544}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"713 -361 LINE",
"783 36 LINE {name = \"❌\";}",
"128 36 LINE",
"107 -78 LINE",
"655 -78 LINE",
"587 -465 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.left = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 315, 1466}";
},
{
name = _smart.nose;
transform = "{1, 0, 0, 1, 3, 1524}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"602 -288 LINE",
"661 43 LINE",
"146 43 LINE",
"138 -1 LINE",
"600 -1 LINE",
"543 -323 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.left = 1;
_smart.neck.left.caps.cap = 1;
_smart.nose.cap = 1;
};
width = 957;
}
);
},
{
glyphname = "na-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
}
);
layerId = m002;
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
}
);
layerId = m003;
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
}
);
layerId = m004;
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
}
);
layerId = m005;
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "nu-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 805, -13}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 808, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 787, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 806, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 784, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "ni-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 836, 20}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 821, -27}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 829, -62}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 817, -27}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 818, -62}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "naa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 951, -332}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1010, -361}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1028, -355}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 946, -361}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "nee-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 671, -338}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 752, -328}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 650, -317}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 694, -328}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 594, -317}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "ne-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1070 -334 LINE",
"1017 423 LINE",
"758 404 LINE",
"811 -352 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 1130;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"985 -395 LINE",
"933 361 LINE",
"747 348 LINE",
"800 -408 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 1074;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"909 -381 LINE",
"830 384 LINE",
"778 369 LINE",
"858 -397 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"725 -395 LINE",
"806 361 LINE",
"618 348 LINE",
"537 -408 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 1074;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"651 -381 LINE",
"707 384 LINE",
"652 369 LINE",
"597 -397 LINE"
);
}
);
userData = {
_smart.neck.left.caps.cap = 1;
};
width = 1057;
}
);
leftMetricsKey = X;
},
{
glyphname = "no-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 951, -332}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1157, -135}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1010, -361}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1131, -32}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1028, -355}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1174, 114}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 946, -361}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 18}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1187, 104}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 1125;
}
);
},
{
glyphname = "nwa-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 953, -418}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 996, -388}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1041, -388}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 891, -444}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 973, -388}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "nya-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "nyu-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 805, -13}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 808, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 787, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 806, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 784, -12}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "nyi-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 836, 20}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 821, -27}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 829, -62}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 817, -27}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 818, -62}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "nyaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 951, -332}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 656, -83}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1010, -361}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 712, -83}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1028, -355}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 963, -100}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 946, -361}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 697, -83}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 945, -100}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "nyee-ethiopic.liga";
lastChange = "2020-12-16 04:09:10 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 671, -338}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 131, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 752, -328}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 135, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 650, -317}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 55, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 694, -328}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 393, 1466}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 594, -317}";
},
{
name = _smart.neck.left.caps;
transform = "{1, 0, 0, 1, 313, 1476}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "nye-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 320, -90}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1046 -423 LINE",
"987 260 LINE",
"785 242 LINE",
"844 -429 LINE"
);
}
);
userData = {
_smart.hat.caps = 1;
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 1111;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 420, -80}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"981 -375 LINE",
"958 308 LINE",
"815 304 LINE",
"838 -370 LINE"
);
}
);
userData = {
_smart.hat.caps = 1;
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 1067;
},
{
components = (
{
name = ga.base.cap;
transform = "{1, 0, 0, 1, 8, 0}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 358, -100}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"914 -374 LINE",
"855 298 LINE",
"811 301 LINE",
"870 -377 LINE"
);
}
);
userData = {
_smart.hat.caps = 1;
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 1065;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 420, -80}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"724 -375 LINE",
"822 308 LINE",
"678 304 LINE",
"582 -370 LINE"
);
}
);
userData = {
_smart.hat.caps = 1;
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 1067;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 350, -100}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"649 -374 LINE",
"709 298 LINE",
"665 301 LINE",
"605 -377 LINE"
);
}
);
userData = {
_smart.hat.caps = 1;
_smart.hat.caps.cap = 1;
_smart.neck.left.caps.cap = 1;
};
width = 1057;
}
);
leftMetricsKey = X;
},
{
glyphname = "nyo-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 951, -332}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 656, -83}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1157, -135}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1010, -361}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 712, -83}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1131, -32}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1028, -355}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 963, -100}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1174, 114}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 946, -361}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 697, -83}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 18}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 965, -355}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 945, -100}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1187, 104}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat.caps.cap = 1;
_smart.ho.ring = 1;
};
width = 1125;
}
);
},
{
glyphname = "nywa-ethiopic.liga";
lastChange = "2020-12-16 02:09:00 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 953, -418}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 656, -83}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 996, -388}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 712, -83}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1041, -388}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 963, -100}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 891, -444}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 697, -83}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 973, -388}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 945, -100}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "aGlottal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1254;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m002;
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m003;
width = 1112;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m004;
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m005;
width = 1112;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "uGlottal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 854, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1254;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 868, -2}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 798, -2}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1112;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 867, -2}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 797, -2}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1112;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "iGlottal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1254, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
};
width = 1254;
},
{
components = (
{
alignment = -1;
name = aGl.base.cap;
},
{
alignment = -1;
name = _smart.hi;
transform = "{1, 0, 0, 1, 1215, 0}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
};
width = 1295;
},
{
components = (
{
name = aGl.base.cap;
},
{
alignment = -1;
name = _smart.hi;
transform = "{1, 0, 0, 1, 1105, -80}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
};
width = 1225;
},
{
components = (
{
alignment = -1;
name = aGl.base.cap;
},
{
alignment = -1;
name = _smart.hi;
transform = "{1, 0, 0, 1, 1215, 0}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
};
width = 1295;
},
{
components = (
{
name = aGl.base.cap;
},
{
alignment = -1;
name = _smart.hi;
transform = "{1, 0, 0, 1, 1105, -80}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
};
width = 1225;
}
);
leftMetricsKey = A;
},
{
glyphname = "aaGlottal-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1119, -356}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1254;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1212, -386}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1040, -362}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1112;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1144, -386}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 976, -362}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1112;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "eeGlottal-ethiopic.liga";
lastChange = "2020-12-15 19:45:33 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1098, -320}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1254;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1255, -320}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1046, -329}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1112;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1167, -280}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 988, -329}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1112;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "eGlottal-ethiopic.liga";
lastChange = "2020-12-14 21:05:25 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-114 1443 LINE",
"120 1538 LINE",
"10 1810 LINE",
"-224 1715 LINE"
);
}
);
width = 1254;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-31 1496 LINE",
"140 1503 LINE",
"129 1797 LINE",
"-42 1790 LINE"
);
}
);
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-4 1487 LINE",
"45 1507 LINE",
"-59 1766 LINE",
"-108 1746 LINE"
);
}
);
width = 1112;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"81 1467 LINE",
"213 1472 LINE",
"254 1766 LINE",
"122 1761 LINE"
);
}
);
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"69 1478 LINE",
"118 1498 LINE",
"60 1775 LINE",
"11 1755 LINE"
);
}
);
width = 1112;
}
);
rightMetricsKey = A;
},
{
glyphname = "oGlottal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 120, -382}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
};
width = 1254;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 108, -382}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 66, -382}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
};
width = 1112;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 41, -382}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, -1, -382}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
};
width = 1112;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = "waGlottal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 178, 1665}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
};
width = 1254;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 232, 1665}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 220, 1665}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
};
width = 1112;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 526, 1665}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
};
width = 1304;
},
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 514, 1665}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
};
width = 1112;
}
);
rightMetricsKey = A;
},
{
glyphname = "ka-ethiopic.liga";
lastChange = "2020-12-16 01:54:51 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
}
);
layerId = m002;
userData = {
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
}
);
layerId = m003;
userData = {
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
}
);
layerId = m004;
userData = {
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
}
);
layerId = m005;
userData = {
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ku-ethiopic.liga";
lastChange = "2020-12-16 19:12:59 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1221, -102}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1215, -101}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1228, -101}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1199, -101}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1220, -101}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "ki-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1181, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1170, -22}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1197, -74}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1168, -22}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1184, -74}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "kaa-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1114, -340}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1138, -369}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1145, -363}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1074, -369}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1081, -363}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kee-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1073, -290}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -290}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1010, -209}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1099, -290}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 973, -209}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "ke-ethiopic.liga";
lastChange = "2020-12-16 19:13:47 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 410, 813}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 313, 813}";
}
);
layerId = m002;
userData = {
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 280, 813}";
}
);
layerId = m003;
userData = {
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 457, 813}";
}
);
layerId = m004;
userData = {
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 424, 813}";
}
);
layerId = m005;
userData = {
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "ko-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 227, -390}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 221, -379}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -369}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, -379}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 152, -369}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kwaa-ethiopic.liga";
lastChange = "2020-12-16 04:19:14 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1111, -406}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1115, -390}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1152, -345}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1030, -430}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1094, -373}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
},
{
glyphname = "kxa-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "kxu-ethiopic.liga";
lastChange = "2020-12-16 19:12:59 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1221, -102}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1215, -101}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1228, -101}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1199, -101}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1220, -101}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
_smart.hu.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "kxi-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1181, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1170, -22}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1197, -74}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1168, -22}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1184, -74}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
_smart.hi.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
},
{
glyphname = "kxaa-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1114, -340}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1138, -369}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1145, -363}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1074, -369}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1081, -363}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "kxee-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1073, -290}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -290}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1010, -209}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1099, -290}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 973, -209}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
_smart.hee.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "kxe-ethiopic.liga";
lastChange = "2020-12-16 19:13:49 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 410, 813}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 313, 813}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 280, 813}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 457, 813}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
},
{
name = _smart.he.left.inner;
transform = "{1, 0, 0, 1, 424, 813}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
_smart.he.left.inner.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "kxo-ethiopic.liga";
lastChange = "2020-12-16 01:54:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 227, -390}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 221, -379}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 217, -369}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, -379}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 152, -369}";
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hat.left.cap = 1;
_smart.ho.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "kxwaa-ethiopic.liga";
lastChange = "2020-12-16 04:19:14 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1294, -8}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 218, 1644}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1111, -406}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.left.cap = 1;
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1348;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1314, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 252, 1673}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1115, -390}";
}
);
layerId = m002;
userData = {
_smart.hat.left.cap = 1;
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1340;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1349, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 274, 1543}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1152, -345}";
}
);
layerId = m003;
userData = {
_smart.hat.left.cap = 1;
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1315, -4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 532, 1673}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1030, -430}";
}
);
layerId = m004;
userData = {
_smart.hat.left.cap = 1;
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1341;
},
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.caps;
transform = "{1, 0, 0, 1, 1353, 24}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 546, 1543}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1094, -373}";
}
);
layerId = m005;
userData = {
_smart.hat.left.cap = 1;
_smart.hwa.cap = 1;
_smart.ka.caps.cap = 1;
};
width = 1365;
}
);
rightMetricsKey = U;
},
{
glyphname = "wa-ethiopic.liga";
lastChange = "2020-12-16 02:08:04 +0000";
layers = (
{
anchors = (
{
name = hi;
position = "{1101, -251}";
}
);
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1898;
},
{
anchors = (
{
name = hi;
position = "{989, -251}";
}
);
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 989, -342}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1810;
},
{
anchors = (
{
name = hi;
position = "{952, -291}";
}
);
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 847, -342}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1660;
},
{
anchors = (
{
name = hi;
position = "{754, -251}";
}
);
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 863, -432}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1811;
},
{
anchors = (
{
name = hi;
position = "{710, -291}";
}
);
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 788, -342}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1661;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "wu-ethiopic.liga";
lastChange = "2020-12-16 19:12:59 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1749, 75}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1653, 76}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1481, 76}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1667, 76}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1565, 76}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "wi-ethiopic.liga";
lastChange = "2020-12-16 02:34:25 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1079, -408}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1033, -378}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 898, -460}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 910, -368}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 834, -470}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1661;
}
);
rightMetricsKey = O;
},
{
glyphname = "waa-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 949, -319}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 944, -348}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 821, -372}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 844, -348}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 756, -372}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1661;
}
);
rightMetricsKey = O;
},
{
glyphname = "wee-ethiopic.liga";
lastChange = "2020-12-16 03:01:33 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1372, -430}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1388, -420}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1196, -379}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1340, -410}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1149, -369}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1661;
}
);
rightMetricsKey = O;
},
{
glyphname = "we-ethiopic.liga";
lastChange = "2020-12-16 19:12:59 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1749, 75}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1653, 76}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1481, 76}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1667, 76}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1565, 76}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1661;
}
);
},
{
glyphname = "wo-ethiopic.liga";
lastChange = "2020-12-16 00:00:32 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 973, -52}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 902, -113}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 829, -93}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 873, -113}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 813, -93}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1661;
}
);
rightMetricsKey = O;
},
{
glyphname = "woa-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 987, -342}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1898;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 989, -342}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1810;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 847, -342}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1660;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 863, -432}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1811;
},
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 788, -342}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1661;
}
);
rightMetricsKey = O;
},
{
glyphname = "aPharyngeal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
}
);
layerId = m002;
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
}
);
layerId = m003;
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
}
);
layerId = m004;
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
}
);
layerId = m005;
width = 1363;
}
);
},
{
glyphname = "uPharyngeal-ethiopic.liga";
lastChange = "2020-12-14 09:21:59 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1304, -37}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1291, 4}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1286, 104}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1291, 4}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1304, 104}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1363;
}
);
},
{
glyphname = "iPharyngeal-ethiopic.liga";
lastChange = "2020-12-16 02:39:41 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1041, -407}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 903, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 971, -358}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 898, -344}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 921, -429}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -338}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 919, -417}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 838, -394}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 845, -429}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 803, -338}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
};
width = 1363;
}
);
rightMetricsKey = O;
},
{
glyphname = "aaPharyngeal-ethiopic.liga";
lastChange = "2020-12-16 02:39:03 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 903, -345}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 898, -344}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -338}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 838, -394}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 803, -338}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1363;
}
);
rightMetricsKey = O;
},
{
glyphname = "eePharyngeal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 890, -388}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 966, -378}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 854, -367}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 899, -378}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 790, -367}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1363;
}
);
rightMetricsKey = O;
},
{
glyphname = "ePharyngeal-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 665, 1475}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1425}";
}
);
layerId = m002;
userData = {
_smart.neck.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 714, 1425}";
}
);
layerId = m003;
userData = {
_smart.neck.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 943, 1425}";
}
);
layerId = m004;
userData = {
_smart.neck.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 965, 1425}";
}
);
layerId = m005;
userData = {
_smart.neck.cap = 1;
};
width = 1363;
}
);
rightMetricsKey = O;
},
{
glyphname = "oPharyngeal-ethiopic.liga";
lastChange = "2020-12-16 02:40:44 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 725, -96}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 733, -69}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 735, -109}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 639, -99}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 641, -129}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1363;
}
);
rightMetricsKey = O;
},
{
glyphname = "za-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = ho;
position = "{253, 29}";
}
);
components = (
{
name = za.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1447;
},
{
anchors = (
{
name = ho;
position = "{253, 29}";
}
);
components = (
{
name = za.base.cap;
}
);
layerId = m002;
width = 1460;
},
{
anchors = (
{
name = ho;
position = "{253, 29}";
}
);
components = (
{
name = za.base.cap;
}
);
layerId = m003;
width = 1438;
},
{
anchors = (
{
name = ho;
position = "{67, 29}";
}
);
components = (
{
name = za.base.cap;
}
);
layerId = m004;
width = 1460;
},
{
anchors = (
{
name = ho;
position = "{67, 29}";
}
);
components = (
{
name = za.base.cap;
}
);
layerId = m005;
width = 1438;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1271, 33}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1284, 34}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1265, 34}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1290, 34}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1270, 34}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1438;
}
);
leftMetricsKey = H;
},
{
glyphname = "zi-ethiopic.liga";
lastChange = "2020-12-14 09:21:31 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1323, 24}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1298, -16}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1278, -68}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1298, 4}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1266, -68}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
};
width = 1438;
}
);
leftMetricsKey = H;
},
{
glyphname = "zaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1188, -352}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1228, -371}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1202, -365}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1162, -371}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1137, -365}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1438;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zee-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1190, -362}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1230, -272}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1100, -251}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1182, -272}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1056, -251}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1438;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "ze-ethiopic.liga";
lastChange = "2020-12-16 03:32:51 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 297, 444}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 300, 444}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 295, 444}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 299, 444}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 294, 444}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
};
width = 1438;
}
);
rightMetricsKey = H;
},
{
glyphname = "zo-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 243, -399}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 252, -379}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 229, -408}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 185, -379}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 157, -408}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
};
width = 1438;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
glyphname = "zwa-ethiopic.liga";
lastChange = "2020-12-16 02:03:45 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1194, -445}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1194, -395}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1207, -405}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1108, -475}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1136, -405}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1438;
}
);
leftMetricsKey = H;
},
{
glyphname = "zha-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
}
);
layerId = m002;
userData = {
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
}
);
layerId = m003;
userData = {
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
}
);
layerId = m004;
userData = {
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
}
);
layerId = m005;
userData = {
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "zhu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1271, 33}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1284, 34}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1265, 34}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1290, 34}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1270, 34}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "zhi-ethiopic.liga";
lastChange = "2020-12-14 09:25:04 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1323, 24}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1298, -16}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1278, -68}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1298, 4}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1266, -68}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "zhaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1188, -352}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1228, -371}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1202, -365}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1162, -371}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1137, -365}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "zhee-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1190, -362}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1230, -272}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1100, -251}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1182, -272}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1056, -251}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "zhe-ethiopic.liga";
lastChange = "2020-12-16 03:33:29 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 297, 444}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.acute.top = 1;
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 300, 444}";
}
);
layerId = m002;
userData = {
_smart.he.acute.top = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 295, 444}";
}
);
layerId = m003;
userData = {
_smart.he.acute.top = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 299, 444}";
}
);
layerId = m004;
userData = {
_smart.he.acute.top = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
},
{
name = _smart.he.acute.top;
transform = "{1, 0, 0, 1, 294, 444}";
}
);
layerId = m005;
userData = {
_smart.he.acute.top = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "zho-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 243, -399}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 252, -379}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 229, -408}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 185, -379}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 157, -408}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "zhwa-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1194, -445}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1085, 499}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1447;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1194, -395}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1095, 499}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1207, -405}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1079, 499}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1108, -475}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1183, 499}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1460;
},
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1136, -405}";
},
{
name = _smart.zha.caps;
transform = "{1, 0, 0, 1, 1166, 499}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
_smart.zha.caps.cap = 1;
};
width = 1438;
}
);
},
{
glyphname = "ya-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1321;
},
{
components = (
{
name = ya.base.cap;
}
);
layerId = m002;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
}
);
layerId = m003;
width = 1230;
},
{
components = (
{
name = ya.base.cap;
}
);
layerId = m004;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
}
);
layerId = m005;
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -582, -443}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -685, -459}";
}
);
layerId = m002;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -718, -460}";
}
);
layerId = m003;
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -685, -459}";
}
);
layerId = m004;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -718, -460}";
}
);
layerId = m005;
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yi-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -282, -493}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 400, -1040}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.57358, -0.81915, 0.81915, 0.57358, -521, -292}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 300, -1000}";
}
);
layerId = m002;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -557, -450}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 256, -970}";
}
);
layerId = m003;
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.71934, -0.69466, 0.69466, 0.71934, -546, -533}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 140, -1000}";
}
);
layerId = m004;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -687, -460}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 110, -1000}";
}
);
layerId = m005;
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yaa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, -180, -1530}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, -170, -1540}";
}
);
layerId = m002;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, -120, -1539}";
}
);
layerId = m003;
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, -440, -1540}";
}
);
layerId = m004;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, -391, -1539}";
}
);
layerId = m005;
width = 1230;
}
);
rightMetricsKey = P;
},
{
glyphname = "yee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1078, -700}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 937, -870}";
}
);
layerId = m002;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 731, -800}";
}
);
layerId = m003;
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 937, -870}";
}
);
layerId = m004;
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 731, -800}";
}
);
layerId = m005;
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ye-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
transform = "{1, 0, 0, 1, 63, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"301 -194 LINE",
"292 -133 OFFCURVE",
"324 -93 OFFCURVE",
"370 -87 CURVE SMOOTH",
"481 -71 OFFCURVE",
"718 -125 OFFCURVE",
"852 -106 CURVE SMOOTH",
"978 -88 OFFCURVE",
"1061 89 OFFCURVE",
"1040 239 CURVE",
"873 227 LINE",
"881 166 OFFCURVE",
"847 77 OFFCURVE",
"801 71 CURVE SMOOTH",
"681 54 OFFCURVE",
"429 104 OFFCURVE",
"319 89 CURVE SMOOTH",
"194 71 OFFCURVE",
"112 -60 OFFCURVE",
"134 -217 CURVE"
);
}
);
width = 1384;
},
{
components = (
{
name = ya.base.cap;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"295 -211 LINE",
"286 -146 OFFCURVE",
"324 -93 OFFCURVE",
"378 -86 CURVE SMOOTH",
"504 -68 OFFCURVE",
"809 -121 OFFCURVE",
"954 -101 CURVE SMOOTH",
"1076 -84 OFFCURVE",
"1154 86 OFFCURVE",
"1134 229 CURVE",
"1009 223 LINE",
"1017 164 OFFCURVE",
"982 46 OFFCURVE",
"926 38 CURVE SMOOTH",
"816 22 OFFCURVE",
"468 70 OFFCURVE",
"349 54 CURVE SMOOTH",
"226 36 OFFCURVE",
"152 -80 OFFCURVE",
"172 -228 CURVE"
);
}
);
width = 1358;
},
{
components = (
{
name = ya.base.cap;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"258 -188 LINE",
"243 -114 OFFCURVE",
"278 -56 OFFCURVE",
"351 -41 CURVE SMOOTH",
"459 -18 OFFCURVE",
"816 -70 OFFCURVE",
"951 -41 CURVE SMOOTH",
"1049 -20 OFFCURVE",
"1107 141 OFFCURVE",
"1084 248 CURVE",
"1031 236 LINE",
"1047 159 OFFCURVE",
"1010 28 OFFCURVE",
"939 13 CURVE SMOOTH",
"836 -9 OFFCURVE",
"470 40 OFFCURVE",
"340 12 CURVE SMOOTH",
"240 -9 OFFCURVE",
"182 -95 OFFCURVE",
"205 -200 CURVE"
);
}
);
width = 1335;
},
{
components = (
{
name = ya.base.cap;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"67 -211 LINE",
"69 -146 OFFCURVE",
"117 -93 OFFCURVE",
"172 -86 CURVE SMOOTH",
"301 -68 OFFCURVE",
"597 -121 OFFCURVE",
"745 -101 CURVE SMOOTH",
"870 -84 OFFCURVE",
"978 86 OFFCURVE",
"984 229 CURVE",
"858 223 LINE",
"855 164 OFFCURVE",
"799 46 OFFCURVE",
"742 38 CURVE SMOOTH",
"629 22 OFFCURVE",
"290 70 OFFCURVE",
"168 54 CURVE SMOOTH",
"42 36 OFFCURVE",
"-53 -80 OFFCURVE",
"-59 -228 CURVE"
);
}
);
width = 1358;
},
{
components = (
{
name = ya.base.cap;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"34 -188 LINE",
"32 -114 OFFCURVE",
"77 -56 OFFCURVE",
"153 -41 CURVE SMOOTH",
"265 -18 OFFCURVE",
"613 -70 OFFCURVE",
"753 -41 CURVE SMOOTH",
"855 -20 OFFCURVE",
"941 141 OFFCURVE",
"937 248 CURVE",
"882 236 LINE",
"884 159 OFFCURVE",
"824 28 OFFCURVE",
"751 13 CURVE SMOOTH",
"644 -9 OFFCURVE",
"286 40 OFFCURVE",
"151 12 CURVE SMOOTH",
"48 -9 OFFCURVE",
"-26 -95 OFFCURVE",
"-21 -200 CURVE"
);
}
);
width = 1335;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yo-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1480, 1055}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1405, 1050}";
}
);
layerId = m002;
userData = {
_smart.he.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1286, 1062}";
}
);
layerId = m003;
userData = {
_smart.he.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1590, 1050}";
}
);
layerId = m004;
userData = {
_smart.he.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1473, 1062}";
}
);
layerId = m005;
userData = {
_smart.he.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "yoa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1480, 1055}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 260, 1507}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he.cap = 1;
_smart.he.left.outer.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1405, 1050}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 250, 1507}";
}
);
layerId = m002;
userData = {
_smart.he.cap = 1;
_smart.he.left.outer.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1286, 1062}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 220, 1567}";
}
);
layerId = m003;
userData = {
_smart.he.cap = 1;
_smart.he.left.outer.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1590, 1050}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 516, 1507}";
}
);
layerId = m004;
userData = {
_smart.he.cap = 1;
_smart.he.left.outer.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1473, 1062}";
},
{
name = _smart.he.left.outer;
transform = "{1, 0, 0, 1, 496, 1567}";
}
);
layerId = m005;
userData = {
_smart.he.cap = 1;
_smart.he.left.outer.cap = 1;
};
width = 1230;
}
);
},
{
glyphname = "da-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "du-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1156, -649}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1113, -638}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 979, -628}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -638}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 868, -628}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "di-ethiopic.liga";
lastChange = "2020-12-14 09:25:04 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1291, -10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1209, -40}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1123, -112}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1192, -40}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1103, -119}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "daa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1154, -301}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1140, -330}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1043, -324}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1082, -330}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 986, -324}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1208, -357}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1197, -307}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 928, -226}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1143, -307}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 888, -226}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "de-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1480, 1055}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1405, 1050}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1286, 1062}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1590, 1050}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1473, 1062}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "do-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 245, -376}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 249, -374}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 230, -375}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 183, -374}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 164, -375}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1162, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1119, -420}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1057, -370}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1028, -460}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 992, -370}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dda-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1156, -649}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1113, -638}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 979, -628}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -638}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 868, -628}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddi-ethiopic.liga";
lastChange = "2020-12-14 09:25:04 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1291, -10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1209, -40}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1123, -112}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1192, -40}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1103, -119}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1154, -301}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1140, -330}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1043, -324}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1082, -330}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 986, -324}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1208, -357}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1197, -307}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 928, -226}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1143, -307}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 888, -226}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "dde-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1480, 1055}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1405, 1050}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1286, 1062}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1590, 1050}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1473, 1062}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddo-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 245, -376}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 249, -374}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 230, -375}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 183, -374}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 164, -375}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ddwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1162, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1119, -420}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1057, -370}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1028, -460}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 992, -370}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
},
{
glyphname = "ja-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ju-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1156, -649}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1113, -638}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 979, -628}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1000, -638}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 868, -628}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ji-ethiopic.liga";
lastChange = "2020-12-14 09:20:42 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1291, -10}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1209, -40}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1123, -112}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1192, -40}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1103, -119}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
},
{
glyphname = "jaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1154, -301}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1140, -330}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1043, -324}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1082, -330}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 986, -324}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.haa.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "jee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1208, -357}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1197, -307}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 928, -226}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1143, -307}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 888, -226}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "je-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1480, 1055}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1405, 1050}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1286, 1062}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1590, 1050}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1473, 1062}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.he.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
},
{
glyphname = "jo-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 245, -376}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 249, -374}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 230, -375}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 183, -374}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 164, -375}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "jwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 19, -7}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 662, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 630, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1162, -370}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1321;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 126, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 654, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 597, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1119, -420}";
}
);
layerId = m002;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 9, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 625, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 593, 28}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1057, -370}";
}
);
layerId = m003;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 121, -28}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 657, 18}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 5}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1028, -460}";
}
);
layerId = m004;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1292;
},
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.da.caps;
transform = "{1, 0, 0, 1, 2, -37}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 632, 41}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 598, 28}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 992, -370}";
}
);
layerId = m005;
userData = {
_smart.da.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
},
{
glyphname = "ga-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "gu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 805, -13}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 808, -12}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 787, -12}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 806, -12}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 784, -12}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "gi-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 836, 20}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 821, -27}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 829, -62}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 817, -27}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 818, -62}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "gaa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 650, 11}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 701, 11}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 682, 11}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 703, 11}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 684, 11}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "gee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 671, -338}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 752, -328}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 650, -317}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 694, -328}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 594, -317}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 955;
}
);
},
{
glyphname = "ge-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 270, 843}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.ring.cap = 1;
};
width = 1048;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 420, 977}";
}
);
layerId = m002;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 200, 1093}";
}
);
layerId = m003;
userData = {
_smart.ho.ring.cap = 1;
};
width = 957;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 420, 977}";
}
);
layerId = m004;
userData = {
_smart.ho.ring.cap = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 200, 1093}";
}
);
layerId = m005;
userData = {
_smart.ho.ring.cap = 1;
};
width = 957;
}
);
},
{
glyphname = "go-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.caps = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
}
);
layerId = m002;
userData = {
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
}
);
layerId = m003;
userData = {
_smart.neck.caps = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
}
);
layerId = m004;
userData = {
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
}
);
layerId = m005;
userData = {
_smart.neck.caps = 1;
};
width = 955;
}
);
},
{
glyphname = "gwaa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hat;
transform = "{1, 0, 0, 1, 648, 0}";
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 858, -350}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1048;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hat;
transform = "{1, 0, 0, 1, 547, -60}";
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 907, -275}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hat;
transform = "{1, 0, 0, 1, 657, -100}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 887, -280}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 957;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hat;
transform = "{1, 0, 0, 1, 547, -60}";
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 907, -275}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.hat;
transform = "{1, 0, 0, 1, 657, -100}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 887, -280}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 957;
}
);
},
{
glyphname = "gga-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 955;
}
);
},
{
glyphname = "ggu-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 805, -13}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps = 1;
_smart.hu.cap = 1;
_smart.neck.caps = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 808, -12}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps = 1;
_smart.hu.cap = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 787, -12}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps = 1;
_smart.hu.cap = 1;
_smart.neck.caps = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 806, -12}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps = 1;
_smart.hu.cap = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 784, -12}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps = 1;
_smart.hu.cap = 1;
_smart.neck.caps = 1;
};
width = 955;
}
);
},
{
glyphname = "ggi-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 836, 20}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps = 1;
_smart.hi.cap = 1;
_smart.neck.caps = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 821, -27}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps = 1;
_smart.hi.cap = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 829, -62}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps = 1;
_smart.hi.cap = 1;
_smart.neck.caps = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 817, -27}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps = 1;
_smart.hi.cap = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 818, -62}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps = 1;
_smart.hi.cap = 1;
_smart.neck.caps = 1;
};
width = 955;
}
);
},
{
glyphname = "ggaa-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 650, 11}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 701, 11}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 682, 11}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 703, 11}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 684, 11}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
_smart.hat.caps = 1;
_smart.neck.caps = 1;
};
width = 955;
}
);
},
{
glyphname = "ggee-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 671, -338}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps = 1;
_smart.hee.cap = 1;
_smart.neck.caps = 1;
};
width = 981;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 752, -328}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.hat.caps = 1;
_smart.hee.cap = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 650, -317}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.hat.caps = 1;
_smart.hee.cap = 1;
_smart.neck.caps = 1;
};
width = 956;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 694, -328}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.hat.caps = 1;
_smart.hee.cap = 1;
_smart.neck.caps = 1;
};
width = 982;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 594, -317}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.hat.caps = 1;
_smart.hee.cap = 1;
_smart.neck.caps = 1;
};
width = 955;
}
);
},
{
glyphname = "gge-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 231, 922}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps = 1;
_smart.ho.ring.cap = 1;
_smart.neck.caps = 1;
};
width = 1048;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 392, 1002}";
}
);
layerId = m002;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring.cap = 1;
_smart.neck.caps = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 220, 1083}";
}
);
layerId = m003;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring.cap = 1;
_smart.neck.caps = 1;
};
width = 957;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 392, 1002}";
}
);
layerId = m004;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring.cap = 1;
_smart.neck.caps = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
},
{
alignment = -1;
name = _smart.hee;
transform = "{1, 0, 0, 1, 220, 1083}";
}
);
layerId = m005;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring.cap = 1;
_smart.neck.caps = 1;
};
width = 957;
}
);
},
{
glyphname = "ggo-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{0.7386, 0, 0, 0.7386, 683, 787}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps = 1;
_smart.ho.ring = 1;
};
width = 1048;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{0.769, 0, 0, 0.769, 579, 619}";
}
);
layerId = m002;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{0.769, 0, 0, 0.769, 551, 767}";
}
);
layerId = m003;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring = 1;
};
width = 957;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{0.769, 0, 0, 0.769, 579, 619}";
}
);
layerId = m004;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
},
{
alignment = -1;
name = _smart.ho.ring;
transform = "{0.769, 0, 0, 0.769, 551, 767}";
}
);
layerId = m005;
userData = {
_smart.hat.caps = 1;
_smart.ho.ring = 1;
};
width = 957;
}
);
},
{
glyphname = "ggwaa-ethiopic.liga";
lastChange = "2020-12-15 18:31:52 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 878, -340}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 648, -150}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 192, -4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa = 1;
_smart.hat.caps = 1;
_smart.hat.left = 1;
_smart.neck.caps = 1;
};
width = 1048;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 907, -350}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 637, -130}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 26}";
}
);
layerId = m002;
userData = {
_smart.haa = 1;
_smart.hat.caps = 1;
_smart.hat.left = 1;
_smart.neck.caps = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 917, -310}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 719, -106}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 360, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 242, 11}";
}
);
layerId = m003;
userData = {
_smart.haa = 1;
_smart.hat.caps = 1;
_smart.hat.left = 1;
_smart.neck.caps = 1;
};
width = 957;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 907, -350}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 637, -130}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 367, 1}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 268, 26}";
}
);
layerId = m004;
userData = {
_smart.haa = 1;
_smart.hat.caps = 1;
_smart.hat.left = 1;
_smart.neck.caps = 1;
};
width = 1027;
},
{
components = (
{
name = ga.base.cap;
},
{
alignment = -1;
name = _smart.haa;
transform = "{1, 0, 0, 1, 917, -310}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 719, -106}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 364, 24}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 224, 11}";
}
);
layerId = m005;
userData = {
_smart.haa = 1;
_smart.hat.caps = 1;
_smart.hat.left = 1;
_smart.neck.caps = 1;
};
width = 957;
}
);
},
{
glyphname = "tha-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1794;
},
{
components = (
{
name = hha.base.cap;
}
);
layerId = m002;
width = 1788;
},
{
components = (
{
name = hha.base.cap;
}
);
layerId = m003;
width = 1756;
},
{
components = (
{
name = hha.base.cap;
}
);
layerId = m004;
width = 1788;
},
{
components = (
{
name = hha.base.cap;
}
);
layerId = m005;
width = 1756;
}
);
},
{
glyphname = "thu-ethiopic.liga";
lastChange = "2020-12-14 09:25:04 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1647, 113}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1625, 114}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1621, 114}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1646, 114}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1641, 114}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "thi-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1629, -5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1623, -5}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1612, -77}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1623, -5}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1598, -77}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "thaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1539, -347}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1556, -394}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1530, -365}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1486, -394}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1419, -365}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "thee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1493, -285}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1562, -285}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1438, -274}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1512, -285}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1390, -274}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "the-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 1117, 9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 1086, 9}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 977, 9}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 1087, 9}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 978, 9}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "tho-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 239, -398}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 249, -398}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 226, -398}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 179, -398}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 156, -398}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "thwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1528, -397}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1524, -416}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1528, -377}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1434, -456}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1462, -377}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "cha-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
}
);
layerId = m002;
userData = {
_smart.cha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
}
);
layerId = m003;
userData = {
_smart.cha.caps.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
}
);
layerId = m004;
userData = {
_smart.cha.caps.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
}
);
layerId = m005;
userData = {
_smart.cha.caps.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "chu-ethiopic.liga";
lastChange = "2020-12-14 09:20:08 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1647, 113}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1625, 114}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
}
);
layerId = m002;
userData = {
_smart.cha.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1621, 114}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
}
);
layerId = m003;
userData = {
_smart.cha.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1646, 114}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
}
);
layerId = m004;
userData = {
_smart.cha.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1641, 114}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
}
);
layerId = m005;
userData = {
_smart.cha.caps.cap = 1;
_smart.hu.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "chi-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1629, -5}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1623, -5}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
}
);
layerId = m002;
userData = {
_smart.cha.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1612, -77}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
}
);
layerId = m003;
userData = {
_smart.cha.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1623, -5}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
}
);
layerId = m004;
userData = {
_smart.cha.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1598, -77}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
}
);
layerId = m005;
userData = {
_smart.cha.caps.cap = 1;
_smart.hi.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "chaa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1539, -347}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1556, -394}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
}
);
layerId = m002;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1530, -365}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
}
);
layerId = m003;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1486, -394}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
}
);
layerId = m004;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1419, -365}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
}
);
layerId = m005;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "chee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1493, -285}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
alignment = -1;
name = _smart.hee;
transform = "{0.8508, 0, 0, 0.8508, 1546, -345}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
}
);
layerId = m002;
userData = {
_smart.cha.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1809;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1438, -274}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
}
);
layerId = m003;
userData = {
_smart.cha.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
alignment = -1;
name = _smart.hee;
transform = "{0.8508, 0, 0, 0.8508, 1546, -345}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
}
);
layerId = m004;
userData = {
_smart.cha.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1897;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1390, -274}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
}
);
layerId = m005;
userData = {
_smart.cha.caps.cap = 1;
_smart.hee.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "che-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 1117, 9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 1086, 9}";
}
);
layerId = m002;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 977, 9}";
}
);
layerId = m003;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 1087, 9}";
}
);
layerId = m004;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 978, 9}";
}
);
layerId = m005;
userData = {
_smart.cha.caps.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "cho-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 239, -398}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps = 1;
_smart.ho.cap = 1;
_smart.ho.caps = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 249, -398}";
}
);
layerId = m002;
userData = {
_smart.cha.caps = 1;
_smart.ho.cap = 1;
_smart.ho.caps = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 226, -398}";
}
);
layerId = m003;
userData = {
_smart.cha.caps = 1;
_smart.ho.cap = 1;
_smart.ho.caps = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 179, -398}";
}
);
layerId = m004;
userData = {
_smart.cha.caps = 1;
_smart.ho.cap = 1;
_smart.ho.caps = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 156, -398}";
}
);
layerId = m005;
userData = {
_smart.cha.caps = 1;
_smart.ho.cap = 1;
_smart.ho.caps = 1;
};
width = 1756;
}
);
rightMetricsKey = M;
},
{
glyphname = "chwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1528, -397}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 893, -29}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.cha.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1794;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1524, -416}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 886, -10}";
}
);
layerId = m002;
userData = {
_smart.cha.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1528, -377}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 726, -14}";
}
);
layerId = m003;
userData = {
_smart.cha.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1756;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1434, -456}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 884, -10}";
}
);
layerId = m004;
userData = {
_smart.cha.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1788;
},
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1462, -377}";
},
{
name = _smart.cha.caps;
transform = "{1, 0, 0, 1, 724, -14}";
}
);
layerId = m005;
userData = {
_smart.cha.caps.cap = 1;
_smart.hwa.cap = 1;
};
width = 1756;
}
);
},
{
glyphname = "pha-ethiopic.liga";
lastChange = "2020-12-15 18:32:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phu-ethiopic.liga";
lastChange = "2020-12-15 18:32:28 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1009, -321}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 998, -320}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 991, -320}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 942, -320}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 936, -320}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hu.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
},
{
glyphname = "phi-ethiopic.liga";
lastChange = "2020-12-15 18:32:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1126, 9}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1106, -21}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1107, -73}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1104, -21}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1095, -73}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hi.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
},
{
glyphname = "phaa-ethiopic.liga";
lastChange = "2020-12-16 04:32:18 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 997, -297}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1033, -326}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1045, -320}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 972, -365}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 988, -346}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
_smart.hat.caps.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phee-ethiopic.liga";
lastChange = "2020-12-15 18:32:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 916, -282}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 984, -272}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 894, -261}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 937, -272}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 849, -261}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hee.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phe-ethiopic.liga";
lastChange = "2020-12-15 18:32:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1412, 1210}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.he = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1307, 1205}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.he = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1208, 1217}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.he = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1520, 1205}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.he = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1423, 1217}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.he = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
},
{
glyphname = "pho-ethiopic.liga";
lastChange = "2020-12-15 18:32:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 181, -343}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 160, -343}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 127, -343}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 100, -343}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 67, -343}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.ho.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "phwa-ethiopic.liga";
lastChange = "2020-12-15 18:32:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 984, -305}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 537, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 592, 3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1005, -395}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 582, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 591, 3}";
}
);
layerId = m002;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1055, -305}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 535, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 589, 26}";
}
);
layerId = m003;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 919, -435}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 526, 17}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 593, 3}";
}
);
layerId = m004;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1002, -305}";
},
{
name = _smart.hat.caps;
transform = "{1, 0, 0, 1, 536, 0}";
},
{
name = _smart.neck.caps;
transform = "{1, 0, 0, 1, 595, 26}";
}
);
layerId = m005;
userData = {
_smart.hat.caps.cap = 1;
_smart.hwa.cap = 1;
_smart.neck.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tsa-ethiopic.liga";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
}
);
layerId = m002;
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
}
);
layerId = m003;
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
}
);
layerId = m004;
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
}
);
layerId = m005;
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tsu-ethiopic.liga";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1009, -321}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 998, -320}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 991, -320}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 942, -320}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 936, -320}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
},
{
glyphname = "tsi-ethiopic.liga";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1126, 9}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1106, -21}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1107, -73}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1104, -21}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1095, -73}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
},
{
glyphname = "tsaa-ethiopic.liga";
lastChange = "2020-12-16 04:32:24 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 997, -297}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1033, -326}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 1045, -320}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 972, -365}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 988, -346}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.haa.caps.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tsee-ethiopic.liga";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 916, -282}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 984, -272}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 894, -261}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 937, -272}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 849, -261}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tse-ethiopic.liga";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1412, 1210}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.he = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1307, 1205}";
}
);
layerId = m002;
userData = {
_smart.he = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1208, 1217}";
}
);
layerId = m003;
userData = {
_smart.he = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1520, 1205}";
}
);
layerId = m004;
userData = {
_smart.he = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 1423, 1217}";
}
);
layerId = m005;
userData = {
_smart.he = 1;
};
width = 1165;
}
);
},
{
glyphname = "tso-ethiopic.liga";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 181, -343}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.ho.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 160, -343}";
}
);
layerId = m002;
userData = {
_smart.ho.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 127, -343}";
}
);
layerId = m003;
userData = {
_smart.ho.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 100, -343}";
}
);
layerId = m004;
userData = {
_smart.ho.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 67, -343}";
}
);
layerId = m005;
userData = {
_smart.ho.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tswa-ethiopic.liga";
lastChange = "2020-12-14 17:47:46 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 984, -305}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1186;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1005, -395}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1172;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1055, -305}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1164;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 919, -435}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1174;
},
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1002, -305}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = "tza-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzu-ethiopic.liga";
lastChange = "2020-12-14 09:25:04 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1304, -37}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1291, 4}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1286, 104}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1291, 4}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1304, 104}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
},
{
glyphname = "tzi-ethiopic.liga";
lastChange = "2020-12-16 02:39:48 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 1041, -407}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 903, -345}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 971, -358}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 898, -344}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 921, -429}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -338}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 919, -417}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 838, -394}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 845, -429}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 803, -338}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.hi.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzaa-ethiopic.liga";
lastChange = "2020-12-16 02:39:48 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 903, -345}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 898, -344}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.haa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 862, -338}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.haa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 838, -394}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.haa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 803, -338}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.haa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 890, -388}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 966, -378}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 854, -367}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 899, -378}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 790, -367}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tze-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 665, 1475}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.neck.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 692, 1425}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.neck.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 714, 1425}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.neck.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 943, 1425}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.neck.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 965, 1425}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.neck.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzo-ethiopic.liga";
lastChange = "2020-12-16 02:40:47 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 725, -96}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 733, -69}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 735, -109}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 639, -99}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 641, -129}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "tzoa-ethiopic.liga";
lastChange = "2020-12-16 04:41:56 +0000";
layers = (
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 887, -408}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 689, 2}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1414;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 883, -388}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 635, 2}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 855, -437}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 614, 2}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1364;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 801, -458}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 636, 2}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1408;
},
{
components = (
{
name = oPh.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 791, -368}";
},
{
name = _smart.tsa.belt.caps;
transform = "{1, 0, 0, 1, 615, 2}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
_smart.tsa.belt.caps.cap = 1;
};
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = "fa-ethiopic.liga";
lastChange = "2020-12-15 04:45:00 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 416, 147}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 389, 97}";
}
);
layerId = m002;
userData = {
_smart.fa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 293, 37}";
}
);
layerId = m003;
userData = {
_smart.fa.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 97}";
}
);
layerId = m004;
userData = {
_smart.fa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 328, 37}";
}
);
layerId = m005;
userData = {
_smart.fa.cap = 1;
};
width = 1057;
}
);
},
{
glyphname = "fu-ethiopic.liga";
lastChange = "2020-12-15 04:44:47 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 416, 147}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 707, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 389, 97}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 674, -2}";
}
);
layerId = m002;
userData = {
_smart.fa.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 293, 37}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 604, -1}";
}
);
layerId = m003;
userData = {
_smart.fa.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 97}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 673, -2}";
}
);
layerId = m004;
userData = {
_smart.fa.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 328, 37}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 604, -1}";
}
);
layerId = m005;
userData = {
_smart.fa.cap = 1;
_smart.haa.acute.cap = 1;
};
width = 1057;
}
);
},
{
glyphname = "fi-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 366, 147}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1156 497 LINE",
"871 630 LINE",
"991 232 LINE",
"1121 232 LINE"
);
}
);
userData = {
_smart.fa.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 279, 97}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1014 446 LINE",
"798 504 LINE",
"981 151 LINE",
"1052 157 LINE"
);
}
);
userData = {
_smart.fa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 232, 37}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"832 276 LINE",
"766 276 LINE",
"961 10 LINE",
"1021 10 LINE"
);
}
);
userData = {
_smart.fa.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 279, 97}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"902 446 LINE",
"696 504 LINE",
"817 151 LINE",
"889 157 LINE"
);
}
);
userData = {
_smart.fa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 232, 37}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"690 276 LINE",
"624 276 LINE",
"772 10 LINE",
"832 10 LINE"
);
}
);
userData = {
_smart.fa.cap = 1;
};
width = 1057;
}
);
},
{
glyphname = "faa-ethiopic.liga";
lastChange = "2020-12-15 23:31:27 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 416, 147}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 711, -312}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa.cap = 1;
_smart.haa.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 389, 97}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 746, -341}";
}
);
layerId = m002;
userData = {
_smart.fa.cap = 1;
_smart.haa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 293, 37}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 606, -335}";
}
);
layerId = m003;
userData = {
_smart.fa.cap = 1;
_smart.haa.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 97}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 686, -341}";
}
);
layerId = m004;
userData = {
_smart.fa.cap = 1;
_smart.haa.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 328, 37}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 547, -335}";
}
);
layerId = m005;
userData = {
_smart.fa.cap = 1;
_smart.haa.cap = 1;
};
width = 1057;
}
);
},
{
glyphname = "fee-ethiopic.liga";
lastChange = "2020-12-15 04:45:00 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 416, 147}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1199, -179}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.hee.cap = 1;
};
width = 1109;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 389, 97}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1151, -259}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.hee.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 293, 37}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 985, -308}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.hee.cap = 1;
};
width = 1057;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 346, 97}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 1105, -259}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.hee.cap = 1;
};
width = 1102;
},
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 328, 37}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 931, -308}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.hee.cap = 1;
};
width = 1057;
}
);
leftMetricsKey = L;
},
{
glyphname = "fe-ethiopic.liga";
lastChange = "2020-12-16 00:10:38 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 372, 174}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 482, 94}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 54}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 387, 84}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 331, 54}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
};
width = 1125;
}
);
},
{
glyphname = "fo-ethiopic.liga";
lastChange = "2020-12-16 00:10:43 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 372, 174}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1157, -135}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.ho.ring.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 482, 94}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1131, -32}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.ho.ring.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 54}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1174, 114}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.ho.ring.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 387, 84}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1175, 18}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.ho.ring.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 331, 54}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 1187, 104}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.ho.ring.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "fwa-ethiopic.liga";
lastChange = "2020-12-16 02:09:49 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 372, 174}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 953, -418}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.fa = 1;
_smart.hwa.cap = 1;
};
width = 1095;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 482, 94}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 996, -388}";
}
);
layerId = m002;
userData = {
_smart.fa = 1;
_smart.hwa.cap = 1;
};
width = 1128;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 322, 54}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 1041, -388}";
}
);
layerId = m003;
userData = {
_smart.fa = 1;
_smart.hwa.cap = 1;
};
width = 1124;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 387, 84}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 891, -444}";
}
);
layerId = m004;
userData = {
_smart.fa = 1;
_smart.hwa.cap = 1;
};
width = 1129;
},
{
components = (
{
name = na.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 331, 54}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 973, -388}";
}
);
layerId = m005;
userData = {
_smart.fa = 1;
_smart.hwa.cap = 1;
};
width = 1125;
}
);
},
{
glyphname = "pa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1267;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m002;
width = 1222;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m003;
width = 1224;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m004;
width = 1222;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m005;
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pu-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 736, 15}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hu.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 712, 16}";
}
);
layerId = m002;
userData = {
_smart.hu.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 713, 16}";
}
);
layerId = m003;
userData = {
_smart.hu.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 715, 16}";
}
);
layerId = m004;
userData = {
_smart.hu.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 716, 16}";
}
);
layerId = m005;
userData = {
_smart.hu.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pi-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 761, -1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hi.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 699, -1}";
}
);
layerId = m002;
userData = {
_smart.hi.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 669, -73}";
}
);
layerId = m003;
userData = {
_smart.hi.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 699, -1}";
}
);
layerId = m004;
userData = {
_smart.hi.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 656, -73}";
}
);
layerId = m005;
userData = {
_smart.hi.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "paa-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _haa.acute;
position = "{546.172, 163.586}";
}
);
components = (
{
name = pa.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"235 0 LINE",
"690 0 LINE {name = \"❌\";}",
"607 166 LINE {name = \"❌\";}",
"68 166 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
};
width = 1267;
},
{
anchors = (
{
name = _haa.acute;
position = "{577.172, 90.586}";
}
);
components = (
{
name = pa.base.cap;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"205 0 LINE",
"663 0 LINE {name = \"❌\";}",
"529 105 LINE {name = \"❌\";}",
"125 105 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
};
width = 1222;
},
{
anchors = (
{
name = _haa.acute;
position = "{613.985, 24.046}";
}
);
components = (
{
name = pa.base.cap;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"305 0 LINE",
"635 0 LINE",
"596 53 LINE",
"270 53 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
};
width = 1224;
},
{
anchors = (
{
name = _haa.acute;
position = "{402, 91}";
}
);
components = (
{
name = pa.base.cap;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"14 0 LINE",
"472 0 LINE {name = \"❌\";}",
"357 105 LINE {name = \"❌\";}",
"-47 105 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
};
width = 1222;
},
{
anchors = (
{
name = _haa.acute;
position = "{427, 24}";
}
);
components = (
{
name = pa.base.cap;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"114 0 LINE",
"444 0 LINE",
"415 53 LINE",
"89 53 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pee-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 627, -297}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hee.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 723, -287}";
}
);
layerId = m002;
userData = {
_smart.hee.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 700, -256}";
}
);
layerId = m003;
userData = {
_smart.hee.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 672, -287}";
}
);
layerId = m004;
userData = {
_smart.hee.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 655, -256}";
}
);
layerId = m005;
userData = {
_smart.hee.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pe-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1046 -423 LINE",
"987 260 LINE",
"785 242 LINE",
"844 -429 LINE"
);
}
);
userData = {
_smart.haa = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"891 -375 LINE",
"868 304 LINE",
"725 304 LINE",
"748 -375 LINE"
);
}
);
userData = {
_smart.haa = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"811 -275 LINE",
"744 225 LINE",
"684 217 LINE",
"756 -282 LINE"
);
}
);
userData = {
_smart.haa = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"634 -375 LINE",
"731 304 LINE",
"588 304 LINE",
"491 -375 LINE"
);
}
);
userData = {
_smart.haa = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"572 -275 LINE",
"593 225 LINE",
"531 217 LINE",
"515 -282 LINE"
);
}
);
userData = {
_smart.haa = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "po-ethiopic.liga";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 572, 19}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.haa.acute.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 590, 19}";
}
);
layerId = m002;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 619, 19}";
}
);
layerId = m003;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 593, 19}";
}
);
layerId = m004;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 622, 19}";
}
);
layerId = m005;
userData = {
_smart.haa.acute.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "pwa-ethiopic.liga";
lastChange = "2020-12-14 09:04:01 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 589, -420}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
userData = {
_smart.hwa.cap = 1;
};
width = 1267;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 616, -420}";
}
);
layerId = m002;
userData = {
_smart.hwa.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 614, -400}";
}
);
layerId = m003;
userData = {
_smart.hwa.cap = 1;
};
width = 1224;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 525, -460}";
}
);
layerId = m004;
userData = {
_smart.hwa.cap = 1;
};
width = 1222;
},
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 544, -400}";
}
);
layerId = m005;
userData = {
_smart.hwa.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = "one-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 200, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1375;
},
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 264, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = m002;
width = 1414;
},
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 128, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 128, 0}";
}
);
layerId = m003;
width = 1442;
},
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 264, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = m004;
width = 1414;
},
{
components = (
{
name = six;
transform = "{1, 0, 0, 1, 129, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = m005;
width = 1443;
}
);
leftMetricsKey = six;
rightMetricsKey = six;
unicode = 1369;
},
{
glyphname = "two-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1060 -9 OFFCURVE",
"1265 160 OFFCURVE",
"1265 419 CURVE SMOOTH",
"1265 579 OFFCURVE",
"1185 700 OFFCURVE",
"1021 759 CURVE",
"1153 819 OFFCURVE",
"1242 939 OFFCURVE",
"1242 1072 CURVE SMOOTH",
"1242 1331 OFFCURVE",
"1057 1487 OFFCURVE",
"749 1487 CURVE SMOOTH",
"494 1487 OFFCURVE",
"279 1337 OFFCURVE",
"272 1091 CURVE SMOOTH {name = \"❌\";}",
"254 410 LINE SMOOTH",
"247 157 OFFCURVE",
"459 -9 OFFCURVE",
"749 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"636 224 OFFCURVE",
"543 301 OFFCURVE",
"543 410 CURVE",
"561 1090 LINE {name = \"❌\";}",
"561 1187 OFFCURVE",
"645 1254 OFFCURVE",
"756 1254 CURVE SMOOTH",
"879 1254 OFFCURVE",
"953 1185 OFFCURVE",
"953 1068 CURVE SMOOTH",
"953 947 OFFCURVE",
"884 867 OFFCURVE",
"737 867 CURVE SMOOTH",
"583 867 LINE",
"583 641 LINE",
"736 641 LINE SMOOTH",
"896 641 OFFCURVE",
"976 568 OFFCURVE",
"976 423 CURVE SMOOTH",
"976 303 OFFCURVE",
"893 224 OFFCURVE",
"756 224 CURVE SMOOTH"
);
}
);
width = 1361;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 112, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1053 -58 OFFCURVE",
"1241 107 OFFCURVE",
"1241 368 CURVE SMOOTH",
"1241 537 OFFCURVE",
"1150 658 OFFCURVE",
"990 709 CURVE",
"1131 768 OFFCURVE",
"1219 899 OFFCURVE",
"1219 1026 CURVE SMOOTH",
"1219 1285 OFFCURVE",
"1054 1438 OFFCURVE",
"779 1438 CURVE SMOOTH",
"519 1438 OFFCURVE",
"331 1267 OFFCURVE",
"331 1036 CURVE",
"318 346 LINE SMOOTH",
"313 103 OFFCURVE",
"507 -58 OFFCURVE",
"780 -58 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"612 93 OFFCURVE",
"504 193 OFFCURVE",
"504 346 CURVE SMOOTH",
"515 1036 LINE",
"516 1187 OFFCURVE",
"619 1286 OFFCURVE",
"779 1286 CURVE SMOOTH",
"949 1286 OFFCURVE",
"1034 1201 OFFCURVE",
"1034 1030 CURVE SMOOTH",
"1034 878 OFFCURVE",
"928 783 OFFCURVE",
"753 780 CURVE SMOOTH",
"614 780 LINE",
"614 629 LINE",
"753 629 LINE SMOOTH",
"949 626 OFFCURVE",
"1056 533 OFFCURVE",
"1056 364 CURVE SMOOTH",
"1056 189 OFFCURVE",
"959 93 OFFCURVE",
"780 93 CURVE SMOOTH"
);
}
);
width = 1353;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1034 -20 OFFCURVE",
"1207 138 OFFCURVE",
"1207 386 CURVE SMOOTH",
"1207 578 OFFCURVE",
"1094 701 OFFCURVE",
"903 745 CURVE",
"1070 796 OFFCURVE",
"1175 926 OFFCURVE",
"1175 1081 CURVE SMOOTH",
"1175 1324 OFFCURVE",
"1016 1476 OFFCURVE",
"764 1476 CURVE SMOOTH",
"386 1473 OFFCURVE",
"338 1156 OFFCURVE",
"334 1074 CURVE SMOOTH",
"303 405 LINE SMOOTH",
"291 138 OFFCURVE",
"522 -20 OFFCURVE",
"773 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"533 34 OFFCURVE",
"347 192 OFFCURVE",
"357 405 CURVE SMOOTH",
"388 1074 LINE SMOOTH",
"398 1282 OFFCURVE",
"545 1422 OFFCURVE",
"764 1422 CURVE SMOOTH",
"988 1422 OFFCURVE",
"1121 1292 OFFCURVE",
"1121 1085 CURVE SMOOTH",
"1121 904 OFFCURVE",
"967 770 OFFCURVE",
"739 770 CURVE SMOOTH",
"617 770 LINE",
"617 714 LINE",
"731 714 LINE SMOOTH",
"1007 714 OFFCURVE",
"1153 597 OFFCURVE",
"1153 382 CURVE SMOOTH",
"1153 165 OFFCURVE",
"1012 34 OFFCURVE",
"773 34 CURVE SMOOTH"
);
}
);
width = 1399;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"861 -54 OFFCURVE",
"1078 111 OFFCURVE",
"1124 372 CURVE SMOOTH",
"1154 541 OFFCURVE",
"1084 662 OFFCURVE",
"933 713 CURVE",
"1085 772 OFFCURVE",
"1195 903 OFFCURVE",
"1218 1030 CURVE SMOOTH",
"1263 1289 OFFCURVE",
"1125 1442 OFFCURVE",
"850 1442 CURVE SMOOTH",
"590 1442 OFFCURVE",
"372 1271 OFFCURVE",
"332 1040 CURVE SMOOTH",
"197 350 LINE SMOOTH",
"154 107 OFFCURVE",
"314 -54 OFFCURVE",
"588 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"446 97 OFFCURVE",
"356 197 OFFCURVE",
"383 350 CURVE SMOOTH",
"517 1040 LINE SMOOTH",
"543 1191 OFFCURVE",
"664 1290 OFFCURVE",
"824 1290 CURVE SMOOTH",
"994 1290 OFFCURVE",
"1064 1205 OFFCURVE",
"1034 1034 CURVE SMOOTH",
"1007 882 OFFCURVE",
"884 787 OFFCURVE",
"708 784 CURVE SMOOTH",
"569 784 LINE",
"543 633 LINE",
"682 633 LINE SMOOTH",
"877 630 OFFCURVE",
"968 537 OFFCURVE",
"938 368 CURVE SMOOTH",
"907 193 OFFCURVE",
"793 97 OFFCURVE",
"614 97 CURVE SMOOTH"
);
}
);
width = 1361;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"842 -20 OFFCURVE",
"1043 138 OFFCURVE",
"1086 386 CURVE SMOOTH",
"1120 578 OFFCURVE",
"1028 701 OFFCURVE",
"846 745 CURVE",
"1021 796 OFFCURVE",
"1150 926 OFFCURVE",
"1177 1081 CURVE SMOOTH",
"1220 1324 OFFCURVE",
"1087 1476 OFFCURVE",
"835 1476 CURVE SMOOTH",
"463 1473 OFFCURVE",
"355 1165 OFFCURVE",
"335 1078 CURVE SMOOTH",
"186 405 LINE SMOOTH",
"127 140 OFFCURVE",
"330 -20 OFFCURVE",
"581 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"350 34 OFFCURVE",
"193 193 OFFCURVE",
"240 404 CURVE SMOOTH",
"389 1074 LINE SMOOTH",
"435 1280 OFFCURVE",
"607 1422 OFFCURVE",
"826 1422 CURVE SMOOTH",
"1050 1422 OFFCURVE",
"1160 1292 OFFCURVE",
"1124 1085 CURVE SMOOTH",
"1092 904 OFFCURVE",
"915 770 OFFCURVE",
"686 770 CURVE SMOOTH",
"564 770 LINE",
"554 714 LINE",
"668 714 LINE SMOOTH",
"944 714 OFFCURVE",
"1069 597 OFFCURVE",
"1032 382 CURVE SMOOTH",
"993 165 OFFCURVE",
"829 34 OFFCURVE",
"590 34 CURVE SMOOTH"
);
}
);
width = 1400;
}
);
leftMetricsKey = eight;
rightMetricsKey = eight;
unicode = 136A;
},
{
glyphname = "three-ethiopic";
lastChange = "2020-12-14 06:23:37 +0000";
layers = (
{
components = (
{
name = _num.bar;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"365 0 LINE",
"365 1222 LINE",
"1089 1222 LINE",
"1089 1456 LINE",
"61 1456 LINE",
"61 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"285 -40 LINE",
"285 1264 LINE",
"1073 1264 LINE",
"1073 1416 LINE",
"89 1416 LINE",
"89 -40 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"205 0 LINE",
"205 1402 LINE",
"1073 1402 LINE",
"1073 1456 LINE",
"143 1456 LINE",
"143 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"94 0 LINE",
"324 1304 LINE",
"1112 1304 LINE",
"1139 1456 LINE",
"155 1456 LINE",
"-102 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"14 0 LINE",
"261 1402 LINE",
"1129 1402 LINE",
"1139 1456 LINE",
"209 1456 LINE",
"-48 0 LINE"
);
}
);
width = 1150;
}
);
unicode = 136B;
},
{
glyphname = "four-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1004 -20 OFFCURVE",
"1174 199 OFFCURVE",
"1174 602 CURVE SMOOTH",
"1174 870 LINE SMOOTH",
"1170 1261 OFFCURVE",
"998 1476 OFFCURVE",
"681 1476 CURVE SMOOTH",
"364 1476 OFFCURVE",
"190 1262 OFFCURVE",
"190 855 CURVE SMOOTH",
"190 587 LINE SMOOTH",
"194 196 OFFCURVE",
"366 -20 OFFCURVE",
"683 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"540 213 OFFCURVE",
"479 327 OFFCURVE",
"479 564 CURVE SMOOTH",
"479 918 LINE SMOOTH",
"483 1141 OFFCURVE",
"545 1242 OFFCURVE",
"681 1242 CURVE SMOOTH",
"821 1242 OFFCURVE",
"885 1137 OFFCURVE",
"885 896 CURVE SMOOTH",
"885 550 LINE SMOOTH",
"882 322 OFFCURVE",
"824 213 OFFCURVE",
"683 213 CURVE SMOOTH"
);
}
);
width = 1317;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"956 -20 OFFCURVE",
"1099 188 OFFCURVE",
"1099 621 CURVE SMOOTH",
"1099 861 LINE SMOOTH",
"1095 1280 OFFCURVE",
"952 1476 OFFCURVE",
"639 1476 CURVE SMOOTH",
"323 1476 OFFCURVE",
"180 1271 OFFCURVE",
"180 843 CURVE SMOOTH",
"180 596 LINE SMOOTH",
"185 187 OFFCURVE",
"330 -20 OFFCURVE",
"641 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"456 131 OFFCURVE",
"365 277 OFFCURVE",
"365 592 CURVE SMOOTH",
"365 888 LINE SMOOTH",
"368 1184 OFFCURVE",
"450 1324 OFFCURVE",
"639 1324 CURVE SMOOTH",
"830 1324 OFFCURVE",
"914 1187 OFFCURVE",
"914 874 CURVE SMOOTH",
"914 571 LINE SMOOTH",
"910 267 OFFCURVE",
"824 131 OFFCURVE",
"641 131 CURVE SMOOTH"
);
}
);
width = 1357;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1017 -20 OFFCURVE",
"1176 203 OFFCURVE",
"1176 594 CURVE SMOOTH",
"1176 858 LINE SMOOTH",
"1176 1250 OFFCURVE",
"1016 1477 OFFCURVE",
"740 1477 CURVE SMOOTH",
"465 1477 OFFCURVE",
"305 1249 OFFCURVE",
"305 862 CURVE SMOOTH",
"305 598 LINE SMOOTH",
"305 206 OFFCURVE",
"469 -20 OFFCURVE",
"742 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"501 34 OFFCURVE",
"359 244 OFFCURVE",
"359 596 CURVE SMOOTH",
"359 857 LINE SMOOTH",
"359 1216 OFFCURVE",
"495 1423 OFFCURVE",
"740 1423 CURVE SMOOTH",
"984 1423 OFFCURVE",
"1122 1215 OFFCURVE",
"1122 862 CURVE SMOOTH",
"1122 601 LINE SMOOTH",
"1122 242 OFFCURVE",
"985 34 OFFCURVE",
"742 34 CURVE SMOOTH"
);
}
);
width = 1456;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"762 -20 OFFCURVE",
"941 188 OFFCURVE",
"1018 621 CURVE SMOOTH",
"1060 861 LINE SMOOTH",
"1130 1280 OFFCURVE",
"1021 1476 OFFCURVE",
"708 1476 CURVE SMOOTH",
"392 1476 OFFCURVE",
"213 1271 OFFCURVE",
"138 843 CURVE SMOOTH",
"94 596 LINE SMOOTH",
"27 187 OFFCURVE",
"136 -20 OFFCURVE",
"447 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"288 131 OFFCURVE",
"223 277 OFFCURVE",
"279 592 CURVE SMOOTH",
"331 888 LINE SMOOTH",
"386 1184 OFFCURVE",
"493 1324 OFFCURVE",
"682 1324 CURVE SMOOTH",
"873 1324 OFFCURVE",
"933 1187 OFFCURVE",
"877 874 CURVE SMOOTH",
"824 571 LINE SMOOTH",
"766 267 OFFCURVE",
"656 131 OFFCURVE",
"473 131 CURVE SMOOTH"
);
}
);
width = 1357;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"823 -20 OFFCURVE",
"1021 203 OFFCURVE",
"1090 594 CURVE SMOOTH",
"1137 858 LINE SMOOTH",
"1206 1250 OFFCURVE",
"1086 1477 OFFCURVE",
"810 1477 CURVE SMOOTH",
"535 1477 OFFCURVE",
"334 1249 OFFCURVE",
"266 862 CURVE SMOOTH",
"220 598 LINE SMOOTH",
"151 206 OFFCURVE",
"275 -20 OFFCURVE",
"548 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"316 34 OFFCURVE",
"211 244 OFFCURVE",
"273 596 CURVE SMOOTH",
"319 857 LINE SMOOTH",
"383 1216 OFFCURVE",
"555 1423 OFFCURVE",
"800 1423 CURVE SMOOTH",
"1044 1423 OFFCURVE",
"1145 1215 OFFCURVE",
"1083 862 CURVE SMOOTH",
"1037 601 LINE SMOOTH",
"974 242 OFFCURVE",
"800 34 OFFCURVE",
"557 34 CURVE SMOOTH"
);
}
);
width = 1456;
}
);
leftMetricsKey = zero;
rightMetricsKey = zero;
unicode = 136C;
},
{
glyphname = "five-ethiopic";
lastChange = "2020-12-14 06:23:45 +0000";
layers = (
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 55, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1144 0 LINE",
"1144 234 LINE",
"420 234 LINE",
"434 1456 LINE",
"129 1456 LINE",
"116 0 LINE"
);
}
);
width = 1237;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 53, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1116 -30 LINE",
"1116 122 LINE",
"328 122 LINE",
"328 1426 LINE",
"132 1426 LINE",
"132 -30 LINE"
);
}
);
width = 1225;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1155 0 LINE",
"1155 54 LINE",
"287 54 LINE",
"287 1456 LINE",
"225 1456 LINE",
"225 0 LINE"
);
}
);
width = 1315;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 54, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"916 -60 LINE",
"942 92 LINE",
"154 92 LINE",
"384 1396 LINE",
"188 1396 LINE",
"-68 -60 LINE"
);
}
);
width = 1226;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"964 0 LINE",
"974 54 LINE",
"106 54 LINE",
"353 1456 LINE",
"291 1456 LINE",
"34 0 LINE"
);
}
);
width = 1315;
}
);
leftMetricsKey = four;
rightMetricsKey = four;
unicode = 136D;
},
{
glyphname = "six-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = lowringmod;
transform = "{1.624, 0, 0, 1.624, 247, 630}";
},
{
name = seven;
transform = "{1, 0, 0, 1, 61, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1273;
},
{
components = (
{
name = lowringmod;
transform = "{1.2743, 0, 0, 1.2743, 406, 516}";
},
{
name = seven;
transform = "{1, 0, 0, 1, 87, -20}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m002;
width = 1292;
},
{
components = (
{
name = lowringmod;
transform = "{1.3269, 0, 0, 1.3269, 231, 422}";
},
{
name = seven;
transform = "{1, 0, 0, 1, 77, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m003;
width = 1397;
},
{
components = (
{
name = lowringmod;
transform = "{1.2743, 0, 0, 1.2743, 519, 510}";
},
{
alignment = 1;
name = seven;
transform = "{1, 0, 0, 1, 38, -10}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m004;
width = 1292;
},
{
components = (
{
name = lowringmod;
transform = "{1.3269, 0, 0, 1.3269, 361, 422}";
},
{
name = seven;
transform = "{1, 0, 0, 1, 77, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m005;
width = 1397;
}
);
leftMetricsKey = seven;
rightMetricsKey = seven;
unicode = 136E;
},
{
glyphname = "seven-ethiopic";
lastChange = "2020-12-14 00:23:13 +0000";
layers = (
{
components = (
{
name = seven;
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 83, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1295;
},
{
components = (
{
name = seven;
transform = "{1, 0, 0, 1, 60, -20}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m002;
width = 1292;
},
{
components = (
{
name = seven;
transform = "{1, 0, 0, 1, 75, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m003;
width = 1397;
},
{
components = (
{
name = seven;
transform = "{1, 0, 0, 1, 60, -20}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m004;
width = 1292;
},
{
components = (
{
name = seven;
transform = "{1, 0, 0, 1, 75, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m005;
width = 1397;
}
);
leftMetricsKey = seven;
rightMetricsKey = seven;
unicode = 136F;
},
{
glyphname = "eight-ethiopic";
lastChange = "2020-12-14 20:03:40 +0000";
layers = (
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1156 0 LINE",
"1156 176 LINE",
"662 176 LINE",
"662 0 LINE"
);
},
{
closed = 1;
nodes = (
"802 0 LINE",
"802 1458 LINE {name = \"❌\";}",
"168 1458 LINE",
"168 1257 LINE",
"513 1257 LINE",
"513 0 LINE"
);
}
);
width = 1273;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1133 -30 LINE",
"1133 122 LINE",
"718 122 LINE",
"718 -30 LINE"
);
},
{
closed = 1;
nodes = (
"719 -30 LINE",
"719 1433 LINE",
"160 1433 LINE",
"160 1266 LINE",
"533 1266 LINE",
"533 -30 LINE"
);
}
);
width = 1292;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1044 0 LINE",
"1044 54 LINE",
"709 54 LINE",
"709 0 LINE"
);
},
{
closed = 1;
nodes = (
"736 0 LINE",
"736 1460 LINE {name = \"❌\";}",
"264 1460 LINE",
"264 1408 LINE",
"682 1408 LINE",
"682 0 LINE"
);
}
);
width = 1397;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"937 -30 LINE",
"964 122 LINE",
"549 122 LINE",
"522 -30 LINE"
);
},
{
closed = 1;
nodes = (
"523 -30 LINE",
"781 1433 LINE",
"222 1433 LINE",
"192 1266 LINE",
"565 1266 LINE",
"337 -30 LINE"
);
}
);
width = 1292;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"853 0 LINE",
"863 54 LINE",
"528 54 LINE",
"518 0 LINE"
);
},
{
closed = 1;
nodes = (
"545 0 LINE",
"803 1460 LINE {name = \"❌\";}",
"331 1460 LINE",
"321 1408 LINE",
"739 1408 LINE",
"491 0 LINE"
);
}
);
width = 1397;
}
);
leftMetricsKey = seven;
rightMetricsKey = seven;
unicode = 1370;
},
{
glyphname = "nine-ethiopic";
lastChange = "2020-12-16 03:43:07 +0000";
layers = (
{
components = (
{
alignment = -1;
name = _num.bar;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"988 -20 OFFCURVE",
"1158 199 OFFCURVE",
"1158 602 CURVE SMOOTH",
"1158 870 LINE SMOOTH",
"1158 1148 OFFCURVE",
"1069 1338 OFFCURVE",
"903 1424 CURVE",
"778 1207 LINE",
"815.134 1178.251 OFFCURVE",
"840.429 1130.491 OFFCURVE",
"854.747 1062 CURVE",
"475.192 1062 LINE",
"490.705 1139.317 OFFCURVE",
"521.12 1190.472 OFFCURVE",
"567 1218 CURVE",
"407 1412 LINE",
"255 1320 OFFCURVE",
"174 1133 OFFCURVE",
"174 855 CURVE SMOOTH",
"174 587 LINE SMOOTH",
"174 196 OFFCURVE",
"350 -20 OFFCURVE",
"667 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 213 OFFCURVE",
"463 327 OFFCURVE",
"463 564 CURVE SMOOTH",
"463 826 LINE",
"869 826 LINE",
"869 550 LINE SMOOTH",
"869 322 OFFCURVE",
"805 213 OFFCURVE",
"667 213 CURVE SMOOTH"
);
}
);
width = 1317;
},
{
components = (
{
alignment = -1;
name = _num.bar;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"951 -60 OFFCURVE",
"1094 148 OFFCURVE",
"1094 581 CURVE SMOOTH",
"1094 821 LINE SMOOTH",
"1091 1092 OFFCURVE",
"1031 1270 OFFCURVE",
"903 1362 CURVE",
"806 1223 LINE",
"858.436 1172.779 OFFCURVE",
"889.6 1090.923 OFFCURVE",
"902.312 973 CURVE",
"367.035 973 LINE",
"380.838 1096.438 OFFCURVE",
"415.154 1182.325 OFFCURVE",
"474 1232 CURVE",
"355 1353 LINE",
"232 1256 OFFCURVE",
"175 1074 OFFCURVE",
"175 803 CURVE SMOOTH",
"175 556 LINE SMOOTH",
"180 147 OFFCURVE",
"325 -60 OFFCURVE",
"636 -60 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"451 91 OFFCURVE",
"360 237 OFFCURVE",
"360 552 CURVE SMOOTH",
"360 822 LINE",
"909 822 LINE",
"909 531 LINE SMOOTH",
"905 227 OFFCURVE",
"819 91 OFFCURVE",
"636 91 CURVE SMOOTH"
);
}
);
width = 1357;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"962 -20 OFFCURVE",
"1121 203 OFFCURVE",
"1121 594 CURVE SMOOTH",
"1121 858 LINE SMOOTH",
"1121 1097 OFFCURVE",
"1061 1275 OFFCURVE",
"952 1377 CURVE",
"952 1307 LINE",
"1011 1236 OFFCURVE",
"1040.005 1153.052 OFFCURVE",
"1058.571 1005 CURVE",
"312.724 1005 LINE",
"335.168 1183.248 OFFCURVE",
"390 1290 OFFCURVE",
"443 1334 CURVE",
"443 1398 LINE",
"319 1301 OFFCURVE",
"250 1115 OFFCURVE",
"250 862 CURVE SMOOTH",
"250 598 LINE SMOOTH",
"250 206 OFFCURVE",
"414 -20 OFFCURVE",
"687 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"446 34 OFFCURVE",
"301 244 OFFCURVE",
"304 596 CURVE SMOOTH",
"304 951 LINE",
"1063.881 951 LINE",
"1064 601 LINE",
"1067 242 OFFCURVE",
"930 34 OFFCURVE",
"687 34 CURVE SMOOTH"
);
}
);
width = 1456;
},
{
components = (
{
alignment = -1;
name = _num.bar;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"756 -60 OFFCURVE",
"936 148 OFFCURVE",
"1013 581 CURVE SMOOTH",
"1055 821 LINE SMOOTH",
"1093 1048 OFFCURVE",
"1079 1210 OFFCURVE",
"1007 1310 CURVE",
"853 1203 LINE",
"880.742 1158.613 OFFCURVE",
"893.662 1095.982 OFFCURVE",
"891.993 1013 CURVE",
"367.189 1013 LINE",
"407.965 1134.787 OFFCURVE",
"464.979 1214.632 OFFCURVE",
"543 1254 CURVE",
"440 1372 LINE",
"283 1282 OFFCURVE",
"184 1094 OFFCURVE",
"133 803 CURVE SMOOTH",
"89 556 LINE SMOOTH",
"22 147 OFFCURVE",
"131 -60 OFFCURVE",
"442 -60 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"283 91 OFFCURVE",
"218 237 OFFCURVE",
"274 552 CURVE SMOOTH",
"328.642 862 LINE",
"876.823 862 LINE",
"819 531 LINE SMOOTH",
"761 227 OFFCURVE",
"651 91 OFFCURVE",
"468 91 CURVE SMOOTH"
);
}
);
width = 1357;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"767 -20 OFFCURVE",
"966 203 OFFCURVE",
"1035 594 CURVE SMOOTH",
"1082 858 LINE SMOOTH",
"1123 1089 OFFCURVE",
"1098 1262 OFFCURVE",
"1014 1366 CURVE",
"960 1337 LINE",
"1025.277 1264.645 OFFCURVE",
"1054.06 1148.375 OFFCURVE",
"1044.405 995 CURVE",
"295.894 995 LINE",
"350.275 1181.134 OFFCURVE",
"440.631 1312.037 OFFCURVE",
"560 1377 CURVE",
"524 1414 LINE",
"369 1321 OFFCURVE",
"258 1130 OFFCURVE",
"211 862 CURVE SMOOTH",
"165 598 LINE SMOOTH",
"96 206 OFFCURVE",
"219 -20 OFFCURVE",
"493 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"261 34 OFFCURVE",
"156 244 OFFCURVE",
"218 596 CURVE SMOOTH",
"281.505 941 LINE",
"1039.589 941 LINE",
"982 601 LINE SMOOTH",
"919 242 OFFCURVE",
"745 34 OFFCURVE",
"502 34 CURVE SMOOTH"
);
}
);
width = 1456;
}
);
leftMetricsKey = zero;
rightMetricsKey = zero;
unicode = 1371;
},
{
glyphname = "ten-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = _num.bar;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"801 0 LINE",
"801 1458 LINE {name = \"❌\";}",
"770 1458 LINE {name = \"❌\";}",
"512 1114 LINE",
"512 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"729 0 LINE",
"729 1463 LINE",
"700 1463 LINE",
"543 1233 LINE",
"543 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"659 0 LINE",
"659 1460 LINE {name = \"❌\";}",
"648 1460 LINE {name = \"❌\";}",
"605 1388 LINE",
"605 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"538 0 LINE",
"796 1463 LINE",
"767 1463 LINE",
"570 1233 LINE",
"352 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"468 0 LINE",
"726 1460 LINE {name = \"❌\";}",
"715 1460 LINE {name = \"❌\";}",
"659 1388 LINE",
"414 0 LINE"
);
}
);
width = 1150;
}
);
unicode = 1372;
},
{
glyphname = "twenty-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = _num.bar;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"390 28 LINE",
"390 609 LINE",
"426 689 OFFCURVE",
"508 742 OFFCURVE",
"601 742 CURVE SMOOTH",
"732 742 OFFCURVE",
"815 636 OFFCURVE",
"815 477 CURVE SMOOTH",
"815 28 LINE",
"1103 28 LINE",
"1103 480 LINE SMOOTH",
"1103 776 OFFCURVE",
"942 974 OFFCURVE",
"689 974 CURVE SMOOTH",
"571 974 OFFCURVE",
"473 935 OFFCURVE",
"396 856 CURVE",
"428 1091 OFFCURVE",
"594 1233 OFFCURVE",
"883 1233 CURVE",
"883 1471 LINE",
"352 1469 OFFCURVE",
"100 1130 OFFCURVE",
"100 671 CURVE SMOOTH",
"100 28 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"318 24 LINE",
"318 601 LINE",
"359.333 715.667 OFFCURVE",
"477.333 801 OFFCURVE",
"604 801 CURVE SMOOTH",
"764 801 OFFCURVE",
"869 666 OFFCURVE",
"869 466 CURVE SMOOTH",
"869 24 LINE",
"1052 24 LINE",
"1052 475 LINE SMOOTH",
"1052 757.667 OFFCURVE",
"888.333 955 OFFCURVE",
"635 955 CURVE SMOOTH",
"502.333 955 OFFCURVE",
"397.667 911 OFFCURVE",
"321 823 CURVE",
"347.667 1123 OFFCURVE",
"525 1294.667 OFFCURVE",
"847 1300 CURVE",
"847 1457 LINE {name = \"❌\";}",
"362 1450.333 OFFCURVE",
"132 1161 OFFCURVE",
"132 625 CURVE SMOOTH",
"132 24 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"182 3 LINE {name = \"❌\";}",
"182 621 LINE",
"222 782.333 OFFCURVE",
"398.333 903 OFFCURVE",
"585 903 CURVE SMOOTH",
"817 903 OFFCURVE",
"959 738.667 OFFCURVE",
"959 480 CURVE SMOOTH",
"959 3 LINE {name = \"❌\";}",
"1013 3 LINE {name = \"❌\";}",
"1013 480 LINE SMOOTH",
"1013 766.667 OFFCURVE",
"848 957 OFFCURVE",
"592 957 CURVE SMOOTH",
"417.333 957 OFFCURVE",
"260.333 870.333 OFFCURVE",
"183 733 CURVE",
"200.333 1169 OFFCURVE",
"432 1422 OFFCURVE",
"840 1422 CURVE",
"840 1476 LINE",
"378.667 1476 OFFCURVE",
"128 1177.333 OFFCURVE",
"128 660 CURVE SMOOTH",
"128 3 LINE {name = \"❌\";}"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"131 24 LINE",
"233 601 LINE",
"295 716 OFFCURVE",
"428 801 OFFCURVE",
"554 801 CURVE SMOOTH",
"714 801 OFFCURVE",
"796 666 OFFCURVE",
"760 466 CURVE SMOOTH",
"682 24 LINE",
"865 24 LINE",
"945 475 LINE SMOOTH",
"995 758 OFFCURVE",
"866 955 OFFCURVE",
"613 955 CURVE SMOOTH",
"480 955 OFFCURVE",
"368 911 OFFCURVE",
"275 823 CURVE",
"355 1123 OFFCURVE",
"562 1295 OFFCURVE",
"885 1300 CURVE",
"913 1457 LINE {name = \"❌\";}",
"427 1450 OFFCURVE",
"146 1161 OFFCURVE",
"51 625 CURVE SMOOTH",
"-55 24 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-8 3 LINE {name = \"❌\";}",
"101 621 LINE",
"169 782 OFFCURVE",
"367 903 OFFCURVE",
"553 903 CURVE SMOOTH",
"785 903 OFFCURVE",
"898 739 OFFCURVE",
"853 480 CURVE SMOOTH",
"769 3 LINE {name = \"❌\";}",
"823 3 LINE {name = \"❌\";}",
"907 480 LINE SMOOTH",
"957 767 OFFCURVE",
"826 957 OFFCURVE",
"570 957 CURVE SMOOTH",
"395 957 OFFCURVE",
"223 870 OFFCURVE",
"121 733 CURVE",
"216 1169 OFFCURVE",
"492 1422 OFFCURVE",
"900 1422 CURVE",
"909 1476 LINE",
"448 1476 OFFCURVE",
"145 1177 OFFCURVE",
"54 660 CURVE SMOOTH",
"-62 3 LINE {name = \"❌\";}"
);
}
);
width = 1150;
}
);
unicode = 1373;
},
{
glyphname = "thirty-ethiopic";
lastChange = "2020-12-16 19:26:02 +0000";
layers = (
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"410 0 LINE",
"410 1222 LINE",
"556 1222 LINE",
"556 0 LINE",
"909 0 LINE SMOOTH",
"1027 0 OFFCURVE",
"1113 86 OFFCURVE",
"1113 204 CURVE SMOOTH",
"1113 1456 LINE",
"819 1456 LINE",
"819 234 LINE",
"702 234 LINE",
"702 1456 LINE",
"227 1456 LINE SMOOTH",
"168 1456 OFFCURVE",
"125 1413 OFFCURVE",
"125 1354 CURVE SMOOTH",
"125 0 LINE"
);
}
);
width = 1290;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"399 -40 LINE",
"399 1264 LINE",
"603 1264 LINE",
"603 -40 LINE",
"943 -40 LINE SMOOTH",
"1061 -40 OFFCURVE",
"1147 46 OFFCURVE",
"1147 164 CURVE SMOOTH",
"1147 1416 LINE",
"951 1416 LINE",
"951 112 LINE",
"780 112 LINE",
"780 1415 LINE",
"407 1415 LINE SMOOTH",
"289 1416 OFFCURVE",
"203 1330 OFFCURVE",
"203 1212 CURVE SMOOTH",
"203 -40 LINE"
);
}
);
width = 1353;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"308 0 LINE",
"308 1402 LINE",
"650 1402 LINE",
"650 0 LINE",
"1146 0 LINE SMOOTH",
"1157 0 OFFCURVE",
"1166 9 OFFCURVE",
"1166 20 CURVE SMOOTH",
"1166 1456 LINE",
"1104 1456 LINE",
"1104 54 LINE",
"733 54 LINE",
"733 1456 LINE",
"266 1456 LINE SMOOTH",
"255 1456 OFFCURVE",
"246 1447 OFFCURVE",
"246 1436 CURVE SMOOTH",
"246 0 LINE"
);
}
);
width = 1423;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"202 -40 LINE",
"432 1264 LINE",
"636 1264 LINE",
"406 -40 LINE",
"746 -40 LINE SMOOTH",
"864 -40 OFFCURVE",
"965 46 OFFCURVE",
"986 164 CURVE SMOOTH",
"1206 1416 LINE",
"1010 1416 LINE",
"780 112 LINE",
"609 112 LINE",
"839 1415 LINE",
"466 1416 LINE SMOOTH",
"348 1416 OFFCURVE",
"247 1330 OFFCURVE",
"226 1212 CURVE SMOOTH",
"6 -40 LINE"
);
}
);
width = 1354;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"151 0 LINE",
"398 1402 LINE",
"740 1402 LINE",
"493 0 LINE",
"989 0 LINE SMOOTH",
"1000 0 OFFCURVE",
"1010 9 OFFCURVE",
"1012 20 CURVE SMOOTH",
"1265 1456 LINE",
"1203 1456 LINE",
"956 54 LINE",
"585 54 LINE",
"832 1456 LINE",
"365 1456 LINE SMOOTH",
"354 1456 OFFCURVE",
"344 1447 OFFCURVE",
"342 1436 CURVE SMOOTH",
"89 0 LINE"
);
}
);
width = 1425;
}
);
leftMetricsKey = three;
rightMetricsKey = three;
unicode = 1374;
},
{
glyphname = "forty-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = "fifty-ethiopic";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"638 630 LINE",
"638 1386 LINE",
"463 1386 LINE",
"463 630 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = "fifty-ethiopic";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"624 510 LINE",
"624 1296 LINE",
"475 1296 LINE",
"475 510 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = "fifty-ethiopic";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"602 507 LINE",
"602 1423 LINE",
"548 1423 LINE",
"548 507 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = "fifty-ethiopic";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"753 510 LINE",
"892 1296 LINE",
"743 1296 LINE",
"604 510 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = "fifty-ethiopic";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"721 507 LINE",
"882 1423 LINE",
"828 1423 LINE",
"667 507 LINE"
);
}
);
width = 1150;
}
);
unicode = 1375;
},
{
glyphname = "fifty-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = "twenty-ethiopic";
transform = "{-1, 0, 0, -1, 1150, 1425}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1150;
},
{
components = (
{
name = "twenty-ethiopic";
transform = "{-1, 0, 0, -1, 1150, 1335}";
}
);
layerId = m002;
width = 1150;
},
{
components = (
{
name = "twenty-ethiopic";
transform = "{-1, 0, 0, -1, 1150, 1436}";
}
);
layerId = m003;
width = 1150;
},
{
components = (
{
name = "twenty-ethiopic";
transform = "{-1, 0, 0, -1, 1195, 1335}";
}
);
layerId = m004;
width = 1150;
},
{
components = (
{
name = "twenty-ethiopic";
transform = "{-1, 0, 0, -1, 1212, 1436}";
}
);
layerId = m005;
width = 1150;
}
);
unicode = 1376;
},
{
glyphname = "sixty-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = _num.bar;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1151 50 LINE",
"1151 304 LINE",
"856 304 LINE",
"856 908 LINE",
"661 908 LINE",
"661 1468 LINE {name = \"❌\";}",
"67 1468 LINE",
"67 1204 LINE",
"372 1204 LINE",
"372 610 LINE",
"567 610 LINE",
"567 50 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1149 0 LINE",
"1149 160 LINE",
"776 160 LINE",
"776 782 LINE",
"609 782 LINE",
"609 1417 LINE",
"50 1417 LINE",
"50 1236 LINE",
"423 1236 LINE",
"423 612 LINE",
"590 612 LINE",
"590 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1059 50 LINE",
"1059 115 LINE",
"641 115 LINE",
"641 810 LINE",
"529 808 LINE",
"529 1450 LINE {name = \"❌\";}",
"57 1450 LINE",
"57 1393 LINE",
"475 1393 LINE",
"475 740 LINE",
"587 740 LINE",
"587 50 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"958 0 LINE",
"986 160 LINE",
"613 160 LINE",
"723 782 LINE",
"556 782 LINE",
"668 1417 LINE",
"109 1417 LINE",
"77 1236 LINE",
"450 1236 LINE",
"340 612 LINE",
"507 612 LINE",
"399 0 LINE"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"877 50 LINE",
"888 115 LINE",
"470 115 LINE",
"593 810 LINE",
"481 808 LINE",
"594 1450 LINE {name = \"❌\";}",
"122 1450 LINE",
"112 1393 LINE",
"530 1393 LINE",
"415 740 LINE",
"527 740 LINE",
"405 50 LINE"
);
}
);
width = 1150;
}
);
unicode = 1377;
},
{
glyphname = "seventy-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = _num.bar;
},
{
name = ring;
transform = "{1, 0, 0, 1, 530, -230}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"745 -20 OFFCURVE",
"867 33 OFFCURVE",
"949 134 CURVE",
"692 242 LINE",
"664 223 OFFCURVE",
"630 213 OFFCURVE",
"588 213 CURVE SMOOTH",
"445.333 213 OFFCURVE",
"384 326.667 OFFCURVE",
"384 564 CURVE SMOOTH",
"384 918 LINE SMOOTH",
"384 1141 OFFCURVE",
"450 1242 OFFCURVE",
"586 1242 CURVE SMOOTH",
"639 1242 OFFCURVE",
"682 1227 OFFCURVE",
"714 1194 CURVE",
"994 1255 LINE",
"913 1400 OFFCURVE",
"775 1476 OFFCURVE",
"586 1476 CURVE SMOOTH",
"268.667 1476 OFFCURVE",
"95 1261.667 OFFCURVE",
"95 855 CURVE SMOOTH",
"95 587 LINE SMOOTH",
"95 196 OFFCURVE",
"270.667 -20 OFFCURVE",
"588 -20 CURVE SMOOTH"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
},
{
name = ring;
transform = "{1, 0, 0, 1, 542, -304}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"732 -50 OFFCURVE",
"845 1 OFFCURVE",
"921 105 CURVE",
"748 166 LINE",
"705 122 OFFCURVE",
"648 101 OFFCURVE",
"576 101 CURVE SMOOTH",
"391 101 OFFCURVE",
"300 247 OFFCURVE",
"300 562 CURVE SMOOTH",
"300 858 LINE SMOOTH",
"300 1154 OFFCURVE",
"385 1294 OFFCURVE",
"574 1294 CURVE SMOOTH",
"649 1294 OFFCURVE",
"708 1273 OFFCURVE",
"751 1228 CURVE",
"911 1307 LINE",
"836 1401 OFFCURVE",
"725 1446 OFFCURVE",
"574 1446 CURVE SMOOTH",
"258 1446 OFFCURVE",
"115 1241 OFFCURVE",
"115 813 CURVE SMOOTH",
"115 566 LINE SMOOTH",
"115 157 OFFCURVE",
"265 -50 OFFCURVE",
"576 -50 CURVE SMOOTH"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
},
{
name = ring;
transform = "{1, 0, 0, 1, 470, -170}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"681 -20 OFFCURVE",
"778 22 OFFCURVE",
"850 101 CURVE",
"784 115 LINE",
"725 62 OFFCURVE",
"651 34 OFFCURVE",
"562 34 CURVE SMOOTH",
"320.667 34 OFFCURVE",
"179 244 OFFCURVE",
"179 596 CURVE SMOOTH",
"179 857 LINE SMOOTH",
"179 1215.667 OFFCURVE",
"314.667 1423 OFFCURVE",
"560 1423 CURVE SMOOTH",
"656 1423 OFFCURVE",
"736 1391 OFFCURVE",
"797 1330 CURVE",
"863 1339 LINE",
"790 1429 OFFCURVE",
"687 1477 OFFCURVE",
"560 1477 CURVE SMOOTH",
"285.333 1477 OFFCURVE",
"125 1248.667 OFFCURVE",
"125 862 CURVE SMOOTH",
"125 598 LINE SMOOTH",
"125 206 OFFCURVE",
"288.667 -20 OFFCURVE",
"562 -20 CURVE SMOOTH"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
},
{
name = ring;
transform = "{1, 0, 0, 1, 460, -291}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"532 -50 OFFCURVE",
"654 1 OFFCURVE",
"749 105 CURVE",
"586 166 LINE",
"536 122 OFFCURVE",
"475 101 OFFCURVE",
"403 101 CURVE SMOOTH",
"218 101 OFFCURVE",
"152 247 OFFCURVE",
"208 562 CURVE SMOOTH",
"261 858 LINE SMOOTH",
"314 1154 OFFCURVE",
"422 1294 OFFCURVE",
"611 1294 CURVE SMOOTH",
"686 1294 OFFCURVE",
"742 1273 OFFCURVE",
"777 1228 CURVE",
"951 1307 LINE",
"892 1401 OFFCURVE",
"789 1446 OFFCURVE",
"638 1446 CURVE SMOOTH",
"322 1446 OFFCURVE",
"144 1241 OFFCURVE",
"68 813 CURVE SMOOTH",
"24 566 LINE SMOOTH",
"-49 157 OFFCURVE",
"65 -50 OFFCURVE",
"376 -50 CURVE SMOOTH"
);
}
);
width = 1150;
},
{
components = (
{
name = _num.bar;
},
{
name = ring;
transform = "{1, 0, 0, 1, 494, -192}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"487 -30 OFFCURVE",
"591 12 OFFCURVE",
"677 91 CURVE",
"613 105 LINE",
"545 52 OFFCURVE",
"466 24 OFFCURVE",
"377 24 CURVE SMOOTH",
"136 24 OFFCURVE",
"31 234 OFFCURVE",
"93 586 CURVE SMOOTH",
"139 847 LINE SMOOTH",
"202 1206 OFFCURVE",
"375 1413 OFFCURVE",
"620 1413 CURVE SMOOTH",
"716 1413 OFFCURVE",
"790 1381 OFFCURVE",
"841 1320 CURVE",
"908 1329 LINE",
"851 1419 OFFCURVE",
"757 1467 OFFCURVE",
"630 1467 CURVE SMOOTH",
"355 1467 OFFCURVE",
"153 1239 OFFCURVE",
"86 852 CURVE SMOOTH",
"40 588 LINE SMOOTH",
"-28 196 OFFCURVE",
"94 -30 OFFCURVE",
"368 -30 CURVE SMOOTH"
);
}
);
width = 1150;
}
);
unicode = 1378;
},
{
glyphname = "eighty-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = one;
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 200, 0}";
},
{
name = one;
transform = "{1, 0, 0, 1, 460, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1700;
},
{
components = (
{
name = one;
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 200, 0}";
},
{
name = one;
transform = "{1, 0, 0, 1, 500, 0}";
}
);
layerId = m002;
width = 1747;
},
{
components = (
{
name = one;
transform = "{1, 0, 0, 1, 47, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 187, 0}";
},
{
name = one;
transform = "{1, 0, 0, 1, 467, 0}";
}
);
layerId = m003;
width = 1855;
},
{
components = (
{
name = one;
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 200, 0}";
},
{
name = one;
transform = "{1, 0, 0, 1, 500, 0}";
}
);
layerId = m004;
width = 1748;
},
{
components = (
{
name = one;
transform = "{1, 0, 0, 1, 47, 0}";
},
{
name = _num.bar;
transform = "{1, 0, 0, 1, 187, 0}";
},
{
name = one;
transform = "{1, 0, 0, 1, 467, 0}";
}
);
layerId = m005;
width = 1855;
}
);
leftMetricsKey = one;
rightMetricsKey = one;
unicode = 1379;
},
{
glyphname = "ninety-ethiopic";
lastChange = "2020-12-16 04:37:53 +0000";
layers = (
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1071 1 LINE",
"848 594 LINE",
"1153 1294 LINE",
"1153 1456 LINE",
"125 1456 LINE",
"125 1222 LINE",
"849 1222 LINE",
"564 604 LINE",
"793 1 LINE"
);
}
);
width = 1290;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1079 -4 LINE",
"844 635 LINE",
"1155 1331 LINE",
"1155 1435 LINE",
"171 1435 LINE",
"171 1283 LINE",
"959 1283 LINE",
"661 637 LINE",
"915 -4 LINE"
);
}
);
width = 1353;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1012 -1 LINE",
"762 652 LINE",
"1110 1422 LINE",
"1110 1456 LINE",
"180 1456 LINE",
"180 1402 LINE",
"1048 1402 LINE",
"709 652 LINE",
"963 -1 LINE"
);
}
);
width = 1423;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"889 -4 LINE",
"766 635 LINE",
"1200 1331 LINE",
"1218 1435 LINE",
"234 1435 LINE",
"207 1283 LINE",
"995 1283 LINE",
"584 637 LINE",
"725 -4 LINE"
);
}
);
width = 1354;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"822 -1 LINE",
"687 652 LINE",
"1171 1422 LINE",
"1177 1456 LINE",
"247 1456 LINE",
"237 1402 LINE",
"1105 1402 LINE",
"634 652 LINE",
"773 -1 LINE"
);
}
);
width = 1425;
}
);
leftMetricsKey = three;
rightMetricsKey = three;
unicode = 137A;
},
{
glyphname = "hundred-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, -1, 100, 1443}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"496 0 LINE",
"496 587 LINE",
"573 508 OFFCURVE",
"671 469 OFFCURVE",
"789 469 CURVE SMOOTH",
"1042 469 OFFCURVE",
"1203 667 OFFCURVE",
"1203 963 CURVE SMOOTH",
"1203 1043 OFFCURVE",
"1138 1461 OFFCURVE",
"713 1463 CURVE SMOOTH",
"406 1463 OFFCURVE",
"200 1232 OFFCURVE",
"200 876 CURVE SMOOTH",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"608 701 OFFCURVE",
"526 754 OFFCURVE",
"490 834 CURVE",
"490 922 LINE SMOOTH",
"490 1115 OFFCURVE",
"570 1230 OFFCURVE",
"707 1230 CURVE SMOOTH",
"831 1230 OFFCURVE",
"915 1122 OFFCURVE",
"915 966 CURVE SMOOTH",
"915 807 OFFCURVE",
"832 701 OFFCURVE",
"701 701 CURVE SMOOTH"
);
}
);
width = 1326;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, -1, 132, 1384}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"453 0 LINE",
"453 561 LINE",
"530 473 OFFCURVE",
"634 429 OFFCURVE",
"767 429 CURVE SMOOTH",
"1020 429 OFFCURVE",
"1184 626 OFFCURVE",
"1184 909 CURVE SMOOTH",
"1184 1209 OFFCURVE",
"1008 1404 OFFCURVE",
"733 1404 CURVE SMOOTH",
"454 1404 OFFCURVE",
"264 1167 OFFCURVE",
"264 830 CURVE SMOOTH",
"264 0 LINE"
);
},
{
closed = 1;
nodes = (
"609 583 OFFCURVE",
"491 668 OFFCURVE",
"450 783 CURVE",
"450 851 LINE SMOOTH",
"450 1091 OFFCURVE",
"572 1251 OFFCURVE",
"733 1251 CURVE SMOOTH",
"900 1251 OFFCURVE",
"1001 1117 OFFCURVE",
"1001 918 CURVE SMOOTH",
"1001 718 OFFCURVE",
"896 583 OFFCURVE",
"736 583 CURVE SMOOTH"
);
}
);
width = 1391;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, -1, 128, 1443}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"311 -3 LINE {name = \"❌\";}",
"311 710 LINE",
"388 573 OFFCURVE",
"545 486 OFFCURVE",
"720 486 CURVE SMOOTH",
"976 486 OFFCURVE",
"1141 676 OFFCURVE",
"1141 963 CURVE SMOOTH",
"1141 1226 OFFCURVE",
"988 1463 OFFCURVE",
"730 1463 CURVE SMOOTH",
"592 1463 OFFCURVE",
"256 1396 OFFCURVE",
"256 962 CURVE SMOOTH",
"256 -3 LINE {name = \"❌\";}"
);
},
{
closed = 1;
nodes = (
"526 540 OFFCURVE",
"350 661 OFFCURVE",
"310 822 CURVE",
"310 950 LINE SMOOTH",
"310 1225 OFFCURVE",
"482 1410 OFFCURVE",
"730 1410 CURVE SMOOTH",
"937 1410 OFFCURVE",
"1087 1188 OFFCURVE",
"1087 963 CURVE SMOOTH",
"1087 704 OFFCURVE",
"945 540 OFFCURVE",
"713 540 CURVE SMOOTH"
);
}
);
width = 1448;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 132, -1}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"262 0 LINE",
"361 561 LINE",
"423 473 OFFCURVE",
"519 429 OFFCURVE",
"652 429 CURVE SMOOTH",
"905 429 OFFCURVE",
"1104 626 OFFCURVE",
"1153 909 CURVE SMOOTH",
"1206 1209 OFFCURVE",
"1065 1404 OFFCURVE",
"790 1404 CURVE SMOOTH",
"511 1404 OFFCURVE",
"279 1167 OFFCURVE",
"220 830 CURVE SMOOTH",
"73 0 LINE"
);
},
{
closed = 1;
nodes = (
"521 583 OFFCURVE",
"418 668 OFFCURVE",
"397 783 CURVE",
"409 851 LINE SMOOTH",
"452 1091 OFFCURVE",
"602 1251 OFFCURVE",
"763 1251 CURVE SMOOTH",
"930 1251 OFFCURVE",
"1007 1117 OFFCURVE",
"972 918 CURVE SMOOTH",
"937 718 OFFCURVE",
"808 583 OFFCURVE",
"648 583 CURVE SMOOTH"
);
}
);
width = 1391;
},
{
components = (
{
name = _num.bar;
transform = "{1, 0, 0, 1, 132, 17}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"104 -3 LINE {name = \"❌\";}",
"229 710 LINE",
"282 573 OFFCURVE",
"424 486 OFFCURVE",
"599 486 CURVE SMOOTH",
"855 486 OFFCURVE",
"1053 676 OFFCURVE",
"1104 963 CURVE SMOOTH",
"1150 1226 OFFCURVE",
"1039 1463 OFFCURVE",
"781 1463 CURVE SMOOTH",
"643 1463 OFFCURVE",
"295 1396 OFFCURVE",
"219 962 CURVE SMOOTH",
"49 -3 LINE {name = \"❌\";}"
);
},
{
closed = 1;
nodes = (
"414 540 OFFCURVE",
"260 661 OFFCURVE",
"248 822 CURVE",
"271 950 LINE SMOOTH",
"320 1225 OFFCURVE",
"524 1410 OFFCURVE",
"772 1410 CURVE SMOOTH",
"979 1410 OFFCURVE",
"1090 1188 OFFCURVE",
"1050 963 CURVE SMOOTH",
"1004 704 OFFCURVE",
"833 540 OFFCURVE",
"601 540 CURVE SMOOTH"
);
}
);
width = 1450;
}
);
leftMetricsKey = six;
rightMetricsKey = three;
unicode = 137B;
},
{
glyphname = "tenthousand-ethiopic";
lastChange = "2020-12-16 02:44:02 +0000";
layers = (
{
components = (
{
name = "hundred-ethiopic";
},
{
name = "hundred-ethiopic";
transform = "{1, 0, 0, 1, 1010, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 2336;
},
{
components = (
{
name = "hundred-ethiopic";
},
{
name = "hundred-ethiopic";
transform = "{1, 0, 0, 1, 930, 0}";
}
);
layerId = m002;
width = 2321;
},
{
components = (
{
name = "hundred-ethiopic";
},
{
name = "hundred-ethiopic";
transform = "{1, 0, 0, 1, 900, 0}";
}
);
layerId = m003;
width = 2348;
},
{
components = (
{
name = "hundred-ethiopic";
},
{
name = "hundred-ethiopic";
transform = "{1, 0, 0, 1, 940, 0}";
}
);
layerId = m004;
width = 2331;
},
{
components = (
{
name = "hundred-ethiopic";
},
{
name = "hundred-ethiopic";
transform = "{1, 0, 0, 1, 900, 0}";
}
);
layerId = m005;
width = 2350;
}
);
leftMetricsKey = six;
rightMetricsKey = three;
unicode = 137C;
},
{
glyphname = zero.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"578 -11 OFFCURVE",
"690 104.667 OFFCURVE",
"690 310 CURVE SMOOTH",
"690 475 LINE SMOOTH",
"690 679 OFFCURVE",
"574.667 800 OFFCURVE",
"380 800 CURVE SMOOTH",
"186.667 800 OFFCURVE",
"71 681.667 OFFCURVE",
"71 475 CURVE SMOOTH",
"71 302 LINE SMOOTH",
"73.667 106 OFFCURVE",
"183.333 -11 OFFCURVE",
"382 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 133 OFFCURVE",
"245 194 OFFCURVE",
"245 316 CURVE SMOOTH",
"245 484 LINE SMOOTH",
"248 597 OFFCURVE",
"291 654 OFFCURVE",
"374 654 CURVE SMOOTH",
"461 654 OFFCURVE",
"504 593 OFFCURVE",
"504 473 CURVE SMOOTH",
"504 304 LINE SMOOTH",
"501 190 OFFCURVE",
"459 133 OFFCURVE",
"376 133 CURVE SMOOTH"
);
}
);
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"564 -11 OFFCURVE",
"669 109 OFFCURVE",
"669 325 CURVE SMOOTH",
"669 471 LINE SMOOTH",
"666.333 680.333 OFFCURVE",
"562 800 OFFCURVE",
"374 800 CURVE SMOOTH",
"188.667 800 OFFCURVE",
"80 680.333 OFFCURVE",
"80 463 CURVE SMOOTH",
"80 321 LINE SMOOTH",
"81.333 107.667 OFFCURVE",
"190.667 -11 OFFCURVE",
"376 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"283.333 117 OFFCURVE",
"237 181.667 OFFCURVE",
"237 311 CURVE SMOOTH",
"237 490 LINE SMOOTH",
"239.667 610 OFFCURVE",
"285.333 670 OFFCURVE",
"374 670 CURVE SMOOTH",
"466 670 OFFCURVE",
"512 606 OFFCURVE",
"512 478 CURVE SMOOTH",
"512 298 LINE SMOOTH",
"509.333 177.333 OFFCURVE",
"464 117 OFFCURVE",
"376 117 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"538.667 -11 OFFCURVE",
"632 109.667 OFFCURVE",
"632 327 CURVE SMOOTH",
"632 462 LINE SMOOTH",
"632 679.333 OFFCURVE",
"536.333 800 OFFCURVE",
"363 800 CURVE SMOOTH",
"191 800 OFFCURVE",
"94 679.333 OFFCURVE",
"94 462 CURVE SMOOTH",
"94 327 LINE SMOOTH",
"94 109.667 OFFCURVE",
"193.333 -11 OFFCURVE",
"364 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"228 37 OFFCURVE",
"147 140.667 OFFCURVE",
"147 322 CURVE SMOOTH",
"147 465 LINE SMOOTH",
"147 649 OFFCURVE",
"225.667 751 OFFCURVE",
"363 751 CURVE SMOOTH",
"501.667 751 OFFCURVE",
"579 647 OFFCURVE",
"579 467 CURVE SMOOTH",
"579 324 LINE SMOOTH",
"579 140 OFFCURVE",
"502.667 37 OFFCURVE",
"364 37 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"371 -11 OFFCURVE",
"497 109 OFFCURVE",
"536 325 CURVE SMOOTH",
"561 471 LINE SMOOTH",
"596 680 OFFCURVE",
"512 800 OFFCURVE",
"324 800 CURVE SMOOTH",
"139 800 OFFCURVE",
"9 680 OFFCURVE",
"-29 463 CURVE SMOOTH",
"-54 321 LINE SMOOTH",
"-90 108 OFFCURVE",
"-2 -11 OFFCURVE",
"183 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"113 117 OFFCURVE",
"78 182 OFFCURVE",
"101 311 CURVE SMOOTH",
"133 490 LINE SMOOTH",
"156 610 OFFCURVE",
"213 670 OFFCURVE",
"301 670 CURVE SMOOTH",
"393 670 OFFCURVE",
"428 606 OFFCURVE",
"405 478 CURVE SMOOTH",
"374 298 LINE SMOOTH",
"350 177 OFFCURVE",
"294 117 OFFCURVE",
"206 117 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"346 -11 OFFCURVE",
"461 110 OFFCURVE",
"499 327 CURVE SMOOTH",
"523 462 LINE SMOOTH",
"561 679 OFFCURVE",
"487 800 OFFCURVE",
"313 800 CURVE SMOOTH",
"141 800 OFFCURVE",
"23 679 OFFCURVE",
"-15 462 CURVE SMOOTH",
"-39 327 LINE SMOOTH",
"-77 110 OFFCURVE",
"1 -11 OFFCURVE",
"171 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"44 37 OFFCURVE",
"-19 141 OFFCURVE",
"13 322 CURVE SMOOTH",
"38 465 LINE SMOOTH",
"71 649 OFFCURVE",
"167 751 OFFCURVE",
"305 751 CURVE SMOOTH",
"443 751 OFFCURVE",
"502 647 OFFCURVE",
"471 467 CURVE SMOOTH",
"445 324 LINE SMOOTH",
"413 140 OFFCURVE",
"318 37 OFFCURVE",
"180 37 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00455;
},
{
glyphname = one.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"528 0 LINE",
"528 792 LINE",
"135 665 LINE",
"135 507 LINE",
"324 548 LINE",
"324 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 5 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"495 0 LINE",
"495 794 LINE",
"122 672 LINE",
"122 544 LINE",
"338 601 LINE",
"338 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 5 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"433 0 LINE",
"433 794 LINE",
"131 694 LINE",
"131 641 LINE",
"379 722 LINE",
"379 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 5 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"304 0 LINE",
"444 794 LINE",
"50 672 LINE",
"27 544 LINE",
"253 601 LINE",
"147 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 5 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"242 0 LINE",
"382 794 LINE",
"63 694 LINE",
"53 641 LINE",
"316 722 LINE",
"188 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 5 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00454;
},
{
glyphname = two.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"693 0 LINE",
"693 164 LINE",
"342 164 LINE",
"490 279 LINE SMOOTH",
"634 395 OFFCURVE",
"670 458.667 OFFCURVE",
"670 552 CURVE SMOOTH",
"670 710.667 OFFCURVE",
"558.333 800 OFFCURVE",
"361 800 CURVE SMOOTH",
"181 800 OFFCURVE",
"55 680.667 OFFCURVE",
"55 526 CURVE",
"261 526 LINE",
"261 588.667 OFFCURVE",
"303.333 635 OFFCURVE",
"370 635 CURVE SMOOTH",
"433.333 635 OFFCURVE",
"465 607 OFFCURVE",
"465 551 CURVE SMOOTH",
"465 503 OFFCURVE",
"404 434 OFFCURVE",
"360 395 CURVE SMOOTH",
"73 138 LINE",
"73 0 LINE"
);
}
);
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"683 0 LINE",
"683 128 LINE",
"284 128 LINE",
"544 352 LINE SMOOTH",
"615.333 423.333 OFFCURVE",
"651 493.667 OFFCURVE",
"651 563 CURVE SMOOTH",
"651 709.667 OFFCURVE",
"541 800 OFFCURVE",
"365 800 CURVE SMOOTH",
"189 800 OFFCURVE",
"66 690 OFFCURVE",
"66 538 CURVE",
"223 538 LINE",
"223 614 OFFCURVE",
"269 671 OFFCURVE",
"369 671 CURVE SMOOTH",
"449 671 OFFCURVE",
"493 626.333 OFFCURVE",
"493 561 CURVE SMOOTH",
"493 515 OFFCURVE",
"456.667 458 OFFCURVE",
"384 390 CURVE SMOOTH",
"84 108 LINE",
"84 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 21 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 14 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"651 0 LINE",
"651 49 LINE",
"175 49 LINE",
"492 367 LINE SMOOTH",
"567.333 449 OFFCURVE",
"605 521.333 OFFCURVE",
"605 584 CURVE SMOOTH",
"605 714.667 OFFCURVE",
"510.667 800 OFFCURVE",
"356 800 CURVE SMOOTH",
"197.333 800 OFFCURVE",
"86 699.333 OFFCURVE",
"86 562 CURVE",
"140 562 LINE",
"140 675.333 OFFCURVE",
"220 751 OFFCURVE",
"356 751 CURVE SMOOTH",
"485.333 751 OFFCURVE",
"551 685.667 OFFCURVE",
"551 583 CURVE SMOOTH",
"551 515 OFFCURVE",
"503.333 441.667 OFFCURVE",
"398 339 CURVE SMOOTH",
"108 44 LINE",
"108 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 21 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 14 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"492 0 LINE",
"515 128 LINE",
"116 128 LINE",
"415 352 LINE SMOOTH",
"499 423 OFFCURVE",
"547 494 OFFCURVE",
"559 563 CURVE SMOOTH",
"585 710 OFFCURVE",
"491 800 OFFCURVE",
"315 800 CURVE SMOOTH",
"139 800 OFFCURVE",
"-3 690 OFFCURVE",
"-30 538 CURVE",
"127 538 LINE",
"140 614 OFFCURVE",
"197 671 OFFCURVE",
"297 671 CURVE SMOOTH",
"377 671 OFFCURVE",
"413 626 OFFCURVE",
"401 561 CURVE SMOOTH",
"393 515 OFFCURVE",
"347 458 OFFCURVE",
"262 390 CURVE SMOOTH",
"-88 108 LINE",
"-107 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 21 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 14 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"460 0 LINE",
"469 49 LINE",
"-7 49 LINE",
"366 367 LINE SMOOTH",
"456 449 OFFCURVE",
"506 521 OFFCURVE",
"517 584 CURVE SMOOTH",
"540 715 OFFCURVE",
"461 800 OFFCURVE",
"306 800 CURVE SMOOTH",
"148 800 OFFCURVE",
"19 699 OFFCURVE",
"-6 562 CURVE",
"48 562 LINE",
"68 675 OFFCURVE",
"162 751 OFFCURVE",
"298 751 CURVE SMOOTH",
"427 751 OFFCURVE",
"481 686 OFFCURVE",
"463 583 CURVE SMOOTH",
"451 515 OFFCURVE",
"390 442 OFFCURVE",
"267 339 CURVE SMOOTH",
"-75 44 LINE",
"-83 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */
8 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
20 21 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
3 14 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
8 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00453;
},
{
glyphname = three.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"559.333 -11 OFFCURVE",
"693 81 OFFCURVE",
"693 221 CURVE SMOOTH",
"693 316.333 OFFCURVE",
"643 377.667 OFFCURVE",
"543 405 CURVE",
"633 438.333 OFFCURVE",
"678 494.667 OFFCURVE",
"678 574 CURVE SMOOTH",
"678 716.667 OFFCURVE",
"555.333 800 OFFCURVE",
"362 800 CURVE SMOOTH",
"187.333 800 OFFCURVE",
"62 711 OFFCURVE",
"62 575 CURVE",
"267 575 LINE",
"267 613.667 OFFCURVE",
"312 635 OFFCURVE",
"368 635 CURVE SMOOTH",
"433.333 635 OFFCURVE",
"474 604.667 OFFCURVE",
"474 558 CURVE SMOOTH",
"474 499.333 OFFCURVE",
"434.333 470 OFFCURVE",
"355 470 CURVE SMOOTH",
"273 470 LINE",
"273 334 LINE",
"365 334 LINE SMOOTH",
"446.333 333.333 OFFCURVE",
"487 302.333 OFFCURVE",
"487 241 CURVE SMOOTH",
"487 194.333 OFFCURVE",
"454 153 OFFCURVE",
"374 153 CURVE SMOOTH",
"304.667 153 OFFCURVE",
"254 190.667 OFFCURVE",
"254 236 CURVE",
"48 236 LINE",
"48 84 OFFCURVE",
"172.667 -11 OFFCURVE",
"362 -11 CURVE SMOOTH"
);
}
);
width = 751;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"541.333 -11 OFFCURVE",
"666 78.667 OFFCURVE",
"666 220 CURVE SMOOTH",
"666 315.333 OFFCURVE",
"616.333 376.667 OFFCURVE",
"517 404 CURVE",
"605 437.333 OFFCURVE",
"653 501.667 OFFCURVE",
"653 575 CURVE SMOOTH",
"653 713.667 OFFCURVE",
"542.667 800 OFFCURVE",
"360 800 CURVE SMOOTH",
"194.667 800 OFFCURVE",
"73 709.667 OFFCURVE",
"73 579 CURVE",
"230 579 LINE",
"230 633.667 OFFCURVE",
"286 671 OFFCURVE",
"362 671 CURVE SMOOTH",
"455.333 671 OFFCURVE",
"495 628 OFFCURVE",
"495 568 CURVE SMOOTH",
"495 504 OFFCURVE",
"447.667 459 OFFCURVE",
"349 459 CURVE SMOOTH",
"265 459 LINE",
"265 343 LINE",
"353 343 LINE SMOOTH",
"457 341.667 OFFCURVE",
"509 303.333 OFFCURVE",
"509 228 CURVE SMOOTH",
"509 160 OFFCURVE",
"459.333 117 OFFCURVE",
"366 117 CURVE SMOOTH",
"276.667 117 OFFCURVE",
"220 162 OFFCURVE",
"220 222 CURVE",
"62 222 LINE",
"62 79.333 OFFCURVE",
"184 -11 OFFCURVE",
"360 -11 CURVE SMOOTH"
);
}
);
};
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"541.333 -11 OFFCURVE",
"666 78.667 OFFCURVE",
"666 220 CURVE SMOOTH",
"666 315.333 OFFCURVE",
"616.333 376.667 OFFCURVE",
"517 404 CURVE",
"605 437.333 OFFCURVE",
"653 501.667 OFFCURVE",
"653 575 CURVE SMOOTH",
"653 713.667 OFFCURVE",
"542.667 800 OFFCURVE",
"360 800 CURVE SMOOTH",
"194.667 800 OFFCURVE",
"73 709.667 OFFCURVE",
"73 579 CURVE",
"230 579 LINE",
"230 633.667 OFFCURVE",
"286 671 OFFCURVE",
"362 671 CURVE SMOOTH",
"455.333 671 OFFCURVE",
"495 628 OFFCURVE",
"495 568 CURVE SMOOTH",
"495 504 OFFCURVE",
"447.667 459 OFFCURVE",
"349 459 CURVE SMOOTH",
"265 459 LINE",
"265 343 LINE",
"353 343 LINE SMOOTH",
"457 341.667 OFFCURVE",
"509 303.333 OFFCURVE",
"509 228 CURVE SMOOTH",
"509 160 OFFCURVE",
"459.333 117 OFFCURVE",
"366 117 CURVE SMOOTH",
"276.667 117 OFFCURVE",
"220 162 OFFCURVE",
"220 222 CURVE",
"62 222 LINE",
"62 79.333 OFFCURVE",
"184 -11 OFFCURVE",
"360 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"529.667 -11 OFFCURVE",
"637 77.667 OFFCURVE",
"637 211 CURVE SMOOTH",
"637 307 OFFCURVE",
"577.667 376.333 OFFCURVE",
"463 403 CURVE",
"563 433.667 OFFCURVE",
"618 506 OFFCURVE",
"618 582 CURVE SMOOTH",
"618 718 OFFCURVE",
"520.667 800 OFFCURVE",
"362 800 CURVE SMOOTH",
"210 800 OFFCURVE",
"97 710 OFFCURVE",
"97 582 CURVE",
"150 582 LINE",
"150 683.333 OFFCURVE",
"240.667 751 OFFCURVE",
"362 751 CURVE SMOOTH",
"488.667 751 OFFCURVE",
"564 687.667 OFFCURVE",
"564 585 CURVE SMOOTH",
"564 493 OFFCURVE",
"479.667 427.333 OFFCURVE",
"345 426 CURVE SMOOTH",
"270 426 LINE",
"270 377 LINE",
"330 377 LINE SMOOTH",
"498.667 377 OFFCURVE",
"583 321.333 OFFCURVE",
"583 210 CURVE SMOOTH",
"583 102 OFFCURVE",
"504.333 37 OFFCURVE",
"367 37 CURVE SMOOTH",
"229.667 37 OFFCURVE",
"134 113 OFFCURVE",
"134 217 CURVE",
"80 217 LINE",
"80 82.333 OFFCURVE",
"201.667 -11 OFFCURVE",
"367 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
background = {
paths = (
{
closed = 1;
nodes = (
"541.333 -11 OFFCURVE",
"666 78.667 OFFCURVE",
"666 220 CURVE SMOOTH",
"666 315.333 OFFCURVE",
"616.333 376.667 OFFCURVE",
"517 404 CURVE",
"605 437.333 OFFCURVE",
"653 501.667 OFFCURVE",
"653 575 CURVE SMOOTH",
"653 713.667 OFFCURVE",
"542.667 800 OFFCURVE",
"360 800 CURVE SMOOTH",
"194.667 800 OFFCURVE",
"73 709.667 OFFCURVE",
"73 579 CURVE",
"230 579 LINE",
"230 633.667 OFFCURVE",
"286 671 OFFCURVE",
"362 671 CURVE SMOOTH",
"455.333 671 OFFCURVE",
"495 628 OFFCURVE",
"495 568 CURVE SMOOTH",
"495 504 OFFCURVE",
"447.667 459 OFFCURVE",
"349 459 CURVE SMOOTH",
"265 459 LINE",
"265 343 LINE",
"353 343 LINE SMOOTH",
"457 341.667 OFFCURVE",
"509 303.333 OFFCURVE",
"509 228 CURVE SMOOTH",
"509 160 OFFCURVE",
"459.333 117 OFFCURVE",
"366 117 CURVE SMOOTH",
"276.667 117 OFFCURVE",
"220 162 OFFCURVE",
"220 222 CURVE",
"62 222 LINE",
"62 79.333 OFFCURVE",
"184 -11 OFFCURVE",
"360 -11 CURVE SMOOTH"
);
}
);
};
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"349 -11 OFFCURVE",
"489 79 OFFCURVE",
"514 220 CURVE SMOOTH",
"531 315 OFFCURVE",
"492 377 OFFCURVE",
"397 404 CURVE",
"491 437 OFFCURVE",
"551 502 OFFCURVE",
"564 575 CURVE SMOOTH",
"588 714 OFFCURVE",
"493 800 OFFCURVE",
"310 800 CURVE SMOOTH",
"145 800 OFFCURVE",
"7 710 OFFCURVE",
"-16 579 CURVE",
"141 579 LINE",
"151 634 OFFCURVE",
"214 671 OFFCURVE",
"290 671 CURVE SMOOTH",
"383 671 OFFCURVE",
"415 628 OFFCURVE",
"404 568 CURVE SMOOTH",
"393 504 OFFCURVE",
"338 459 OFFCURVE",
"239 459 CURVE SMOOTH",
"155 459 LINE",
"135 343 LINE",
"223 343 LINE SMOOTH",
"326 342 OFFCURVE",
"372 303 OFFCURVE",
"358 228 CURVE SMOOTH",
"346 160 OFFCURVE",
"289 117 OFFCURVE",
"196 117 CURVE SMOOTH",
"107 117 OFFCURVE",
"58 162 OFFCURVE",
"68 222 CURVE",
"-90 222 LINE",
"-115 79 OFFCURVE",
"-9 -11 OFFCURVE",
"167 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"337 -11 OFFCURVE",
"460 78 OFFCURVE",
"483 211 CURVE SMOOTH",
"500 307 OFFCURVE",
"453 376 OFFCURVE",
"343 403 CURVE",
"449 434 OFFCURVE",
"516 506 OFFCURVE",
"530 582 CURVE SMOOTH",
"554 718 OFFCURVE",
"471 800 OFFCURVE",
"312 800 CURVE SMOOTH",
"160 800 OFFCURVE",
"31 710 OFFCURVE",
"9 582 CURVE",
"62 582 LINE",
"80 683 OFFCURVE",
"182 751 OFFCURVE",
"304 751 CURVE SMOOTH",
"430 751 OFFCURVE",
"494 688 OFFCURVE",
"476 585 CURVE SMOOTH",
"460 493 OFFCURVE",
"364 427 OFFCURVE",
"229 426 CURVE SMOOTH",
"154 426 LINE",
"146 377 LINE",
"206 377 LINE SMOOTH",
"374 377 OFFCURVE",
"449 321 OFFCURVE",
"429 210 CURVE SMOOTH",
"410 102 OFFCURVE",
"320 37 OFFCURVE",
"183 37 CURVE SMOOTH",
"45 37 OFFCURVE",
"-37 113 OFFCURVE",
"-19 217 CURVE",
"-73 217 LINE",
"-96 82 OFFCURVE",
"9 -11 OFFCURVE",
"174 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00543;
},
{
glyphname = four.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"616 0 LINE",
"616 159 LINE",
"704 159 LINE",
"704 326 LINE",
"616 326 LINE",
"616 789 LINE",
"410 789 LINE",
"53 294 LINE",
"65 159 LINE",
"411 159 LINE",
"411 0 LINE"
);
},
{
closed = 1;
nodes = (
"249 325 LINE",
"411 538 LINE",
"411 325 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 11 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"592 0 LINE",
"592 169 LINE",
"699 169 LINE",
"699 299 LINE",
"592 299 LINE",
"592 789 LINE",
"431 789 LINE",
"54 271 LINE",
"60 169 LINE",
"435 169 LINE",
"435 0 LINE"
);
},
{
closed = 1;
nodes = (
"212 299 LINE",
"435 588 LINE",
"435 299 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 11 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"542 0 LINE",
"542 204 LINE",
"689 204 LINE",
"689 253 LINE",
"542 253 LINE",
"542 789 LINE",
"482 789 LINE",
"65 236 LINE",
"66 204 LINE",
"489 204 LINE",
"489 0 LINE"
);
},
{
closed = 1;
nodes = (
"135 253 LINE",
"489 727 LINE",
"489 253 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 11 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"401 0 LINE",
"431 169 LINE",
"538 169 LINE",
"561 299 LINE",
"454 299 LINE",
"540 789 LINE",
"379 789 LINE",
"-89 271 LINE",
"-101 169 LINE",
"274 169 LINE",
"244 0 LINE"
);
},
{
closed = 1;
nodes = (
"74 299 LINE",
"348 588 LINE",
"297 299 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 11 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"351 0 LINE",
"387 204 LINE",
"534 204 LINE",
"543 253 LINE",
"396 253 LINE",
"490 789 LINE",
"430 789 LINE",
"-84 236 LINE",
"-89 204 LINE",
"334 204 LINE",
"298 0 LINE"
);
},
{
closed = 1;
nodes = (
"-11 253 LINE",
"426 727 LINE",
"343 253 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
8 11 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
13 9 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00544;
},
{
glyphname = five.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"565.333 -11 OFFCURVE",
"689 101 OFFCURVE",
"689 265 CURVE SMOOTH",
"689 427.667 OFFCURVE",
"595 519 OFFCURVE",
"419 519 CURVE SMOOTH",
"373 519 OFFCURVE",
"329 510 OFFCURVE",
"287 492 CURVE",
"308 627 LINE",
"644 627 LINE",
"644 789 LINE",
"141 789 LINE",
"87 381 LINE",
"250 341 LINE",
"267.333 354.333 OFFCURVE",
"297.333 378 OFFCURVE",
"364 378 CURVE SMOOTH",
"445.333 378 OFFCURVE",
"484 334 OFFCURVE",
"484 266 CURVE SMOOTH",
"484 190.667 OFFCURVE",
"449.333 153 OFFCURVE",
"380 153 CURVE SMOOTH",
"312.667 153 OFFCURVE",
"277.667 176.333 OFFCURVE",
"275 223 CURVE",
"69 223 LINE",
"71.667 88.333 OFFCURVE",
"208 -11 OFFCURVE",
"380 -11 CURVE SMOOTH"
);
}
);
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"563.667 -11 OFFCURVE",
"679 92.667 OFFCURVE",
"679 258 CURVE SMOOTH",
"679 419.333 OFFCURVE",
"578.667 516 OFFCURVE",
"408 516 CURVE SMOOTH",
"358.667 516 OFFCURVE",
"312.333 506.333 OFFCURVE",
"269 487 CURVE",
"291 657 LINE",
"640 657 LINE",
"640 789 LINE",
"162 789 LINE",
"112 387 LINE",
"238 356 LINE",
"277.333 384.667 OFFCURVE",
"321.333 399 OFFCURVE",
"370 399 CURVE SMOOTH",
"468.667 399 OFFCURVE",
"522 342.667 OFFCURVE",
"522 260 CURVE SMOOTH",
"522 169.333 OFFCURVE",
"471.667 117 OFFCURVE",
"385 117 CURVE SMOOTH",
"299 117 OFFCURVE",
"252.667 150 OFFCURVE",
"246 216 CURVE",
"91 216 LINE",
"99 81.333 OFFCURVE",
"223.667 -11 OFFCURVE",
"385 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"552 -11 OFFCURVE",
"650 81.667 OFFCURVE",
"650 251 CURVE SMOOTH",
"650 401.667 OFFCURVE",
"542.333 501 OFFCURVE",
"381 501 CURVE SMOOTH",
"298.333 501 OFFCURVE",
"230.667 475 OFFCURVE",
"200 455 CURVE",
"237 738 LINE",
"639 738 LINE",
"639 789 LINE",
"192 789 LINE",
"145 407 LINE",
"186 394 LINE",
"258.667 441 OFFCURVE",
"310.667 453 OFFCURVE",
"376 453 CURVE SMOOTH",
"517.333 453 OFFCURVE",
"597 372.333 OFFCURVE",
"597 251 CURVE SMOOTH",
"597 108.333 OFFCURVE",
"526 37 OFFCURVE",
"384 37 CURVE SMOOTH",
"269.333 37 OFFCURVE",
"188.333 105.333 OFFCURVE",
"179 208 CURVE",
"125 208 LINE",
"137 74.667 OFFCURVE",
"246.667 -11 OFFCURVE",
"384 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"371 -11 OFFCURVE",
"505 93 OFFCURVE",
"534 258 CURVE SMOOTH",
"562 419 OFFCURVE",
"479 516 OFFCURVE",
"308 516 CURVE SMOOTH",
"259 516 OFFCURVE",
"211 506 OFFCURVE",
"164 487 CURVE",
"216 657 LINE",
"565 657 LINE",
"588 789 LINE",
"110 789 LINE",
"-11 387 LINE",
"110 356 LINE",
"154 385 OFFCURVE",
"201 399 OFFCURVE",
"250 399 CURVE SMOOTH",
"348 399 OFFCURVE",
"392 343 OFFCURVE",
"377 260 CURVE SMOOTH",
"361 169 OFFCURVE",
"302 117 OFFCURVE",
"215 117 CURVE SMOOTH",
"129 117 OFFCURVE",
"88 150 OFFCURVE",
"93 216 CURVE",
"-62 216 LINE",
"-77 81 OFFCURVE",
"31 -11 OFFCURVE",
"192 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"359 -11 OFFCURVE",
"474 82 OFFCURVE",
"503 251 CURVE SMOOTH",
"530 402 OFFCURVE",
"440 501 OFFCURVE",
"279 501 CURVE SMOOTH",
"196 501 OFFCURVE",
"124 475 OFFCURVE",
"89 455 CURVE",
"176 738 LINE",
"578 738 LINE",
"587 789 LINE",
"140 789 LINE",
"26 407 LINE",
"65 394 LINE",
"146 441 OFFCURVE",
"200 453 OFFCURVE",
"265 453 CURVE SMOOTH",
"406 453 OFFCURVE",
"472 372 OFFCURVE",
"450 251 CURVE SMOOTH",
"425 108 OFFCURVE",
"342 37 OFFCURVE",
"200 37 CURVE SMOOTH",
"85 37 OFFCURVE",
"16 105 OFFCURVE",
"25 208 CURVE",
"-29 208 LINE",
"-41 75 OFFCURVE",
"54 -11 OFFCURVE",
"191 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00545;
},
{
glyphname = six.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"579.333 -11 OFFCURVE",
"707 107.333 OFFCURVE",
"707 262 CURVE SMOOTH",
"707 423.333 OFFCURVE",
"613.333 526 OFFCURVE",
"456 526 CURVE SMOOTH",
"384.667 526 OFFCURVE",
"326 504.333 OFFCURVE",
"280 461 CURVE",
"300 581 OFFCURVE",
"375.333 637 OFFCURVE",
"570 637 CURVE",
"570 805 LINE",
"236.667 805 OFFCURVE",
"70 639.333 OFFCURVE",
"70 362 CURVE SMOOTH",
"70 301 LINE SMOOTH",
"70 102 OFFCURVE",
"194 -11 OFFCURVE",
"398 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"313.667 153 OFFCURVE",
"275 196 OFFCURVE",
"275 276 CURVE SMOOTH",
"275 324 LINE",
"299 365 OFFCURVE",
"353 383 OFFCURVE",
"390 383 CURVE SMOOTH",
"465 383 OFFCURVE",
"502 330 OFFCURVE",
"502 264 CURVE SMOOTH",
"502 198.667 OFFCURVE",
"451 153 OFFCURVE",
"391 153 CURVE SMOOTH"
);
}
);
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"568 -11 OFFCURVE",
"683 104.333 OFFCURVE",
"683 259 CURVE SMOOTH",
"683 417.667 OFFCURVE",
"587.333 523 OFFCURVE",
"430 523 CURVE SMOOTH",
"354 523 OFFCURVE",
"292 497.333 OFFCURVE",
"244 446 CURVE",
"259.333 592 OFFCURVE",
"356.333 665.667 OFFCURVE",
"552 667 CURVE",
"552 798 LINE",
"239.667 791.333 OFFCURVE",
"86 634.333 OFFCURVE",
"86 357 CURVE SMOOTH",
"86 306 LINE SMOOTH",
"86 104.667 OFFCURVE",
"206.667 -11 OFFCURVE",
"392 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"304 117 OFFCURVE",
"242 174 OFFCURVE",
"242 286 CURVE SMOOTH",
"242 320 LINE",
"264.667 362.667 OFFCURVE",
"319 396 OFFCURVE",
"387 396 CURVE SMOOTH",
"479 396 OFFCURVE",
"527 340.667 OFFCURVE",
"527 258 CURVE SMOOTH",
"527 175.333 OFFCURVE",
"469.333 117 OFFCURVE",
"388 117 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"535 -11 OFFCURVE",
"643 101.667 OFFCURVE",
"643 259 CURVE SMOOTH",
"643 416.333 OFFCURVE",
"540.333 519 OFFCURVE",
"387 519 CURVE SMOOTH",
"284.333 519 OFFCURVE",
"203.667 472.333 OFFCURVE",
"161 411 CURVE",
"171.667 621.667 OFFCURVE",
"304.667 747 OFFCURVE",
"534 747 CURVE",
"534 797 LINE",
"252.667 797 OFFCURVE",
"107 628.667 OFFCURVE",
"107 354 CURVE SMOOTH",
"107 277 LINE SMOOTH",
"107 106.333 OFFCURVE",
"221.667 -11 OFFCURVE",
"387 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"253.667 37 OFFCURVE",
"160 130 OFFCURVE",
"160 274 CURVE SMOOTH",
"160 334 LINE",
"188 415.333 OFFCURVE",
"284.667 470 OFFCURVE",
"378 470 CURVE SMOOTH",
"510 470 OFFCURVE",
"590 386 OFFCURVE",
"590 258 CURVE SMOOTH",
"590 130 OFFCURVE",
"503 37 OFFCURVE",
"387 37 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"375 -11 OFFCURVE",
"511 104 OFFCURVE",
"538 259 CURVE SMOOTH",
"566 418 OFFCURVE",
"489 523 OFFCURVE",
"331 523 CURVE SMOOTH",
"255 523 OFFCURVE",
"189 497 OFFCURVE",
"132 446 CURVE",
"173 592 OFFCURVE",
"283 666 OFFCURVE",
"479 667 CURVE",
"502 798 LINE",
"188 791 OFFCURVE",
"7 634 OFFCURVE",
"-42 357 CURVE SMOOTH",
"-51 306 LINE SMOOTH",
"-86 105 OFFCURVE",
"14 -11 OFFCURVE",
"199 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"134 117 OFFCURVE",
"82 174 OFFCURVE",
"102 286 CURVE SMOOTH",
"108 320 LINE",
"138 363 OFFCURVE",
"198 396 OFFCURVE",
"266 396 CURVE SMOOTH",
"358 396 OFFCURVE",
"396 341 OFFCURVE",
"382 258 CURVE SMOOTH",
"367 175 OFFCURVE",
"299 117 OFFCURVE",
"218 117 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"342 -11 OFFCURVE",
"470 102 OFFCURVE",
"498 259 CURVE SMOOTH",
"526 416 OFFCURVE",
"441 519 OFFCURVE",
"288 519 CURVE SMOOTH",
"185 519 OFFCURVE",
"96 472 OFFCURVE",
"43 411 CURVE",
"90 622 OFFCURVE",
"246 747 OFFCURVE",
"475 747 CURVE",
"484 797 LINE",
"202 797 OFFCURVE",
"27 629 OFFCURVE",
"-21 354 CURVE SMOOTH",
"-35 277 LINE SMOOTH",
"-65 106 OFFCURVE",
"29 -11 OFFCURVE",
"194 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69 37 OFFCURVE",
"-8 130 OFFCURVE",
"18 274 CURVE SMOOTH",
"28 334 LINE",
"70 415 OFFCURVE",
"177 470 OFFCURVE",
"270 470 CURVE SMOOTH",
"402 470 OFFCURVE",
"467 386 OFFCURVE",
"445 258 CURVE SMOOTH",
"422 130 OFFCURVE",
"319 37 OFFCURVE",
"203 37 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00546;
},
{
glyphname = seven.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"359 0 LINE",
"690 674 LINE",
"690 789 LINE",
"51 789 LINE",
"51 623 LINE",
"475 623 LINE",
"143 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"328 0 LINE",
"677 699 LINE",
"677 789 LINE",
"58 789 LINE",
"58 659 LINE",
"511 659 LINE",
"162 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"257 0 LINE",
"641 757 LINE",
"641 789 LINE",
"66 789 LINE",
"66 739 LINE",
"583 739 LINE",
"201 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"137 0 LINE",
"609 699 LINE",
"625 789 LINE",
"6 789 LINE",
"-17 659 LINE",
"436 659 LINE",
"-29 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"66 0 LINE",
"584 757 LINE",
"589 789 LINE",
"14 789 LINE",
"6 739 LINE",
"523 739 LINE",
"10 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 5 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00547;
},
{
glyphname = eight.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"575.333 -11 OFFCURVE",
"690 74 OFFCURVE",
"690 218 CURVE SMOOTH",
"690 303.333 OFFCURVE",
"647 366 OFFCURVE",
"561 406 CURVE",
"635 443.333 OFFCURVE",
"672 500 OFFCURVE",
"672 576 CURVE SMOOTH",
"672 717.333 OFFCURVE",
"557.333 800 OFFCURVE",
"380 800 CURVE SMOOTH",
"202.667 800 OFFCURVE",
"89 714.667 OFFCURVE",
"89 576 CURVE SMOOTH",
"89 501.333 OFFCURVE",
"126.667 444.667 OFFCURVE",
"202 406 CURVE",
"114.667 366.667 OFFCURVE",
"71 304 OFFCURVE",
"71 218 CURVE SMOOTH",
"71 74 OFFCURVE",
"190 -11 OFFCURVE",
"382 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 153 OFFCURVE",
"277 184.667 OFFCURVE",
"277 238 CURVE SMOOTH",
"277 292 OFFCURVE",
"311.333 319 OFFCURVE",
"380 319 CURVE SMOOTH",
"450.667 319 OFFCURVE",
"486 292 OFFCURVE",
"486 238 CURVE SMOOTH",
"486 184.667 OFFCURVE",
"444.667 153 OFFCURVE",
"382 153 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"324 485 OFFCURVE",
"295 510.667 OFFCURVE",
"295 562 CURVE SMOOTH",
"295 610.667 OFFCURVE",
"323.333 635 OFFCURVE",
"380 635 CURVE SMOOTH",
"438 635 OFFCURVE",
"467 610.667 OFFCURVE",
"467 562 CURVE SMOOTH",
"467 510.667 OFFCURVE",
"438.667 485 OFFCURVE",
"382 485 CURVE SMOOTH"
);
}
);
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"556.333 -11 OFFCURVE",
"671 74.667 OFFCURVE",
"671 216 CURVE SMOOTH",
"671 303.333 OFFCURVE",
"624.667 366.667 OFFCURVE",
"532 406 CURVE",
"611.333 442.667 OFFCURVE",
"651 500.333 OFFCURVE",
"651 579 CURVE SMOOTH",
"651 716.333 OFFCURVE",
"542 800 OFFCURVE",
"374 800 CURVE SMOOTH",
"207.333 800 OFFCURVE",
"98 716.333 OFFCURVE",
"98 579 CURVE SMOOTH",
"98 500.333 OFFCURVE",
"137.667 442.667 OFFCURVE",
"217 406 CURVE",
"131.667 370 OFFCURVE",
"79 304 OFFCURVE",
"79 216 CURVE SMOOTH",
"79 74.667 OFFCURVE",
"193.667 -11 OFFCURVE",
"375 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"291 117 OFFCURVE",
"236 157.333 OFFCURVE",
"236 228 CURVE SMOOTH",
"236 297.333 OFFCURVE",
"290 338 OFFCURVE",
"374 338 CURVE SMOOTH",
"456.667 338 OFFCURVE",
"514 297.333 OFFCURVE",
"514 228 CURVE SMOOTH",
"514 157.333 OFFCURVE",
"459 117 OFFCURVE",
"375 117 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"300.333 468 OFFCURVE",
"256 508.667 OFFCURVE",
"256 570 CURVE SMOOTH",
"256 634 OFFCURVE",
"300.667 671 OFFCURVE",
"374 671 CURVE SMOOTH",
"448.667 671 OFFCURVE",
"494 631.333 OFFCURVE",
"494 570 CURVE SMOOTH",
"494 508.667 OFFCURVE",
"449.667 468 OFFCURVE",
"375 468 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
36 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
223 36 239 36 255 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 7 values pushed */
15 36 31 36 47 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 36 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 36 31 36 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
23 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 36 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 23 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"535.667 -11 OFFCURVE",
"647 74.667 OFFCURVE",
"647 208 CURVE SMOOTH",
"647 298.667 OFFCURVE",
"576 374.667 OFFCURVE",
"472 404 CURVE",
"562.667 433.333 OFFCURVE",
"623 499.333 OFFCURVE",
"623 586 CURVE SMOOTH",
"623 716.667 OFFCURVE",
"519 800 OFFCURVE",
"363 800 CURVE SMOOTH",
"207 800 OFFCURVE",
"105 715.333 OFFCURVE",
"105 586 CURVE SMOOTH",
"105 499.333 OFFCURVE",
"164.333 434.667 OFFCURVE",
"255 404 CURVE",
"151 374.667 OFFCURVE",
"80 304 OFFCURVE",
"80 208 CURVE SMOOTH",
"80 74.667 OFFCURVE",
"190.333 -11 OFFCURVE",
"365 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 37 OFFCURVE",
"134 105.667 OFFCURVE",
"134 207 CURVE SMOOTH",
"134 308.333 OFFCURVE",
"228.333 379 OFFCURVE",
"363 379 CURVE SMOOTH",
"497.667 379 OFFCURVE",
"593 307 OFFCURVE",
"593 207 CURVE SMOOTH",
"593 105.667 OFFCURVE",
"505 37 OFFCURVE",
"365 37 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"243.667 428 OFFCURVE",
"158 491 OFFCURVE",
"158 587 CURVE SMOOTH",
"158 685.667 OFFCURVE",
"243 751 OFFCURVE",
"363 751 CURVE SMOOTH",
"481.667 751 OFFCURVE",
"570 680.333 OFFCURVE",
"570 587 CURVE SMOOTH",
"570 493.667 OFFCURVE",
"486.333 428 OFFCURVE",
"365 428 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
36 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
223 36 239 36 255 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 7 values pushed */
15 36 31 36 47 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 36 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 36 31 36 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
23 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 36 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 23 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"364 -11 OFFCURVE",
"493 75 OFFCURVE",
"518 216 CURVE SMOOTH",
"534 303 OFFCURVE",
"499 367 OFFCURVE",
"413 406 CURVE",
"499 443 OFFCURVE",
"548 500 OFFCURVE",
"562 579 CURVE SMOOTH",
"587 716 OFFCURVE",
"492 800 OFFCURVE",
"324 800 CURVE SMOOTH",
"158 800 OFFCURVE",
"34 716 OFFCURVE",
"9 579 CURVE SMOOTH",
"-5 500 OFFCURVE",
"25 443 OFFCURVE",
"98 406 CURVE",
"6 370 OFFCURVE",
"-58 304 OFFCURVE",
"-74 216 CURVE SMOOTH",
"-99 75 OFFCURVE",
"1 -11 OFFCURVE",
"182 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 117 OFFCURVE",
"73 157 OFFCURVE",
"85 228 CURVE SMOOTH",
"98 297 OFFCURVE",
"159 338 OFFCURVE",
"243 338 CURVE SMOOTH",
"325 338 OFFCURVE",
"376 297 OFFCURVE",
"363 228 CURVE SMOOTH",
"351 157 OFFCURVE",
"289 117 OFFCURVE",
"205 117 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 468 OFFCURVE",
"155 509 OFFCURVE",
"166 570 CURVE SMOOTH",
"177 634 OFFCURVE",
"228 671 OFFCURVE",
"302 671 CURVE SMOOTH",
"376 671 OFFCURVE",
"415 631 OFFCURVE",
"404 570 CURVE SMOOTH",
"393 509 OFFCURVE",
"341 468 OFFCURVE",
"267 468 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
36 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
223 36 239 36 255 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 7 values pushed */
15 36 31 36 47 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 36 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 36 31 36 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
23 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 36 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 23 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"343 -11 OFFCURVE",
"469 75 OFFCURVE",
"493 208 CURVE SMOOTH",
"509 299 OFFCURVE",
"451 375 OFFCURVE",
"352 404 CURVE",
"448 433 OFFCURVE",
"520 499 OFFCURVE",
"536 586 CURVE SMOOTH",
"559 717 OFFCURVE",
"469 800 OFFCURVE",
"313 800 CURVE SMOOTH",
"157 800 OFFCURVE",
"40 715 OFFCURVE",
"18 586 CURVE SMOOTH",
"2 499 OFFCURVE",
"50 435 OFFCURVE",
"135 404 CURVE",
"26 375 OFFCURVE",
"-57 304 OFFCURVE",
"-74 208 CURVE SMOOTH",
"-98 75 OFFCURVE",
"-2 -11 OFFCURVE",
"172 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"37 37 OFFCURVE",
"-38 106 OFFCURVE",
"-20 207 CURVE SMOOTH",
"-2 308 OFFCURVE",
"104 379 OFFCURVE",
"239 379 CURVE SMOOTH",
"374 379 OFFCURVE",
"456 307 OFFCURVE",
"439 207 CURVE SMOOTH",
"421 106 OFFCURVE",
"321 37 OFFCURVE",
"181 37 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"128 428 OFFCURVE",
"54 491 OFFCURVE",
"71 587 CURVE SMOOTH",
"88 686 OFFCURVE",
"185 751 OFFCURVE",
"305 751 CURVE SMOOTH",
"423 751 OFFCURVE",
"499 680 OFFCURVE",
"483 587 CURVE SMOOTH",
"466 494 OFFCURVE",
"371 428 OFFCURVE",
"250 428 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
36 6 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
223 36 239 36 255 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 7 values pushed */
15 36 31 36 47 36 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 36 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 5 values pushed */
15 36 31 36 2 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 2 values pushed */
23 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 36 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
12 23 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
29 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00548;
},
{
glyphname = nine.frac0;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"232 -12 LINE SMOOTH",
"542.667 -12 OFFCURVE",
"686 133 OFFCURVE",
"686 421 CURVE SMOOTH",
"686 480 LINE SMOOTH",
"684.667 684 OFFCURVE",
"568 800 OFFCURVE",
"376 800 CURVE SMOOTH",
"201.333 800 OFFCURVE",
"67 673 OFFCURVE",
"67 513 CURVE SMOOTH",
"67 338.333 OFFCURVE",
"166 251 OFFCURVE",
"330 251 CURVE SMOOTH",
"383.333 251 OFFCURVE",
"432.333 268.333 OFFCURVE",
"477 303 CURVE",
"458 164 OFFCURVE",
"355 151 OFFCURVE",
"215 151 CURVE",
"215 -12 LINE"
);
},
{
closed = 1;
nodes = (
"310.333 403 OFFCURVE",
"273 438.667 OFFCURVE",
"273 510 CURVE SMOOTH",
"273 583.333 OFFCURVE",
"317.333 635 OFFCURVE",
"376 635 CURVE SMOOTH",
"446 635 OFFCURVE",
"481 596 OFFCURVE",
"481 518 CURVE SMOOTH",
"481 441 LINE",
"459 415.667 OFFCURVE",
"427 403 OFFCURVE",
"385 403 CURVE SMOOTH"
);
}
);
width = 751;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"264 -6 LINE SMOOTH",
"528.667 7.333 OFFCURVE",
"661 151.333 OFFCURVE",
"661 426 CURVE SMOOTH",
"661 487 LINE SMOOTH",
"657 684.333 OFFCURVE",
"547.667 800 OFFCURVE",
"365 800 CURVE SMOOTH",
"193 800 OFFCURVE",
"73 680.333 OFFCURVE",
"73 519 CURVE SMOOTH",
"73 351 OFFCURVE",
"174.667 255 OFFCURVE",
"332 255 CURVE SMOOTH",
"399.333 255 OFFCURVE",
"456 276.667 OFFCURVE",
"502 320 CURVE",
"487.333 184 OFFCURVE",
"409 120 OFFCURVE",
"209 120 CURVE",
"209 -7 LINE"
);
},
{
closed = 1;
nodes = (
"282.667 376 OFFCURVE",
"230 432.333 OFFCURVE",
"230 519 CURVE SMOOTH",
"230 608.333 OFFCURVE",
"286.333 670 OFFCURVE",
"365 670 CURVE SMOOTH",
"445 670 OFFCURVE",
"504 617.667 OFFCURVE",
"504 507 CURVE SMOOTH",
"504 447 LINE",
"476 399.667 OFFCURVE",
"430.667 376 OFFCURVE",
"368 376 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"225 -8 LINE SMOOTH",
"479.667 -6.667 OFFCURVE",
"620 139 OFFCURVE",
"620 411 CURVE SMOOTH",
"620 486 LINE SMOOTH",
"620 683.333 OFFCURVE",
"523 800 OFFCURVE",
"347 800 CURVE SMOOTH",
"191 800 OFFCURVE",
"78 679.667 OFFCURVE",
"78 521 CURVE SMOOTH",
"78 373 OFFCURVE",
"183.667 255 OFFCURVE",
"337 255 CURVE SMOOTH",
"439.667 255 OFFCURVE",
"523.333 302.667 OFFCURVE",
"566 372 CURVE",
"563.333 158.667 OFFCURVE",
"445 42.667 OFFCURVE",
"203 40 CURVE",
"202 -8 LINE"
);
},
{
closed = 1;
nodes = (
"218 304 OFFCURVE",
"134 400.667 OFFCURVE",
"134 522 CURVE SMOOTH",
"134 648.667 OFFCURVE",
"224 750 OFFCURVE",
"348 750 CURVE SMOOTH",
"482.667 750 OFFCURVE",
"566 664.333 OFFCURVE",
"566 491 CURVE SMOOTH",
"566 453 LINE",
"536.667 365 OFFCURVE",
"448.667 304 OFFCURVE",
"342 304 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"72 -6 LINE SMOOTH",
"339 7 OFFCURVE",
"497 151 OFFCURVE",
"545 426 CURVE SMOOTH",
"556 487 LINE SMOOTH",
"587 684 OFFCURVE",
"498 800 OFFCURVE",
"315 800 CURVE SMOOTH",
"143 800 OFFCURVE",
"2 680 OFFCURVE",
"-26 519 CURVE SMOOTH",
"-56 351 OFFCURVE",
"29 255 OFFCURVE",
"186 255 CURVE SMOOTH",
"254 255 OFFCURVE",
"314 277 OFFCURVE",
"368 320 CURVE",
"329 184 OFFCURVE",
"239 120 OFFCURVE",
"39 120 CURVE",
"17 -7 LINE"
);
},
{
closed = 1;
nodes = (
"158 376 OFFCURVE",
"115 432 OFFCURVE",
"131 519 CURVE SMOOTH",
"146 608 OFFCURVE",
"214 670 OFFCURVE",
"292 670 CURVE SMOOTH",
"372 670 OFFCURVE",
"422 618 OFFCURVE",
"403 507 CURVE SMOOTH",
"392 447 LINE",
"356 400 OFFCURVE",
"306 376 OFFCURVE",
"244 376 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"33 -8 LINE SMOOTH",
"288 -7 OFFCURVE",
"454 139 OFFCURVE",
"502 411 CURVE SMOOTH",
"515 486 LINE SMOOTH",
"550 683 OFFCURVE",
"473 800 OFFCURVE",
"297 800 CURVE SMOOTH",
"141 800 OFFCURVE",
"7 680 OFFCURVE",
"-21 521 CURVE SMOOTH",
"-47 373 OFFCURVE",
"38 255 OFFCURVE",
"191 255 CURVE SMOOTH",
"294 255 OFFCURVE",
"386 303 OFFCURVE",
"441 372 CURVE",
"401 159 OFFCURVE",
"262 43 OFFCURVE",
"19 40 CURVE",
"10 -8 LINE"
);
},
{
closed = 1;
nodes = (
"81 304 OFFCURVE",
"14 401 OFFCURVE",
"35 522 CURVE SMOOTH",
"58 649 OFFCURVE",
"165 750 OFFCURVE",
"289 750 CURVE SMOOTH",
"424 750 OFFCURVE",
"492 664 OFFCURVE",
"462 491 CURVE SMOOTH",
"455 453 LINE",
"410 365 OFFCURVE",
"311 304 OFFCURVE",
"205 304 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 751;
}
);
note = glyph00549;
},
{
glyphname = .null;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
},
{
glyphname = "colon-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"483 512 LINE",
"483 651 LINE",
"154 651 LINE",
"154 512 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"453 512 LINE",
"453 641 LINE",
"154 641 LINE",
"154 512 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 40}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 913}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"383 512 LINE",
"383 551 LINE",
"154 551 LINE",
"154 512 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"352 512 LINE",
"375 641 LINE",
"76 641 LINE",
"53 512 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 40}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 913}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"282 512 LINE",
"289 551 LINE",
"60 551 LINE",
"53 512 LINE"
);
}
);
width = 556;
}
);
unicode = 1365;
},
{
glyphname = "comma-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"457 1272 LINE",
"457 1439 LINE",
"108 1439 LINE",
"108 1272 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"437 1312 LINE",
"437 1439 LINE",
"98 1439 LINE",
"98 1312 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 100}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 983}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"447 1382 LINE",
"447 1439 LINE",
"128 1439 LINE",
"128 1382 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"478 1312 LINE",
"500 1439 LINE",
"161 1439 LINE",
"139 1312 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 100}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 983}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"500 1382 LINE",
"510 1439 LINE",
"191 1439 LINE",
"181 1382 LINE"
);
}
);
width = 556;
}
);
unicode = 1363;
},
{
glyphname = "paragraphseparator-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1249 716 OFFCURVE",
"1260 809 OFFCURVE",
"1206 887 CURVE SMOOTH",
"1153 963 OFFCURVE",
"1061 984 OFFCURVE",
"986 931 CURVE SMOOTH",
"911 879 OFFCURVE",
"899 788 OFFCURVE",
"954 710 CURVE SMOOTH",
"1009 631 OFFCURVE",
"1099 611 OFFCURVE",
"1173 663 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"525 210 OFFCURVE",
"536 303 OFFCURVE",
"482 381 CURVE SMOOTH",
"429 457 OFFCURVE",
"337 478 OFFCURVE",
"262 425 CURVE SMOOTH",
"187 373 OFFCURVE",
"175 282 OFFCURVE",
"230 204 CURVE SMOOTH",
"285 125 OFFCURVE",
"375 105 OFFCURVE",
"449 157 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"791 -11 OFFCURVE",
"859 51 OFFCURVE",
"859 142 CURVE SMOOTH",
"859 234 OFFCURVE",
"790 297 OFFCURVE",
"695 297 CURVE SMOOTH",
"602 297 OFFCURVE",
"532 234 OFFCURVE",
"532 142 CURVE SMOOTH",
"532 51 OFFCURVE",
"600 -11 OFFCURVE",
"695 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"304 519 OFFCURVE",
"393 549 OFFCURVE",
"439 632 CURVE SMOOTH",
"484 714 OFFCURVE",
"463 805 OFFCURVE",
"382 850 CURVE SMOOTH",
"303 894 OFFCURVE",
"215 864 OFFCURVE",
"169 782 CURVE SMOOTH",
"123 698 OFFCURVE",
"144 608 OFFCURVE",
"224 564 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"818 416 OFFCURVE",
"874 472 OFFCURVE",
"874 552 CURVE SMOOTH",
"874 632 OFFCURVE",
"818 689 OFFCURVE",
"726 689 CURVE SMOOTH",
"637 689 OFFCURVE",
"578 632 OFFCURVE",
"578 552 CURVE SMOOTH",
"578 472 OFFCURVE",
"635 416 OFFCURVE",
"726 416 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1076 90 OFFCURVE",
"1165 120 OFFCURVE",
"1211 203 CURVE SMOOTH",
"1256 285 OFFCURVE",
"1235 376 OFFCURVE",
"1154 421 CURVE SMOOTH",
"1075 465 OFFCURVE",
"987 435 OFFCURVE",
"941 353 CURVE SMOOTH",
"895 269 OFFCURVE",
"916 179 OFFCURVE",
"996 135 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"792 872 OFFCURVE",
"860 934 OFFCURVE",
"860 1025 CURVE SMOOTH",
"860 1117 OFFCURVE",
"791 1180 OFFCURVE",
"696 1180 CURVE SMOOTH",
"603 1180 OFFCURVE",
"533 1117 OFFCURVE",
"533 1025 CURVE SMOOTH",
"533 934 OFFCURVE",
"601 872 OFFCURVE",
"696 872 CURVE SMOOTH"
);
}
);
width = 1337;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"711 439 OFFCURVE",
"768 494 OFFCURVE",
"768 562 CURVE SMOOTH",
"768 629 OFFCURVE",
"711 686 OFFCURVE",
"644 686 CURVE SMOOTH",
"576 686 OFFCURVE",
"521 629 OFFCURVE",
"521 562 CURVE SMOOTH",
"521 494 OFFCURVE",
"576 439 OFFCURVE",
"644 439 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"449 209 OFFCURVE",
"460 270 OFFCURVE",
"411 329 CURVE SMOOTH",
"362 387 OFFCURVE",
"301 385 OFFCURVE",
"252 344 CURVE SMOOTH",
"205 305 OFFCURVE",
"194 246 OFFCURVE",
"242 187 CURVE SMOOTH",
"291 129 OFFCURVE",
"353 128 OFFCURVE",
"400 168 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"740 -11 OFFCURVE",
"780 36 OFFCURVE",
"780 97 CURVE SMOOTH",
"780 161 OFFCURVE",
"740 209 OFFCURVE",
"664 209 CURVE SMOOTH",
"588 209 OFFCURVE",
"550 161 OFFCURVE",
"550 97 CURVE SMOOTH",
"550 36 OFFCURVE",
"588 -11 OFFCURVE",
"664 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 624 OFFCURVE",
"340 636 OFFCURVE",
"377 702 CURVE SMOOTH",
"414 768 OFFCURVE",
"390 825 OFFCURVE",
"334 856 CURVE SMOOTH",
"280 886 OFFCURVE",
"221 875 OFFCURVE",
"184 809 CURVE SMOOTH",
"147 742 OFFCURVE",
"169 685 OFFCURVE",
"223 655 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1050 195 OFFCURVE",
"1112 207 OFFCURVE",
"1149 273 CURVE SMOOTH",
"1186 339 OFFCURVE",
"1162 396 OFFCURVE",
"1106 427 CURVE SMOOTH",
"1052 457 OFFCURVE",
"993 446 OFFCURVE",
"956 380 CURVE SMOOTH",
"919 313 OFFCURVE",
"941 256 OFFCURVE",
"995 226 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"741 872 OFFCURVE",
"781 919 OFFCURVE",
"781 980 CURVE SMOOTH",
"781 1044 OFFCURVE",
"741 1092 OFFCURVE",
"665 1092 CURVE SMOOTH",
"589 1092 OFFCURVE",
"551 1044 OFFCURVE",
"551 980 CURVE SMOOTH",
"551 919 OFFCURVE",
"589 872 OFFCURVE",
"665 872 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1126 775 OFFCURVE",
"1137 836 OFFCURVE",
"1088 895 CURVE SMOOTH",
"1039 953 OFFCURVE",
"978 951 OFFCURVE",
"929 910 CURVE SMOOTH",
"882 871 OFFCURVE",
"871 812 OFFCURVE",
"919 753 CURVE SMOOTH",
"968 695 OFFCURVE",
"1030 694 OFFCURVE",
"1077 734 CURVE SMOOTH"
);
}
);
width = 1337;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1028 738 OFFCURVE",
"1037 773 OFFCURVE",
"1022 800 CURVE SMOOTH",
"1007 826 OFFCURVE",
"972 835 OFFCURVE",
"946 819 CURVE SMOOTH",
"919 804 OFFCURVE",
"910 771 OFFCURVE",
"926 744 CURVE SMOOTH",
"941 718 OFFCURVE",
"975 708 OFFCURVE",
"1001 723 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 298 OFFCURVE",
"272 333 OFFCURVE",
"257 360 CURVE SMOOTH",
"242 386 OFFCURVE",
"207 395 OFFCURVE",
"181 379 CURVE SMOOTH",
"154 364 OFFCURVE",
"145 331 OFFCURVE",
"161 304 CURVE SMOOTH",
"176 278 OFFCURVE",
"210 268 OFFCURVE",
"236 283 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"639 -6 OFFCURVE",
"664 18 OFFCURVE",
"664 49 CURVE SMOOTH",
"664 80 OFFCURVE",
"639 105 OFFCURVE",
"608 105 CURVE SMOOTH",
"577 105 OFFCURVE",
"553 80 OFFCURVE",
"553 49 CURVE SMOOTH",
"553 18 OFFCURVE",
"577 -6 OFFCURVE",
"608 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"243 695 OFFCURVE",
"276 711 OFFCURVE",
"286 740 CURVE SMOOTH",
"295 769 OFFCURVE",
"279 800 OFFCURVE",
"250 810 CURVE SMOOTH",
"221 820 OFFCURVE",
"191 805 OFFCURVE",
"181 776 CURVE SMOOTH",
"171 747 OFFCURVE",
"185 715 OFFCURVE",
"214 705 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"638 479 OFFCURVE",
"663 503 OFFCURVE",
"663 534 CURVE SMOOTH",
"663 565 OFFCURVE",
"638 590 OFFCURVE",
"607 590 CURVE SMOOTH",
"576 590 OFFCURVE",
"552 565 OFFCURVE",
"552 534 CURVE SMOOTH",
"552 503 OFFCURVE",
"576 479 OFFCURVE",
"607 479 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1078 407 OFFCURVE",
"1111 423 OFFCURVE",
"1121 452 CURVE SMOOTH",
"1130 481 OFFCURVE",
"1114 512 OFFCURVE",
"1085 522 CURVE SMOOTH",
"1056 532 OFFCURVE",
"1026 517 OFFCURVE",
"1016 488 CURVE SMOOTH",
"1006 459 OFFCURVE",
"1020 427 OFFCURVE",
"1049 417 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"640 877 OFFCURVE",
"665 901 OFFCURVE",
"665 932 CURVE SMOOTH",
"665 963 OFFCURVE",
"640 988 OFFCURVE",
"609 988 CURVE SMOOTH",
"578 988 OFFCURVE",
"554 963 OFFCURVE",
"554 932 CURVE SMOOTH",
"554 901 OFFCURVE",
"578 877 OFFCURVE",
"609 877 CURVE SMOOTH"
);
}
);
width = 1337;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"598 439 OFFCURVE",
"664 494 OFFCURVE",
"676 562 CURVE SMOOTH",
"688 629 OFFCURVE",
"641 686 OFFCURVE",
"574 686 CURVE SMOOTH",
"506 686 OFFCURVE",
"441 629 OFFCURVE",
"429 562 CURVE SMOOTH",
"417 494 OFFCURVE",
"463 439 OFFCURVE",
"531 439 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"295 209 OFFCURVE",
"317 270 OFFCURVE",
"278 329 CURVE SMOOTH",
"239 387 OFFCURVE",
"178 385 OFFCURVE",
"122 344 CURVE SMOOTH",
"68 305 OFFCURVE",
"47 246 OFFCURVE",
"84 187 CURVE SMOOTH",
"123 129 OFFCURVE",
"185 128 OFFCURVE",
"239 168 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"547 -11 OFFCURVE",
"596 36 OFFCURVE",
"606 97 CURVE SMOOTH",
"618 161 OFFCURVE",
"586 209 OFFCURVE",
"510 209 CURVE SMOOTH",
"434 209 OFFCURVE",
"388 161 OFFCURVE",
"376 97 CURVE SMOOTH",
"366 36 OFFCURVE",
"395 -11 OFFCURVE",
"471 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"197 624 OFFCURVE",
"261 636 OFFCURVE",
"310 702 CURVE SMOOTH",
"359 768 OFFCURVE",
"345 825 OFFCURVE",
"294 856 CURVE SMOOTH",
"245 886 OFFCURVE",
"185 875 OFFCURVE",
"136 809 CURVE SMOOTH",
"87 742 OFFCURVE",
"99 685 OFFCURVE",
"148 655 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"894 195 OFFCURVE",
"958 207 OFFCURVE",
"1006 273 CURVE SMOOTH",
"1055 339 OFFCURVE",
"1041 396 OFFCURVE",
"991 427 CURVE SMOOTH",
"942 457 OFFCURVE",
"881 446 OFFCURVE",
"832 380 CURVE SMOOTH",
"783 313 OFFCURVE",
"795 256 OFFCURVE",
"844 226 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"704 872 OFFCURVE",
"752 919 OFFCURVE",
"763 980 CURVE SMOOTH",
"774 1044 OFFCURVE",
"743 1092 OFFCURVE",
"667 1092 CURVE SMOOTH",
"591 1092 OFFCURVE",
"544 1044 OFFCURVE",
"533 980 CURVE SMOOTH",
"522 919 OFFCURVE",
"552 872 OFFCURVE",
"628 872 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1072 775 OFFCURVE",
"1094 836 OFFCURVE",
"1055 895 CURVE SMOOTH",
"1016 953 OFFCURVE",
"955 951 OFFCURVE",
"899 910 CURVE SMOOTH",
"845 871 OFFCURVE",
"823 812 OFFCURVE",
"861 753 CURVE SMOOTH",
"900 695 OFFCURVE",
"962 694 OFFCURVE",
"1016 734 CURVE SMOOTH"
);
}
);
width = 1337;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"967 738 OFFCURVE",
"983 773 OFFCURVE",
"972 800 CURVE SMOOTH",
"962 826 OFFCURVE",
"928 835 OFFCURVE",
"900 819 CURVE SMOOTH",
"870 804 OFFCURVE",
"855 771 OFFCURVE",
"866 744 CURVE SMOOTH",
"877 718 OFFCURVE",
"909 708 OFFCURVE",
"938 723 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 298 OFFCURVE",
"140 333 OFFCURVE",
"130 360 CURVE SMOOTH",
"119 386 OFFCURVE",
"86 395 OFFCURVE",
"57 379 CURVE SMOOTH",
"27 364 OFFCURVE",
"13 331 OFFCURVE",
"24 304 CURVE SMOOTH",
"34 278 OFFCURVE",
"66 268 OFFCURVE",
"95 283 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"447 -6 OFFCURVE",
"476 18 OFFCURVE",
"482 49 CURVE SMOOTH",
"487 80 OFFCURVE",
"467 105 OFFCURVE",
"436 105 CURVE SMOOTH",
"405 105 OFFCURVE",
"376 80 OFFCURVE",
"371 49 CURVE SMOOTH",
"365 18 OFFCURVE",
"385 -6 OFFCURVE",
"416 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"175 695 OFFCURVE",
"211 711 OFFCURVE",
"226 740 CURVE SMOOTH",
"240 769 OFFCURVE",
"229 800 OFFCURVE",
"202 810 CURVE SMOOTH",
"175 820 OFFCURVE",
"142 805 OFFCURVE",
"127 776 CURVE SMOOTH",
"112 747 OFFCURVE",
"120 715 OFFCURVE",
"148 705 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"532 479 OFFCURVE",
"561 503 OFFCURVE",
"566 534 CURVE SMOOTH",
"572 565 OFFCURVE",
"551 590 OFFCURVE",
"520 590 CURVE SMOOTH",
"489 590 OFFCURVE",
"461 565 OFFCURVE",
"455 534 CURVE SMOOTH",
"450 503 OFFCURVE",
"470 479 OFFCURVE",
"501 479 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"959 407 OFFCURVE",
"995 423 OFFCURVE",
"1010 452 CURVE SMOOTH",
"1024 481 OFFCURVE",
"1013 512 OFFCURVE",
"986 522 CURVE SMOOTH",
"959 532 OFFCURVE",
"926 517 OFFCURVE",
"911 488 CURVE SMOOTH",
"896 459 OFFCURVE",
"905 427 OFFCURVE",
"932 417 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"604 877 OFFCURVE",
"633 901 OFFCURVE",
"639 932 CURVE SMOOTH",
"644 963 OFFCURVE",
"623 988 OFFCURVE",
"592 988 CURVE SMOOTH",
"561 988 OFFCURVE",
"533 963 OFFCURVE",
"528 932 CURVE SMOOTH",
"522 901 OFFCURVE",
"542 877 OFFCURVE",
"573 877 CURVE SMOOTH"
);
}
);
width = 1337;
}
);
unicode = 1368;
},
{
glyphname = "period-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"806 532 OFFCURVE",
"874 594 OFFCURVE",
"874 685 CURVE SMOOTH",
"874 777 OFFCURVE",
"805 840 OFFCURVE",
"710 840 CURVE SMOOTH",
"617 840 OFFCURVE",
"547 777 OFFCURVE",
"547 685 CURVE SMOOTH",
"547 594 OFFCURVE",
"615 532 OFFCURVE",
"710 532 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"405 -11 OFFCURVE",
"473 51 OFFCURVE",
"473 142 CURVE SMOOTH",
"473 234 OFFCURVE",
"404 297 OFFCURVE",
"309 297 CURVE SMOOTH",
"216 297 OFFCURVE",
"146 234 OFFCURVE",
"146 142 CURVE SMOOTH",
"146 51 OFFCURVE",
"214 -11 OFFCURVE",
"309 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"805 -11 OFFCURVE",
"873 51 OFFCURVE",
"873 142 CURVE SMOOTH",
"873 234 OFFCURVE",
"804 297 OFFCURVE",
"709 297 CURVE SMOOTH",
"616 297 OFFCURVE",
"546 234 OFFCURVE",
"546 142 CURVE SMOOTH",
"546 51 OFFCURVE",
"614 -11 OFFCURVE",
"709 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"406 532 OFFCURVE",
"474 594 OFFCURVE",
"474 685 CURVE SMOOTH",
"474 777 OFFCURVE",
"405 840 OFFCURVE",
"310 840 CURVE SMOOTH",
"217 840 OFFCURVE",
"147 777 OFFCURVE",
"147 685 CURVE SMOOTH",
"147 594 OFFCURVE",
"215 532 OFFCURVE",
"310 532 CURVE SMOOTH"
);
}
);
width = 1020;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"755 532 OFFCURVE",
"795 579 OFFCURVE",
"795 640 CURVE SMOOTH",
"795 704 OFFCURVE",
"755 752 OFFCURVE",
"679 752 CURVE SMOOTH",
"603 752 OFFCURVE",
"565 704 OFFCURVE",
"565 640 CURVE SMOOTH",
"565 579 OFFCURVE",
"603 532 OFFCURVE",
"679 532 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"354 -11 OFFCURVE",
"394 36 OFFCURVE",
"394 97 CURVE SMOOTH",
"394 161 OFFCURVE",
"354 209 OFFCURVE",
"278 209 CURVE SMOOTH",
"202 209 OFFCURVE",
"164 161 OFFCURVE",
"164 97 CURVE SMOOTH",
"164 36 OFFCURVE",
"202 -11 OFFCURVE",
"278 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"754 -11 OFFCURVE",
"794 36 OFFCURVE",
"794 97 CURVE SMOOTH",
"794 161 OFFCURVE",
"754 209 OFFCURVE",
"678 209 CURVE SMOOTH",
"602 209 OFFCURVE",
"564 161 OFFCURVE",
"564 97 CURVE SMOOTH",
"564 36 OFFCURVE",
"602 -11 OFFCURVE",
"678 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"355 532 OFFCURVE",
"395 579 OFFCURVE",
"395 640 CURVE SMOOTH",
"395 704 OFFCURVE",
"355 752 OFFCURVE",
"279 752 CURVE SMOOTH",
"203 752 OFFCURVE",
"165 704 OFFCURVE",
"165 640 CURVE SMOOTH",
"165 579 OFFCURVE",
"203 532 OFFCURVE",
"279 532 CURVE SMOOTH"
);
}
);
width = 965;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"654 457 OFFCURVE",
"679 481 OFFCURVE",
"679 512 CURVE SMOOTH",
"679 543 OFFCURVE",
"654 568 OFFCURVE",
"623 568 CURVE SMOOTH",
"592 568 OFFCURVE",
"568 543 OFFCURVE",
"568 512 CURVE SMOOTH",
"568 481 OFFCURVE",
"592 457 OFFCURVE",
"623 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"253 -6 OFFCURVE",
"278 18 OFFCURVE",
"278 49 CURVE SMOOTH",
"278 80 OFFCURVE",
"253 105 OFFCURVE",
"222 105 CURVE SMOOTH",
"191 105 OFFCURVE",
"167 80 OFFCURVE",
"167 49 CURVE SMOOTH",
"167 18 OFFCURVE",
"191 -6 OFFCURVE",
"222 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"653 -6 OFFCURVE",
"678 18 OFFCURVE",
"678 49 CURVE SMOOTH",
"678 80 OFFCURVE",
"653 105 OFFCURVE",
"622 105 CURVE SMOOTH",
"591 105 OFFCURVE",
"567 80 OFFCURVE",
"567 49 CURVE SMOOTH",
"567 18 OFFCURVE",
"591 -6 OFFCURVE",
"622 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"254 457 OFFCURVE",
"279 481 OFFCURVE",
"279 512 CURVE SMOOTH",
"279 543 OFFCURVE",
"254 568 OFFCURVE",
"223 568 CURVE SMOOTH",
"192 568 OFFCURVE",
"168 543 OFFCURVE",
"168 512 CURVE SMOOTH",
"168 481 OFFCURVE",
"192 457 OFFCURVE",
"223 457 CURVE SMOOTH"
);
}
);
width = 965;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"658 532 OFFCURVE",
"706 579 OFFCURVE",
"717 640 CURVE SMOOTH",
"728 704 OFFCURVE",
"697 752 OFFCURVE",
"621 752 CURVE SMOOTH",
"545 752 OFFCURVE",
"498 704 OFFCURVE",
"487 640 CURVE SMOOTH",
"476 579 OFFCURVE",
"506 532 OFFCURVE",
"582 532 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"161 -11 OFFCURVE",
"210 36 OFFCURVE",
"220 97 CURVE SMOOTH",
"232 161 OFFCURVE",
"200 209 OFFCURVE",
"124 209 CURVE SMOOTH",
"48 209 OFFCURVE",
"2 161 OFFCURVE",
"-10 97 CURVE SMOOTH",
"-20 36 OFFCURVE",
"9 -11 OFFCURVE",
"85 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"561 -11 OFFCURVE",
"610 36 OFFCURVE",
"620 97 CURVE SMOOTH",
"632 161 OFFCURVE",
"600 209 OFFCURVE",
"524 209 CURVE SMOOTH",
"448 209 OFFCURVE",
"402 161 OFFCURVE",
"390 97 CURVE SMOOTH",
"380 36 OFFCURVE",
"409 -11 OFFCURVE",
"485 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"258 532 OFFCURVE",
"306 579 OFFCURVE",
"317 640 CURVE SMOOTH",
"328 704 OFFCURVE",
"297 752 OFFCURVE",
"221 752 CURVE SMOOTH",
"145 752 OFFCURVE",
"98 704 OFFCURVE",
"87 640 CURVE SMOOTH",
"76 579 OFFCURVE",
"106 532 OFFCURVE",
"182 532 CURVE SMOOTH"
);
}
);
width = 965;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"544 457 OFFCURVE",
"573 481 OFFCURVE",
"578 512 CURVE SMOOTH",
"584 543 OFFCURVE",
"563 568 OFFCURVE",
"532 568 CURVE SMOOTH",
"501 568 OFFCURVE",
"473 543 OFFCURVE",
"467 512 CURVE SMOOTH",
"462 481 OFFCURVE",
"482 457 OFFCURVE",
"513 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"61 -6 OFFCURVE",
"90 18 OFFCURVE",
"96 49 CURVE SMOOTH",
"101 80 OFFCURVE",
"81 105 OFFCURVE",
"50 105 CURVE SMOOTH",
"19 105 OFFCURVE",
"-10 80 OFFCURVE",
"-15 49 CURVE SMOOTH",
"-21 18 OFFCURVE",
"-1 -6 OFFCURVE",
"30 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"461 -6 OFFCURVE",
"490 18 OFFCURVE",
"496 49 CURVE SMOOTH",
"501 80 OFFCURVE",
"481 105 OFFCURVE",
"450 105 CURVE SMOOTH",
"419 105 OFFCURVE",
"390 80 OFFCURVE",
"385 49 CURVE SMOOTH",
"379 18 OFFCURVE",
"399 -6 OFFCURVE",
"430 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"144 457 OFFCURVE",
"173 481 OFFCURVE",
"178 512 CURVE SMOOTH",
"184 543 OFFCURVE",
"163 568 OFFCURVE",
"132 568 CURVE SMOOTH",
"101 568 OFFCURVE",
"73 543 OFFCURVE",
"67 512 CURVE SMOOTH",
"62 481 OFFCURVE",
"82 457 OFFCURVE",
"113 457 CURVE SMOOTH"
);
}
);
width = 965;
}
);
unicode = 1362;
},
{
glyphname = "prefacecolon-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"613 507 LINE",
"613 655 LINE",
"333 655 LINE",
"333 507 LINE"
);
}
);
width = 730;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 241, 843}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"613 547 LINE",
"613 665 LINE",
"333 665 LINE",
"333 547 LINE"
);
}
);
width = 730;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 251, 883}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"613 507 LINE",
"613 615 LINE",
"383 615 LINE",
"383 507 LINE"
);
}
);
width = 730;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 241, 843}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"519 547 LINE",
"539 665 LINE",
"259 665 LINE",
"239 547 LINE"
);
}
);
width = 730;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 251, 883}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"512 507 LINE",
"531 615 LINE",
"301 615 LINE",
"282 507 LINE"
);
}
);
width = 730;
}
);
unicode = 1366;
},
{
glyphname = "question-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"407 441 OFFCURVE",
"463 497 OFFCURVE",
"463 577 CURVE SMOOTH",
"463 657 OFFCURVE",
"407 714 OFFCURVE",
"315 714 CURVE SMOOTH",
"226 714 OFFCURVE",
"167 657 OFFCURVE",
"167 577 CURVE SMOOTH",
"167 497 OFFCURVE",
"224 441 OFFCURVE",
"315 441 CURVE SMOOTH"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"346 456 OFFCURVE",
"403 511 OFFCURVE",
"403 579 CURVE SMOOTH",
"403 646 OFFCURVE",
"346 703 OFFCURVE",
"279 703 CURVE SMOOTH",
"211 703 OFFCURVE",
"156 646 OFFCURVE",
"156 579 CURVE SMOOTH",
"156 511 OFFCURVE",
"211 456 OFFCURVE",
"279 456 CURVE SMOOTH"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 90, 20}";
},
{
name = period;
transform = "{1, 0, 0, 1, 81, 903}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"273 555 OFFCURVE",
"298 579 OFFCURVE",
"298 610 CURVE SMOOTH",
"298 641 OFFCURVE",
"273 666 OFFCURVE",
"242 666 CURVE SMOOTH",
"211 666 OFFCURVE",
"187 641 OFFCURVE",
"187 610 CURVE SMOOTH",
"187 579 OFFCURVE",
"211 555 OFFCURVE",
"242 555 CURVE SMOOTH"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"236 456 OFFCURVE",
"302 511 OFFCURVE",
"314 579 CURVE SMOOTH",
"326 646 OFFCURVE",
"279 703 OFFCURVE",
"212 703 CURVE SMOOTH",
"144 703 OFFCURVE",
"79 646 OFFCURVE",
"67 579 CURVE SMOOTH",
"55 511 OFFCURVE",
"101 456 OFFCURVE",
"169 456 CURVE SMOOTH"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 90, 20}";
},
{
name = period;
transform = "{1, 0, 0, 1, 81, 903}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"180 555 OFFCURVE",
"209 579 OFFCURVE",
"215 610 CURVE SMOOTH",
"220 641 OFFCURVE",
"200 666 OFFCURVE",
"169 666 CURVE SMOOTH",
"138 666 OFFCURVE",
"109 641 OFFCURVE",
"104 610 CURVE SMOOTH",
"98 579 OFFCURVE",
"118 555 OFFCURVE",
"149 555 CURVE SMOOTH"
);
}
);
width = 556;
}
);
unicode = 1367;
},
{
glyphname = "sectionmark-ethiopic";
lastChange = "2020-12-15 03:24:51 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 325, 0}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 179, 800}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 870, 799}";
},
{
name = period;
transform = "{1, 0, 0, 1, 326, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1203;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 325, 0}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 179, 800}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 870, 799}";
},
{
name = period;
transform = "{1, 0, 0, 1, 326, 883}";
}
);
layerId = m002;
width = 1203;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 325, 0}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 179, 800}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 870, 799}";
},
{
name = period;
transform = "{1, 0, 0, 1, 326, 883}";
}
);
layerId = m003;
width = 1203;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 325, 0}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 179, 665}";
},
{
name = period;
transform = "{1, 0, 0, 1, 889, 377}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 632, 926}";
}
);
layerId = m004;
width = 1203;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 325, 0}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 250, 510}";
},
{
name = period;
transform = "{1, 0, 0, 1, 800, 390}";
},
{
name = period;
transform = "{0, -1, 0.7823, 0, 542, 799}";
}
);
layerId = m005;
width = 1203;
}
);
unicode = 1360;
},
{
glyphname = "semicolon-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
},
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"488 1215 LINE",
"488 1383 LINE",
"128 1383 LINE",
"128 1215 LINE"
);
},
{
closed = 1;
nodes = (
"494 -272 LINE",
"494 -84 LINE",
"130 -84 LINE",
"130 -272 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
},
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"428 1215 LINE",
"428 1353 LINE",
"98 1353 LINE",
"98 1215 LINE"
);
},
{
closed = 1;
nodes = (
"454 -312 LINE",
"454 -174 LINE",
"150 -174 LINE",
"150 -312 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
},
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"418 1215 LINE",
"418 1273 LINE",
"98 1273 LINE",
"98 1215 LINE"
);
},
{
closed = 1;
nodes = (
"414 -272 LINE",
"414 -204 LINE",
"90 -204 LINE",
"90 -272 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
},
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"451 1215 LINE",
"476 1353 LINE",
"146 1353 LINE",
"121 1215 LINE"
);
},
{
closed = 1;
nodes = (
"208 -312 LINE",
"233 -174 LINE",
"-71 -174 LINE",
"-96 -312 LINE"
);
}
);
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
},
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"441 1215 LINE",
"452 1273 LINE",
"132 1273 LINE",
"121 1215 LINE"
);
},
{
closed = 1;
nodes = (
"175 -272 LINE",
"187 -204 LINE",
"-137 -204 LINE",
"-149 -272 LINE"
);
}
);
width = 556;
}
);
unicode = 1364;
},
{
glyphname = "wordspace-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m002;
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m003;
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m004;
width = 556;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 21, 883}";
}
);
layerId = m005;
width = 556;
}
);
unicode = 1361;
},
{
glyphname = "chiret-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1396;
},
{
glyphname = "deret-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1391;
},
{
glyphname = "deretHidet-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1398;
},
{
glyphname = "difat-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1394;
},
{
glyphname = "hidet-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1397;
},
{
glyphname = "kenat-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1395;
},
{
glyphname = "kurt-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1399;
},
{
glyphname = "rikrik-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 1392;
},
{
glyphname = "shortRikrik-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 496;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = m002;
width = 496;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = m003;
width = 496;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = m004;
width = 496;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -10, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, -9, 883}";
}
);
layerId = m005;
width = 496;
}
);
unicode = 1393;
},
{
glyphname = "yizet-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = period;
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 539;
},
{
components = (
{
name = period;
}
);
layerId = m002;
width = 539;
},
{
components = (
{
name = period;
}
);
layerId = m003;
width = 539;
},
{
components = (
{
name = period;
}
);
layerId = m004;
width = 539;
},
{
components = (
{
name = period;
}
);
layerId = m005;
width = 539;
}
);
unicode = 1390;
},
{
glyphname = divisionslash;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"202 -125 LINE",
"738 1456 LINE",
"523 1456 LINE",
"-13 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"177 -125 LINE",
"784 1456 LINE",
"626 1456 LINE",
"18 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"101 -125 LINE",
"709 1456 LINE",
"650 1456 LINE",
"42 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-36 -125 LINE",
"850 1456 LINE",
"692 1456 LINE",
"-195 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-112 -125 LINE",
"775 1456 LINE",
"716 1456 LINE",
"-171 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
2 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 844;
}
);
note = uni002F;
unicode = 2215;
},
{
glyphname = "geminVowellengthcomb-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 135D;
},
{
glyphname = "geminationcomb-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 135F;
},
{
glyphname = "vowellengthcomb-ethiopic";
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1200;
},
{
layerId = m002;
width = 1200;
},
{
layerId = m003;
width = 1200;
},
{
layerId = m004;
width = 1200;
},
{
layerId = m005;
width = 1200;
}
);
unicode = 135E;
},
{
glyphname = acute.yu;
lastChange = "2020-12-14 22:04:58 +0000";
layers = (
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"334 160 LINE",
"747 111 LINE",
"566 369 LINE",
"199 352 LINE"
);
}
);
width = 1013;
},
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"262 256 LINE",
"657 205 LINE",
"528 388 LINE",
"177 378 LINE"
);
}
);
width = 1052;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"221 314 LINE",
"547 314 LINE",
"547 368 LINE",
"221 368 LINE"
);
}
);
width = 1040;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"144 205 LINE",
"573 278 LINE",
"385 400 LINE",
"19 286 LINE"
);
}
);
width = 1060;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"91 270 LINE",
"450 294 LINE",
"402 340 LINE",
"48 312 LINE"
);
}
);
width = 1040;
}
);
},
{
glyphname = exclaxmdouble;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
components = (
{
name = exclam;
},
{
name = exclam;
transform = "{1, 0, 0, 1, 557, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 1114;
},
{
components = (
{
name = exclam;
},
{
name = exclam;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = m003;
width = 600;
},
{
components = (
{
name = exclam;
},
{
name = exclam;
transform = "{1, 0, 0, 1, 557, 0}";
}
);
layerId = m002;
width = 600;
},
{
components = (
{
name = exclam;
},
{
name = exclam;
transform = "{1, 0, 0, 1, 557, 0}";
}
);
layerId = m004;
width = 600;
},
{
components = (
{
name = exclam;
},
{
name = exclam;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = m005;
width = 600;
}
);
note = uni203C;
},
{
glyphname = shift;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = m002;
width = 600;
},
{
layerId = m003;
width = 600;
},
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 600;
},
{
layerId = m004;
width = 600;
},
{
layerId = m005;
width = 600;
}
);
},
{
glyphname = _num.bar;
lastChange = "2020-12-14 00:22:08 +0000";
layers = (
{
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1126 1458 LINE {name = \"❌\";}",
"1126 1607 LINE",
"0 1607 LINE",
"0 1458 LINE {name = \"❌\";}"
);
},
{
closed = 1;
nodes = (
"1126 -222 LINE",
"1126 -73 LINE",
"0 -73 LINE",
"0 -222 LINE"
);
}
);
width = 1126;
},
{
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1206 1486 LINE",
"1206 1540 LINE {name = \"❌\";}",
"0 1540 LINE {name = \"❌\";}",
"0 1486 LINE"
);
},
{
closed = 1;
nodes = (
"1206 -114 LINE",
"1206 -60 LINE",
"0 -60 LINE",
"0 -114 LINE"
);
}
);
width = 1176;
},
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1126 1535 LINE {name = \"❌\";}",
"1126 1710 LINE",
"0 1710 LINE",
"0 1535 LINE {name = \"❌\";}"
);
},
{
closed = 1;
nodes = (
"1126 -215 LINE",
"1126 -40 LINE",
"0 -40 LINE",
"0 -215 LINE"
);
}
);
width = 1126;
},
{
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1192 1458 LINE {name = \"❌\";}",
"1219 1607 LINE",
"93 1607 LINE",
"66 1458 LINE {name = \"❌\";}"
);
},
{
closed = 1;
nodes = (
"896 -222 LINE",
"922 -73 LINE",
"-204 -73 LINE",
"-230 -222 LINE"
);
}
);
width = 1126;
},
{
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"1277 1486 LINE",
"1287 1540 LINE {name = \"❌\";}",
"81 1540 LINE {name = \"❌\";}",
"71 1486 LINE"
);
},
{
closed = 1;
nodes = (
"995 -114 LINE",
"1005 -60 LINE",
"-201 -60 LINE",
"-211 -114 LINE"
);
}
);
width = 1176;
}
);
},
{
glyphname = _smart.cha;
lastChange = "2020-12-14 00:20:46 +0000";
layers = (
{
anchors = (
{
name = _cha;
position = "{-5, 34}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-533 8 OFFCURVE",
"-533 80 CURVE SMOOTH",
"-533 153 OFFCURVE",
"-644 155 OFFCURVE",
"-644 80 CURVE SMOOTH",
"-644 7 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"699 10 OFFCURVE",
"699 82 CURVE SMOOTH",
"699 155 OFFCURVE",
"588 157 OFFCURVE",
"588 82 CURVE SMOOTH",
"588 9 OFFCURVE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha;
position = "{-5, 34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-336 -38 OFFCURVE",
"-336 144 CURVE SMOOTH",
"-336 328 OFFCURVE",
"-632 328 OFFCURVE",
"-632 144 CURVE SMOOTH",
"-632 -38 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"547 -38 OFFCURVE",
"547 144 CURVE SMOOTH",
"547 328 OFFCURVE",
"251 328 OFFCURVE",
"251 144 CURVE SMOOTH",
"251 -38 OFFCURVE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha;
position = "{-5, 34}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-326 -18 OFFCURVE",
"-326 124 CURVE SMOOTH",
"-326 267 OFFCURVE",
"-545 269 OFFCURVE",
"-545 124 CURVE SMOOTH",
"-545 -18 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"571 -25 OFFCURVE",
"571 117 CURVE SMOOTH",
"571 260 OFFCURVE",
"352 262 OFFCURVE",
"352 117 CURVE SMOOTH",
"352 -25 OFFCURVE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha;
position = "{-190, 34}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-521 -17 OFFCURVE",
"-495 124 CURVE SMOOTH",
"-468 269 OFFCURVE",
"-687 269 OFFCURVE",
"-714 124 CURVE SMOOTH",
"-740 -19 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"376 -22 OFFCURVE",
"401 117 CURVE SMOOTH",
"425 260 OFFCURVE",
"206 260 OFFCURVE",
"182 117 CURVE SMOOTH",
"155 -28 OFFCURVE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha;
position = "{-190, 34}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-722 8 OFFCURVE",
"-710 80 CURVE SMOOTH",
"-696 153 OFFCURVE",
"-807 154 OFFCURVE",
"-821 80 CURVE SMOOTH",
"-833 7 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"509 9 OFFCURVE",
"523 82 CURVE SMOOTH",
"535 157 OFFCURVE",
"424 157 OFFCURVE",
"412 82 CURVE SMOOTH",
"398 10 OFFCURVE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.da;
lastChange = "2020-12-14 03:48:39 +0000";
layers = (
{
anchors = (
{
name = _da;
position = "{4, 156}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"675 -3 LINE {name = \"❌\";}",
"675 148 LINE",
"-133 148 LINE",
"-133 -3 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _da;
position = "{4, 156}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"683 -78 LINE",
"683 155 LINE",
"-130 155 LINE",
"-130 -78 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _da;
position = "{-66, 156}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"621 99 LINE",
"621 153 LINE",
"-129 153 LINE",
"-129 99 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _da;
position = "{-159, 156}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"634 -3 LINE {name = \"❌\";}",
"660 148 LINE",
"-118 148 LINE",
"-144 -3 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _da;
position = "{-229, 156}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"599 99 LINE",
"608 153 LINE",
"-123 153 LINE",
"-132 99 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.di;
lastChange = "2020-12-16 04:27:17 +0000";
layers = (
{
anchors = (
{
name = _di;
position = "{-173, 224}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-54 24 LINE",
"135 24 LINE",
"135 414 LINE",
"-54 414 LINE"
);
},
{
closed = 1;
nodes = (
"380 14 OFFCURVE",
"436 70 OFFCURVE",
"436 150 CURVE SMOOTH",
"436 230 OFFCURVE",
"380 287 OFFCURVE",
"288 287 CURVE SMOOTH",
"199 287 OFFCURVE",
"140 230 OFFCURVE",
"140 150 CURVE SMOOTH",
"140 70 OFFCURVE",
"197 14 OFFCURVE",
"288 14 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _di;
position = "{-173, 224}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-58 87 LINE",
"73 87 LINE",
"73 366 LINE",
"-58 366 LINE"
);
},
{
closed = 1;
nodes = (
"272 74 OFFCURVE",
"310 119 OFFCURVE",
"310 179 CURVE SMOOTH",
"310 239 OFFCURVE",
"272 286 OFFCURVE",
"200 286 CURVE SMOOTH",
"128 286 OFFCURVE",
"91 239 OFFCURVE",
"91 179 CURVE SMOOTH",
"91 119 OFFCURVE",
"128 74 OFFCURVE",
"200 74 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _di;
position = "{-173, 224}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-223 -6 LINE",
"-162 -6 LINE",
"-162 277 LINE",
"-223 277 LINE"
);
},
{
closed = 1;
nodes = (
"-38 -8 OFFCURVE",
"-13 16 OFFCURVE",
"-13 47 CURVE SMOOTH",
"-13 78 OFFCURVE",
"-38 103 OFFCURVE",
"-69 103 CURVE SMOOTH {name = \"❌\";}",
"-100 103 OFFCURVE",
"-124 78 OFFCURVE",
"-124 47 CURVE SMOOTH",
"-124 16 OFFCURVE",
"-100 -8 OFFCURVE",
"-69 -8 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _di;
position = "{-173, 224}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-295 -74 LINE",
"-191 -74 LINE",
"-93 348 LINE",
"-197 348 LINE"
);
},
{
closed = 1;
nodes = (
"4 -96 OFFCURVE",
"50 -51 OFFCURVE",
"60 9 CURVE SMOOTH",
"71 69 OFFCURVE",
"41 116 OFFCURVE",
"-31 116 CURVE SMOOTH",
"-103 116 OFFCURVE",
"-148 69 OFFCURVE",
"-159 9 CURVE SMOOTH",
"-169 -51 OFFCURVE",
"-140 -96 OFFCURVE",
"-68 -96 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _di;
position = "{-173, 224}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-162 -104 LINE",
"-94 -104 LINE",
"-8 310 LINE",
"-76 310 LINE"
);
},
{
closed = 1;
nodes = (
"85 -118 OFFCURVE",
"114 -94 OFFCURVE",
"120 -63 CURVE SMOOTH",
"125 -32 OFFCURVE",
"104 -7 OFFCURVE",
"73 -7 CURVE SMOOTH {name = \"❌\";}",
"43 -7 OFFCURVE",
"14 -32 OFFCURVE",
"9 -63 CURVE SMOOTH",
"3 -94 OFFCURVE",
"23 -118 OFFCURVE",
"54 -118 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.du;
lastChange = "2020-12-14 23:16:37 +0000";
layers = (
{
anchors = (
{
name = _du;
position = "{-173, 224}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"37 299 LINE",
"-172 299 LINE",
"-172 -68 LINE",
"37 -68 LINE"
);
},
{
closed = 1;
nodes = (
"298 48 OFFCURVE",
"354 104 OFFCURVE",
"354 184 CURVE SMOOTH",
"354 264 OFFCURVE",
"298 321 OFFCURVE",
"206 321 CURVE SMOOTH",
"117 321 OFFCURVE",
"58 264 OFFCURVE",
"58 184 CURVE SMOOTH",
"58 104 OFFCURVE",
"115 48 OFFCURVE",
"206 48 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _du;
position = "{-173, 224}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"30 280 LINE",
"-154 280 LINE",
"-154 -77 LINE",
"30 -77 LINE"
);
},
{
closed = 1;
nodes = (
"253 112 OFFCURVE",
"291 157 OFFCURVE",
"291 217 CURVE SMOOTH",
"291 277 OFFCURVE",
"253 324 OFFCURVE",
"181 324 CURVE SMOOTH",
"109 324 OFFCURVE",
"72 277 OFFCURVE",
"72 217 CURVE SMOOTH",
"72 157 OFFCURVE",
"109 112 OFFCURVE",
"181 112 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _du;
position = "{-173, 224}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-25 301 LINE",
"-74 301 LINE",
"-74 -63 LINE",
"-25 -63 LINE"
);
},
{
closed = 1;
nodes = (
"123 182 OFFCURVE",
"148 206 OFFCURVE",
"148 237 CURVE SMOOTH",
"148 268 OFFCURVE",
"123 293 OFFCURVE",
"92 293 CURVE SMOOTH {name = \"❌\";}",
"61 293 OFFCURVE",
"37 268 OFFCURVE",
"37 237 CURVE SMOOTH",
"37 206 OFFCURVE",
"61 182 OFFCURVE",
"92 182 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _du;
position = "{-173, 224}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-26 320 LINE",
"-148 320 LINE",
"-148 -61 LINE",
"-26 -61 LINE"
);
},
{
closed = 1;
nodes = (
"184 122 OFFCURVE",
"230 167 OFFCURVE",
"240 227 CURVE SMOOTH",
"251 287 OFFCURVE",
"221 334 OFFCURVE",
"149 334 CURVE SMOOTH",
"77 334 OFFCURVE",
"32 287 OFFCURVE",
"21 227 CURVE SMOOTH",
"11 167 OFFCURVE",
"40 122 OFFCURVE",
"112 122 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _du;
position = "{-173, 224}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"71 335 LINE",
"30 373 LINE",
"-50 16 LINE",
"-13 -18 LINE"
);
},
{
closed = 1;
nodes = (
"218 212 OFFCURVE",
"247 236 OFFCURVE",
"253 267 CURVE SMOOTH",
"258 298 OFFCURVE",
"237 323 OFFCURVE",
"206 323 CURVE SMOOTH {name = \"❌\";}",
"176 323 OFFCURVE",
"147 298 OFFCURVE",
"142 267 CURVE SMOOTH",
"136 236 OFFCURVE",
"156 212 OFFCURVE",
"187 212 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.fa;
lastChange = "2020-12-16 19:04:32 +0000";
layers = (
{
anchors = (
{
name = _fa;
position = "{433, 54}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"157 603 LINE",
"157 520 LINE",
"233 520 LINE",
"233 45 LINE",
"398 45 LINE",
"398 603 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _fa;
position = "{433, 54}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"129 551 LINE",
"129 460 LINE",
"217.621 460 LINE",
"218 55 LINE",
"374 55 LINE",
"374 551 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _fa;
position = "{433, 54}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"341 535 LINE",
"134 535 LINE",
"134 482 LINE",
"284 482 LINE",
"284 15 LINE",
"341 15 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _fa;
position = "{252, 54}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"79 551 LINE",
"66 476 LINE",
"173 476 LINE",
"98 55 LINE",
"256 55 LINE",
"344 551 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _fa;
position = "{252, 54}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"54 527 LINE",
"54 485 LINE",
"137.371 485 LINE",
"52 15 LINE",
"111 15 LINE",
"204 526 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.haa;
lastChange = "2020-12-15 23:31:26 +0000";
layers = (
{
anchors = (
{
name = _haa;
position = "{0, 344}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"62 -11 LINE {name = \"❌\";}",
"62 344 LINE",
"-123 344 LINE",
"-123 -11 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _haa;
position = "{-1, 315}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"124 -91 LINE",
"124 313 LINE",
"-166 313 LINE",
"-166 -91 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _haa;
position = "{8, 338}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"35 -18 LINE",
"35 336 LINE",
"-22 336 LINE",
"-22 -18 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _haa;
position = "{-130, 344}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-131 -11 LINE {name = \"❌\";}",
"-68 344 LINE",
"-253 344 LINE",
"-316 -11 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _haa;
position = "{-123, 338}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-159 -18 LINE",
"-97 336 LINE",
"-154 336 LINE",
"-216 -18 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.hat;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _hat;
position = "{11, 12}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"337 1 LINE {name = \"❌\";}",
"337 156 LINE",
"-327 156 LINE",
"-327 1 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat;
position = "{-19, 112}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"237 109 LINE",
"237 153 LINE",
"-278 153 LINE",
"-278 109 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat;
position = "{5, 12}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"310 52 LINE",
"310 134 LINE",
"-315 134 LINE",
"-315 52 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat;
position = "{-184, 12}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"128 52 LINE",
"143 134 LINE",
"-482 134 LINE",
"-497 52 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat;
position = "{-190, 112}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"65 109 LINE",
"73 153 LINE",
"-442 153 LINE",
"-450 109 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.he;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _he;
position = "{0, -41}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-38 -146 OFFCURVE",
"0 -101 OFFCURVE",
"0 -41 CURVE SMOOTH",
"0 19 OFFCURVE",
"-38 66 OFFCURVE",
"-110 66 CURVE SMOOTH",
"-182 66 OFFCURVE",
"-219 19 OFFCURVE",
"-219 -41 CURVE SMOOTH",
"-219 -101 OFFCURVE",
"-182 -146 OFFCURVE",
"-110 -146 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he;
position = "{2, -46}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-54 -182 OFFCURVE",
"2 -126 OFFCURVE",
"2 -46 CURVE SMOOTH",
"2 34 OFFCURVE",
"-54 91 OFFCURVE",
"-146 91 CURVE SMOOTH",
"-235 91 OFFCURVE",
"-294 34 OFFCURVE",
"-294 -46 CURVE SMOOTH",
"-294 -126 OFFCURVE",
"-237 -182 OFFCURVE",
"-146 -182 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he;
position = "{1, -53}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-24 -108 OFFCURVE",
"1 -84 OFFCURVE",
"1 -53 CURVE SMOOTH",
"1 -22 OFFCURVE",
"-24 3 OFFCURVE",
"-55 3 CURVE SMOOTH {name = \"❌\";}",
"-86 3 OFFCURVE",
"-110 -22 OFFCURVE",
"-110 -53 CURVE SMOOTH",
"-110 -84 OFFCURVE",
"-86 -108 OFFCURVE",
"-55 -108 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he;
position = "{-198, -41}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-255 -146 OFFCURVE",
"-209 -101 OFFCURVE",
"-198 -41 CURVE SMOOTH",
"-187 19 OFFCURVE",
"-217 66 OFFCURVE",
"-289 66 CURVE SMOOTH",
"-361 66 OFFCURVE",
"-406 19 OFFCURVE",
"-417 -41 CURVE SMOOTH",
"-428 -101 OFFCURVE",
"-399 -146 OFFCURVE",
"-327 -146 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he;
position = "{-199, -53}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-234 -108 OFFCURVE",
"-205 -84 OFFCURVE",
"-199 -53 CURVE SMOOTH",
"-194 -22 OFFCURVE",
"-214 3 OFFCURVE",
"-245 3 CURVE SMOOTH {name = \"❌\";}",
"-276 3 OFFCURVE",
"-305 -22 OFFCURVE",
"-310 -53 CURVE SMOOTH",
"-316 -84 OFFCURVE",
"-296 -108 OFFCURVE",
"-265 -108 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.hee;
lastChange = "2020-12-14 22:25:28 +0000";
layers = (
{
anchors = (
{
name = _hee;
position = "{-79, 339}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-12 -156 OFFCURVE",
"109 -37 OFFCURVE",
"109 120 CURVE SMOOTH",
"109 280 OFFCURVE",
"-15 402 OFFCURVE",
"-177 402 CURVE SMOOTH",
"-344 402 OFFCURVE",
"-470 277 OFFCURVE",
"-470 120 CURVE SMOOTH",
"-470 -35 OFFCURVE",
"-348 -156 OFFCURVE",
"-177 -156 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-230 -126 OFFCURVE",
"-331 -62 OFFCURVE",
"-331 65 CURVE SMOOTH",
"-331 171 OFFCURVE",
"-243 266 OFFCURVE",
"-127 266 CURVE SMOOTH",
"-17 266 OFFCURVE",
"67 177 OFFCURVE",
"67 65 CURVE SMOOTH",
"67 -61 OFFCURVE",
"-31 -125 OFFCURVE",
"-132 -126 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hee;
position = "{1, 349}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"95 -128 OFFCURVE",
"225 -9 OFFCURVE",
"225 144 CURVE SMOOTH",
"225 303 OFFCURVE",
"90 422 OFFCURVE",
"-77 422 CURVE SMOOTH",
"-245 422 OFFCURVE",
"-379 300 OFFCURVE",
"-379 144 CURVE SMOOTH",
"-379 -6 OFFCURVE",
"-252 -128 OFFCURVE",
"-77 -128 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-146 -86 OFFCURVE",
"-219 -1 OFFCURVE",
"-219 105 CURVE SMOOTH",
"-219 213 OFFCURVE",
"-143 298 OFFCURVE",
"-27 298 CURVE SMOOTH",
"89 298 OFFCURVE",
"165 213 OFFCURVE",
"165 105 CURVE SMOOTH",
"165 -1 OFFCURVE",
"92 -86 OFFCURVE",
"-27 -86 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hee;
position = "{5, 328}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"70 -79 OFFCURVE",
"167 18 OFFCURVE",
"167 142 CURVE SMOOTH",
"167 267 OFFCURVE",
"70 369 OFFCURVE",
"-55 369 CURVE SMOOTH",
"-176 369 OFFCURVE",
"-277 272 OFFCURVE",
"-277 142 CURVE SMOOTH",
"-277 12 OFFCURVE",
"-175 -79 OFFCURVE",
"-55 -79 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-158 -41 OFFCURVE",
"-231 30 OFFCURVE",
"-231 133 CURVE SMOOTH",
"-231 241 OFFCURVE",
"-158 313 OFFCURVE",
"-56 313 CURVE SMOOTH",
"46 313 OFFCURVE",
"119 241 OFFCURVE",
"119 133 CURVE SMOOTH",
"119 30 OFFCURVE",
"46 -41 OFFCURVE",
"-56 -41 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hee;
position = "{-210, 339}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-230 -156 OFFCURVE",
"-88 -37 OFFCURVE",
"-61 120 CURVE SMOOTH",
"-32 280 OFFCURVE",
"-135 402 OFFCURVE",
"-297 402 CURVE SMOOTH",
"-464 402 OFFCURVE",
"-612 277 OFFCURVE",
"-640 120 CURVE SMOOTH",
"-667 -35 OFFCURVE",
"-566 -156 OFFCURVE",
"-395 -156 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-443 -126 OFFCURVE",
"-533 -62 OFFCURVE",
"-510 65 CURVE SMOOTH",
"-492 171 OFFCURVE",
"-387 266 OFFCURVE",
"-271 266 CURVE SMOOTH",
"-161 266 OFFCURVE",
"-98 178 OFFCURVE",
"-112 65 CURVE SMOOTH",
"-125 -41 OFFCURVE",
"-244 -125 OFFCURVE",
"-345 -126 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hee;
position = "{-128, 328}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-135 -79 OFFCURVE",
"-21 18 OFFCURVE",
"1 142 CURVE SMOOTH",
"23 267 OFFCURVE",
"-56 369 OFFCURVE",
"-181 369 CURVE SMOOTH",
"-302 369 OFFCURVE",
"-420 272 OFFCURVE",
"-443 142 CURVE SMOOTH",
"-466 12 OFFCURVE",
"-380 -79 OFFCURVE",
"-260 -79 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-356 -41 OFFCURVE",
"-416 30 OFFCURVE",
"-398 133 CURVE SMOOTH",
"-379 241 OFFCURVE",
"-294 313 OFFCURVE",
"-192 313 CURVE SMOOTH",
"-90 313 OFFCURVE",
"-29 241 OFFCURVE",
"-48 133 CURVE SMOOTH",
"-66 30 OFFCURVE",
"-152 -41 OFFCURVE",
"-254 -41 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.hi;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _hi;
position = "{0, 115}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"190 -8 OFFCURVE",
"247 47 OFFCURVE",
"247 115 CURVE SMOOTH",
"247 182 OFFCURVE",
"190 239 OFFCURVE",
"123 239 CURVE SMOOTH",
"55 239 OFFCURVE",
"0 182 OFFCURVE",
"0 115 CURVE SMOOTH",
"0 47 OFFCURVE",
"55 -8 OFFCURVE",
"123 -8 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hi;
position = "{-6, 115}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"238 -22 OFFCURVE",
"294 34 OFFCURVE",
"294 114 CURVE SMOOTH",
"294 194 OFFCURVE",
"238 251 OFFCURVE",
"146 251 CURVE SMOOTH",
"57 251 OFFCURVE",
"-2 194 OFFCURVE",
"-2 114 CURVE SMOOTH",
"-2 34 OFFCURVE",
"55 -22 OFFCURVE",
"146 -22 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hi;
position = "{1, 127}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"87 72 OFFCURVE",
"112 96 OFFCURVE",
"112 127 CURVE SMOOTH",
"112 158 OFFCURVE",
"87 183 OFFCURVE",
"56 183 CURVE SMOOTH",
"25 183 OFFCURVE",
"1 158 OFFCURVE",
"1 127 CURVE SMOOTH",
"1 96 OFFCURVE",
"25 72 OFFCURVE",
"56 72 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hi;
position = "{-171, 115}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-2 -8 OFFCURVE",
"65 47 OFFCURVE",
"76 115 CURVE SMOOTH",
"88 182 OFFCURVE",
"41 239 OFFCURVE",
"-26 239 CURVE SMOOTH",
"-94 239 OFFCURVE",
"-159 182 OFFCURVE",
"-171 115 CURVE SMOOTH",
"-182 47 OFFCURVE",
"-137 -8 OFFCURVE",
"-69 -8 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hi;
position = "{-167, 127}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-91 72 OFFCURVE",
"-62 96 OFFCURVE",
"-56 127 CURVE SMOOTH",
"-51 158 OFFCURVE",
"-72 183 OFFCURVE",
"-103 183 CURVE SMOOTH",
"-134 183 OFFCURVE",
"-162 158 OFFCURVE",
"-167 127 CURVE SMOOTH",
"-173 96 OFFCURVE",
"-153 72 OFFCURVE",
"-122 72 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.ho;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _ho;
position = "{4, 350}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"107 -5 LINE",
"107 349 LINE",
"-78 349 LINE",
"-78 -5 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho;
position = "{4, 350}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"189 -5 LINE",
"189 349 LINE",
"-111 349 LINE",
"-111 -5 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho;
position = "{-4, 350}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"25 -4 LINE {name = \"❌\";}",
"25 350 LINE",
"-32 350 LINE",
"-32 -4 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho;
position = "{-125, 350}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-85 -5 LINE",
"-22 349 LINE",
"-207 349 LINE",
"-270 -5 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho;
position = "{-133, 350}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-166 -4 LINE {name = \"❌\";}",
"-104 350 LINE",
"-161 350 LINE",
"-223 -4 LINE {name = \"❌\";}"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.hu;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _hu;
position = "{-2, 968}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"258 808 OFFCURVE",
"314 864 OFFCURVE",
"314 944 CURVE SMOOTH",
"314 1024 OFFCURVE",
"258 1081 OFFCURVE",
"166 1081 CURVE SMOOTH {name = \"❌\";}",
"77 1081 OFFCURVE",
"18 1024 OFFCURVE",
"18 944 CURVE SMOOTH",
"18 864 OFFCURVE",
"75 808 OFFCURVE",
"166 808 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hu;
position = "{-4, 967}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"186 813 OFFCURVE",
"243 868 OFFCURVE",
"243 936 CURVE SMOOTH",
"243 1003 OFFCURVE",
"186 1060 OFFCURVE",
"119 1060 CURVE SMOOTH",
"51 1060 OFFCURVE",
"-4 1003 OFFCURVE",
"-4 936 CURVE SMOOTH",
"-4 868 OFFCURVE",
"51 813 OFFCURVE",
"119 813 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hu;
position = "{-4, 967}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"82 922 OFFCURVE",
"107 946 OFFCURVE",
"107 977 CURVE SMOOTH",
"107 1008 OFFCURVE",
"82 1033 OFFCURVE",
"51 1033 CURVE SMOOTH",
"20 1033 OFFCURVE",
"-4 1008 OFFCURVE",
"-4 977 CURVE SMOOTH",
"-4 946 OFFCURVE",
"20 922 OFFCURVE",
"51 922 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hu;
position = "{-24, 967}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"139 813 OFFCURVE",
"205 868 OFFCURVE",
"217 936 CURVE SMOOTH",
"229 1003 OFFCURVE",
"182 1060 OFFCURVE",
"115 1060 CURVE SMOOTH",
"47 1060 OFFCURVE",
"-18 1003 OFFCURVE",
"-30 936 CURVE SMOOTH",
"-42 868 OFFCURVE",
"4 813 OFFCURVE",
"72 813 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hu;
position = "{-24, 967}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"54 922 OFFCURVE",
"83 946 OFFCURVE",
"88 977 CURVE SMOOTH",
"94 1008 OFFCURVE",
"73 1033 OFFCURVE",
"42 1033 CURVE SMOOTH",
"11 1033 OFFCURVE",
"-17 1008 OFFCURVE",
"-23 977 CURVE SMOOTH",
"-28 946 OFFCURVE",
"-8 922 OFFCURVE",
"23 922 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.hwa;
lastChange = "2020-12-16 02:12:09 +0000";
layers = (
{
anchors = (
{
name = _hwa;
position = "{0, 368}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"119 40 LINE",
"119 -77 LINE",
"249 -77 LINE",
"249 171 LINE",
"90 171 LINE",
"90 364 LINE",
"-95 364 LINE",
"-95 171 LINE",
"-391 171 LINE",
"-391 40 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hwa;
position = "{0, 368}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"119 30 LINE",
"119 -66 LINE",
"293 -66 LINE",
"293 221 LINE",
"123 221 LINE",
"123 386 LINE",
"-105 386 LINE",
"-105 221 LINE",
"-399 221 LINE",
"-399 30 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hwa;
position = "{0, 368}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"198 66 LINE",
"198 -39 LINE",
"233 -39 LINE",
"233 108 LINE",
"28 108 LINE",
"28 419 LINE",
"-29 419 LINE",
"-29 108 LINE",
"-319 108 LINE",
"-319 66 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hwa;
position = "{-109, 408}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-58 94 LINE",
"-77 -23 LINE",
"63 -21 LINE",
"92 218 LINE",
"-67 215 LINE",
"-18 419 LINE",
"-203 415 LINE",
"-252 212 LINE",
"-538 207 LINE",
"-548 85 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hwa;
position = "{-126, 368}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"0 88 LINE",
"-18 -17 LINE",
"17 -17 LINE",
"43 130 LINE",
"-162 130 LINE",
"-108 351 LINE",
"-165 351 LINE",
"-219 130 LINE",
"-529 130 LINE",
"-537 88 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.ka;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _ka;
position = "{-620, 1035}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-604 1102 LINE",
"-850 1102 LINE",
"-850 1390 LINE",
"-1085 1390 LINE",
"-1085 1012 LINE",
"-695 1012 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka;
position = "{-620, 1035}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-614 1027 LINE",
"-614 1099 LINE",
"-891 1099 LINE",
"-891 1357 LINE",
"-1044 1357 LINE",
"-1044 1027 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka;
position = "{-620, 1035}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-604 1099 LINE",
"-1021 1099 LINE",
"-1021 1324 LINE",
"-1085 1324 LINE",
"-1085 1056 LINE",
"-695 1056 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka;
position = "{-628, 1035}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-622 1037 LINE",
"-611 1099 LINE",
"-888 1099 LINE",
"-843 1357 LINE",
"-996 1357 LINE",
"-1054 1027 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka;
position = "{-628, 1035}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-601 1099 LINE",
"-1018 1099 LINE",
"-978 1324 LINE",
"-1042 1324 LINE",
"-1090 1056 LINE",
"-700 1056 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.neck;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _neck;
position = "{1, -24}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"126 -23 LINE",
"126 287 LINE",
"-111 287 LINE",
"-111 -23 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck;
position = "{1, -24}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"88 -24 LINE",
"88 340 LINE",
"-81 340 LINE",
"-81 -24 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck;
position = "{1, -24}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"60 -16 LINE",
"60 250 LINE",
"0 250 LINE",
"0 -16 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck;
position = "{-194, -24}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-107 -24 LINE",
"-43 340 LINE",
"-212 340 LINE",
"-276 -24 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck;
position = "{-194, -24}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-134 -16 LINE",
"-87 250 LINE",
"-147 250 LINE",
"-194 -16 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.nose;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _nose;
position = "{253, 101}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"254 -148 OFFCURVE",
"311 -93 OFFCURVE",
"311 -25 CURVE SMOOTH",
"311 42 OFFCURVE",
"254 99 OFFCURVE",
"187 99 CURVE SMOOTH",
"119 99 OFFCURVE",
"64 42 OFFCURVE",
"64 -25 CURVE SMOOTH",
"64 -93 OFFCURVE",
"119 -148 OFFCURVE",
"187 -148 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose;
position = "{253, 101}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"288 -232 OFFCURVE",
"344 -176 OFFCURVE",
"344 -96 CURVE SMOOTH",
"344 -16 OFFCURVE",
"288 41 OFFCURVE",
"196 41 CURVE SMOOTH",
"107 41 OFFCURVE",
"48 -16 OFFCURVE",
"48 -96 CURVE SMOOTH",
"48 -176 OFFCURVE",
"105 -232 OFFCURVE",
"196 -232 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose;
position = "{253, 101}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"282 -48 OFFCURVE",
"307 -24 OFFCURVE",
"307 7 CURVE SMOOTH",
"307 38 OFFCURVE",
"282 63 OFFCURVE",
"251 63 CURVE SMOOTH",
"220 63 OFFCURVE",
"196 38 OFFCURVE",
"196 7 CURVE SMOOTH",
"196 -24 OFFCURVE",
"220 -48 OFFCURVE",
"251 -48 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose;
position = "{80, 101}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"37 -148 OFFCURVE",
"104 -93 OFFCURVE",
"116 -25 CURVE SMOOTH",
"128 42 OFFCURVE",
"81 99 OFFCURVE",
"14 99 CURVE SMOOTH",
"-54 99 OFFCURVE",
"-119 42 OFFCURVE",
"-131 -25 CURVE SMOOTH",
"-143 -93 OFFCURVE",
"-98 -148 OFFCURVE",
"-30 -148 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose;
position = "{80, 101}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"83 -48 OFFCURVE",
"112 -24 OFFCURVE",
"117 7 CURVE SMOOTH",
"123 38 OFFCURVE",
"102 63 OFFCURVE",
"71 63 CURVE SMOOTH",
"40 63 OFFCURVE",
"12 38 OFFCURVE",
"6 7 CURVE SMOOTH",
"1 -24 OFFCURVE",
"21 -48 OFFCURVE",
"52 -48 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.raa;
lastChange = "2020-12-15 17:26:19 +0000";
layers = (
{
anchors = (
{
name = _raa;
position = "{-371, 283}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-265 286 LINE",
"12 596 LINE",
"-303 596 LINE",
"-500 286 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _raa;
position = "{-447, 242}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-378 242 LINE",
"-110 536 LINE",
"-334 536 LINE",
"-527 242 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _raa;
position = "{-537, 190}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-514 190 LINE",
"-319 456 LINE",
"-385 456 LINE",
"-574 190 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _raa;
position = "{-597, 240}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-510 242 LINE",
"-190 536 LINE",
"-414 536 LINE",
"-659 242 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _raa;
position = "{-507, 220}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-481 220 LINE",
"-239 486 LINE",
"-305 486 LINE",
"-541 220 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.ri;
lastChange = "2020-12-16 19:05:08 +0000";
layers = (
{
anchors = (
{
name = _ri;
position = "{-101, 260}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-97 635 LINE",
"-302 635 LINE",
"-302 451 LINE",
"-209 451 LINE",
"-209 326 LINE",
"-97 326 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ri;
position = "{-101, 260}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-80 614 LINE",
"-326 614 LINE",
"-326 520 LINE",
"-189 520 LINE",
"-189 332 LINE",
"-80 332 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ri;
position = "{-101, 260}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-16 566 LINE",
"-183 566 LINE",
"-183 518 LINE",
"-66 518 LINE",
"-66 300 LINE",
"-16 300 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ri;
position = "{-117, 284}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"6 594 LINE",
"-240 594 LINE",
"-257 500 LINE",
"-120 500 LINE",
"-153 312 LINE",
"-44 312 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ri;
position = "{-101, 260}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-3 526 LINE",
"-170 526 LINE",
"-178 478 LINE",
"-61 478 LINE",
"-99 260 LINE",
"-49 260 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.ye;
lastChange = "2020-12-16 00:02:30 +0000";
layers = (
{
anchors = (
{
name = _ye;
position = "{343.668, 44}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"155 -172 LINE",
"155 -111 OFFCURVE",
"192 -76 OFFCURVE",
"239 -76 CURVE SMOOTH",
"350 -76 OFFCURVE",
"498 -76 OFFCURVE",
"633 -76 CURVE SMOOTH",
"850 -76 OFFCURVE",
"900 203 OFFCURVE",
"900 365 CURVE",
"733 365 LINE {name = \"❌\";}",
"720 304 OFFCURVE",
"744 116 OFFCURVE",
"607 105 CURVE SMOOTH",
"486 105 OFFCURVE",
"324 105 OFFCURVE",
"213 105 CURVE SMOOTH",
"86 105 OFFCURVE",
"-13 -14 OFFCURVE",
"-13 -172 CURVE"
);
}
);
width = 937;
},
{
anchors = (
{
name = _ye;
position = "{340, 44}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"147 -209 LINE",
"147 -144 OFFCURVE",
"174 -103 OFFCURVE",
"246 -103 CURVE SMOOTH",
"372 -103 OFFCURVE",
"548 -103 OFFCURVE",
"695 -103 CURVE SMOOTH",
"830 -103 OFFCURVE",
"851 246 OFFCURVE",
"851 302 CURVE",
"727 302 LINE",
"727 233 OFFCURVE",
"734 10 OFFCURVE",
"666 10 CURVE SMOOTH",
"565 10 OFFCURVE",
"357 10 OFFCURVE",
"237 10 CURVE SMOOTH",
"108 10 OFFCURVE",
"23 -59 OFFCURVE",
"23 -209 CURVE"
);
}
);
width = 927;
},
{
anchors = (
{
name = _ye;
position = "{334.498, 44}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"35 -123 LINE",
"35 -47 OFFCURVE",
"81 2 OFFCURVE",
"156 2 CURVE SMOOTH",
"267 2 OFFCURVE",
"415 7 OFFCURVE",
"553 7 CURVE SMOOTH",
"783 7 OFFCURVE",
"799 255 OFFCURVE",
"799 364 CURVE",
"744 364 LINE",
"744 285 OFFCURVE",
"755 62 OFFCURVE",
"553 62 CURVE SMOOTH",
"447 62 OFFCURVE",
"290 56 OFFCURVE",
"156 56 CURVE SMOOTH",
"55 56 OFFCURVE",
"-20 -16 OFFCURVE",
"-20 -123 CURVE"
);
}
);
width = 912;
},
{
anchors = (
{
name = _ye;
position = "{340, 44}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"221 -251 LINE",
"225 -185 OFFCURVE",
"271 -132 OFFCURVE",
"326 -125 CURVE SMOOTH",
"452 -110 OFFCURVE",
"720 -181 OFFCURVE",
"866 -163 CURVE SMOOTH",
"998 -147 OFFCURVE",
"1071 71 OFFCURVE",
"1079 217 CURVE",
"957 214 LINE",
"953 154 OFFCURVE",
"931 12 OFFCURVE",
"865 -22 CURVE SMOOTH",
"764 -74 OFFCURVE",
"443 32 OFFCURVE",
"324 17 CURVE SMOOTH",
"201 2 OFFCURVE",
"106 -114 OFFCURVE",
"98 -266 CURVE"
);
}
);
width = 927;
},
{
anchors = (
{
name = _ye;
position = "{334.132, 44}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"195 -153 LINE",
"195 -77 OFFCURVE",
"241 -28 OFFCURVE",
"316 -28 CURVE SMOOTH",
"427 -28 OFFCURVE",
"575 -23 OFFCURVE",
"713 -23 CURVE SMOOTH",
"943 -23 OFFCURVE",
"959 225 OFFCURVE",
"959 334 CURVE",
"904 334 LINE",
"904 255 OFFCURVE",
"915 32 OFFCURVE",
"713 32 CURVE SMOOTH",
"607 32 OFFCURVE",
"450 26 OFFCURVE",
"316 26 CURVE SMOOTH",
"215 26 OFFCURVE",
"140 -46 OFFCURVE",
"140 -153 CURVE"
);
}
);
width = 911;
}
);
},
{
glyphname = _smart.zha;
lastChange = "2020-12-15 23:05:30 +0000";
layers = (
{
anchors = (
{
name = _zha;
position = "{-7, 956}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-418 985 OFFCURVE",
"-393 1009 OFFCURVE",
"-393 1040 CURVE SMOOTH",
"-393 1071 OFFCURVE",
"-418 1096 OFFCURVE",
"-449 1096 CURVE SMOOTH",
"-480 1096 OFFCURVE",
"-504 1071 OFFCURVE",
"-504 1040 CURVE SMOOTH",
"-504 1009 OFFCURVE",
"-480 985 OFFCURVE",
"-449 985 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"484 987 OFFCURVE",
"509 1011 OFFCURVE",
"509 1042 CURVE SMOOTH",
"509 1073 OFFCURVE",
"484 1098 OFFCURVE",
"453 1098 CURVE SMOOTH",
"422 1098 OFFCURVE",
"398 1073 OFFCURVE",
"398 1042 CURVE SMOOTH",
"398 1011 OFFCURVE",
"422 987 OFFCURVE",
"453 987 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha;
position = "{-7, 776}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-533 932 OFFCURVE",
"-482 983 OFFCURVE",
"-482 1055 CURVE SMOOTH",
"-482 1127 OFFCURVE",
"-533 1179 OFFCURVE",
"-616 1179 CURVE SMOOTH",
"-696 1179 OFFCURVE",
"-750 1127 OFFCURVE",
"-750 1055 CURVE SMOOTH",
"-750 983 OFFCURVE",
"-698 932 OFFCURVE",
"-616 932 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"677 902 OFFCURVE",
"728 953 OFFCURVE",
"728 1025 CURVE SMOOTH",
"728 1097 OFFCURVE",
"677 1149 OFFCURVE",
"594 1149 CURVE SMOOTH",
"514 1149 OFFCURVE",
"460 1097 OFFCURVE",
"460 1025 CURVE SMOOTH",
"460 953 OFFCURVE",
"512 902 OFFCURVE",
"594 902 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha;
position = "{-7, 956}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-437 873 OFFCURVE",
"-400 916 OFFCURVE",
"-400 974 CURVE SMOOTH",
"-400 1032 OFFCURVE",
"-437 1077 OFFCURVE",
"-506 1077 CURVE SMOOTH {name = \"❌\";}",
"-575 1077 OFFCURVE",
"-611 1032 OFFCURVE",
"-611 974 CURVE SMOOTH",
"-611 916 OFFCURVE",
"-575 873 OFFCURVE",
"-506 873 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"583 866 OFFCURVE",
"620 909 OFFCURVE",
"620 967 CURVE SMOOTH",
"620 1025 OFFCURVE",
"583 1070 OFFCURVE",
"514 1070 CURVE SMOOTH",
"445 1070 OFFCURVE",
"409 1025 OFFCURVE",
"409 967 CURVE SMOOTH",
"409 909 OFFCURVE",
"445 866 OFFCURVE",
"514 866 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha;
position = "{-29, 956}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-472 875 OFFCURVE",
"-429 918 OFFCURVE",
"-418 974 CURVE SMOOTH",
"-408 1031 OFFCURVE",
"-436 1075 OFFCURVE",
"-504 1075 CURVE SMOOTH {name = \"❌\";}",
"-572 1075 OFFCURVE",
"-614 1031 OFFCURVE",
"-625 974 CURVE SMOOTH",
"-635 918 OFFCURVE",
"-608 875 OFFCURVE",
"-540 875 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"543 868 OFFCURVE",
"586 911 OFFCURVE",
"597 967 CURVE SMOOTH",
"606 1024 OFFCURVE",
"579 1068 OFFCURVE",
"511 1068 CURVE SMOOTH",
"443 1068 OFFCURVE",
"400 1024 OFFCURVE",
"390 967 CURVE SMOOTH",
"380 911 OFFCURVE",
"407 868 OFFCURVE",
"475 868 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha;
position = "{-29, 956}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-445 985 OFFCURVE",
"-416 1009 OFFCURVE",
"-410 1040 CURVE SMOOTH",
"-405 1071 OFFCURVE",
"-426 1096 OFFCURVE",
"-457 1096 CURVE SMOOTH",
"-488 1096 OFFCURVE",
"-516 1071 OFFCURVE",
"-521 1040 CURVE SMOOTH",
"-527 1009 OFFCURVE",
"-507 985 OFFCURVE",
"-476 985 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"480 987 OFFCURVE",
"509 1011 OFFCURVE",
"515 1042 CURVE SMOOTH",
"520 1073 OFFCURVE",
"500 1098 OFFCURVE",
"469 1098 CURVE SMOOTH",
"438 1098 OFFCURVE",
"409 1073 OFFCURVE",
"401 1042 CURVE SMOOTH",
"393 1011 OFFCURVE",
"418 987 OFFCURVE",
"449 987 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = abesha.base;
lastChange = "2020-12-17 01:12:21 +0000";
layers = (
{
anchors = (
{
name = aGlhat;
position = "{181, 1332}";
},
{
name = haa;
position = "{977, -30}";
},
{
name = hat.left;
position = "{101, 1680}";
},
{
name = he.left.inner;
position = "{-348, 1758}";
},
{
name = hee;
position = "{936, 66}";
},
{
name = hi;
position = "{1051, 140}";
},
{
name = ho;
position = "{273, -21}";
},
{
name = ho.ring;
position = "{1181, 455}";
},
{
name = ho.ring.uniq;
position = "{386, 590}";
},
{
name = hu;
position = "{1049, 647}";
},
{
name = hwa;
position = "{976, -34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"453 0 LINE",
"453 769 LINE",
"491 834 OFFCURVE",
"552 867 OFFCURVE",
"637 867 CURVE SMOOTH",
"761 867 OFFCURVE",
"810 809 OFFCURVE",
"810 685 CURVE SMOOTH",
"810 0 LINE",
"1099 0 LINE",
"1099 708 LINE SMOOTH",
"1099 981 OFFCURVE",
"979 1102 OFFCURVE",
"742 1102 CURVE SMOOTH",
"626 1102 OFFCURVE",
"530 1056 OFFCURVE",
"453 964 CURVE",
"453 1138 LINE",
"693 1536 LINE",
"404 1536 LINE",
"164 1159 LINE",
"164 0 LINE"
);
},
{
closed = 1;
nodes = (
"126 1736 LINE",
"-189 1736 LINE",
"88 1426 LINE",
"323 1426 LINE"
);
}
);
width = 1266;
},
{
anchors = (
{
name = aGlhat;
position = "{222, 1302}";
},
{
name = haa;
position = "{989, -26}";
},
{
name = hat.left;
position = "{138, 1570}";
},
{
name = he.left.inner;
position = "{-245, 1689}";
},
{
name = hee;
position = "{906, 67}";
},
{
name = hi;
position = "{1051, 110}";
},
{
name = ho;
position = "{297.434, -21}";
},
{
name = ho.ring;
position = "{1142, 468}";
},
{
name = ho.ring.uniq;
position = "{406, 600}";
},
{
name = hu;
position = "{1059, 667}";
},
{
name = hwa;
position = "{961, -30}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"385 0 LINE",
"385 771 LINE",
"436 875 OFFCURVE",
"529 945 OFFCURVE",
"649 945 CURVE SMOOTH",
"797 945 OFFCURVE",
"866 872 OFFCURVE",
"866 716 CURVE SMOOTH",
"866 0 LINE",
"1051 0 LINE",
"1051 715 LINE SMOOTH",
"1051 973 OFFCURVE",
"934 1102 OFFCURVE",
"705 1102 CURVE SMOOTH",
"574 1102 OFFCURVE",
"467 1052 OFFCURVE",
"385 951 CURVE",
"385 1094 LINE",
"565 1536 LINE",
"380 1536 LINE",
"200 1091 LINE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"115 1666 LINE",
"-109 1666 LINE",
"159 1372 LINE",
"308 1372 LINE"
);
}
);
width = 1251;
},
{
anchors = (
{
name = aGlhat;
position = "{178, 1322}";
},
{
name = haa;
position = "{987, -40}";
},
{
name = hat.left;
position = "{187, 1590}";
},
{
name = he.left.inner;
position = "{-18, 1721}";
},
{
name = hee;
position = "{856, 110}";
},
{
name = hi;
position = "{1051, 50}";
},
{
name = ho;
position = "{260, -21}";
},
{
name = ho.ring;
position = "{1208, 648}";
},
{
name = ho.ring.uniq;
position = "{321, 320}";
},
{
name = hu;
position = "{1049, 667}";
},
{
name = hwa;
position = "{991, -34}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"286 693 LINE",
"334 902 OFFCURVE",
"480 1049 OFFCURVE",
"667 1049 CURVE SMOOTH",
"870 1049 OFFCURVE",
"960 940 OFFCURVE",
"960 708 CURVE SMOOTH",
"960 0 LINE",
"1014 0 LINE",
"1014 706 LINE SMOOTH",
"1014 971 OFFCURVE",
"902 1102 OFFCURVE",
"670 1102 CURVE SMOOTH",
"503 1102 OFFCURVE",
"357 998 OFFCURVE",
"286 830 CURVE",
"286 1151 LINE",
"576 1536 LINE",
"522 1536 LINE",
"232 1167 LINE",
"232 0 LINE"
);
},
{
closed = 1;
nodes = (
"191 1726 LINE",
"125 1726 LINE",
"320 1460 LINE",
"380 1460 LINE"
);
}
);
width = 1241;
},
{
anchors = (
{
name = aGlhat;
position = "{161, 1292}";
},
{
name = haa;
position = "{794, -26}";
},
{
name = hat.left;
position = "{188, 1660}";
},
{
name = he.left.inner;
position = "{-93, 1766}";
},
{
name = hee;
position = "{784, 45}";
},
{
name = hi;
position = "{880, 110}";
},
{
name = ho;
position = "{87, -21}";
},
{
name = ho.ring;
position = "{1090, 498}";
},
{
name = ho.ring.uniq;
position = "{310, 600}";
},
{
name = hu;
position = "{986, 667}";
},
{
name = hwa;
position = "{758, -58}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"194 0 LINE",
"330 771 LINE",
"400 875 OFFCURVE",
"505 945 OFFCURVE",
"625 945 CURVE SMOOTH",
"773 945 OFFCURVE",
"828 872 OFFCURVE",
"801 716 CURVE SMOOTH",
"675 0 LINE",
"860 0 LINE",
"986 715 LINE SMOOTH",
"1031 973 OFFCURVE",
"937 1102 OFFCURVE",
"709 1102 CURVE SMOOTH",
"577 1102 OFFCURVE",
"462 1052 OFFCURVE",
"362 951 CURVE",
"405 1196 LINE",
"795 1536 LINE",
"610 1536 LINE",
"227 1238 LINE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"263 1766 LINE",
"39 1766 LINE",
"359 1472 LINE",
"508 1472 LINE"
);
}
);
width = 1248;
},
{
anchors = (
{
name = aGlhat;
position = "{218, 1342}";
},
{
name = haa;
position = "{789, -40}";
},
{
name = hat.left;
position = "{187, 1580}";
},
{
name = he.left.inner;
position = "{11, 1723}";
},
{
name = hee;
position = "{685, 110}";
},
{
name = hi;
position = "{869, 50}";
},
{
name = ho;
position = "{65, -21}";
},
{
name = ho.ring;
position = "{1137, 508}";
},
{
name = ho.ring.uniq;
position = "{177, 310}";
},
{
name = hu;
position = "{976, 667}";
},
{
name = hwa;
position = "{794, -34}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"95 0 LINE",
"217 693 LINE",
"302 902 OFFCURVE",
"475 1049 OFFCURVE",
"661 1049 CURVE SMOOTH",
"864 1049 OFFCURVE",
"935 940 OFFCURVE",
"894 708 CURVE SMOOTH",
"769 0 LINE",
"823 0 LINE",
"948 706 LINE SMOOTH",
"995 971 OFFCURVE",
"906 1102 OFFCURVE",
"674 1102 CURVE SMOOTH",
"507 1102 OFFCURVE",
"342 998 OFFCURVE",
"242 830 CURVE",
"311 1195 LINE",
"616 1536 LINE",
"562 1536 LINE",
"265 1226 LINE",
"41 0 LINE"
);
},
{
closed = 1;
nodes = (
"215 1716 LINE",
"149 1716 LINE",
"391 1450 LINE",
"451 1450 LINE"
);
}
);
width = 1241;
}
);
userData = {
lsb = 140;
rsb = 137;
};
},
{
glyphname = ba.base;
lastChange = "2020-12-16 20:44:25 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{309, 743}";
},
{
name = eGl;
position = "{30, 1465}";
},
{
name = haa;
position = "{975, 0}";
},
{
name = hat;
position = "{643, 1382}";
},
{
name = hat.left;
position = "{257, 1312}";
},
{
name = he.acute.top;
position = "{603, 1194}";
},
{
name = he.left.inner;
position = "{446, 560}";
},
{
name = he.left.outer;
position = "{195, 634}";
},
{
name = hee;
position = "{948, 50}";
},
{
name = hi;
position = "{1066, 130}";
},
{
name = ho;
position = "{278, -20}";
},
{
name = hu;
position = "{1070, 673}";
},
{
name = hwa;
position = "{978, 58}";
},
{
name = ka;
position = "{492, 1040}";
},
{
name = neck;
position = "{658, 1124}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"454 0 LINE",
"454 747 LINE SMOOTH",
"454 879 OFFCURVE",
"557 929 OFFCURVE",
"649 925 CURVE SMOOTH",
"758 920 OFFCURVE",
"810 833 OFFCURVE",
"810 756 CURVE SMOOTH",
"810 0 LINE",
"1099 0 LINE",
"1099 715 LINE SMOOTH",
"1099 973 OFFCURVE",
"898 1111 OFFCURVE",
"643 1111 CURVE SMOOTH",
"378 1111 OFFCURVE",
"165 977 OFFCURVE",
"165 748 CURVE SMOOTH",
"165 0 LINE"
);
}
);
width = 1264;
},
{
anchors = (
{
name = aGl;
position = "{311, 765}";
},
{
name = eGl;
position = "{29.691, 1465}";
},
{
name = haa;
position = "{989, -30}";
},
{
name = hat;
position = "{634, 1382}";
},
{
name = hat.left;
position = "{294, 1322}";
},
{
name = he.acute.top;
position = "{584, 1244}";
},
{
name = he.left.inner;
position = "{391, 560}";
},
{
name = he.left.outer;
position = "{193, 634}";
},
{
name = hee;
position = "{906, 60}";
},
{
name = hi;
position = "{1051, 110}";
},
{
name = ho;
position = "{282, -13}";
},
{
name = hu;
position = "{1055, 673}";
},
{
name = hwa;
position = "{961, -19}";
},
{
name = ka;
position = "{525, 1041}";
},
{
name = neck;
position = "{619, 1114}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"385 0 LINE",
"385 806 LINE SMOOTH",
"385 952 OFFCURVE",
"509 974 OFFCURVE",
"650 970 CURVE SMOOTH",
"838 965 OFFCURVE",
"866 872 OFFCURVE",
"866 716 CURVE SMOOTH",
"866 0 LINE",
"1051 0 LINE",
"1051 715 LINE SMOOTH",
"1051 973 OFFCURVE",
"862 1098 OFFCURVE",
"633 1102 CURVE SMOOTH",
"389 1106 OFFCURVE",
"200 992 OFFCURVE",
"200 788 CURVE SMOOTH",
"200 0 LINE"
);
}
);
width = 1251;
},
{
anchors = (
{
name = aGl;
position = "{319, 721}";
},
{
name = eGl;
position = "{29.478, 1465}";
},
{
name = haa;
position = "{988, -15}";
},
{
name = hat;
position = "{630, 1382}";
},
{
name = hat.left;
position = "{292, 1232}";
},
{
name = he.acute.top;
position = "{570, 1194}";
},
{
name = he.left.inner;
position = "{349, 560}";
},
{
name = he.left.outer;
position = "{192, 634}";
},
{
name = hee;
position = "{880, 80}";
},
{
name = hi;
position = "{1074, 60}";
},
{
name = ho;
position = "{260, -23}";
},
{
name = hu;
position = "{1048, 673}";
},
{
name = hwa;
position = "{987, 26}";
},
{
name = ka;
position = "{601, 1040}";
},
{
name = neck;
position = "{585, 1114}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"286 746 LINE SMOOTH",
"286 892 OFFCURVE",
"331 1061 OFFCURVE",
"625 1061 CURVE SMOOTH",
"929 1061 OFFCURVE",
"960 872 OFFCURVE",
"960 716 CURVE SMOOTH",
"960 0 LINE",
"1015 0 LINE",
"1015 715 LINE SMOOTH",
"1015 973 OFFCURVE",
"875 1113 OFFCURVE",
"619 1111 CURVE SMOOTH",
"355 1109 OFFCURVE",
"232 967 OFFCURVE",
"232 758 CURVE SMOOTH",
"232 0 LINE"
);
}
);
width = 1242;
},
{
anchors = (
{
name = aGl;
position = "{254, 765}";
},
{
name = eGl;
position = "{29.668, 1465}";
},
{
name = haa;
position = "{793, -30}";
},
{
name = hat;
position = "{687, 1382}";
},
{
name = hat.left;
position = "{336, 1322}";
},
{
name = he.acute.top;
position = "{627, 1204}";
},
{
name = he.left.inner;
position = "{299, 560}";
},
{
name = he.left.outer;
position = "{114, 634}";
},
{
name = hee;
position = "{726, 60}";
},
{
name = hi;
position = "{880, 110}";
},
{
name = ho;
position = "{92, -20}";
},
{
name = hu;
position = "{983, 673}";
},
{
name = hwa;
position = "{773, -24}";
},
{
name = ka;
position = "{598, 1040}";
},
{
name = neck;
position = "{655, 1114}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"194 0 LINE",
"320 716 LINE SMOOTH",
"346 862 OFFCURVE",
"463 945 OFFCURVE",
"625 945 CURVE SMOOTH",
"773 945 OFFCURVE",
"828 872 OFFCURVE",
"801 716 CURVE SMOOTH",
"675 0 LINE",
"860 0 LINE",
"986 715 LINE SMOOTH",
"1031 973 OFFCURVE",
"876 1102 OFFCURVE",
"647 1102 CURVE SMOOTH",
"383 1102 OFFCURVE",
"178 957 OFFCURVE",
"141 748 CURVE SMOOTH",
"9 0 LINE"
);
}
);
width = 1250;
},
{
anchors = (
{
name = aGl;
position = "{255, 721}";
},
{
name = eGl;
position = "{29.454, 1465}";
},
{
name = haa;
position = "{798, -8}";
},
{
name = hat;
position = "{801, 1382}";
},
{
name = hat.left;
position = "{318, 1232}";
},
{
name = he.acute.top;
position = "{623, 1204}";
},
{
name = he.left.inner;
position = "{257, 560}";
},
{
name = he.left.outer;
position = "{113, 634}";
},
{
name = hee;
position = "{703, 80}";
},
{
name = hi;
position = "{894, 60}";
},
{
name = ho;
position = "{71, -24}";
},
{
name = hu;
position = "{976, 673}";
},
{
name = hwa;
position = "{805, 43}";
},
{
name = ka;
position = "{594, 1040}";
},
{
name = neck;
position = "{650, 1114}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"95 0 LINE",
"221 716 LINE SMOOTH",
"247 862 OFFCURVE",
"315 1061 OFFCURVE",
"610 1061 CURVE SMOOTH",
"922 1061 OFFCURVE",
"922 872 OFFCURVE",
"895 716 CURVE SMOOTH",
"769 0 LINE",
"824 0 LINE",
"950 715 LINE SMOOTH",
"995 973 OFFCURVE",
"868 1111 OFFCURVE",
"613 1111 CURVE SMOOTH",
"345 1111 OFFCURVE",
"210 957 OFFCURVE",
"173 748 CURVE SMOOTH",
"41 0 LINE"
);
}
);
width = 1241;
}
);
userData = {
lsb = 140;
rsb = 139;
};
},
{
glyphname = ga.base;
lastChange = "2020-12-17 00:47:47 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{852, 17}";
},
{
name = haa.acute;
position = "{624, -40}";
},
{
name = hat;
position = "{304, 1367}";
},
{
name = hat.left;
position = "{162, 1246}";
},
{
name = he.left.outer;
position = "{618, 539}";
},
{
name = hee;
position = "{694, 53}";
},
{
name = hi;
position = "{802, 120}";
},
{
name = ho.ring;
position = "{403, 572}";
},
{
name = ho.ring.uniq;
position = "{118, 1252}";
},
{
name = hu;
position = "{784, 638}";
},
{
name = hwa;
position = "{686, 0}";
},
{
name = neck;
position = "{344, 1102}";
},
{
name = neck.left;
position = "{106, 877}";
},
{
name = nose;
position = "{-18, 1235}";
},
{
name = nose.extend;
position = "{-16, 885}";
},
{
name = ring;
position = "{338, 1050}";
},
{
name = xwaa;
position = "{471, 1}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"826 0 LINE",
"826 558 LINE SMOOTH",
"826 895 OFFCURVE",
"737 1102 OFFCURVE",
"444 1102 CURVE SMOOTH",
"298 1102 OFFCURVE",
"154 1018 OFFCURVE",
"70 921 CURVE",
"263 851 LINE",
"289 867 OFFCURVE",
"318 877 OFFCURVE",
"345 878 CURVE SMOOTH",
"540 886 OFFCURVE",
"537 670 OFFCURVE",
"537 577 CURVE SMOOTH",
"537 0 LINE"
);
}
);
width = 934;
},
{
anchors = (
{
name = haa;
position = "{814, 10}";
},
{
name = haa.acute;
position = "{582, -31}";
},
{
name = hat;
position = "{280, 1367}";
},
{
name = hat.left;
position = "{222, 1316}";
},
{
name = he.left.outer;
position = "{546, 592}";
},
{
name = hee;
position = "{642, 40}";
},
{
name = hi;
position = "{710, 110}";
},
{
name = ho.ring;
position = "{316, 703}";
},
{
name = ho.ring.uniq;
position = "{63, 1342}";
},
{
name = hu;
position = "{712, 638}";
},
{
name = hwa;
position = "{624, 0}";
},
{
name = neck;
position = "{316, 1072}";
},
{
name = neck.left;
position = "{112, 1008}";
},
{
name = nose;
position = "{6, 1315}";
},
{
name = nose.extend;
position = "{-18, 1085}";
},
{
name = ring;
position = "{352, 1030}";
},
{
name = xwaa;
position = "{431, 1}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"708 0 LINE",
"708 558 LINE SMOOTH",
"708 895 OFFCURVE",
"576 1083 OFFCURVE",
"326 1102 CURVE SMOOTH",
"220 1110 OFFCURVE",
"94 1050 OFFCURVE",
"30 1008 CURVE",
"198 944 LINE",
"219 955 OFFCURVE",
"253 966 OFFCURVE",
"326 961 CURVE SMOOTH",
"498 949 OFFCURVE",
"522 812 OFFCURVE",
"522 565 CURVE SMOOTH",
"522 0 LINE"
);
}
);
width = 908;
},
{
anchors = (
{
name = haa;
position = "{720, 21}";
},
{
name = haa.acute;
position = "{591, -60}";
},
{
name = hat;
position = "{367, 1367}";
},
{
name = hat.left;
position = "{261, 1176}";
},
{
name = he.left.outer;
position = "{556, 701}";
},
{
name = hee;
position = "{602, 40}";
},
{
name = hi;
position = "{659, 50}";
},
{
name = ho.ring;
position = "{420, 838}";
},
{
name = ho.ring.uniq;
position = "{30, 1093}";
},
{
name = hu;
position = "{651, 638}";
},
{
name = hwa;
position = "{624, 0}";
},
{
name = neck;
position = "{274, 1102}";
},
{
name = neck.left;
position = "{114, 1041}";
},
{
name = nose;
position = "{26, 1235}";
},
{
name = nose.extend;
position = "{7, 1084}";
},
{
name = ring;
position = "{488, 1010}";
},
{
name = xwaa;
position = "{422, 1}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"626 0 LINE",
"626 706 LINE SMOOTH",
"626 971 OFFCURVE",
"513 1102 OFFCURVE",
"281 1102 CURVE SMOOTH",
"210 1102 OFFCURVE",
"144 1083 OFFCURVE",
"85 1049 CURVE",
"123 1012 LINE",
"170 1036 OFFCURVE",
"222 1049 OFFCURVE",
"278 1049 CURVE SMOOTH",
"481 1049 OFFCURVE",
"571 940 OFFCURVE",
"571 708 CURVE SMOOTH",
"571 0 LINE"
);
}
);
width = 793;
},
{
anchors = (
{
name = haa;
position = "{695, 10}";
},
{
name = haa.acute;
position = "{461, -44}";
},
{
name = hat;
position = "{400, 1367}";
},
{
name = hat.left;
position = "{333, 1316}";
},
{
name = he.left.outer;
position = "{513, 569}";
},
{
name = hee;
position = "{528, 40}";
},
{
name = hi;
position = "{609, 110}";
},
{
name = ho.ring;
position = "{456, 698}";
},
{
name = ho.ring.uniq;
position = "{193, 1422}";
},
{
name = hu;
position = "{704, 638}";
},
{
name = hwa;
position = "{503, 0}";
},
{
name = neck;
position = "{390, 1082}";
},
{
name = neck.left;
position = "{169, 1008}";
},
{
name = nose;
position = "{104, 1305}";
},
{
name = nose.extend;
position = "{-57, 1085}";
},
{
name = ring;
position = "{452, 1110}";
},
{
name = xwaa;
position = "{501, 1}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"587 0 LINE",
"686 558 LINE SMOOTH",
"746 895 OFFCURVE",
"646 1083 OFFCURVE",
"400 1102 CURVE SMOOTH",
"295 1110 OFFCURVE",
"158 1050 OFFCURVE",
"87 1008 CURVE",
"244 944 LINE",
"267 955 OFFCURVE",
"303 966 OFFCURVE",
"375 961 CURVE SMOOTH",
"545 949 OFFCURVE",
"545 812 OFFCURVE",
"501 565 CURVE SMOOTH",
"401 0 LINE"
);
}
);
width = 918;
},
{
anchors = (
{
name = haa;
position = "{554, 21}";
},
{
name = haa.acute;
position = "{413, -45}";
},
{
name = hat;
position = "{438, 1367}";
},
{
name = hat.left;
position = "{299, 1176}";
},
{
name = he.left.outer;
position = "{503, 630}";
},
{
name = hee;
position = "{439, 40}";
},
{
name = hi;
position = "{498, 50}";
},
{
name = ho.ring;
position = "{403, 838}";
},
{
name = ho.ring.uniq;
position = "{101, 1152}";
},
{
name = hu;
position = "{594, 638}";
},
{
name = hwa;
position = "{454, 0}";
},
{
name = neck;
position = "{299, 1102}";
},
{
name = neck.left;
position = "{128, 1041}";
},
{
name = nose;
position = "{74, 1235}";
},
{
name = nose.extend;
position = "{38, 1085}";
},
{
name = ring;
position = "{469, 1060}";
},
{
name = xwaa;
position = "{443, 1}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"456 0 LINE",
"581 706 LINE SMOOTH",
"628 971 OFFCURVE",
"538 1102 OFFCURVE",
"306 1102 CURVE SMOOTH",
"235 1102 OFFCURVE",
"165 1083 OFFCURVE",
"100 1049 CURVE",
"132 1012 LINE",
"183 1036 OFFCURVE",
"237 1049 OFFCURVE",
"293 1049 CURVE SMOOTH",
"496 1049 OFFCURVE",
"567 940 OFFCURVE",
"526 708 CURVE SMOOTH",
"401 0 LINE"
);
}
);
width = 814;
}
);
userData = {
lsb = 9;
rsb = 71;
};
},
{
glyphname = ha.base;
lastChange = "2020-12-16 02:01:10 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{979, -11}";
},
{
name = he;
position = "{197, 675}";
},
{
name = he.left.inner;
position = "{384, 783}";
},
{
name = hee;
position = "{950, 0}";
},
{
name = hi;
position = "{1102, -280}";
},
{
name = ho.ring;
position = "{1159, 1163}";
},
{
name = hu;
position = "{1029, 659}";
},
{
name = hwa;
position = "{940, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"897 -28 OFFCURVE",
"1097 110 OFFCURVE",
"1097 368 CURVE SMOOTH",
"1097 1083 LINE {name = \"❌\";}",
"809 1083 LINE {name = \"❌\";}",
"809 367 LINE SMOOTH",
"809 290 OFFCURVE",
"750 215 OFFCURVE",
"648 215 CURVE SMOOTH",
"583 215 OFFCURVE",
"453 235 OFFCURVE",
"453 367 CURVE SMOOTH",
"453 1083 LINE {name = \"❌\";}",
"164 1083 LINE {name = \"❌\";}",
"164 335 LINE SMOOTH",
"164 126 OFFCURVE",
"378 -10 OFFCURVE",
"642 -28 CURVE"
);
}
);
width = 1264;
},
{
anchors = (
{
name = haa;
position = "{997, 10}";
},
{
name = he;
position = "{192, 782}";
},
{
name = he.left.inner;
position = "{389, 783}";
},
{
name = hee;
position = "{937, 0}";
},
{
name = hi;
position = "{1069, -240}";
},
{
name = ho.ring;
position = "{1071, 1128}";
},
{
name = hu;
position = "{1017, 690}";
},
{
name = hwa;
position = "{947, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"868 -20 OFFCURVE",
"1047 109 OFFCURVE",
"1047 367 CURVE SMOOTH",
"1047 1082 LINE",
"862 1082 LINE",
"862 366 LINE SMOOTH",
"862 210 OFFCURVE",
"793 137 OFFCURVE",
"645 137 CURVE SMOOTH",
"483 137 OFFCURVE",
"381 220 OFFCURVE",
"381 366 CURVE SMOOTH",
"381 1082 LINE",
"196 1082 LINE",
"196 334 LINE SMOOTH",
"196 125 OFFCURVE",
"375 -20 OFFCURVE",
"639 -20 CURVE SMOOTH"
);
}
);
width = 1247;
},
{
anchors = (
{
name = haa;
position = "{848, 0}";
},
{
name = he;
position = "{195, 703}";
},
{
name = he.left.inner;
position = "{377, 783}";
},
{
name = hee;
position = "{938, 0}";
},
{
name = hi;
position = "{920, -301}";
},
{
name = ho.ring;
position = "{1031, 1059}";
},
{
name = hu;
position = "{1073, 604}";
},
{
name = hwa;
position = "{949, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"848 -23 OFFCURVE",
"1012 121 OFFCURVE",
"1012 385 CURVE SMOOTH",
"1012 1082 LINE",
"957 1082 LINE",
"957 385 LINE SMOOTH",
"957 163 OFFCURVE",
"822 34 OFFCURVE",
"615 34 CURVE SMOOTH",
"420 34 OFFCURVE",
"282 163 OFFCURVE",
"282 385 CURVE SMOOTH",
"282 1082 LINE",
"228 1082 LINE",
"228 385 LINE SMOOTH",
"228 121 OFFCURVE",
"375 -17 OFFCURVE",
"617 -20 CURVE SMOOTH"
);
}
);
width = 1241;
},
{
anchors = (
{
name = haa;
position = "{787, -10}";
},
{
name = he;
position = "{140, 782}";
},
{
name = he.left.inner;
position = "{337, 783}";
},
{
name = hee;
position = "{747, 0}";
},
{
name = hi;
position = "{812, -261}";
},
{
name = ho.ring;
position = "{1140, 1128}";
},
{
name = hu;
position = "{949, 690}";
},
{
name = hwa;
position = "{757, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"675 -20 OFFCURVE",
"877 109 OFFCURVE",
"922 367 CURVE SMOOTH",
"1048 1082 LINE",
"863 1082 LINE",
"737 366 LINE SMOOTH",
"710 210 OFFCURVE",
"627 137 OFFCURVE",
"479 137 CURVE SMOOTH",
"317 137 OFFCURVE",
"230 220 OFFCURVE",
"256 366 CURVE SMOOTH",
"382 1082 LINE",
"197 1082 LINE",
"65 334 LINE SMOOTH",
"28 125 OFFCURVE",
"182 -20 OFFCURVE",
"446 -20 CURVE SMOOTH"
);
}
);
width = 1249;
},
{
anchors = (
{
name = haa;
position = "{677, 0}";
},
{
name = he;
position = "{128, 703}";
},
{
name = he.left.inner;
position = "{324, 783}";
},
{
name = hee;
position = "{747, 0}";
},
{
name = hi;
position = "{696, -301}";
},
{
name = ho.ring;
position = "{1027, 1059}";
},
{
name = hu;
position = "{989, 604}";
},
{
name = hwa;
position = "{758, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"653 -23 OFFCURVE",
"842 121 OFFCURVE",
"889 385 CURVE SMOOTH",
"1012 1082 LINE",
"957 1082 LINE",
"834 385 LINE SMOOTH",
"795 163 OFFCURVE",
"637 34 OFFCURVE",
"430 34 CURVE SMOOTH",
"235 34 OFFCURVE",
"120 163 OFFCURVE",
"159 385 CURVE SMOOTH",
"282 1082 LINE",
"228 1082 LINE",
"105 385 LINE SMOOTH",
"58 121 OFFCURVE",
"181 -17 OFFCURVE",
"423 -20 CURVE SMOOTH"
);
}
);
width = 1241;
}
);
userData = {
lsb = 136;
rsb = 141;
};
},
{
glyphname = hha.base;
lastChange = "2020-12-16 04:18:28 +0000";
layers = (
{
anchors = (
{
name = cha;
position = "{978, 19}";
},
{
name = haa;
position = "{1597, 2}";
},
{
name = he;
position = "{1719, 663}";
},
{
name = he.acute.bottom;
position = "{1099, -3}";
},
{
name = he.acute.top;
position = "{707, 1279}";
},
{
name = hee;
position = "{1558, 60}";
},
{
name = hi;
position = "{1695, 140}";
},
{
name = ho;
position = "{287, -20}";
},
{
name = hu;
position = "{1719, 663}";
},
{
name = hwa;
position = "{1599, 50}";
},
{
name = neck;
position = "{945, 1106}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"460 0 LINE",
"460 639 LINE SMOOTH",
"460 756 OFFCURVE",
"479 865 OFFCURVE",
"616 869 CURVE SMOOTH",
"687 871 OFFCURVE",
"801 872 OFFCURVE",
"801 727 CURVE SMOOTH",
"801 0 LINE",
"1089 0 LINE",
"1089 697 LINE SMOOTH",
"1089 784 OFFCURVE",
"1119 867 OFFCURVE",
"1283 868 CURVE SMOOTH",
"1412 869 OFFCURVE",
"1432 747 OFFCURVE",
"1432 702 CURVE SMOOTH",
"1432 0 LINE",
"1720 0 LINE",
"1720 706 LINE SMOOTH",
"1720 970 OFFCURVE",
"1605 1102 OFFCURVE",
"1393 1102 CURVE SMOOTH",
"1178 1102 OFFCURVE",
"1099 1072 OFFCURVE",
"955 916 CURVE",
"859 1097 OFFCURVE",
"681 1102 OFFCURVE",
"589 1102 CURVE SMOOTH",
"371 1102 OFFCURVE",
"171 920 OFFCURVE",
"171 683 CURVE SMOOTH",
"171 0 LINE"
);
}
);
width = 1891;
},
{
anchors = (
{
name = cha;
position = "{931, 7}";
},
{
name = haa;
position = "{1635, -30}";
},
{
name = he;
position = "{1701, 663}";
},
{
name = he.acute.bottom;
position = "{1138, -3}";
},
{
name = he.acute.top;
position = "{747, 1349}";
},
{
name = hee;
position = "{1583, -72}";
},
{
name = hi;
position = "{1697, 110}";
},
{
name = ho;
position = "{282, -9}";
},
{
name = hu;
position = "{1701, 663}";
},
{
name = hwa;
position = "{1607, -30}";
},
{
name = neck;
position = "{935, 1106}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"385 0 LINE",
"385 709 LINE SMOOTH",
"385 893 OFFCURVE",
"497 945 OFFCURVE",
"614 945 CURVE SMOOTH",
"768 945 OFFCURVE",
"845 866 OFFCURVE",
"845 709 CURVE SMOOTH",
"845 0 LINE",
"1031 0 LINE",
"1031 718 LINE SMOOTH",
"1031 858 OFFCURVE",
"1144 945 OFFCURVE",
"1281 945 CURVE SMOOTH",
"1448 945 OFFCURVE",
"1512 869 OFFCURVE",
"1512 714 CURVE SMOOTH",
"1512 0 LINE",
"1697 0 LINE",
"1697 725 LINE SMOOTH",
"1697 976 OFFCURVE",
"1572 1102 OFFCURVE",
"1335 1102 CURVE SMOOTH",
"1178 1102 OFFCURVE",
"1029 1010 OFFCURVE",
"946 927 CURVE",
"868 1010 OFFCURVE",
"808 1101 OFFCURVE",
"591 1102 CURVE SMOOTH",
"414 1103 OFFCURVE",
"200 968 OFFCURVE",
"200 709 CURVE SMOOTH",
"200 0 LINE"
);
}
);
width = 1897;
},
{
anchors = (
{
name = cha;
position = "{952, 7}";
},
{
name = haa;
position = "{1718, -28}";
},
{
name = he;
position = "{1730, 663}";
},
{
name = he.acute.bottom;
position = "{1090, -3}";
},
{
name = he.acute.top;
position = "{858, 1359}";
},
{
name = hee;
position = "{1569, 140}";
},
{
name = hi;
position = "{1776, 60}";
},
{
name = ho;
position = "{248, -10}";
},
{
name = hu;
position = "{1770, 663}";
},
{
name = hwa;
position = "{1713, 10}";
},
{
name = neck;
position = "{936, 1106}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"276 0 LINE",
"276 684 LINE SMOOTH",
"276 875 OFFCURVE",
"429 1049 OFFCURVE",
"606 1049 CURVE SMOOTH",
"811 1049 OFFCURVE",
"952 944 OFFCURVE",
"952 727 CURVE SMOOTH",
"952 0 LINE",
"1006 0 LINE",
"1006 720 LINE SMOOTH",
"1006 823 OFFCURVE",
"1132 1045 OFFCURVE",
"1390 1049 CURVE SMOOTH",
"1594 1052 OFFCURVE",
"1686 939 OFFCURVE",
"1686 702 CURVE SMOOTH",
"1686 0 LINE",
"1740 0 LINE",
"1740 706 LINE SMOOTH",
"1740 970 OFFCURVE",
"1626 1102 OFFCURVE",
"1393 1102 CURVE SMOOTH",
"1214 1102 OFFCURVE",
"1059 1002 OFFCURVE",
"995 846 CURVE",
"959 1027 OFFCURVE",
"790 1102 OFFCURVE",
"609 1102 CURVE SMOOTH",
"390 1102 OFFCURVE",
"221 920 OFFCURVE",
"221 683 CURVE SMOOTH",
"221 0 LINE"
);
}
);
width = 1956;
},
{
anchors = (
{
name = cha;
position = "{740, 7}";
},
{
name = haa;
position = "{1438, -30}";
},
{
name = he;
position = "{1626, 663}";
},
{
name = he.acute.bottom;
position = "{906, -3}";
},
{
name = he.acute.top;
position = "{810, 1319}";
},
{
name = hee;
position = "{1379, -72}";
},
{
name = hi;
position = "{1525, 110}";
},
{
name = ho;
position = "{90, -12}";
},
{
name = hu;
position = "{1626, 663}";
},
{
name = hwa;
position = "{1418, -20}";
},
{
name = neck;
position = "{938, 1106}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"193 0 LINE",
"318 709 LINE SMOOTH",
"350 893 OFFCURVE",
"472 945 OFFCURVE",
"589 945 CURVE SMOOTH",
"743 945 OFFCURVE",
"806 866 OFFCURVE",
"778 709 CURVE SMOOTH",
"653 0 LINE",
"839 0 LINE",
"966 718 LINE SMOOTH",
"991 858 OFFCURVE",
"1119 945 OFFCURVE",
"1256 945 CURVE SMOOTH",
"1423 945 OFFCURVE",
"1473 869 OFFCURVE",
"1446 714 CURVE SMOOTH",
"1320 0 LINE",
"1505 0 LINE",
"1633 725 LINE SMOOTH",
"1677 976 OFFCURVE",
"1575 1102 OFFCURVE",
"1338 1102 CURVE SMOOTH",
"1181 1102 OFFCURVE",
"1015 1010 OFFCURVE",
"918 927 CURVE",
"854 1010 OFFCURVE",
"810 1101 OFFCURVE",
"594 1102 CURVE SMOOTH",
"417 1103 OFFCURVE",
"179 968 OFFCURVE",
"133 709 CURVE SMOOTH",
"8 0 LINE"
);
}
);
width = 1895;
},
{
anchors = (
{
name = cha;
position = "{762, 7}";
},
{
name = haa;
position = "{1522, -28}";
},
{
name = he;
position = "{1656, 663}";
},
{
name = he.acute.bottom;
position = "{939, -3}";
},
{
name = he.acute.top;
position = "{912, 1339}";
},
{
name = hee;
position = "{1403, 140}";
},
{
name = hi;
position = "{1596, 60}";
},
{
name = ho;
position = "{58, -11}";
},
{
name = hu;
position = "{1696, 663}";
},
{
name = hwa;
position = "{1530, 2}";
},
{
name = neck;
position = "{940, 1106}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"85 0 LINE",
"206 684 LINE SMOOTH",
"240 875 OFFCURVE",
"423 1049 OFFCURVE",
"600 1049 CURVE SMOOTH",
"805 1049 OFFCURVE",
"927 944 OFFCURVE",
"889 727 CURVE SMOOTH",
"761 0 LINE",
"815 0 LINE",
"942 720 LINE SMOOTH",
"960 823 OFFCURVE",
"1125 1045 OFFCURVE",
"1384 1049 CURVE SMOOTH",
"1589 1052 OFFCURVE",
"1661 939 OFFCURVE",
"1619 702 CURVE SMOOTH",
"1495 0 LINE",
"1549 0 LINE",
"1674 706 LINE SMOOTH",
"1721 970 OFFCURVE",
"1630 1102 OFFCURVE",
"1397 1102 CURVE SMOOTH",
"1218 1102 OFFCURVE",
"1045 1002 OFFCURVE",
"953 846 CURVE",
"949 1027 OFFCURVE",
"794 1102 OFFCURVE",
"613 1102 CURVE SMOOTH",
"394 1102 OFFCURVE",
"193 920 OFFCURVE",
"151 683 CURVE SMOOTH",
"30 0 LINE"
);
}
);
width = 1956;
}
);
userData = {
lsb = 139;
rsb = 139;
};
},
{
glyphname = la.base;
lastChange = "2020-12-16 04:42:37 +0000";
layers = (
{
anchors = (
{
name = aGlhat;
position = "{181, 1332}";
},
{
name = haa;
position = "{977, -30}";
},
{
name = he.left.inner;
position = "{407, 598}";
},
{
name = hee;
position = "{936, 66}";
},
{
name = hi;
position = "{1051, 140}";
},
{
name = ho;
position = "{273, -21}";
},
{
name = ho.ring;
position = "{1282, 455}";
},
{
name = ho.ring.uniq;
position = "{386, 590}";
},
{
name = hu;
position = "{1049, 647}";
},
{
name = hwa;
position = "{976, -34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"453 0 LINE",
"453 769 LINE",
"491 834 OFFCURVE",
"552 867 OFFCURVE",
"637 867 CURVE SMOOTH",
"761 867 OFFCURVE",
"810 809 OFFCURVE",
"810 685 CURVE SMOOTH",
"810 0 LINE",
"1099 0 LINE",
"1099 708 LINE SMOOTH",
"1099 981 OFFCURVE",
"979 1102 OFFCURVE",
"742 1102 CURVE SMOOTH",
"626 1102 OFFCURVE",
"530 1056 OFFCURVE",
"453 964 CURVE",
"453 1536 LINE",
"164 1536 LINE",
"164 0 LINE"
);
}
);
width = 1266;
},
{
anchors = (
{
name = aGlhat;
position = "{222, 1302}";
},
{
name = haa;
position = "{989, -26}";
},
{
name = he.left.inner;
position = "{402.178, 598}";
},
{
name = hee;
position = "{906, 67}";
},
{
name = hi;
position = "{1051, 110}";
},
{
name = ho;
position = "{297.434, -21}";
},
{
name = ho.ring;
position = "{1252, 568}";
},
{
name = ho.ring.uniq;
position = "{406, 600}";
},
{
name = hu;
position = "{1059, 667}";
},
{
name = hwa;
position = "{961, -30}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"385 0 LINE",
"385 771 LINE",
"436 875 OFFCURVE",
"529 945 OFFCURVE",
"649 945 CURVE SMOOTH",
"797 945 OFFCURVE",
"866 872 OFFCURVE",
"866 716 CURVE SMOOTH",
"866 0 LINE",
"1051 0 LINE",
"1051 715 LINE SMOOTH",
"1051 973 OFFCURVE",
"934 1102 OFFCURVE",
"705 1102 CURVE SMOOTH",
"574 1102 OFFCURVE",
"467 1052 OFFCURVE",
"385 951 CURVE",
"385 1536 LINE",
"200 1536 LINE",
"200 0 LINE"
);
}
);
width = 1251;
},
{
anchors = (
{
name = aGlhat;
position = "{178, 1322}";
},
{
name = haa;
position = "{987, -40}";
},
{
name = he.left.inner;
position = "{329, 598}";
},
{
name = hee;
position = "{856, 110}";
},
{
name = hi;
position = "{1051, 50}";
},
{
name = ho;
position = "{260, -21}";
},
{
name = ho.ring;
position = "{1208, 648}";
},
{
name = ho.ring.uniq;
position = "{321, 320}";
},
{
name = hu;
position = "{1049, 667}";
},
{
name = hwa;
position = "{991, -34}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"286 693 LINE",
"334 902 OFFCURVE",
"480 1049 OFFCURVE",
"667 1049 CURVE SMOOTH",
"870 1049 OFFCURVE",
"960 940 OFFCURVE",
"960 708 CURVE SMOOTH",
"960 0 LINE",
"1014 0 LINE",
"1014 706 LINE SMOOTH",
"1014 971 OFFCURVE",
"902 1102 OFFCURVE",
"670 1102 CURVE SMOOTH",
"503 1102 OFFCURVE",
"357 998 OFFCURVE",
"286 830 CURVE",
"286 1536 LINE",
"232 1536 LINE",
"232 0 LINE"
);
}
);
width = 1241;
},
{
anchors = (
{
name = aGlhat;
position = "{161, 1292}";
},
{
name = haa;
position = "{794, -26}";
},
{
name = he.left.inner;
position = "{311, 598}";
},
{
name = hee;
position = "{784, 45}";
},
{
name = hi;
position = "{880, 110}";
},
{
name = ho;
position = "{87, -21}";
},
{
name = ho.ring;
position = "{1260, 498}";
},
{
name = ho.ring.uniq;
position = "{310, 600}";
},
{
name = hu;
position = "{986, 667}";
},
{
name = hwa;
position = "{758, -58}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"194 0 LINE",
"330 771 LINE",
"400 875 OFFCURVE",
"505 945 OFFCURVE",
"625 945 CURVE SMOOTH",
"773 945 OFFCURVE",
"828 872 OFFCURVE",
"801 716 CURVE SMOOTH",
"675 0 LINE",
"860 0 LINE",
"986 715 LINE SMOOTH",
"1031 973 OFFCURVE",
"937 1102 OFFCURVE",
"709 1102 CURVE SMOOTH",
"577 1102 OFFCURVE",
"462 1052 OFFCURVE",
"362 951 CURVE",
"465 1536 LINE",
"280 1536 LINE",
"9 0 LINE"
);
}
);
width = 1248;
},
{
anchors = (
{
name = aGlhat;
position = "{218, 1342}";
},
{
name = haa;
position = "{789, -40}";
},
{
name = he.left.inner;
position = "{398.963, 598}";
},
{
name = hee;
position = "{685, 110}";
},
{
name = hi;
position = "{869, 50}";
},
{
name = ho;
position = "{65, -21}";
},
{
name = ho.ring;
position = "{1137, 508}";
},
{
name = ho.ring.uniq;
position = "{177, 310}";
},
{
name = hu;
position = "{976, 667}";
},
{
name = hwa;
position = "{794, -34}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"95 0 LINE",
"217 693 LINE",
"302 902 OFFCURVE",
"475 1049 OFFCURVE",
"661 1049 CURVE SMOOTH",
"864 1049 OFFCURVE",
"935 940 OFFCURVE",
"894 708 CURVE SMOOTH",
"769 0 LINE",
"823 0 LINE",
"948 706 LINE SMOOTH",
"995 971 OFFCURVE",
"906 1102 OFFCURVE",
"674 1102 CURVE SMOOTH",
"507 1102 OFFCURVE",
"342 998 OFFCURVE",
"242 830 CURVE",
"366 1536 LINE",
"312 1536 LINE",
"41 0 LINE"
);
}
);
width = 1241;
}
);
userData = {
lsb = 140;
rsb = 137;
};
},
{
glyphname = ma.base;
lastChange = "2020-12-16 19:02:00 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1495, -4}";
},
{
name = he.acute.bottom;
position = "{747, -101}";
},
{
name = hee;
position = "{1516, 0}";
},
{
name = hi;
position = "{1582, -274}";
},
{
name = ho;
position = "{759, 0}";
},
{
name = hu;
position = "{1641, 661}";
},
{
name = hwa;
position = "{1550, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"587 0 LINE SMOOTH",
"790 0 OFFCURVE",
"863 133 OFFCURVE",
"863 240 CURVE SMOOTH",
"863 764 LINE SMOOTH",
"863 852 OFFCURVE",
"988 868 OFFCURVE",
"988 769 CURVE SMOOTH",
"988 234 LINE SMOOTH",
"988 128 OFFCURVE",
"1043 0 OFFCURVE",
"1255 0 CURVE SMOOTH",
"1514 0 LINE SMOOTH",
"1602 0 OFFCURVE",
"1683 68 OFFCURVE",
"1683 169 CURVE SMOOTH",
"1683 725 LINE SMOOTH",
"1683 976 OFFCURVE",
"1603 1102 OFFCURVE",
"1361 1102 CURVE SMOOTH",
"1164 1102 OFFCURVE",
"1074 1075 OFFCURVE",
"1004 979 CURVE",
"802 976 LINE",
"736 1067 OFFCURVE",
"672 1100 OFFCURVE",
"538 1102 CURVE SMOOTH",
"200 1107 OFFCURVE",
"165 967 OFFCURVE",
"165 800 CURVE SMOOTH",
"165 166 LINE SMOOTH",
"165 33 OFFCURVE",
"246 0 OFFCURVE",
"319 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"439 718 LINE SMOOTH",
"439 832 OFFCURVE",
"450 876 OFFCURVE",
"548 876 CURVE SMOOTH",
"618 876 OFFCURVE",
"627 806 OFFCURVE",
"627 718 CURVE SMOOTH",
"627 329 LINE SMOOTH",
"627 266 OFFCURVE",
"625 195 OFFCURVE",
"510 195 CURVE SMOOTH",
"439 195 LINE"
);
},
{
closed = 1;
nodes = (
"1303 195 LINE SMOOTH",
"1209 195 OFFCURVE",
"1211 272 OFFCURVE",
"1211 361 CURVE SMOOTH",
"1211 718 LINE SMOOTH",
"1211 834 OFFCURVE",
"1219 876 OFFCURVE",
"1317 876 CURVE SMOOTH",
"1413 876 OFFCURVE",
"1421 809 OFFCURVE",
"1421 718 CURVE SMOOTH",
"1421 195 LINE"
);
}
);
width = 1851;
},
{
anchors = (
{
name = haa;
position = "{1576, -10}";
},
{
name = he.acute.bottom;
position = "{828, -101}";
},
{
name = hee;
position = "{1527, 0}";
},
{
name = hi;
position = "{1642, -261}";
},
{
name = ho;
position = "{780, 0}";
},
{
name = hu;
position = "{1702, 661}";
},
{
name = hwa;
position = "{1611, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"622 0 LINE SMOOTH",
"825 0 OFFCURVE",
"838 133 OFFCURVE",
"838 240 CURVE SMOOTH",
"838 784 LINE SMOOTH",
"838 872 OFFCURVE",
"1047 888 OFFCURVE",
"1047 789 CURVE SMOOTH",
"1047 234 LINE SMOOTH",
"1047 128 OFFCURVE",
"1078 0 OFFCURVE",
"1290 0 CURVE SMOOTH",
"1549 0 LINE SMOOTH",
"1637 0 OFFCURVE",
"1718 68 OFFCURVE",
"1718 169 CURVE SMOOTH",
"1718 725 LINE SMOOTH",
"1718 976 OFFCURVE",
"1638 1102 OFFCURVE",
"1396 1102 CURVE SMOOTH",
"1199 1102 OFFCURVE",
"1109 1075 OFFCURVE",
"1039 979 CURVE",
"837 976 LINE",
"771 1067 OFFCURVE",
"707 1100 OFFCURVE",
"573 1102 CURVE SMOOTH",
"235 1107 OFFCURVE",
"200 967 OFFCURVE",
"200 800 CURVE SMOOTH",
"200 166 LINE SMOOTH",
"200 33 OFFCURVE",
"281 0 OFFCURVE",
"354 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"386 718 LINE SMOOTH",
"386 902 OFFCURVE",
"387 946 OFFCURVE",
"565 946 CURVE SMOOTH",
"675 946 OFFCURVE",
"702 875 OFFCURVE",
"702 718 CURVE SMOOTH",
"702 329 LINE SMOOTH",
"702 177 OFFCURVE",
"692 141 OFFCURVE",
"497 141 CURVE SMOOTH",
"386 141 LINE"
);
},
{
closed = 1;
nodes = (
"1418 141 LINE SMOOTH",
"1224 141 OFFCURVE",
"1206 192 OFFCURVE",
"1206 361 CURVE SMOOTH",
"1206 718 LINE SMOOTH",
"1206 904 OFFCURVE",
"1226 946 OFFCURVE",
"1352 946 CURVE SMOOTH",
"1519 946 OFFCURVE",
"1536 879 OFFCURVE",
"1536 718 CURVE SMOOTH",
"1536 141 LINE"
);
}
);
width = 1918;
},
{
anchors = (
{
name = haa;
position = "{1658, -10}";
},
{
name = he.acute.bottom;
position = "{840, -101}";
},
{
name = hee;
position = "{1589, 0}";
},
{
name = hi;
position = "{1715, -314}";
},
{
name = ho;
position = "{792, 0}";
},
{
name = hu;
position = "{1774, 661}";
},
{
name = hwa;
position = "{1623, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"604 0 LINE SMOOTH",
"848 0 OFFCURVE",
"860 133 OFFCURVE",
"860 240 CURVE SMOOTH",
"860 862 LINE SMOOTH",
"860 913 OFFCURVE",
"1088 909 OFFCURVE",
"1088 862 CURVE SMOOTH",
"1088 234 LINE SMOOTH",
"1088 128 OFFCURVE",
"1149 0 OFFCURVE",
"1332 0 CURVE SMOOTH",
"1601 0 LINE SMOOTH",
"1741 0 OFFCURVE",
"1753 20 OFFCURVE",
"1753 166 CURVE SMOOTH",
"1753 725 LINE SMOOTH",
"1753 1006 OFFCURVE",
"1635 1102 OFFCURVE",
"1398 1102 CURVE SMOOTH",
"1236 1102 OFFCURVE",
"1151 1050 OFFCURVE",
"1101 946 CURVE",
"870 946 LINE",
"838 1036 OFFCURVE",
"757 1100 OFFCURVE",
"592 1098 CURVE SMOOTH",
"256 1094 OFFCURVE",
"232 966 OFFCURVE",
"232 800 CURVE SMOOTH",
"232 166 LINE SMOOTH",
"232 13 OFFCURVE",
"249 0 OFFCURVE",
"366 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"291 805 LINE SMOOTH",
"291 986 OFFCURVE",
"350 1056 OFFCURVE",
"612 1056 CURVE SMOOTH",
"780 1056 OFFCURVE",
"807 995 OFFCURVE",
"807 786 CURVE SMOOTH",
"807 270 LINE SMOOTH",
"807 76 OFFCURVE",
"767 50 OFFCURVE",
"576 50 CURVE SMOOTH",
"291 50 LINE"
);
},
{
closed = 1;
nodes = (
"1436 50 LINE SMOOTH",
"1199 50 OFFCURVE",
"1144 110 OFFCURVE",
"1144 366 CURVE SMOOTH",
"1144 773 LINE SMOOTH",
"1144 986 OFFCURVE",
"1206 1042 OFFCURVE",
"1396 1049 CURVE SMOOTH",
"1560 1055 OFFCURVE",
"1698 1024 OFFCURVE",
"1698 719 CURVE SMOOTH",
"1698 50 LINE"
);
}
);
width = 1980;
},
{
anchors = (
{
name = haa;
position = "{1375, -10}";
},
{
name = he.acute.bottom;
position = "{619, -101}";
},
{
name = hee;
position = "{1336, 0}";
},
{
name = hi;
position = "{1394, -264}";
},
{
name = ho;
position = "{589, 0}";
},
{
name = hu;
position = "{1648, 661}";
},
{
name = hwa;
position = "{1411, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"431 0 LINE SMOOTH",
"634 0 OFFCURVE",
"671 133 OFFCURVE",
"690 240 CURVE SMOOTH",
"785 784 LINE SMOOTH",
"800 872 OFFCURVE",
"1012 888 OFFCURVE",
"995 789 CURVE SMOOTH",
"897 234 LINE SMOOTH",
"878 128 OFFCURVE",
"887 0 OFFCURVE",
"1099 0 CURVE SMOOTH",
"1358 0 LINE SMOOTH",
"1446 0 OFFCURVE",
"1539 68 OFFCURVE",
"1557 169 CURVE SMOOTH",
"1655 725 LINE SMOOTH",
"1699 976 OFFCURVE",
"1642 1102 OFFCURVE",
"1400 1102 CURVE SMOOTH",
"1203 1102 OFFCURVE",
"1108 1075 OFFCURVE",
"1021 979 CURVE",
"818 976 LINE",
"768 1067 OFFCURVE",
"710 1100 OFFCURVE",
"577 1102 CURVE SMOOTH",
"239 1107 OFFCURVE",
"180 967 OFFCURVE",
"150 800 CURVE SMOOTH",
"38 166 LINE SMOOTH",
"15 33 OFFCURVE",
"90 0 OFFCURVE",
"163 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"322 718 LINE SMOOTH",
"355 902 OFFCURVE",
"363 946 OFFCURVE",
"541 946 CURVE SMOOTH",
"651 946 OFFCURVE",
"666 875 OFFCURVE",
"638 718 CURVE SMOOTH",
"569 329 LINE SMOOTH",
"542 177 OFFCURVE",
"526 141 OFFCURVE",
"331 141 CURVE SMOOTH",
"220 141 LINE"
);
},
{
closed = 1;
nodes = (
"1252 141 LINE SMOOTH",
"1058 141 OFFCURVE",
"1049 192 OFFCURVE",
"1079 361 CURVE SMOOTH",
"1142 718 LINE SMOOTH",
"1175 904 OFFCURVE",
"1202 946 OFFCURVE",
"1328 946 CURVE SMOOTH",
"1495 946 OFFCURVE",
"1500 879 OFFCURVE",
"1472 718 CURVE SMOOTH",
"1370 141 LINE"
);
}
);
width = 1918;
},
{
anchors = (
{
name = haa;
position = "{1547, 0}";
},
{
name = he.acute.bottom;
position = "{631, -101}";
},
{
name = hee;
position = "{1398, -10}";
},
{
name = hi;
position = "{1549, -314}";
},
{
name = ho;
position = "{601, 0}";
},
{
name = hu;
position = "{1700, 661}";
},
{
name = hwa;
position = "{1432, -50}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"507 0 LINE SMOOTH",
"751 0 OFFCURVE",
"786 133 OFFCURVE",
"805 240 CURVE SMOOTH",
"915 862 LINE SMOOTH",
"924 913 OFFCURVE",
"1151 909 OFFCURVE",
"1143 862 CURVE SMOOTH",
"1032 234 LINE SMOOTH",
"1013 128 OFFCURVE",
"1052 0 OFFCURVE",
"1235 0 CURVE SMOOTH",
"1504 0 LINE SMOOTH",
"1644 0 OFFCURVE",
"1659 20 OFFCURVE",
"1685 166 CURVE SMOOTH",
"1784 725 LINE SMOOTH",
"1834 1006 OFFCURVE",
"1732 1102 OFFCURVE",
"1495 1102 CURVE SMOOTH",
"1333 1102 OFFCURVE",
"1239 1050 OFFCURVE",
"1171 946 CURVE",
"940 946 LINE",
"924 1036 OFFCURVE",
"854 1100 OFFCURVE",
"688 1098 CURVE SMOOTH",
"352 1094 OFFCURVE",
"305 966 OFFCURVE",
"276 800 CURVE SMOOTH",
"164 166 LINE SMOOTH",
"137 13 OFFCURVE",
"152 0 OFFCURVE",
"269 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"336 805 LINE SMOOTH",
"368 986 OFFCURVE",
"439 1056 OFFCURVE",
"701 1056 CURVE SMOOTH",
"869 1056 OFFCURVE",
"885 995 OFFCURVE",
"848 786 CURVE SMOOTH",
"757 270 LINE SMOOTH",
"723 76 OFFCURVE",
"679 50 OFFCURVE",
"488 50 CURVE SMOOTH",
"203 50 LINE"
);
},
{
closed = 1;
nodes = (
"1348 50 LINE SMOOTH",
"1111 50 OFFCURVE",
"1066 110 OFFCURVE",
"1111 366 CURVE SMOOTH",
"1183 773 LINE SMOOTH",
"1221 986 OFFCURVE",
"1293 1042 OFFCURVE",
"1484 1049 CURVE SMOOTH",
"1649 1055 OFFCURVE",
"1782 1024 OFFCURVE",
"1728 719 CURVE SMOOTH",
"1610 50 LINE"
);
}
);
width = 1980;
}
);
userData = {
lsb = 91;
rsb = 92;
};
},
{
glyphname = na.base;
lastChange = "2020-12-16 04:11:25 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{741, 111}";
},
{
name = haa;
position = "{808, -17}";
},
{
name = haa.acute;
position = "{557, -11}";
},
{
name = hat;
position = "{569, 1278}";
},
{
name = hat.left;
position = "{498, 943}";
},
{
name = he.left;
position = "{138, 815}";
},
{
name = he.left.outer;
position = "{181, 568}";
},
{
name = hee;
position = "{1113, 719}";
},
{
name = ho.ring;
position = "{1078, 844}";
},
{
name = hwa;
position = "{809, -44}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"752 -20 OFFCURVE",
"788 -20 OFFCURVE",
"932 -20 CURVE",
"932 174 LINE",
"827 174 OFFCURVE",
"742 174 OFFCURVE",
"649 174 CURVE SMOOTH",
"454 174 OFFCURVE",
"456 270 OFFCURVE",
"456 517 CURVE SMOOTH",
"456 1082 LINE",
"168 1082 LINE",
"168 524 LINE SMOOTH",
"168 187 OFFCURVE",
"257 -20 OFFCURVE",
"550 -20 CURVE SMOOTH"
);
}
);
width = 1013;
},
{
anchors = (
{
name = fa;
position = "{756, 101}";
},
{
name = haa;
position = "{895, -46}";
},
{
name = haa.acute;
position = "{602, -11}";
},
{
name = hat;
position = "{612, 1278}";
},
{
name = hat.left;
position = "{520, 973}";
},
{
name = he.left;
position = "{142, 815}";
},
{
name = he.left.outer;
position = "{181, 815}";
},
{
name = hee;
position = "{1102, 759}";
},
{
name = ho.ring;
position = "{1009, 939}";
},
{
name = hwa;
position = "{861, -36}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"784 -32 OFFCURVE",
"856 -32 OFFCURVE",
"951 -32 CURVE",
"951 131 LINE",
"864 131 OFFCURVE",
"664 131 OFFCURVE",
"582 131 CURVE SMOOTH",
"431 131 OFFCURVE",
"385 255 OFFCURVE",
"385 517 CURVE SMOOTH",
"385 1082 LINE",
"200 1082 LINE",
"200 524 LINE SMOOTH",
"200 187 OFFCURVE",
"290 -3 OFFCURVE",
"582 -32 CURVE SMOOTH"
);
}
);
width = 1062;
},
{
anchors = (
{
name = fa;
position = "{730, 71}";
},
{
name = haa;
position = "{904, -27}";
},
{
name = haa.acute;
position = "{603, -11}";
},
{
name = hat;
position = "{593, 1278}";
},
{
name = hat.left;
position = "{525, 941}";
},
{
name = he.left;
position = "{162, 815}";
},
{
name = he.left.outer;
position = "{94, 568}";
},
{
name = hee;
position = "{917, 590}";
},
{
name = ho.ring;
position = "{829, 999}";
},
{
name = hwa;
position = "{903, -77}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"804 -21 OFFCURVE",
"801 -21 OFFCURVE",
"931 -21 CURVE",
"931 32 LINE",
"826 32 OFFCURVE",
"774 32 OFFCURVE",
"582 32 CURVE SMOOTH",
"311 32 OFFCURVE",
"275 270 OFFCURVE",
"275 517 CURVE SMOOTH",
"275 1082 LINE",
"220 1082 LINE",
"220 524 LINE SMOOTH",
"220 187 OFFCURVE",
"309 -19 OFFCURVE",
"602 -21 CURVE SMOOTH"
);
}
);
width = 1081;
},
{
anchors = (
{
name = fa;
position = "{579, 101}";
},
{
name = haa;
position = "{789, -37}";
},
{
name = haa.acute;
position = "{405, -11}";
},
{
name = hat;
position = "{644, 1275}";
},
{
name = hat.left;
position = "{617, 960}";
},
{
name = he.left;
position = "{121, 815}";
},
{
name = he.left.outer;
position = "{54, 568}";
},
{
name = hee;
position = "{1041, 759}";
},
{
name = ho.ring;
position = "{1146, 860}";
},
{
name = hwa;
position = "{758, -50}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"685 -22 OFFCURVE",
"755 -30 OFFCURVE",
"856 -32 CURVE",
"876 119 LINE",
"789 118 OFFCURVE",
"591 127 OFFCURVE",
"510 131 CURVE SMOOTH",
"360 138 OFFCURVE",
"335 255 OFFCURVE",
"381 517 CURVE SMOOTH",
"480 1082 LINE",
"295 1082 LINE",
"197 524 LINE SMOOTH",
"138 187 OFFCURVE",
"190 -17 OFFCURVE",
"483 -20 CURVE SMOOTH"
);
}
);
width = 1077;
},
{
anchors = (
{
name = fa;
position = "{478, 71}";
},
{
name = haa;
position = "{735, -27}";
},
{
name = haa.acute;
position = "{337, -11}";
},
{
name = hat;
position = "{655, 1278}";
},
{
name = hat.left;
position = "{512, 941}";
},
{
name = he.left;
position = "{42, 815}";
},
{
name = he.left.outer;
position = "{-70, 568}";
},
{
name = hee;
position = "{756, 590}";
},
{
name = ho.ring;
position = "{862, 999}";
},
{
name = hwa;
position = "{735, -10}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"634 -20 OFFCURVE",
"631 -21 OFFCURVE",
"761 -21 CURVE",
"770 32 LINE",
"665 32 OFFCURVE",
"613 34 OFFCURVE",
"421 34 CURVE SMOOTH",
"150 34 OFFCURVE",
"157 270 OFFCURVE",
"200 517 CURVE SMOOTH",
"299 1082 LINE",
"244 1082 LINE",
"146 524 LINE SMOOTH",
"87 187 OFFCURVE",
"139 -20 OFFCURVE",
"432 -20 CURVE SMOOTH"
);
}
);
width = 1060;
}
);
userData = {
lsb = 92;
rsb = 68;
};
},
{
glyphname = newGlyph.001;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = m002;
width = 600;
},
{
layerId = m003;
width = 600;
},
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 600;
},
{
layerId = m004;
width = 600;
},
{
layerId = m005;
width = 600;
}
);
},
{
glyphname = newGlyph.002;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = m003;
width = 600;
},
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 600;
},
{
layerId = m002;
width = 600;
},
{
layerId = m004;
width = 600;
},
{
layerId = m005;
width = 600;
}
);
},
{
glyphname = oPh.base;
lastChange = "2020-12-16 02:42:21 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{927, 0}";
},
{
name = haa.acute;
position = "{622, -92}";
},
{
name = hee;
position = "{896, -39}";
},
{
name = hi;
position = "{989, -312}";
},
{
name = hu;
position = "{1099, 741}";
},
{
name = hwa;
position = "{912, 0}";
},
{
name = neck;
position = "{631, 1111}";
},
{
name = tsa.belt;
position = "{642, 550}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"809 -20 OFFCURVE",
"959 77 OFFCURVE",
"1038 241 CURVE SMOOTH",
"1077 323 OFFCURVE",
"1097 416 OFFCURVE",
"1097 520 CURVE SMOOTH",
"1097 568 LINE SMOOTH",
"1097 868 OFFCURVE",
"913 1102 OFFCURVE",
"623 1102 CURVE SMOOTH",
"440 1102 OFFCURVE",
"289 1005 OFFCURVE",
"210 841 CURVE SMOOTH",
"170 758 OFFCURVE",
"150 665 OFFCURVE",
"150 562 CURVE SMOOTH",
"150 514 LINE SMOOTH",
"150 140 OFFCURVE",
"400 -20 OFFCURVE",
"625 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"361 34 OFFCURVE",
"204 261 OFFCURVE",
"204 520 CURVE SMOOTH",
"204 837 OFFCURVE",
"376 1048 OFFCURVE",
"623 1048 CURVE SMOOTH",
"884 1048 OFFCURVE",
"1043 818 OFFCURVE",
"1043 531 CURVE SMOOTH",
"1043 239 OFFCURVE",
"872 34 OFFCURVE",
"625 34 CURVE SMOOTH"
);
}
);
width = 1247;
},
{
anchors = (
{
name = haa;
position = "{827, -30}";
},
{
name = haa.acute;
position = "{588, -62}";
},
{
name = hee;
position = "{916, -39}";
},
{
name = hi;
position = "{951, -292}";
},
{
name = hu;
position = "{1039, 671}";
},
{
name = hwa;
position = "{912, 0}";
},
{
name = neck;
position = "{631, 1111}";
},
{
name = tsa.belt;
position = "{618, 550}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"834 -20 OFFCURVE",
"994 76 OFFCURVE",
"1081 229 CURVE SMOOTH",
"1132 320 OFFCURVE",
"1159 432 OFFCURVE",
"1151 556 CURVE SMOOTH",
"1149 589 LINE SMOOTH",
"1130 896 OFFCURVE",
"929 1102 OFFCURVE",
"637 1102 CURVE SMOOTH",
"456 1101 OFFCURVE",
"330 1009 OFFCURVE",
"249 895 CURVE SMOOTH",
"162 775 OFFCURVE",
"126 632 OFFCURVE",
"126 551 CURVE SMOOTH",
"126 538 LINE SMOOTH",
"126 194 OFFCURVE",
"327 -20 OFFCURVE",
"639 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"495 213 OFFCURVE",
"415 325 OFFCURVE",
"415 530 CURVE SMOOTH",
"415 761 OFFCURVE",
"496 868 OFFCURVE",
"637 868 CURVE SMOOTH",
"780 868 OFFCURVE",
"862 752 OFFCURVE",
"862 551 CURVE SMOOTH",
"862 315 OFFCURVE",
"779 213 OFFCURVE",
"639 213 CURVE SMOOTH"
);
}
);
width = 1279;
},
{
anchors = (
{
name = haa;
position = "{886, -10}";
},
{
name = haa.acute;
position = "{643, -82}";
},
{
name = hee;
position = "{915, -39}";
},
{
name = hi;
position = "{958, -253}";
},
{
name = hu;
position = "{1098, 851}";
},
{
name = hwa;
position = "{911, 0}";
},
{
name = neck;
position = "{630, 1114}";
},
{
name = tsa.belt;
position = "{621, 550}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"838 -20 OFFCURVE",
"994 78 OFFCURVE",
"1075 246 CURVE SMOOTH",
"1115 329 OFFCURVE",
"1135 424 OFFCURVE",
"1135 529 CURVE SMOOTH",
"1135 542 LINE SMOOTH",
"1135 881 OFFCURVE",
"936 1102 OFFCURVE",
"641 1102 CURVE SMOOTH",
"450 1102 OFFCURVE",
"296 1006 OFFCURVE",
"213 837 CURVE SMOOTH",
"171 752 OFFCURVE",
"150 657 OFFCURVE",
"150 551 CURVE SMOOTH",
"150 538 LINE SMOOTH",
"150 202 OFFCURVE",
"350 -20 OFFCURVE",
"643 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"456 131 OFFCURVE",
"336 289 OFFCURVE",
"336 529 CURVE SMOOTH",
"336 800 OFFCURVE",
"458 950 OFFCURVE",
"641 950 CURVE SMOOTH",
"828 950 OFFCURVE",
"950 788 OFFCURVE",
"950 551 CURVE SMOOTH",
"950 286 OFFCURVE",
"831 131 OFFCURVE",
"643 131 CURVE SMOOTH"
);
}
);
width = 1285;
},
{
anchors = (
{
name = haa;
position = "{696, -20}";
},
{
name = haa.acute;
position = "{387, -62}";
},
{
name = hee;
position = "{718, -39}";
},
{
name = hi;
position = "{726, -242}";
},
{
name = hu;
position = "{1017, 671}";
},
{
name = hwa;
position = "{721, 0}";
},
{
name = neck;
position = "{654, 1121}";
},
{
name = tsa.belt;
position = "{528, 550}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"644 -20 OFFCURVE",
"818 78 OFFCURVE",
"928 246 CURVE SMOOTH",
"983 329 OFFCURVE",
"1014 425 OFFCURVE",
"1038 529 CURVE SMOOTH",
"1041 542 LINE SMOOTH",
"1118 877 OFFCURVE",
"940 1102 OFFCURVE",
"646 1102 CURVE SMOOTH",
"455 1102 OFFCURVE",
"283 1006 OFFCURVE",
"170 837 CURVE SMOOTH",
"114 752 OFFCURVE",
"73 657 OFFCURVE",
"57 551 CURVE SMOOTH",
"55 538 LINE SMOOTH",
"3 201 OFFCURVE",
"156 -20 OFFCURVE",
"450 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"290 131 OFFCURVE",
"197 289 OFFCURVE",
"239 529 CURVE SMOOTH",
"287 800 OFFCURVE",
"436 950 OFFCURVE",
"619 950 CURVE SMOOTH",
"805 950 OFFCURVE",
"899 788 OFFCURVE",
"857 551 CURVE SMOOTH",
"811 286 OFFCURVE",
"664 131 OFFCURVE",
"476 131 CURVE SMOOTH"
);
}
);
width = 1289;
},
{
anchors = (
{
name = haa;
position = "{736, 0}";
},
{
name = haa.acute;
position = "{377, -92}";
},
{
name = hee;
position = "{698, -39}";
},
{
name = hi;
position = "{743, -312}";
},
{
name = hu;
position = "{1039, 741}";
},
{
name = hwa;
position = "{721, 0}";
},
{
name = neck;
position = "{634, 1111}";
},
{
name = tsa.belt;
position = "{548, 550}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"615 -20 OFFCURVE",
"782 77 OFFCURVE",
"890 241 CURVE SMOOTH",
"944 323 OFFCURVE",
"981 416 OFFCURVE",
"998 520 CURVE SMOOTH",
"1006 568 LINE SMOOTH",
"1056 869 OFFCURVE",
"917 1102 OFFCURVE",
"627 1102 CURVE SMOOTH",
"444 1102 OFFCURVE",
"275 1005 OFFCURVE",
"167 841 CURVE SMOOTH",
"113 758 OFFCURVE",
"75 665 OFFCURVE",
"58 562 CURVE SMOOTH",
"50 514 LINE SMOOTH",
"-12 139 OFFCURVE",
"206 -20 OFFCURVE",
"431 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"176 34 OFFCURVE",
"59 261 OFFCURVE",
"105 520 CURVE SMOOTH",
"161 837 OFFCURVE",
"370 1048 OFFCURVE",
"617 1048 CURVE SMOOTH",
"878 1048 OFFCURVE",
"996 818 OFFCURVE",
"946 531 CURVE SMOOTH",
"894 239 OFFCURVE",
"687 34 OFFCURVE",
"440 34 CURVE SMOOTH"
);
}
);
width = 1248;
}
);
},
{
glyphname = pa.base;
lastChange = "2020-12-16 04:14:03 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{600, 42}";
},
{
name = haa.acute;
position = "{318, -10}";
},
{
name = hat;
position = "{350, 1339}";
},
{
name = he.acute.top;
position = "{343, 1167}";
},
{
name = hee;
position = "{389, 50}";
},
{
name = hi;
position = "{482, 130}";
},
{
name = ho.ring;
position = "{643, 1314}";
},
{
name = hu;
position = "{461, 669}";
},
{
name = hwa;
position = "{393, 12}";
},
{
name = neck;
position = "{361, 1082}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"517 870 LINE",
"702 870 LINE",
"702 1082 LINE",
"70 1082 LINE",
"70 870 LINE",
"230 870 LINE",
"230 0 LINE",
"517 0 LINE"
);
}
);
width = 801;
},
{
anchors = (
{
name = haa;
position = "{553, 42}";
},
{
name = haa.acute;
position = "{331, -10}";
},
{
name = hat;
position = "{343, 1339}";
},
{
name = he.acute.top;
position = "{336, 1167}";
},
{
name = hee;
position = "{392, 40}";
},
{
name = hi;
position = "{465, 110}";
},
{
name = ho.ring;
position = "{610, 1274}";
},
{
name = hu;
position = "{454, 669}";
},
{
name = hwa;
position = "{362, -10}";
},
{
name = neck;
position = "{354, 1082}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"452 0 LINE",
"452 939 LINE",
"654 939 LINE",
"654 1082 LINE",
"70 1082 LINE",
"70 939 LINE",
"267 939 LINE",
"267 0 LINE"
);
}
);
width = 784;
},
{
anchors = (
{
name = haa;
position = "{453, 42}";
},
{
name = haa.acute;
position = "{322, -9}";
},
{
name = hat;
position = "{323, 1339}";
},
{
name = he.acute.top;
position = "{256, 1167}";
},
{
name = hee;
position = "{372, 0}";
},
{
name = hi;
position = "{385, 50}";
},
{
name = ho.ring;
position = "{532, 1275}";
},
{
name = hu;
position = "{374, 669}";
},
{
name = hwa;
position = "{325, 20}";
},
{
name = neck;
position = "{295, 1082}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"353 1027 LINE",
"599 1027 LINE",
"599 1082 LINE",
"98 1082 LINE",
"98 1027 LINE",
"298 1027 LINE",
"298 0 LINE",
"353 0 LINE"
);
}
);
width = 735;
},
{
anchors = (
{
name = haa;
position = "{369, 42}";
},
{
name = haa.acute;
position = "{139, -10}";
},
{
name = hat;
position = "{387, 1339}";
},
{
name = he.acute.top;
position = "{350, 1167}";
},
{
name = hee;
position = "{207, 40}";
},
{
name = hi;
position = "{293, 110}";
},
{
name = ho.ring;
position = "{643, 1274}";
},
{
name = hu;
position = "{380, 669}";
},
{
name = hwa;
position = "{166, -20}";
},
{
name = neck;
position = "{353, 1082}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"260 0 LINE",
"426 939 LINE",
"628 939 LINE",
"653 1082 LINE",
"69 1082 LINE",
"44 939 LINE",
"241 939 LINE",
"75 0 LINE"
);
}
);
width = 784;
},
{
anchors = (
{
name = haa;
position = "{270, 42}";
},
{
name = haa.acute;
position = "{131, -11}";
},
{
name = hat;
position = "{368, 1339}";
},
{
name = he.acute.top;
position = "{271, 1167}";
},
{
name = hee;
position = "{181, 0}";
},
{
name = hi;
position = "{203, 50}";
},
{
name = ho.ring;
position = "{566, 1275}";
},
{
name = hu;
position = "{301, 669}";
},
{
name = hwa;
position = "{142, 20}";
},
{
name = neck;
position = "{295, 1082}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"343 1027 LINE",
"589 1027 LINE",
"599 1082 LINE",
"98 1082 LINE",
"88 1027 LINE",
"288 1027 LINE",
"107 0 LINE",
"162 0 LINE"
);
}
);
width = 735;
}
);
userData = {
lsb = 9;
rsb = 71;
};
},
{
glyphname = ra.base;
lastChange = "2020-12-17 00:31:22 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{759, 111}";
},
{
name = haa;
position = "{708, -53}";
},
{
name = haa.acute;
position = "{685, -51}";
},
{
name = hat;
position = "{598, 937}";
},
{
name = hat.left;
position = "{344.062, 1041}";
},
{
name = hee;
position = "{1041, 679}";
},
{
name = ho.ring;
position = "{1130, 982}";
},
{
name = hwa;
position = "{688, 4}";
},
{
name = ra;
position = "{951.93, 305}";
},
{
name = raa;
position = "{737, 324}";
},
{
name = ri;
position = "{1013, 264}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"770 -20 OFFCURVE",
"995 141 OFFCURVE",
"1017 316 CURVE",
"900 316 LINE",
"878 225 OFFCURVE",
"768 177 OFFCURVE",
"667 174 CURVE SMOOTH",
"472 168 OFFCURVE",
"474 270 OFFCURVE",
"474 517 CURVE SMOOTH",
"474 1082 LINE",
"186 1082 LINE",
"186 524 LINE SMOOTH",
"186 187 OFFCURVE",
"275 -20 OFFCURVE",
"568 -20 CURVE SMOOTH"
);
}
);
width = 1101;
},
{
anchors = (
{
name = fa;
position = "{786, 101}";
},
{
name = haa;
position = "{757, -43}";
},
{
name = haa.acute;
position = "{742, -70}";
},
{
name = hat;
position = "{627, 960}";
},
{
name = hat.left;
position = "{360, 1040}";
},
{
name = hee;
position = "{1042, 638}";
},
{
name = ho.ring;
position = "{1061, 940}";
},
{
name = hwa;
position = "{709, 34}";
},
{
name = ra;
position = "{996.024, 305}";
},
{
name = raa;
position = "{718, 281}";
},
{
name = ri;
position = "{1036, 234}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"784 -20 OFFCURVE",
"985 127 OFFCURVE",
"1062 295 CURVE",
"954 295 LINE",
"904 205 OFFCURVE",
"714 131 OFFCURVE",
"582 131 CURVE SMOOTH",
"431 131 OFFCURVE",
"385 255 OFFCURVE",
"385 517 CURVE SMOOTH",
"385 1082 LINE",
"200 1082 LINE",
"200 524 LINE SMOOTH",
"200 187 OFFCURVE",
"289 -20 OFFCURVE",
"582 -20 CURVE SMOOTH"
);
}
);
width = 1092;
},
{
anchors = (
{
name = fa;
position = "{755, 71}";
},
{
name = haa;
position = "{734, -53}";
},
{
name = haa.acute;
position = "{738, -81}";
},
{
name = hat;
position = "{505, 1051}";
},
{
name = hat.left;
position = "{361.562, 1041}";
},
{
name = hee;
position = "{1012, 621}";
},
{
name = ho.ring;
position = "{933, 985}";
},
{
name = hwa;
position = "{696, 4}";
},
{
name = ra;
position = "{1000.347, 305}";
},
{
name = raa;
position = "{842, 305}";
},
{
name = ri;
position = "{970, 254}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"829 -20 OFFCURVE",
"1030 155 OFFCURVE",
"1067 276 CURVE",
"1006 276 LINE",
"987 188 OFFCURVE",
"799 34 OFFCURVE",
"607 34 CURVE SMOOTH",
"336 34 OFFCURVE",
"300 270 OFFCURVE",
"300 517 CURVE SMOOTH",
"300 1082 LINE",
"245 1082 LINE",
"245 524 LINE SMOOTH",
"245 187 OFFCURVE",
"334 -20 OFFCURVE",
"627 -20 CURVE SMOOTH"
);
}
);
width = 1157;
},
{
anchors = (
{
name = fa;
position = "{598, 101}";
},
{
name = haa;
position = "{569, -63}";
},
{
name = haa.acute;
position = "{624, -51}";
},
{
name = hat;
position = "{621, 961}";
},
{
name = hat.left;
position = "{364.375, 1041}";
},
{
name = hee;
position = "{1040, 679}";
},
{
name = ho.ring;
position = "{1112, 900}";
},
{
name = hwa;
position = "{534, 4}";
},
{
name = ra;
position = "{1008.129, 305}";
},
{
name = raa;
position = "{608, 305}";
},
{
name = ri;
position = "{867, 284}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"605 -20 OFFCURVE",
"832 127 OFFCURVE",
"938 295 CURVE",
"830 295 LINE",
"764 205 OFFCURVE",
"561 131 OFFCURVE",
"429 131 CURVE SMOOTH",
"278 131 OFFCURVE",
"254 255 OFFCURVE",
"300 517 CURVE SMOOTH",
"400 1082 LINE",
"215 1082 LINE",
"117 524 LINE SMOOTH",
"58 187 OFFCURVE",
"110 -20 OFFCURVE",
"403 -20 CURVE SMOOTH"
);
}
);
width = 1166;
},
{
anchors = (
{
name = fa;
position = "{612, 70}";
},
{
name = haa;
position = "{500, -93}";
},
{
name = haa.acute;
position = "{535, -91}";
},
{
name = hat;
position = "{499, 1051}";
},
{
name = hat.left;
position = "{361.25, 1041}";
},
{
name = hee;
position = "{885, 600}";
},
{
name = ho.ring;
position = "{885, 985}";
},
{
name = hwa;
position = "{439, -20}";
},
{
name = ra;
position = "{999, 305}";
},
{
name = raa;
position = "{679, 285}";
},
{
name = ri;
position = "{869, 294}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"634 -20 OFFCURVE",
"866 155 OFFCURVE",
"924 276 CURVE",
"863 276 LINE",
"828 188 OFFCURVE",
"613 34 OFFCURVE",
"421 34 CURVE SMOOTH",
"150 34 OFFCURVE",
"155 270 OFFCURVE",
"199 517 CURVE SMOOTH",
"299 1082 LINE",
"244 1082 LINE",
"146 524 LINE SMOOTH",
"87 187 OFFCURVE",
"139 -20 OFFCURVE",
"432 -20 CURVE SMOOTH"
);
}
);
width = 1156;
}
);
userData = {
lsb = 136;
rsb = 141;
};
},
{
glyphname = sa.base;
lastChange = "2020-12-16 19:02:59 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1473, -30}";
},
{
name = he.acute.bottom;
position = "{850, -94}";
},
{
name = hee;
position = "{1539, 0}";
},
{
name = hi;
position = "{1596, -296}";
},
{
name = ho;
position = "{253, -25}";
},
{
name = hu;
position = "{1666, 701}";
},
{
name = hwa;
position = "{1491, -30}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"757 -20 OFFCURVE",
"871 -15 OFFCURVE",
"978 166 CURVE",
"1082 -30 OFFCURVE",
"1191 -20 OFFCURVE",
"1306 -20 CURVE SMOOTH",
"1484 -20 OFFCURVE",
"1713 112 OFFCURVE",
"1713 376 CURVE SMOOTH",
"1713 1082 LINE",
"1425 1082 LINE",
"1425 380 LINE SMOOTH",
"1425 285 OFFCURVE",
"1375 213 OFFCURVE",
"1276 213 CURVE SMOOTH",
"1125 213 OFFCURVE",
"1082 275 OFFCURVE",
"1082 362 CURVE SMOOTH",
"1082 1082 LINE",
"794 1082 LINE",
"794 355 LINE SMOOTH",
"794 240 OFFCURVE",
"724 208 OFFCURVE",
"609 213 CURVE SMOOTH",
"478 219 OFFCURVE",
"453 266 OFFCURVE",
"453 398 CURVE SMOOTH",
"453 1082 LINE",
"164 1082 LINE",
"164 399 LINE SMOOTH",
"164 162 OFFCURVE",
"308 -20 OFFCURVE",
"582 -20 CURVE SMOOTH"
);
}
);
width = 1880;
},
{
anchors = (
{
name = haa;
position = "{1548, -40}";
},
{
name = he.acute.bottom;
position = "{875, -94}";
},
{
name = hee;
position = "{1564, 0}";
},
{
name = hi;
position = "{1615, -281}";
},
{
name = ho;
position = "{318, -25}";
},
{
name = hu;
position = "{1691, 701}";
},
{
name = hwa;
position = "{1506, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"715 -20 OFFCURVE",
"831 50 OFFCURVE",
"903 154 CURVE",
"998 38 OFFCURVE",
"1066 -25 OFFCURVE",
"1302 -20 CURVE SMOOTH",
"1479 -16 OFFCURVE",
"1697 114 OFFCURVE",
"1693 373 CURVE SMOOTH",
"1683 1082 LINE",
"1498 1082 LINE",
"1508 373 LINE SMOOTH",
"1511 189 OFFCURVE",
"1396 137 OFFCURVE",
"1279 137 CURVE SMOOTH",
"1125 137 OFFCURVE",
"1048 216 OFFCURVE",
"1048 373 CURVE SMOOTH",
"1048 1082 LINE",
"862 1082 LINE",
"862 364 LINE SMOOTH",
"862 224 OFFCURVE",
"749 137 OFFCURVE",
"612 137 CURVE SMOOTH",
"445 137 OFFCURVE",
"381 213 OFFCURVE",
"381 368 CURVE SMOOTH",
"381 1082 LINE",
"196 1082 LINE",
"196 357 LINE SMOOTH",
"196 106 OFFCURVE",
"321 -20 OFFCURVE",
"558 -20 CURVE SMOOTH"
);
}
);
width = 1893;
},
{
anchors = (
{
name = haa;
position = "{1588, 0}";
},
{
name = he.acute.bottom;
position = "{885, -94}";
},
{
name = hee;
position = "{1574, 0}";
},
{
name = hi;
position = "{1678, -306}";
},
{
name = ho;
position = "{288, 5}";
},
{
name = hu;
position = "{1771, 701}";
},
{
name = hwa;
position = "{1626, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"754 -20 OFFCURVE",
"909 80 OFFCURVE",
"973 236 CURVE",
"1009 55 OFFCURVE",
"1178 -20 OFFCURVE",
"1359 -20 CURVE SMOOTH",
"1578 -20 OFFCURVE",
"1747 162 OFFCURVE",
"1747 399 CURVE SMOOTH",
"1747 1082 LINE",
"1692 1082 LINE",
"1692 398 LINE SMOOTH",
"1692 207 OFFCURVE",
"1539 33 OFFCURVE",
"1362 33 CURVE SMOOTH",
"1157 33 OFFCURVE",
"1016 138 OFFCURVE",
"1016 355 CURVE SMOOTH",
"1016 1082 LINE",
"962 1082 LINE",
"962 362 LINE SMOOTH",
"962 259 OFFCURVE",
"836 37 OFFCURVE",
"578 33 CURVE SMOOTH",
"374 30 OFFCURVE",
"282 143 OFFCURVE",
"282 380 CURVE SMOOTH",
"282 1082 LINE",
"228 1082 LINE",
"228 376 LINE SMOOTH",
"228 112 OFFCURVE",
"342 -20 OFFCURVE",
"575 -20 CURVE SMOOTH"
);
}
);
width = 1976;
},
{
anchors = (
{
name = haa;
position = "{1268, -40}";
},
{
name = he.acute.bottom;
position = "{669, -94}";
},
{
name = hee;
position = "{1374, 0}";
},
{
name = hi;
position = "{1291, -301}";
},
{
name = ho;
position = "{129, -25}";
},
{
name = hu;
position = "{1625, 701}";
},
{
name = hwa;
position = "{1286, -30}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"522 -20 OFFCURVE",
"650 50 OFFCURVE",
"740 154 CURVE",
"815 38 OFFCURVE",
"872 -25 OFFCURVE",
"1109 -20 CURVE SMOOTH",
"1286 -16 OFFCURVE",
"1527 114 OFFCURVE",
"1569 373 CURVE SMOOTH",
"1684 1082 LINE",
"1499 1082 LINE",
"1384 373 LINE SMOOTH",
"1354 189 OFFCURVE",
"1230 137 OFFCURVE",
"1113 137 CURVE SMOOTH",
"959 137 OFFCURVE",
"896 216 OFFCURVE",
"924 373 CURVE SMOOTH",
"1049 1082 LINE",
"863 1082 LINE",
"736 364 LINE SMOOTH",
"711 224 OFFCURVE",
"583 137 OFFCURVE",
"446 137 CURVE SMOOTH",
"279 137 OFFCURVE",
"229 213 OFFCURVE",
"256 368 CURVE SMOOTH",
"382 1082 LINE",
"197 1082 LINE",
"69 357 LINE SMOOTH",
"25 106 OFFCURVE",
"128 -20 OFFCURVE",
"365 -20 CURVE SMOOTH"
);
}
);
width = 1895;
},
{
anchors = (
{
name = haa;
position = "{1397, 0}";
},
{
name = he.acute.bottom;
position = "{678, -94}";
},
{
name = hee;
position = "{1383, 0}";
},
{
name = hi;
position = "{1433, -306}";
},
{
name = ho;
position = "{98, 5}";
},
{
name = hu;
position = "{1704, 701}";
},
{
name = hwa;
position = "{1375, -70}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"560 -20 OFFCURVE",
"732 80 OFFCURVE",
"824 236 CURVE",
"828 55 OFFCURVE",
"984 -20 OFFCURVE",
"1165 -20 CURVE SMOOTH",
"1384 -20 OFFCURVE",
"1585 162 OFFCURVE",
"1627 399 CURVE SMOOTH",
"1747 1082 LINE",
"1692 1082 LINE",
"1571 398 LINE SMOOTH",
"1537 207 OFFCURVE",
"1354 33 OFFCURVE",
"1177 33 CURVE SMOOTH",
"972 33 OFFCURVE",
"850 138 OFFCURVE",
"888 355 CURVE SMOOTH",
"1016 1082 LINE",
"962 1082 LINE",
"835 362 LINE SMOOTH",
"817 259 OFFCURVE",
"652 37 OFFCURVE",
"393 33 CURVE SMOOTH",
"189 30 OFFCURVE",
"116 143 OFFCURVE",
"158 380 CURVE SMOOTH",
"282 1082 LINE",
"228 1082 LINE",
"104 376 LINE SMOOTH",
"58 112 OFFCURVE",
"148 -20 OFFCURVE",
"381 -20 CURVE SMOOTH"
);
}
);
width = 1976;
}
);
userData = {
lsb = 43;
rsb = 48;
};
},
{
glyphname = tsa.base;
lastChange = "2020-12-16 04:17:07 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{823, -10}";
},
{
name = hat;
position = "{558, 1353}";
},
{
name = he;
position = "{1219, 788}";
},
{
name = hee;
position = "{804, 50}";
},
{
name = hi;
position = "{877, 120}";
},
{
name = ho;
position = "{230, -10}";
},
{
name = hu;
position = "{780, 459}";
},
{
name = hwa;
position = "{825, 0}";
},
{
name = neck;
position = "{500, 1085}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"397 0 LINE",
"397 289 LINE SMOOTH",
"397 385 OFFCURVE",
"448 448 OFFCURVE",
"526 448 CURVE SMOOTH",
"623 448 OFFCURVE",
"661 384 OFFCURVE",
"661 287 CURVE SMOOTH",
"661 0 LINE",
"947 0 LINE",
"947 300 LINE SMOOTH",
"947 416 OFFCURVE",
"895 494 OFFCURVE",
"780 551 CURVE",
"889 608 OFFCURVE",
"939 683 OFFCURVE",
"939 788 CURVE SMOOTH",
"939 965 OFFCURVE",
"772 1105 OFFCURVE",
"539 1105 CURVE SMOOTH",
"334 1105 OFFCURVE",
"126 990 OFFCURVE",
"126 785 CURVE SMOOTH",
"126 676 OFFCURVE",
"181 605 OFFCURVE",
"280 551 CURVE",
"169 494 OFFCURVE",
"116 417 OFFCURVE",
"116 303 CURVE SMOOTH",
"116 0 LINE"
);
},
{
closed = 1;
nodes = (
"426 670 OFFCURVE",
"365 716 OFFCURVE",
"365 777 CURVE SMOOTH",
"365 853 OFFCURVE",
"441 912 OFFCURVE",
"528 912 CURVE SMOOTH",
"624 912 OFFCURVE",
"700 851 OFFCURVE",
"700 778 CURVE SMOOTH",
"700 720 OFFCURVE",
"651 670 OFFCURVE",
"528 670 CURVE SMOOTH"
);
}
);
width = 1082;
},
{
anchors = (
{
name = haa;
position = "{924, -29}";
},
{
name = hat;
position = "{565, 1353}";
},
{
name = he;
position = "{1198, 788}";
},
{
name = hee;
position = "{851, 50}";
},
{
name = hi;
position = "{936, 110}";
},
{
name = ho;
position = "{238, -9}";
},
{
name = hu;
position = "{941, 529}";
},
{
name = hwa;
position = "{896, -30}";
},
{
name = neck;
position = "{578, 1115}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"340 0 LINE",
"340 290 LINE SMOOTH",
"340 385 OFFCURVE",
"395 508 OFFCURVE",
"565 508 CURVE SMOOTH",
"741 508 OFFCURVE",
"801 384 OFFCURVE",
"801 287 CURVE SMOOTH",
"801 0 LINE",
"986 0 LINE",
"986 300 LINE SMOOTH",
"986 428 OFFCURVE",
"934 494 OFFCURVE",
"819 551 CURVE",
"928 608 OFFCURVE",
"978 683 OFFCURVE",
"978 788 CURVE SMOOTH",
"978 965 OFFCURVE",
"811 1105 OFFCURVE",
"578 1105 CURVE SMOOTH",
"373 1105 OFFCURVE",
"165 990 OFFCURVE",
"165 785 CURVE SMOOTH",
"165 676 OFFCURVE",
"220 605 OFFCURVE",
"319 551 CURVE",
"208 494 OFFCURVE",
"155 417 OFFCURVE",
"155 303 CURVE SMOOTH",
"155 0 LINE"
);
},
{
closed = 1;
nodes = (
"431 632 OFFCURVE",
"351 693 OFFCURVE",
"351 772 CURVE SMOOTH",
"351 872 OFFCURVE",
"451 950 OFFCURVE",
"565 950 CURVE SMOOTH",
"692 950 OFFCURVE",
"792 870 OFFCURVE",
"792 774 CURVE SMOOTH",
"792 698 OFFCURVE",
"727 632 OFFCURVE",
"565 632 CURVE SMOOTH"
);
}
);
width = 1146;
},
{
anchors = (
{
name = haa;
position = "{894, -16}";
},
{
name = hat;
position = "{588, 1353}";
},
{
name = he;
position = "{1049, 788}";
},
{
name = hee;
position = "{794, 70}";
},
{
name = hi;
position = "{937, 50}";
},
{
name = ho;
position = "{199, -9}";
},
{
name = hu;
position = "{880, 459}";
},
{
name = hwa;
position = "{890, 6}";
},
{
name = neck;
position = "{531, 1105}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"223 0 LINE",
"223 285 LINE SMOOTH",
"223 403 OFFCURVE",
"335 530 OFFCURVE",
"544 530 CURVE SMOOTH",
"752 530 OFFCURVE",
"865 403 OFFCURVE",
"865 285 CURVE SMOOTH",
"865 0 LINE",
"919 0 LINE",
"919 292 LINE SMOOTH",
"919 447 OFFCURVE",
"773 515 OFFCURVE",
"645 554 CURVE",
"847 610 OFFCURVE",
"918 690 OFFCURVE",
"918 829 CURVE SMOOTH",
"918 988 OFFCURVE",
"771 1102 OFFCURVE",
"556 1102 CURVE SMOOTH",
"316 1102 OFFCURVE",
"169 988 OFFCURVE",
"169 829 CURVE SMOOTH",
"169 690 OFFCURVE",
"240 610 OFFCURVE",
"442 554 CURVE",
"316 516 OFFCURVE",
"168 452 OFFCURVE",
"168 292 CURVE SMOOTH",
"168 0 LINE"
);
},
{
closed = 1;
nodes = (
"376 581 OFFCURVE",
"223 672 OFFCURVE",
"223 831 CURVE SMOOTH",
"223 955 OFFCURVE",
"342 1048 OFFCURVE",
"556 1048 CURVE SMOOTH",
"745 1048 OFFCURVE",
"864 955 OFFCURVE",
"864 831 CURVE SMOOTH",
"864 672 OFFCURVE",
"711 581 OFFCURVE",
"544 581 CURVE SMOOTH"
);
}
);
width = 1105;
},
{
anchors = (
{
name = haa;
position = "{729, -29}";
},
{
name = hat;
position = "{614, 1353}";
},
{
name = he;
position = "{1147, 788}";
},
{
name = hee;
position = "{670, 50}";
},
{
name = hi;
position = "{766, 110}";
},
{
name = ho;
position = "{48, -9}";
},
{
name = hu;
position = "{852, 519}";
},
{
name = hwa;
position = "{701, -30}";
},
{
name = neck;
position = "{583, 1115}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"150 0 LINE",
"201 290 LINE SMOOTH",
"218 385 OFFCURVE",
"295 508 OFFCURVE",
"465 508 CURVE SMOOTH",
"641 508 OFFCURVE",
"679 384 OFFCURVE",
"662 287 CURVE SMOOTH",
"611 0 LINE",
"796 0 LINE",
"849 300 LINE SMOOTH",
"870 416 OFFCURVE",
"831 494 OFFCURVE",
"726 551 CURVE",
"845 608 OFFCURVE",
"909 683 OFFCURVE",
"927 788 CURVE SMOOTH",
"958 965 OFFCURVE",
"816 1105 OFFCURVE",
"583 1105 CURVE SMOOTH",
"378 1105 OFFCURVE",
"150 990 OFFCURVE",
"114 785 CURVE SMOOTH",
"94 676 OFFCURVE",
"137 605 OFFCURVE",
"226 551 CURVE",
"105 494 OFFCURVE",
"39 417 OFFCURVE",
"19 303 CURVE SMOOTH",
"-35 0 LINE"
);
},
{
closed = 1;
nodes = (
"353 632 OFFCURVE",
"283 693 OFFCURVE",
"297 772 CURVE SMOOTH",
"315 872 OFFCURVE",
"429 950 OFFCURVE",
"543 950 CURVE SMOOTH",
"670 950 OFFCURVE",
"756 870 OFFCURVE",
"739 774 CURVE SMOOTH",
"725 698 OFFCURVE",
"649 632 OFFCURVE",
"487 632 CURVE SMOOTH"
);
}
);
width = 1148;
},
{
anchors = (
{
name = haa;
position = "{703, -6}";
},
{
name = hat;
position = "{636, 1353}";
},
{
name = he;
position = "{988, 788}";
},
{
name = hee;
position = "{617, 70}";
},
{
name = hi;
position = "{756, 50}";
},
{
name = ho;
position = "{7, -13}";
},
{
name = hu;
position = "{771, 459}";
},
{
name = hwa;
position = "{701, 6}";
},
{
name = neck;
position = "{536, 1105}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"33 0 LINE",
"83 285 LINE SMOOTH",
"104 403 OFFCURVE",
"239 530 OFFCURVE",
"447 530 CURVE SMOOTH",
"656 530 OFFCURVE",
"746 403 OFFCURVE",
"725 285 CURVE SMOOTH",
"675 0 LINE",
"729 0 LINE",
"781 292 LINE SMOOTH",
"809 447 OFFCURVE",
"674 515 OFFCURVE",
"553 554 CURVE",
"765 610 OFFCURVE",
"850 690 OFFCURVE",
"874 829 CURVE SMOOTH",
"902 988 OFFCURVE",
"776 1102 OFFCURVE",
"561 1102 CURVE SMOOTH",
"321 1102 OFFCURVE",
"153 988 OFFCURVE",
"125 829 CURVE SMOOTH",
"101 690 OFFCURVE",
"158 610 OFFCURVE",
"350 554 CURVE",
"217 516 OFFCURVE",
"58 452 OFFCURVE",
"30 292 CURVE SMOOTH",
"-22 0 LINE"
);
},
{
closed = 1;
nodes = (
"289 581 OFFCURVE",
"152 672 OFFCURVE",
"180 831 CURVE SMOOTH",
"202 955 OFFCURVE",
"337 1048 OFFCURVE",
"551 1048 CURVE SMOOTH",
"740 1048 OFFCURVE",
"843 955 OFFCURVE",
"821 831 CURVE SMOOTH",
"793 672 OFFCURVE",
"624 581 OFFCURVE",
"456 581 CURVE SMOOTH"
);
}
);
width = 1106;
}
);
userData = {
lsb = 41;
rsb = 45;
};
},
{
glyphname = wa.base;
lastChange = "2020-12-16 02:36:42 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{964, -40}";
},
{
name = haa.acute;
position = "{904, -110}";
},
{
name = hat;
position = "{1039, 1363}";
},
{
name = he.acute.top;
position = "{939, 1232}";
},
{
name = hee;
position = "{1000, 0}";
},
{
name = hi;
position = "{1098, -325}";
},
{
name = ho.ring;
position = "{1204, 1300}";
},
{
name = hu;
position = "{1682, 743}";
},
{
name = hwa;
position = "{921, -40}";
},
{
name = neck;
position = "{946, 1092}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"605 -20 OFFCURVE",
"753 -16 OFFCURVE",
"846 0 CURVE",
"1034 0 LINE",
"1127 -16 OFFCURVE",
"1275 -20 OFFCURVE",
"1329 -20 CURVE SMOOTH",
"1580 -20 OFFCURVE",
"1754 205 OFFCURVE",
"1754 536 CURVE SMOOTH",
"1754 882 OFFCURVE",
"1582 1102 OFFCURVE",
"1327 1102 CURVE SMOOTH",
"1274 1102 OFFCURVE",
"1106 1097 OFFCURVE",
"1063 1082 CURVE",
"817 1082 LINE",
"774 1097 OFFCURVE",
"606 1102 OFFCURVE",
"553 1102 CURVE SMOOTH",
"298 1102 OFFCURVE",
"126 882 OFFCURVE",
"126 536 CURVE SMOOTH",
"126 205 OFFCURVE",
"300 -20 OFFCURVE",
"551 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"521 137 OFFCURVE",
"414 284 OFFCURVE",
"414 529 CURVE SMOOTH",
"414 804 OFFCURVE",
"521 945 OFFCURVE",
"702 945 CURVE SMOOTH",
"737 945 OFFCURVE",
"790 940 OFFCURVE",
"820 931 CURVE",
"820 163 LINE",
"787 147 OFFCURVE",
"733 137 OFFCURVE",
"700 137 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1147 137 OFFCURVE",
"1093 147 OFFCURVE",
"1060 163 CURVE",
"1060 931 LINE",
"1090 940 OFFCURVE",
"1143 945 OFFCURVE",
"1178 945 CURVE SMOOTH",
"1359 945 OFFCURVE",
"1466 804 OFFCURVE",
"1466 529 CURVE SMOOTH",
"1466 284 OFFCURVE",
"1359 137 OFFCURVE",
"1180 137 CURVE SMOOTH"
);
}
);
width = 1882;
},
{
anchors = (
{
name = haa;
position = "{862, -20}";
},
{
name = haa.acute;
position = "{749, -130}";
},
{
name = hat;
position = "{888, 1363}";
},
{
name = he.acute.top;
position = "{825, 1232}";
},
{
name = hee;
position = "{880, 0}";
},
{
name = hi;
position = "{943, -269}";
},
{
name = ho.ring;
position = "{1066, 1330}";
},
{
name = hu;
position = "{1475, 743}";
},
{
name = hwa;
position = "{811, 0}";
},
{
name = neck;
position = "{833, 1092}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"634 -20 OFFCURVE",
"682 -16 OFFCURVE",
"726 0 CURVE",
"941 0 LINE",
"981 -13 OFFCURVE",
"1025 -20 OFFCURVE",
"1075 -20 CURVE SMOOTH",
"1326 -20 OFFCURVE",
"1500 205 OFFCURVE",
"1500 550 CURVE SMOOTH",
"1500 882 OFFCURVE",
"1328 1102 OFFCURVE",
"1073 1102 CURVE SMOOTH",
"1023 1102 OFFCURVE",
"978 1095 OFFCURVE",
"937 1082 CURVE",
"726 1082 LINE",
"683 1097 OFFCURVE",
"635 1102 OFFCURVE",
"582 1102 CURVE SMOOTH",
"327 1102 OFFCURVE",
"155 882 OFFCURVE",
"155 536 CURVE SMOOTH",
"155 205 OFFCURVE",
"329 -20 OFFCURVE",
"580 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"447 137 OFFCURVE",
"340 284 OFFCURVE",
"340 529 CURVE SMOOTH",
"340 804 OFFCURVE",
"447 945 OFFCURVE",
"628 945 CURVE SMOOTH",
"663 945 OFFCURVE",
"716 940 OFFCURVE",
"746 931 CURVE",
"746 163 LINE",
"713 147 OFFCURVE",
"659 137 OFFCURVE",
"626 137 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"971 135 OFFCURVE",
"935 151 OFFCURVE",
"919 156 CURVE",
"919 942 LINE",
"957 944 OFFCURVE",
"993 942 OFFCURVE",
"1026 936 CURVE SMOOTH",
"1209 904 OFFCURVE",
"1315 762 OFFCURVE",
"1315 529 CURVE SMOOTH",
"1315 284 OFFCURVE",
"1166 158 OFFCURVE",
"988 137 CURVE SMOOTH"
);
}
);
width = 1655;
},
{
anchors = (
{
name = haa;
position = "{783, 0}";
},
{
name = haa.acute;
position = "{750, -90}";
},
{
name = hat;
position = "{821, 1363}";
},
{
name = he.acute.top;
position = "{763, 1232}";
},
{
name = hee;
position = "{829, 0}";
},
{
name = hi;
position = "{876, -289}";
},
{
name = ho.ring;
position = "{942, 1340}";
},
{
name = hu;
position = "{1386, 743}";
},
{
name = hwa;
position = "{764, -40}";
},
{
name = neck;
position = "{735, 1102}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"630 -20 OFFCURVE",
"667 -8 OFFCURVE",
"756 37 CURVE",
"786 38 LINE",
"829 7 OFFCURVE",
"862 -20 OFFCURVE",
"941 -20 CURVE SMOOTH",
"1192 -20 OFFCURVE",
"1347 191 OFFCURVE",
"1347 538 CURVE SMOOTH",
"1347 897 OFFCURVE",
"1196 1102 OFFCURVE",
"939 1102 CURVE SMOOTH",
"889 1102 OFFCURVE",
"843 1095 OFFCURVE",
"802 1082 CURVE",
"735 1081 LINE",
"689 1096 OFFCURVE",
"641 1102 OFFCURVE",
"590 1102 CURVE SMOOTH",
"337 1102 OFFCURVE",
"182 897 OFFCURVE",
"182 552 CURVE SMOOTH",
"182 191 OFFCURVE",
"334 -20 OFFCURVE",
"588 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"364 34 OFFCURVE",
"238 224 OFFCURVE",
"238 531 CURVE SMOOTH",
"238 871 OFFCURVE",
"368 1048 OFFCURVE",
"589 1048 CURVE SMOOTH",
"643 1048 OFFCURVE",
"692 1040 OFFCURVE",
"735 1024 CURVE",
"735 70 LINE",
"682 46 OFFCURVE",
"632 34 OFFCURVE",
"587 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"900 34 OFFCURVE",
"859 40 OFFCURVE",
"805 65 CURVE",
"805 1028 LINE",
"840 1039 OFFCURVE",
"874 1045 OFFCURVE",
"905 1048 CURVE SMOOTH",
"1162 1071 OFFCURVE",
"1291 842 OFFCURVE",
"1291 531 CURVE SMOOTH",
"1291 224 OFFCURVE",
"1173 34 OFFCURVE",
"942 34 CURVE SMOOTH"
);
}
);
width = 1529;
},
{
anchors = (
{
name = haa;
position = "{670, -20}";
},
{
name = haa.acute;
position = "{535, -130}";
},
{
name = hat;
position = "{928, 1363}";
},
{
name = he.acute.top;
position = "{852, 1232}";
},
{
name = hee;
position = "{689, 0}";
},
{
name = hi;
position = "{690, -309}";
},
{
name = ho.ring;
position = "{1168, 1330}";
},
{
name = hu;
position = "{1415, 743}";
},
{
name = hwa;
position = "{620, -40}";
},
{
name = neck;
position = "{833, 1092}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"440 -20 OFFCURVE",
"488 -16 OFFCURVE",
"535 0 CURVE",
"750 0 LINE",
"788 -13 OFFCURVE",
"831 -20 OFFCURVE",
"881 -20 CURVE SMOOTH",
"1132 -20 OFFCURVE",
"1345 205 OFFCURVE",
"1406 550 CURVE SMOOTH",
"1465 882 OFFCURVE",
"1332 1102 OFFCURVE",
"1077 1102 CURVE SMOOTH",
"1027 1102 OFFCURVE",
"980 1095 OFFCURVE",
"937 1082 CURVE",
"726 1082 LINE",
"686 1097 OFFCURVE",
"639 1102 OFFCURVE",
"586 1102 CURVE SMOOTH",
"331 1102 OFFCURVE",
"120 882 OFFCURVE",
"59 536 CURVE SMOOTH",
"0 205 OFFCURVE",
"135 -20 OFFCURVE",
"386 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 137 OFFCURVE",
"199 284 OFFCURVE",
"242 529 CURVE SMOOTH",
"291 804 OFFCURVE",
"423 945 OFFCURVE",
"604 945 CURVE SMOOTH",
"639 945 OFFCURVE",
"691 940 OFFCURVE",
"719 931 CURVE",
"584 163 LINE",
"548 147 OFFCURVE",
"492 137 OFFCURVE",
"459 137 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"804 135 OFFCURVE",
"771 151 OFFCURVE",
"756 156 CURVE",
"894 942 LINE",
"933 944 OFFCURVE",
"968 942 OFFCURVE",
"1000 936 CURVE SMOOTH",
"1178 904 OFFCURVE",
"1259 762 OFFCURVE",
"1217 529 CURVE SMOOTH",
"1174 284 OFFCURVE",
"1003 158 OFFCURVE",
"821 137 CURVE SMOOTH"
);
}
);
width = 1655;
},
{
anchors = (
{
name = haa;
position = "{592, 0}";
},
{
name = haa.acute;
position = "{543, -90}";
},
{
name = hat;
position = "{891, 1363}";
},
{
name = he.acute.top;
position = "{790, 1232}";
},
{
name = hee;
position = "{638, 0}";
},
{
name = hi;
position = "{634, -289}";
},
{
name = ho.ring;
position = "{993, 1340}";
},
{
name = hu;
position = "{1327, 743}";
},
{
name = hwa;
position = "{573, 0}";
},
{
name = neck;
position = "{739, 1102}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"436 -20 OFFCURVE",
"475 -8 OFFCURVE",
"572 37 CURVE",
"602 38 LINE",
"639 7 OFFCURVE",
"668 -20 OFFCURVE",
"747 -20 CURVE SMOOTH",
"998 -20 OFFCURVE",
"1190 191 OFFCURVE",
"1251 538 CURVE SMOOTH",
"1314 897 OFFCURVE",
"1200 1102 OFFCURVE",
"943 1102 CURVE SMOOTH",
"893 1102 OFFCURVE",
"845 1095 OFFCURVE",
"802 1082 CURVE",
"735 1081 LINE",
"691 1096 OFFCURVE",
"645 1102 OFFCURVE",
"594 1102 CURVE SMOOTH",
"341 1102 OFFCURVE",
"149 897 OFFCURVE",
"89 552 CURVE SMOOTH",
"25 191 OFFCURVE",
"140 -20 OFFCURVE",
"394 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"179 34 OFFCURVE",
"87 224 OFFCURVE",
"141 531 CURVE SMOOTH",
"201 871 OFFCURVE",
"362 1048 OFFCURVE",
"583 1048 CURVE SMOOTH",
"637 1048 OFFCURVE",
"685 1040 OFFCURVE",
"725 1024 CURVE",
"557 70 LINE",
"499 46 OFFCURVE",
"447 34 OFFCURVE",
"402 34 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"715 34 OFFCURVE",
"675 40 OFFCURVE",
"626 65 CURVE",
"795 1028 LINE",
"832 1039 OFFCURVE",
"867 1045 OFFCURVE",
"899 1048 CURVE SMOOTH",
"1160 1071 OFFCURVE",
"1249 842 OFFCURVE",
"1194 531 CURVE SMOOTH",
"1140 224 OFFCURVE",
"988 34 OFFCURVE",
"757 34 CURVE SMOOTH"
);
}
);
width = 1529;
}
);
userData = {
lsb = 91;
rsb = 92;
};
},
{
glyphname = ya.base;
lastChange = "2020-12-17 00:06:53 +0000";
layers = (
{
anchors = (
{
name = da;
position = "{253, 234}";
},
{
name = di;
position = "{622, -199}";
},
{
name = du;
position = "{726, 234}";
},
{
name = haa;
position = "{807, -2}";
},
{
name = haa.acute;
position = "{472, -54}";
},
{
name = hat;
position = "{535, 1341}";
},
{
name = he;
position = "{1279, 756}";
},
{
name = he.left.outer;
position = "{353, 1086}";
},
{
name = hee;
position = "{778, 44}";
},
{
name = hha;
position = "{936, 11}";
},
{
name = hi;
position = "{754, -269}";
},
{
name = ho;
position = "{235, -10}";
},
{
name = hu;
position = "{763, 289}";
},
{
name = hwa;
position = "{809, 0}";
},
{
name = neck;
position = "{570, 1112}";
},
{
name = ye;
position = "{433, 13}";
},
{
name = yee;
position = "{530, 241}";
},
{
name = yi;
position = "{240.483, 381}";
},
{
name = yu;
position = "{330, 285}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"579 0 LINE",
"439 456 LINE",
"922 456 LINE SMOOTH",
"973 456 OFFCURVE",
"1042 519 OFFCURVE",
"1048 565 CURVE SMOOTH",
"1092 907 OFFCURVE",
"914 1102 OFFCURVE",
"633 1102 CURVE SMOOTH",
"461 1102 OFFCURVE",
"304 1001 OFFCURVE",
"222 833 CURVE SMOOTH",
"181 748 OFFCURVE",
"142 600 OFFCURVE",
"170 494 CURVE SMOOTH",
"300 0 LINE"
);
},
{
closed = 1;
nodes = (
"450 836 OFFCURVE",
"503 888 OFFCURVE",
"673 886 CURVE SMOOTH",
"751 885 OFFCURVE",
"841 832 OFFCURVE",
"822 630 CURVE",
"439 630 LINE"
);
}
);
userData = {
_smart.da = 1;
};
width = 1135;
},
{
anchors = (
{
name = da;
position = "{229, 154}";
},
{
name = di;
position = "{654, -159}";
},
{
name = du;
position = "{697, 234}";
},
{
name = haa;
position = "{838, -10}";
},
{
name = haa.acute;
position = "{396, -45}";
},
{
name = hat;
position = "{515, 1341}";
},
{
name = he;
position = "{1219, 756}";
},
{
name = he.left.outer;
position = "{244, 970}";
},
{
name = hee;
position = "{836, 53}";
},
{
name = hha;
position = "{933, 11}";
},
{
name = hi;
position = "{732, -290}";
},
{
name = ho;
position = "{174, -10}";
},
{
name = hu;
position = "{727, 299}";
},
{
name = hwa;
position = "{811, 0}";
},
{
name = neck;
position = "{552, 1112}";
},
{
name = ye;
position = "{377, 64}";
},
{
name = yee;
position = "{389, 249}";
},
{
name = yi;
position = "{178, 381}";
},
{
name = yu;
position = "{178, 335}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"435 0 LINE",
"315 488 LINE",
"889 488 LINE SMOOTH",
"940 488 OFFCURVE",
"979 519 OFFCURVE",
"985 565 CURVE SMOOTH",
"1029 907 OFFCURVE",
"881 1102 OFFCURVE",
"600 1102 CURVE SMOOTH",
"428 1102 OFFCURVE",
"271 1001 OFFCURVE",
"189 833 CURVE SMOOTH",
"148 748 OFFCURVE",
"101 602 OFFCURVE",
"127 495 CURVE SMOOTH",
"247 0 LINE"
);
},
{
closed = 1;
nodes = (
"342 836 OFFCURVE",
"451 950 OFFCURVE",
"600 950 CURVE SMOOTH",
"775 950 OFFCURVE",
"838 832 OFFCURVE",
"819 630 CURVE",
"318 630 LINE"
);
}
);
userData = {
_smart.da = 1;
};
width = 1143;
},
{
anchors = (
{
name = da;
position = "{215, 54}";
},
{
name = di;
position = "{891, -69}";
},
{
name = du;
position = "{793, 164}";
},
{
name = haa;
position = "{876, -10}";
},
{
name = haa.acute;
position = "{481, -65}";
},
{
name = hat;
position = "{660, 1341}";
},
{
name = he;
position = "{1182, 756}";
},
{
name = he.left.outer;
position = "{314, 970}";
},
{
name = hee;
position = "{934, 12}";
},
{
name = hha;
position = "{1029, 11}";
},
{
name = hi;
position = "{925, -300}";
},
{
name = ho;
position = "{180, -11}";
},
{
name = hu;
position = "{881, 159}";
},
{
name = hwa;
position = "{873, 0}";
},
{
name = neck;
position = "{693, 1112}";
},
{
name = ye;
position = "{509, 24}";
},
{
name = yee;
position = "{410, 280}";
},
{
name = yi;
position = "{239.848, 381}";
},
{
name = yu;
position = "{410, 335}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"419 0 LINE",
"279 577 LINE",
"1017 577 LINE SMOOTH",
"1056 577 OFFCURVE",
"1052 595 OFFCURVE",
"1052 634 CURVE SMOOTH",
"1052 914 OFFCURVE",
"922 1102 OFFCURVE",
"681 1102 CURVE SMOOTH",
"516 1102 OFFCURVE",
"367 1004 OFFCURVE",
"287 837 CURVE SMOOTH",
"254 768 OFFCURVE",
"217 663 OFFCURVE",
"235 582 CURVE SMOOTH",
"365 0 LINE"
);
},
{
closed = 1;
nodes = (
"309 874 OFFCURVE",
"470 1048 OFFCURVE",
"681 1048 CURVE SMOOTH",
"906 1048 OFFCURVE",
"998 856 OFFCURVE",
"998 631 CURVE",
"284 631 LINE"
);
}
);
userData = {
_smart.da = 1;
};
width = 1132;
},
{
anchors = (
{
name = da;
position = "{-112, 154}";
},
{
name = di;
position = "{593, -139}";
},
{
name = du;
position = "{601, 234}";
},
{
name = haa;
position = "{621, -10}";
},
{
name = haa.acute;
position = "{317, -66}";
},
{
name = hat;
position = "{686, 1361}";
},
{
name = he;
position = "{1216, 756}";
},
{
name = he.left.outer;
position = "{433, 1080}";
},
{
name = hee;
position = "{759, 23}";
},
{
name = hha;
position = "{689, 11}";
},
{
name = hi;
position = "{500, -270}";
},
{
name = ho;
position = "{-15, -10}";
},
{
name = hu;
position = "{545, 309}";
},
{
name = hwa;
position = "{585, -20}";
},
{
name = neck;
position = "{682, 1112}";
},
{
name = ye;
position = "{62, 74}";
},
{
name = yee;
position = "{323, 280}";
},
{
name = yi;
position = "{239.636, 381}";
},
{
name = yu;
position = "{270, 305}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"333 0 LINE",
"269 488 LINE",
"843 488 LINE SMOOTH",
"894 488 OFFCURVE",
"938 519 OFFCURVE",
"952 565 CURVE SMOOTH",
"1057 907 OFFCURVE",
"943 1102 OFFCURVE",
"662 1102 CURVE SMOOTH",
"490 1102 OFFCURVE",
"315 1001 OFFCURVE",
"204 833 CURVE SMOOTH",
"148 748 OFFCURVE",
"90 619 OFFCURVE",
"100 512 CURVE SMOOTH",
"148 0 LINE"
);
},
{
closed = 1;
nodes = (
"357 836 OFFCURVE",
"486 950 OFFCURVE",
"635 950 CURVE SMOOTH",
"810 950 OFFCURVE",
"853 832 OFFCURVE",
"798 630 CURVE",
"297 630 LINE"
);
}
);
userData = {
_smart.da = 1;
};
width = 1131;
},
{
anchors = (
{
name = da;
position = "{-176, 44}";
},
{
name = di;
position = "{487, -109}";
},
{
name = du;
position = "{489, 114}";
},
{
name = haa;
position = "{622, -30}";
},
{
name = haa.acute;
position = "{281, -75}";
},
{
name = hat;
position = "{606, 1341}";
},
{
name = he;
position = "{1155, 756}";
},
{
name = he.left.outer;
position = "{428, 1070}";
},
{
name = hee;
position = "{701, 1}";
},
{
name = hha;
position = "{741, 11}";
},
{
name = hi;
position = "{605, -309}";
},
{
name = ho;
position = "{-50, -20}";
},
{
name = hu;
position = "{618, 159}";
},
{
name = hwa;
position = "{622, -50}";
},
{
name = neck;
position = "{658, 1112}";
},
{
name = ye;
position = "{119, 57}";
},
{
name = yee;
position = "{281, 321}";
},
{
name = yi;
position = "{239, 381}";
},
{
name = yu;
position = "{239, 335}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"224 0 LINE",
"188 577 LINE",
"939 577 LINE SMOOTH",
"950 577 OFFCURVE",
"960 586 OFFCURVE",
"969 634 CURVE SMOOTH",
"1018 914 OFFCURVE",
"921 1102 OFFCURVE",
"680 1102 CURVE SMOOTH",
"515 1102 OFFCURVE",
"349 1004 OFFCURVE",
"239 837 CURVE SMOOTH",
"194 768 OFFCURVE",
"141 673 OFFCURVE",
"138 572 CURVE",
"170 0 LINE"
);
},
{
closed = 1;
nodes = (
"268 874 OFFCURVE",
"460 1048 OFFCURVE",
"671 1048 CURVE SMOOTH",
"896 1048 OFFCURVE",
"954 856 OFFCURVE",
"914 631 CURVE",
"200 631 LINE"
);
}
);
userData = {
_smart.da = 1;
};
width = 1128;
}
);
userData = {
lsb = 93;
rsb = 74;
};
},
{
glyphname = za.base;
lastChange = "2020-12-16 04:16:00 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{976, -6}";
},
{
name = he.acute.top;
position = "{305, 1162}";
},
{
name = hee;
position = "{938, 64}";
},
{
name = hi;
position = "{1101, 127}";
},
{
name = ho;
position = "{278, -1}";
},
{
name = hu;
position = "{1091, 681}";
},
{
name = hwa;
position = "{968, 0}";
},
{
name = zha;
position = "{636, 710}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"454 0 LINE",
"454 471 LINE",
"812 471 LINE",
"812 0 LINE",
"1100 0 LINE",
"1100 1082 LINE",
"812 1082 LINE",
"812 688 LINE",
"454 688 LINE",
"454 1082 LINE",
"165 1082 LINE",
"165 0 LINE"
);
}
);
width = 1268;
},
{
anchors = (
{
name = haa;
position = "{940, -24}";
},
{
name = he.acute.top;
position = "{290, 1172}";
},
{
name = hee;
position = "{860, 68}";
},
{
name = hi;
position = "{976, 117}";
},
{
name = ho;
position = "{281, -9}";
},
{
name = hu;
position = "{1026, 681}";
},
{
name = hwa;
position = "{915, -30}";
},
{
name = zha;
position = "{591, 980}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"385 0 LINE",
"385 521 LINE",
"820 521 LINE",
"820 0 LINE",
"1005 0 LINE",
"1005 1082 LINE",
"820 1082 LINE",
"820 672 LINE",
"385 672 LINE",
"385 1082 LINE",
"200 1082 LINE",
"200 0 LINE"
);
}
);
width = 1205;
},
{
anchors = (
{
name = haa;
position = "{992, -14}";
},
{
name = he.acute.top;
position = "{299, 1162}";
},
{
name = hee;
position = "{855, 124}";
},
{
name = hi;
position = "{1048, 37}";
},
{
name = ho;
position = "{255, -11}";
},
{
name = hu;
position = "{1108, 681}";
},
{
name = hwa;
position = "{995, 0}";
},
{
name = zha;
position = "{613, 970}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"286 611 LINE",
"962 611 LINE",
"962 0 LINE",
"1016 0 LINE",
"1016 1082 LINE",
"962 1082 LINE",
"962 665 LINE",
"286 665 LINE",
"286 1082 LINE",
"232 1082 LINE",
"232 0 LINE"
);
}
);
width = 1243;
},
{
anchors = (
{
name = haa;
position = "{745, -24}";
},
{
name = he.acute.top;
position = "{300, 1182}";
},
{
name = hee;
position = "{681, 68}";
},
{
name = hi;
position = "{837, 117}";
},
{
name = ho;
position = "{89, -9}";
},
{
name = hu;
position = "{955, 681}";
},
{
name = hwa;
position = "{719, -30}";
},
{
name = zha;
position = "{573, 980}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"194 0 LINE",
"286 521 LINE",
"721 521 LINE",
"629 0 LINE",
"814 0 LINE",
"1005 1082 LINE",
"820 1082 LINE",
"748 672 LINE",
"313 672 LINE",
"385 1082 LINE",
"200 1082 LINE",
"9 0 LINE"
);
}
);
width = 1205;
},
{
anchors = (
{
name = haa;
position = "{800, -6}";
},
{
name = he.acute.top;
position = "{299, 1202}";
},
{
name = hee;
position = "{686, 124}";
},
{
name = hi;
position = "{864, 37}";
},
{
name = ho;
position = "{62, -11}";
},
{
name = hu;
position = "{1037, 681}";
},
{
name = hwa;
position = "{804, 0}";
},
{
name = zha;
position = "{593, 970}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"95 0 LINE",
"203 611 LINE",
"879 611 LINE",
"771 0 LINE",
"825 0 LINE",
"1016 1082 LINE",
"962 1082 LINE",
"888 665 LINE",
"212 665 LINE",
"286 1082 LINE",
"232 1082 LINE",
"41 0 LINE"
);
}
);
width = 1243;
}
);
userData = {
lsb = 141;
rsb = 137;
};
},
{
glyphname = _cha.shoes.cap;
lastChange = "2020-12-14 00:21:37 +0000";
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 230, -1250}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 1060, -1260}";
}
);
layerId = m002;
width = 1788;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -1730, -1020}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -860, -1010}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 497;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -1630, -1350}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -600, -1350}";
}
);
layerId = m003;
width = 497;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 230, -1250}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 1060, -1260}";
}
);
layerId = m004;
width = 1788;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -1630, -1350}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -600, -1350}";
}
);
layerId = m005;
width = 497;
}
);
},
{
glyphname = _smart.cha.caps;
lastChange = "2020-12-14 00:22:47 +0000";
layers = (
{
anchors = (
{
name = _cha.caps;
position = "{-5, 34}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-354 5 OFFCURVE",
"-329 29 OFFCURVE",
"-329 60 CURVE SMOOTH",
"-329 91 OFFCURVE",
"-354 116 OFFCURVE",
"-385 116 CURVE SMOOTH",
"-416 116 OFFCURVE",
"-440 91 OFFCURVE",
"-440 60 CURVE SMOOTH",
"-440 29 OFFCURVE",
"-416 5 OFFCURVE",
"-385 5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"668 5 OFFCURVE",
"693 29 OFFCURVE",
"693 60 CURVE SMOOTH",
"693 91 OFFCURVE",
"668 116 OFFCURVE",
"637 116 CURVE SMOOTH",
"606 116 OFFCURVE",
"582 91 OFFCURVE",
"582 60 CURVE SMOOTH",
"582 29 OFFCURVE",
"606 5 OFFCURVE",
"637 5 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha.caps;
position = "{-5, 34}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-262 8 OFFCURVE",
"-206 64 OFFCURVE",
"-206 144 CURVE SMOOTH",
"-206 224 OFFCURVE",
"-262 281 OFFCURVE",
"-354 281 CURVE SMOOTH",
"-443 281 OFFCURVE",
"-502 224 OFFCURVE",
"-502 144 CURVE SMOOTH",
"-502 64 OFFCURVE",
"-445 8 OFFCURVE",
"-354 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"448 8 OFFCURVE",
"504 64 OFFCURVE",
"504 144 CURVE SMOOTH",
"504 224 OFFCURVE",
"448 281 OFFCURVE",
"356 281 CURVE SMOOTH",
"267 281 OFFCURVE",
"208 224 OFFCURVE",
"208 144 CURVE SMOOTH",
"208 64 OFFCURVE",
"265 8 OFFCURVE",
"356 8 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha.caps;
position = "{-20, 95}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-341 12 OFFCURVE",
"-303 57 OFFCURVE",
"-303 117 CURVE SMOOTH",
"-303 177 OFFCURVE",
"-341 224 OFFCURVE",
"-413 224 CURVE SMOOTH",
"-485 224 OFFCURVE",
"-522 177 OFFCURVE",
"-522 117 CURVE SMOOTH",
"-522 57 OFFCURVE",
"-485 12 OFFCURVE",
"-413 12 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"500 12 OFFCURVE",
"538 57 OFFCURVE",
"538 117 CURVE SMOOTH",
"538 177 OFFCURVE",
"500 224 OFFCURVE",
"428 224 CURVE SMOOTH",
"356 224 OFFCURVE",
"319 177 OFFCURVE",
"319 117 CURVE SMOOTH",
"319 57 OFFCURVE",
"356 12 OFFCURVE",
"428 12 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha.caps;
position = "{-194, 95}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-530 12 OFFCURVE",
"-484 57 OFFCURVE",
"-473 117 CURVE SMOOTH",
"-463 177 OFFCURVE",
"-492 224 OFFCURVE",
"-564 224 CURVE SMOOTH",
"-636 224 OFFCURVE",
"-682 177 OFFCURVE",
"-692 117 CURVE SMOOTH",
"-703 57 OFFCURVE",
"-674 12 OFFCURVE",
"-602 12 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"311 12 OFFCURVE",
"357 57 OFFCURVE",
"368 117 CURVE SMOOTH",
"378 177 OFFCURVE",
"349 224 OFFCURVE",
"277 224 CURVE SMOOTH",
"205 224 OFFCURVE",
"159 177 OFFCURVE",
"149 117 CURVE SMOOTH",
"138 57 OFFCURVE",
"167 12 OFFCURVE",
"239 12 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _cha.caps;
position = "{-190, 34}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-544 5 OFFCURVE",
"-515 29 OFFCURVE",
"-509 60 CURVE SMOOTH",
"-504 91 OFFCURVE",
"-524 116 OFFCURVE",
"-555 116 CURVE SMOOTH",
"-586 116 OFFCURVE",
"-615 91 OFFCURVE",
"-620 60 CURVE SMOOTH",
"-626 29 OFFCURVE",
"-606 5 OFFCURVE",
"-575 5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"478 5 OFFCURVE",
"507 29 OFFCURVE",
"513 60 CURVE SMOOTH",
"518 91 OFFCURVE",
"498 116 OFFCURVE",
"467 116 CURVE SMOOTH",
"436 116 OFFCURVE",
"407 91 OFFCURVE",
"402 60 CURVE SMOOTH",
"396 29 OFFCURVE",
"416 5 OFFCURVE",
"447 5 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.da.caps;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _da.caps;
position = "{272, 17}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1262 -3 LINE {name = \"❌\";}",
"1266 148 OFFCURVE",
"1163 452 OFFCURVE",
"808 452 CURVE SMOOTH",
"210 452 LINE",
"210 267 LINE",
"728 267 LINE SMOOTH",
"1008 267 OFFCURVE",
"1023 97 OFFCURVE",
"1023 1 CURVE {name = \"❌\";}"
);
}
);
width = 1292;
},
{
anchors = (
{
name = _da.caps;
position = "{152, 38}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1072 3 LINE",
"1068 117 OFFCURVE",
"979 342 OFFCURVE",
"850 342 CURVE SMOOTH",
"210 342 LINE",
"210 247 LINE",
"728 247 LINE SMOOTH",
"857 247 OFFCURVE",
"883 92 OFFCURVE",
"893 0 CURVE"
);
}
);
width = 1292;
},
{
anchors = (
{
name = _da.caps;
position = "{262, 47}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1072 0 LINE",
"1076 151 OFFCURVE",
"973 342 OFFCURVE",
"808 342 CURVE SMOOTH",
"210 342 LINE",
"210 307 LINE",
"728 307 LINE SMOOTH",
"1008 307 OFFCURVE",
"1023 97 OFFCURVE",
"1023 2 CURVE"
);
}
);
width = 1292;
},
{
anchors = (
{
name = _da.caps;
position = "{-32, 38}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"882 3 LINE",
"898 117 OFFCURVE",
"849 342 OFFCURVE",
"720 342 CURVE SMOOTH",
"80 342 LINE",
"63 247 LINE",
"581 247 LINE SMOOTH",
"710 247 OFFCURVE",
"708 92 OFFCURVE",
"702 0 CURVE"
);
}
);
width = 1292;
},
{
anchors = (
{
name = _da.caps;
position = "{80, 47}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"881 0 LINE",
"912 151 OFFCURVE",
"843 342 OFFCURVE",
"678 342 CURVE SMOOTH",
"80 342 LINE",
"73 307 LINE",
"591 307 LINE SMOOTH",
"871 307 OFFCURVE",
"849 97 OFFCURVE",
"833 2 CURVE"
);
}
);
width = 1292;
}
);
},
{
glyphname = _smart.haa.acute;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _haa.acute;
position = "{-1, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-74 -314 LINE",
"203 -4 LINE {name = \"❌\";}",
"-112 -4 LINE {name = \"❌\";}",
"-309 -314 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _haa.acute;
position = "{-1, -3}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-148 -297 LINE",
"120 -3 LINE {name = \"❌\";}",
"-104 -3 LINE {name = \"❌\";}",
"-297 -297 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _haa.acute;
position = "{-1, -3}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-164 -266 LINE",
"31 0 LINE",
"-35 0 LINE",
"-224 -266 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _haa.acute;
position = "{-192, -3}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-391 -297 LINE",
"-71 -3 LINE {name = \"❌\";}",
"-295 -3 LINE {name = \"❌\";}",
"-540 -297 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _haa.acute;
position = "{-192, -3}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-402 -266 LINE",
"-160 0 LINE",
"-226 0 LINE",
"-462 -266 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni00B4;
},
{
glyphname = _smart.hat.002;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _hat.002;
position = "{541, 8}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"877 1 LINE {name = \"❌\";}",
"877 156 LINE",
"213 156 LINE",
"213 1 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.002;
position = "{541, 8}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"827 109 LINE",
"827 153 LINE",
"312 153 LINE",
"312 109 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.002;
position = "{541, 8}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"860 52 LINE",
"860 134 LINE",
"235 134 LINE",
"235 52 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.002;
position = "{352, 8}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"678 52 LINE",
"693 134 LINE",
"68 134 LINE",
"53 52 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.002;
position = "{352, 8}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"655 109 LINE",
"663 153 LINE",
"148 153 LINE",
"140 109 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.hat.cap;
lastChange = "2020-12-14 00:23:19 +0000";
layers = (
{
anchors = (
{
name = _hat.cap;
position = "{640, 1692}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"939 1689 LINE",
"939 1783 LINE",
"334 1783 LINE",
"334 1689 LINE"
);
}
);
width = 1328;
},
{
anchors = (
{
name = _hat.cap;
position = "{289.157, 1692}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"589 1689 LINE",
"589 1813 LINE",
"-16 1813 LINE",
"-16 1689 LINE"
);
}
);
width = 600;
},
{
anchors = (
{
name = _hat.cap;
position = "{289.157, 1692}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"579 1689 LINE",
"579 1723 LINE",
"-26 1723 LINE",
"-26 1689 LINE"
);
}
);
width = 600;
},
{
anchors = (
{
name = _hat.cap;
position = "{748, 1692}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1046 1689 LINE",
"1063 1783 LINE",
"458 1783 LINE",
"441 1689 LINE"
);
}
);
width = 1328;
},
{
anchors = (
{
name = _hat.cap;
position = "{397, 1692}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"686 1689 LINE",
"692 1723 LINE",
"87 1723 LINE",
"81 1689 LINE"
);
}
);
width = 600;
}
);
},
{
glyphname = _smart.hat.caps;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _hat.cap;
position = "{303, 1638}";
},
{
name = _hat.caps;
position = "{294, 1637}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"340 1642 LINE",
"340 1785 LINE",
"-334 1785 LINE",
"-334 1642 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.cap;
position = "{294, 1639}";
},
{
name = _hat.caps;
position = "{36, 1637}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"390 1642 LINE",
"390 1845 LINE",
"-284 1845 LINE",
"-284 1642 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.cap;
position = "{320, 1636}";
},
{
name = _hat.caps;
position = "{27, 1654}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"370 1682 LINE",
"370 1725 LINE",
"-304 1725 LINE",
"-304 1682 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.cap;
position = "{401, 1638}";
},
{
name = _hat.caps;
position = "{392, 1637}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"439 1642 LINE",
"464 1785 LINE",
"-210 1785 LINE",
"-235 1642 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.cap;
position = "{418, 1636}";
},
{
name = _hat.caps;
position = "{128, 1654}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"476 1682 LINE",
"483 1725 LINE",
"-191 1725 LINE",
"-198 1682 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.hat.left;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _hat.left;
position = "{5, 12}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"337 1 LINE {name = \"❌\";}",
"337 156 LINE",
"-327 156 LINE",
"-327 1 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.left;
position = "{5, 12}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"237 109 LINE",
"237 153 LINE",
"-278 153 LINE",
"-278 109 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.left;
position = "{5, 12}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"310 52 LINE",
"310 134 LINE",
"-315 134 LINE",
"-315 52 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.left;
position = "{-184, 12}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"128 52 LINE",
"143 134 LINE",
"-482 134 LINE",
"-497 52 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _hat.left;
position = "{-184, 12}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"65 109 LINE",
"73 153 LINE",
"-442 153 LINE",
"-450 109 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.ho.ring;
lastChange = "2020-12-14 06:26:48 +0000";
layers = (
{
anchors = (
{
name = _ho.ring;
position = "{-3, 1111}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-113 894 OFFCURVE",
"9 1015 OFFCURVE",
"9 1170 CURVE SMOOTH",
"9 1327 OFFCURVE",
"-117 1452 OFFCURVE",
"-284 1452 CURVE SMOOTH",
"-446 1452 OFFCURVE",
"-570 1330 OFFCURVE",
"-570 1170 CURVE SMOOTH",
"-570 1013 OFFCURVE",
"-449 894 OFFCURVE",
"-284 894 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-430 1031 OFFCURVE",
"-528 1095 OFFCURVE",
"-528 1221 CURVE SMOOTH",
"-528 1333 OFFCURVE",
"-444 1422 OFFCURVE",
"-334 1422 CURVE SMOOTH",
"-218 1422 OFFCURVE",
"-130 1327 OFFCURVE",
"-130 1221 CURVE SMOOTH",
"-130 1094 OFFCURVE",
"-231 1030 OFFCURVE",
"-329 1030 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring;
position = "{16, 1084}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-119 892 OFFCURVE",
"15 1014 OFFCURVE",
"15 1170 CURVE SMOOTH",
"15 1320 OFFCURVE",
"-112 1442 OFFCURVE",
"-287 1442 CURVE SMOOTH",
"-459 1442 OFFCURVE",
"-589 1323 OFFCURVE",
"-589 1170 CURVE SMOOTH",
"-589 1011 OFFCURVE",
"-454 892 OFFCURVE",
"-287 892 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-453 1016 OFFCURVE",
"-529 1101 OFFCURVE",
"-529 1209 CURVE SMOOTH",
"-529 1315 OFFCURVE",
"-456 1400 OFFCURVE",
"-337 1400 CURVE SMOOTH",
"-218 1400 OFFCURVE",
"-145 1315 OFFCURVE",
"-145 1209 CURVE SMOOTH",
"-145 1101 OFFCURVE",
"-221 1016 OFFCURVE",
"-337 1016 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring;
position = "{-2, 1083}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-119 850 OFFCURVE",
"-22 947 OFFCURVE",
"-22 1071 CURVE SMOOTH",
"-22 1196 OFFCURVE",
"-119 1298 OFFCURVE",
"-244 1298 CURVE SMOOTH",
"-365 1298 OFFCURVE",
"-466 1201 OFFCURVE",
"-466 1071 CURVE SMOOTH",
"-466 941 OFFCURVE",
"-364 850 OFFCURVE",
"-244 850 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-347 888 OFFCURVE",
"-420 959 OFFCURVE",
"-420 1062 CURVE SMOOTH",
"-420 1170 OFFCURVE",
"-347 1242 OFFCURVE",
"-245 1242 CURVE SMOOTH",
"-143 1242 OFFCURVE",
"-70 1170 OFFCURVE",
"-70 1062 CURVE SMOOTH",
"-70 959 OFFCURVE",
"-143 888 OFFCURVE",
"-245 888 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring;
position = "{96, 1111}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-99 894 OFFCURVE",
"27 1019 OFFCURVE",
"27 1176 CURVE SMOOTH",
"27 1331 OFFCURVE",
"-95 1452 OFFCURVE",
"-266 1452 CURVE SMOOTH",
"-431 1452 OFFCURVE",
"-552 1333 OFFCURVE",
"-552 1176 CURVE SMOOTH",
"-552 1016 OFFCURVE",
"-428 894 OFFCURVE",
"-266 894 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-426 1030 OFFCURVE",
"-510 1119 OFFCURVE",
"-510 1231 CURVE SMOOTH",
"-510 1357 OFFCURVE",
"-412 1421 OFFCURVE",
"-311 1422 CURVE SMOOTH",
"-213 1422 OFFCURVE",
"-112 1358 OFFCURVE",
"-112 1231 CURVE SMOOTH",
"-112 1125 OFFCURVE",
"-200 1030 OFFCURVE",
"-316 1030 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring;
position = "{-2, 1083}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-160 850 OFFCURVE",
"-46 947 OFFCURVE",
"-24 1071 CURVE SMOOTH",
"-2 1196 OFFCURVE",
"-81 1298 OFFCURVE",
"-206 1298 CURVE SMOOTH",
"-327 1298 OFFCURVE",
"-445 1201 OFFCURVE",
"-468 1071 CURVE SMOOTH",
"-491 941 OFFCURVE",
"-405 850 OFFCURVE",
"-285 850 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-381 888 OFFCURVE",
"-442 959 OFFCURVE",
"-424 1062 CURVE SMOOTH",
"-404 1170 OFFCURVE",
"-319 1242 OFFCURVE",
"-217 1242 CURVE SMOOTH",
"-115 1242 OFFCURVE",
"-54 1170 OFFCURVE",
"-74 1062 CURVE SMOOTH",
"-92 959 OFFCURVE",
"-177 888 OFFCURVE",
"-279 888 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.ka.caps;
lastChange = "2020-12-14 07:40:59 +0000";
layers = (
{
anchors = (
{
name = _ka.caps;
position = "{-820, 1395}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-645 1482 LINE",
"-980 1479 LINE",
"-980 1810 LINE",
"-1325 1810 LINE",
"-1325 1372 LINE",
"-645 1372 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka.caps;
position = "{-1031, 1459}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-689 1387 LINE",
"-689 1479 LINE {name = \"❌\";}",
"-1021 1469 LINE {name = \"❌\";}",
"-1021 1807 LINE",
"-1254 1807 LINE",
"-1254 1367 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka.caps;
position = "{-758, 1456}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-774 1436 LINE",
"-1180 1436 LINE",
"-1180 1654 LINE",
"-1255 1654 LINE",
"-1255 1386 LINE",
"-865 1386 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka.caps;
position = "{-965, 1459}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-608 1397 LINE",
"-608 1479 LINE {name = \"❌\";}",
"-955 1459 LINE {name = \"❌\";}",
"-869 1807 LINE",
"-1102 1807 LINE",
"-1200 1387 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ka.caps;
position = "{-692, 1456}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-712 1436 LINE",
"-1118 1436 LINE",
"-1079 1654 LINE",
"-1154 1654 LINE",
"-1201 1386 LINE",
"-811 1386 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.neck.caps;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _neck.caps;
position = "{-13, 1462}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"68 1456 LINE",
"68 1713 LINE",
"-79 1713 LINE",
"-79 1456 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.caps;
position = "{-7, 1462}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"68 1456 LINE",
"68 1713 LINE",
"-109 1713 LINE",
"-109 1456 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.caps;
position = "{-15, 1439}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"18 1456 LINE",
"18 1713 LINE",
"-49 1713 LINE",
"-49 1456 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.caps;
position = "{54, 1462}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"134 1456 LINE",
"179 1713 LINE",
"32 1713 LINE",
"-13 1456 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.caps;
position = "{48, 1439}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"84 1456 LINE",
"129 1713 LINE",
"62 1713 LINE",
"17 1456 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.neck.left;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _neck.left;
position = "{1, -24}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"130 -23 LINE",
"130 367 LINE",
"-111 367 LINE",
"-111 -23 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left;
position = "{1, -24}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"88 -24 LINE",
"88 340 LINE",
"-81 340 LINE",
"-81 -24 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left;
position = "{29, -24}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"60 -16 LINE",
"60 250 LINE",
"0 250 LINE",
"0 -16 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left;
position = "{-194, -24}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-107 -24 LINE",
"-43 340 LINE",
"-212 340 LINE",
"-276 -24 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left;
position = "{-166, -24}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-134 -16 LINE",
"-87 250 LINE",
"-147 250 LINE",
"-194 -16 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.tsa.belt;
lastChange = "2020-12-14 20:37:07 +0000";
layers = (
{
anchors = (
{
name = _tsa.belt;
position = "{-7, 602}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"374 501 LINE",
"374 555 LINE",
"-431 555 LINE",
"-431 501 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt;
position = "{-7, 602}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"217 481 LINE",
"217 656 LINE",
"-197 656 LINE",
"-197 481 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt;
position = "{-7, 602}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"300 500 LINE",
"300 652 LINE",
"-275 652 LINE",
"-275 500 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt;
position = "{-92, 602}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"197 500 LINE",
"224 652 LINE",
"-351 652 LINE",
"-378 500 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt;
position = "{-92, 602}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"262 501 LINE",
"271 555 LINE",
"-514 555 LINE",
"-523 501 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.zha.caps;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _zha.caps;
position = "{-7, 956}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-938 855 OFFCURVE",
"-913 879 OFFCURVE",
"-913 910 CURVE SMOOTH",
"-913 941 OFFCURVE",
"-938 966 OFFCURVE",
"-969 966 CURVE SMOOTH",
"-1000 966 OFFCURVE",
"-1024 941 OFFCURVE",
"-1024 910 CURVE SMOOTH",
"-1024 879 OFFCURVE",
"-1000 855 OFFCURVE",
"-969 855 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"264 857 OFFCURVE",
"289 881 OFFCURVE",
"289 912 CURVE SMOOTH",
"289 943 OFFCURVE",
"264 968 OFFCURVE",
"233 968 CURVE SMOOTH",
"202 968 OFFCURVE",
"178 943 OFFCURVE",
"178 912 CURVE SMOOTH",
"178 881 OFFCURVE",
"202 857 OFFCURVE",
"233 857 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha.caps;
position = "{-7, 956}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-952 698 OFFCURVE",
"-896 754 OFFCURVE",
"-896 834 CURVE SMOOTH",
"-896 914 OFFCURVE",
"-952 971 OFFCURVE",
"-1044 971 CURVE SMOOTH",
"-1133 971 OFFCURVE",
"-1192 914 OFFCURVE",
"-1192 834 CURVE SMOOTH",
"-1192 754 OFFCURVE",
"-1135 698 OFFCURVE",
"-1044 698 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"428 708 OFFCURVE",
"484 764 OFFCURVE",
"484 844 CURVE SMOOTH",
"484 924 OFFCURVE",
"428 981 OFFCURVE",
"336 981 CURVE SMOOTH",
"247 981 OFFCURVE",
"188 924 OFFCURVE",
"188 844 CURVE SMOOTH",
"188 764 OFFCURVE",
"245 708 OFFCURVE",
"336 708 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha.caps;
position = "{-7, 956}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-938 759 OFFCURVE",
"-900 804 OFFCURVE",
"-900 864 CURVE SMOOTH",
"-900 924 OFFCURVE",
"-938 971 OFFCURVE",
"-1010 971 CURVE SMOOTH",
"-1082 971 OFFCURVE",
"-1119 924 OFFCURVE",
"-1119 864 CURVE SMOOTH",
"-1119 804 OFFCURVE",
"-1082 759 OFFCURVE",
"-1010 759 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"362 752 OFFCURVE",
"400 797 OFFCURVE",
"400 857 CURVE SMOOTH",
"400 917 OFFCURVE",
"362 964 OFFCURVE",
"290 964 CURVE SMOOTH",
"218 964 OFFCURVE",
"181 917 OFFCURVE",
"181 857 CURVE SMOOTH",
"181 797 OFFCURVE",
"218 752 OFFCURVE",
"290 752 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha.caps;
position = "{-29, 956}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-995 759 OFFCURVE",
"-949 804 OFFCURVE",
"-938 864 CURVE SMOOTH",
"-928 924 OFFCURVE",
"-958 971 OFFCURVE",
"-1030 971 CURVE SMOOTH",
"-1102 971 OFFCURVE",
"-1147 924 OFFCURVE",
"-1157 864 CURVE SMOOTH",
"-1168 804 OFFCURVE",
"-1139 759 OFFCURVE",
"-1067 759 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"304 752 OFFCURVE",
"350 797 OFFCURVE",
"360 857 CURVE SMOOTH",
"371 917 OFFCURVE",
"341 964 OFFCURVE",
"269 964 CURVE SMOOTH",
"197 964 OFFCURVE",
"152 917 OFFCURVE",
"141 857 CURVE SMOOTH",
"131 797 OFFCURVE",
"160 752 OFFCURVE",
"232 752 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _zha.caps;
position = "{-29, 956}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-978 855 OFFCURVE",
"-949 879 OFFCURVE",
"-943 910 CURVE SMOOTH",
"-938 941 OFFCURVE",
"-958 966 OFFCURVE",
"-989 966 CURVE SMOOTH",
"-1020 966 OFFCURVE",
"-1049 941 OFFCURVE",
"-1054 910 CURVE SMOOTH",
"-1060 879 OFFCURVE",
"-1040 855 OFFCURVE",
"-1009 855 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"224 857 OFFCURVE",
"254 881 OFFCURVE",
"259 912 CURVE SMOOTH",
"264 943 OFFCURVE",
"244 968 OFFCURVE",
"213 968 CURVE SMOOTH",
"182 968 OFFCURVE",
"153 943 OFFCURVE",
"148 912 CURVE SMOOTH",
"143 881 OFFCURVE",
"162 857 OFFCURVE",
"193 857 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _zha.ears.caps;
lastChange = "2020-12-14 00:23:43 +0000";
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -190, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 1110, -10}";
}
);
layerId = m002;
width = 1460;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -1810, 180}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -450, 180}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 0;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -1550, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = m003;
width = 0;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -190, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 1110, -10}";
}
);
layerId = m004;
width = 1460;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, -1550, 0}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = m005;
width = 0;
}
);
},
{
glyphname = aGl.base.cap;
lastChange = "2020-12-15 19:45:33 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1212, -42}";
},
{
name = hat;
position = "{237, 1677}";
},
{
name = hat.left;
position = "{237, 1677}";
},
{
name = hee;
position = "{1176, 19}";
},
{
name = ho;
position = "{112, -32}";
},
{
name = hu;
position = "{864, 965}";
},
{
name = hwa;
position = "{1154, -41}";
},
{
name = ni;
position = "{1280, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"238 0 LINE",
"654 1037 LINE",
"1068 0 LINE",
"1277 0 LINE",
"737 1290 LINE",
"737 1442 LINE",
"315 1442 LINE",
"315 1669 LINE",
"155 1669 LINE",
"155 1290 LINE",
"566 1290 LINE",
"28 0 LINE"
);
}
);
width = 1304;
},
{
anchors = (
{
name = haa;
position = "{1118, -41}";
},
{
name = hat;
position = "{183, 1677}";
},
{
name = hat.left;
position = "{183, 1677}";
},
{
name = hee;
position = "{1099, 29}";
},
{
name = ho;
position = "{124, -32}";
},
{
name = hu;
position = "{852, 965}";
},
{
name = hwa;
position = "{1045, -41}";
},
{
name = ni;
position = "{1155, 4}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"334 0 LINE",
"626 977 LINE",
"920 0 LINE",
"1248 0 LINE",
"785 1294 LINE",
"783 1456 LINE",
"238 1456 LINE",
"238 1673 LINE",
"14 1673 LINE",
"14 1294 LINE",
"461 1294 LINE",
"7 0 LINE"
);
}
);
width = 1254;
},
{
anchors = (
{
name = haa;
position = "{1048, -24}";
},
{
name = hat;
position = "{225.46, 1677}";
},
{
name = hat.left;
position = "{225.46, 1677}";
},
{
name = hee;
position = "{1051.208, -1}";
},
{
name = ho;
position = "{62, -32}";
},
{
name = hu;
position = "{794, 965}";
},
{
name = hwa;
position = "{1077, -31}";
},
{
name = ni;
position = "{1196.817, 4}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"552 1238 LINE",
"1017 0 LINE",
"1078 0 LINE",
"587 1294 LINE",
"585 1356 LINE",
"110 1356 LINE",
"110 1673 LINE",
"56 1673 LINE",
"56 1294 LINE",
"517 1294 LINE",
"33 0 LINE"
);
}
);
width = 1112;
},
{
anchors = (
{
name = haa;
position = "{1014, -42}";
},
{
name = hat;
position = "{342, 1677}";
},
{
name = hat.left;
position = "{342, 1677}";
},
{
name = hee;
position = "{957, 59}";
},
{
name = ho;
position = "{-84, -32}";
},
{
name = hu;
position = "{843, 965}";
},
{
name = hwa;
position = "{956, -41}";
},
{
name = ni;
position = "{1089, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"47 0 LINE",
"646 1037 LINE",
"877 0 LINE",
"1086 0 LINE",
"774 1290 LINE",
"800 1442 LINE",
"378 1442 LINE",
"419 1669 LINE",
"259 1669 LINE",
"192 1290 LINE",
"603 1290 LINE",
"-163 0 LINE"
);
}
);
width = 1304;
},
{
anchors = (
{
name = haa;
position = "{853, -24}";
},
{
name = hat;
position = "{330, 1677}";
},
{
name = hat.left;
position = "{330, 1677}";
},
{
name = hee;
position = "{860, -1}";
},
{
name = ho;
position = "{-134, -32}";
},
{
name = hu;
position = "{773, 965}";
},
{
name = hwa;
position = "{881, -31}";
},
{
name = ni;
position = "{1007, 4}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-105 0 LINE",
"580 1238 LINE",
"826 0 LINE",
"887 0 LINE",
"624 1294 LINE",
"633 1356 LINE",
"158 1356 LINE",
"214 1673 LINE",
"160 1673 LINE",
"93 1294 LINE",
"554 1294 LINE",
"-158 0 LINE"
);
}
);
width = 1112;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = ba.base.cap;
lastChange = "2020-12-16 19:13:47 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1113, -25}";
},
{
name = hat.caps;
position = "{650, 1648}";
},
{
name = hat.left;
position = "{223, 1656}";
},
{
name = he.acute.top;
position = "{644, 1496}";
},
{
name = he.left.inner;
position = "{410, 772}";
},
{
name = he.left.outer;
position = "{78.101, 764}";
},
{
name = hee;
position = "{1074, 59}";
},
{
name = hi;
position = "{1175, 133}";
},
{
name = ho;
position = "{231, -40}";
},
{
name = ho.caps;
position = "{219.605, 26}";
},
{
name = hu;
position = "{1219, 866}";
},
{
name = hwa;
position = "{1111, -38}";
},
{
name = ka.caps;
position = "{474, 1387}";
},
{
name = neck.caps;
position = "{671, 1475}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"416 0 LINE",
"416 961 LINE SMOOTH",
"416 1152 OFFCURVE",
"513 1235 OFFCURVE",
"674 1235 CURVE SMOOTH",
"843 1235 OFFCURVE",
"931 1146 OFFCURVE",
"931 969 CURVE SMOOTH",
"931 0 LINE",
"1232 0 LINE",
"1232 959 LINE SMOOTH",
"1232 1278 OFFCURVE",
"1019 1476 OFFCURVE",
"674 1476 CURVE SMOOTH",
"334 1476 OFFCURVE",
"116 1285 OFFCURVE",
"116 970 CURVE SMOOTH",
"116 0 LINE"
);
}
);
width = 1348;
},
{
anchors = (
{
name = haa;
position = "{1138, -25}";
},
{
name = hat.caps;
position = "{940, 1648}";
},
{
name = hat.left;
position = "{257, 1685}";
},
{
name = he.acute.top;
position = "{619, 1481}";
},
{
name = he.left.inner;
position = "{313, 772}";
},
{
name = he.left.outer;
position = "{76.942, 764}";
},
{
name = hee;
position = "{1070, 49}";
},
{
name = hi;
position = "{1170, 93}";
},
{
name = ho;
position = "{225, -29}";
},
{
name = ho.caps;
position = "{213.086, 26}";
},
{
name = hu;
position = "{1211, 866}";
},
{
name = hwa;
position = "{1115, -22}";
},
{
name = ka.caps;
position = "{283, 1455}";
},
{
name = neck.caps;
position = "{661.045, 1475}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"332 0 LINE",
"332 986 LINE SMOOTH",
"332 1197 OFFCURVE",
"450 1319 OFFCURVE",
"665 1319 CURVE SMOOTH",
"882 1319 OFFCURVE",
"1001 1198 OFFCURVE",
"1001 987 CURVE SMOOTH",
"1001 0 LINE",
"1206 0 LINE",
"1206 990 LINE SMOOTH",
"1206 1265 OFFCURVE",
"969 1476 OFFCURVE",
"665 1476 CURVE SMOOTH",
"347 1476 OFFCURVE",
"140 1293 OFFCURVE",
"140 992 CURVE SMOOTH",
"140 0 LINE"
);
}
);
width = 1340;
},
{
anchors = (
{
name = haa;
position = "{1153, -25}";
},
{
name = hat.caps;
position = "{588, 1678}";
},
{
name = hat.left;
position = "{279, 1555}";
},
{
name = he.acute.top;
position = "{681, 1481}";
},
{
name = he.left.inner;
position = "{280.395, 772}";
},
{
name = he.left.outer;
position = "{79.086, 764}";
},
{
name = hee;
position = "{1015, 119}";
},
{
name = hi;
position = "{1198, 53}";
},
{
name = ho;
position = "{213, -19}";
},
{
name = ho.caps;
position = "{224, 26}";
},
{
name = hu;
position = "{1224, 866}";
},
{
name = hwa;
position = "{1152, 23}";
},
{
name = ka.caps;
position = "{591.02, 1480}";
},
{
name = neck.caps;
position = "{679.462, 1475}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"239 0 LINE",
"239 984 LINE SMOOTH",
"239 1253 OFFCURVE",
"415 1422 OFFCURVE",
"683 1422 CURVE SMOOTH",
"951 1422 OFFCURVE",
"1126 1254 OFFCURVE",
"1126 983 CURVE SMOOTH",
"1126 0 LINE",
"1180 0 LINE",
"1180 986 LINE SMOOTH",
"1180 1294 OFFCURVE",
"988 1476 OFFCURVE",
"683 1476 CURVE SMOOTH",
"378 1476 OFFCURVE",
"185 1293 OFFCURVE",
"185 990 CURVE SMOOTH",
"185 0 LINE"
);
}
);
width = 1365;
},
{
anchors = (
{
name = haa;
position = "{944, -25}";
},
{
name = hat.caps;
position = "{1041, 1648}";
},
{
name = hat.left;
position = "{348, 1685}";
},
{
name = he.acute.top;
position = "{690, 1481}";
},
{
name = he.left.inner;
position = "{259, 772}";
},
{
name = he.left.outer;
position = "{22, 764}";
},
{
name = hee;
position = "{889, 49}";
},
{
name = hi;
position = "{997, 93}";
},
{
name = ho;
position = "{30, -29}";
},
{
name = ho.caps;
position = "{28, 26}";
},
{
name = hu;
position = "{1175, 866}";
},
{
name = hwa;
position = "{921, -22}";
},
{
name = ka.caps;
position = "{350, 1455}";
},
{
name = neck.caps;
position = "{731, 1475}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"142 0 LINE",
"316 986 LINE SMOOTH",
"353 1197 OFFCURVE",
"493 1319 OFFCURVE",
"708 1319 CURVE SMOOTH",
"925 1319 OFFCURVE",
"1022 1198 OFFCURVE",
"985 987 CURVE SMOOTH",
"811 0 LINE",
"1016 0 LINE",
"1191 990 LINE SMOOTH",
"1240 1265 OFFCURVE",
"1039 1476 OFFCURVE",
"735 1476 CURVE SMOOTH",
"417 1476 OFFCURVE",
"178 1293 OFFCURVE",
"125 992 CURVE SMOOTH",
"-50 0 LINE"
);
}
);
width = 1341;
},
{
anchors = (
{
name = haa;
position = "{958, -25}";
},
{
name = hat.caps;
position = "{693, 1678}";
},
{
name = hat.left;
position = "{362, 1555}";
},
{
name = he.acute.top;
position = "{751, 1481}";
},
{
name = he.left.inner;
position = "{226, 772}";
},
{
name = he.left.outer;
position = "{23, 764}";
},
{
name = hee;
position = "{845, 119}";
},
{
name = hi;
position = "{1017, 53}";
},
{
name = ho;
position = "{19, -19}";
},
{
name = ho.caps;
position = "{38, 26}";
},
{
name = hu;
position = "{1196, 866}";
},
{
name = hwa;
position = "{968, -5}";
},
{
name = ka.caps;
position = "{661, 1480}";
},
{
name = neck.caps;
position = "{749, 1475}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"48 0 LINE",
"222 984 LINE SMOOTH",
"270 1253 OFFCURVE",
"475 1422 OFFCURVE",
"743 1422 CURVE SMOOTH",
"1011 1422 OFFCURVE",
"1157 1254 OFFCURVE",
"1109 983 CURVE SMOOTH",
"935 0 LINE",
"989 0 LINE",
"1163 986 LINE SMOOTH",
"1217 1294 OFFCURVE",
"1057 1476 OFFCURVE",
"752 1476 CURVE SMOOTH",
"447 1476 OFFCURVE",
"223 1293 OFFCURVE",
"169 990 CURVE SMOOTH",
"-6 0 LINE"
);
}
);
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
userData = {
lsb = 140;
rsb = 139;
};
},
{
glyphname = ga.base.cap;
lastChange = "2020-12-16 04:08:38 +0000";
layers = (
{
anchors = (
{
name = haa.acute;
position = "{649, 8}";
},
{
name = hat.caps;
position = "{228, 1633}";
},
{
name = he.ring.uniq;
position = "{80.324, 1305}";
},
{
name = hee;
position = "{672.315, 11}";
},
{
name = hi;
position = "{830, 135}";
},
{
name = ho;
position = "{388.604, 1464}";
},
{
name = ho.ring;
position = "{467, 1315}";
},
{
name = hu;
position = "{803.181, 955}";
},
{
name = neck.caps;
position = "{353.64, 1463}";
},
{
name = neck.left.caps;
position = "{132, 1442}";
},
{
name = nose;
position = "{-37, 1625}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"849 0 LINE",
"849 1354 LINE SMOOTH",
"849 1413 OFFCURVE",
"806 1456 OFFCURVE",
"747 1456 CURVE SMOOTH",
"22 1456 LINE",
"22 1215 LINE",
"549 1215 LINE",
"549 0 LINE"
);
}
);
width = 981;
},
{
anchors = (
{
name = haa.acute;
position = "{700, 8}";
},
{
name = hat.caps;
position = "{518, 1663}";
},
{
name = he.ring.uniq;
position = "{77, 1305}";
},
{
name = hee;
position = "{673, 11}";
},
{
name = hi;
position = "{821, 88}";
},
{
name = ho;
position = "{389, 1464}";
},
{
name = ho.ring;
position = "{457.642, 1315}";
},
{
name = hu;
position = "{804, 955}";
},
{
name = neck.caps;
position = "{354, 1463}";
},
{
name = neck.left.caps;
position = "{136, 1442}";
},
{
name = nose;
position = "{38, 1625}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"810 0 LINE",
"810 1354 LINE SMOOTH",
"810 1413 OFFCURVE",
"767 1456 OFFCURVE",
"708 1456 CURVE SMOOTH",
"57 1456 LINE",
"57 1299 LINE",
"617 1299 LINE",
"617 0 LINE"
);
}
);
width = 982;
},
{
anchors = (
{
name = haa.acute;
position = "{681.466, 8}";
},
{
name = hat.caps;
position = "{269, 1665}";
},
{
name = he.ring.uniq;
position = "{74.961, 1305}";
},
{
name = hee;
position = "{655.181, 11}";
},
{
name = hi;
position = "{830, 65}";
},
{
name = ho;
position = "{378.701, 1464}";
},
{
name = ho.ring;
position = "{426.449, 1315}";
},
{
name = hu;
position = "{782.713, 955}";
},
{
name = neck.caps;
position = "{344.627, 1463}";
},
{
name = neck.left.caps;
position = "{84, 1452}";
},
{
name = nose;
position = "{-24, 1625}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"756 0 LINE",
"756 1436 LINE SMOOTH",
"756 1447 OFFCURVE",
"747 1456 OFFCURVE",
"736 1456 CURVE SMOOTH",
"54 1456 LINE",
"54 1402 LINE",
"701 1402 LINE",
"701 0 LINE"
);
}
);
width = 956;
},
{
anchors = (
{
name = haa.acute;
position = "{511, 8}";
},
{
name = hat.caps;
position = "{660, 1663}";
},
{
name = he.ring.uniq;
position = "{116, 1305}";
},
{
name = hee;
position = "{484, 11}";
},
{
name = hi;
position = "{646, 88}";
},
{
name = ho;
position = "{456, 1464}";
},
{
name = ho.ring;
position = "{499, 1315}";
},
{
name = hu;
position = "{782, 955}";
},
{
name = neck.caps;
position = "{421, 1463}";
},
{
name = neck.left.caps;
position = "{199, 1442}";
},
{
name = nose;
position = "{134, 1625}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"619 0 LINE",
"858 1354 LINE SMOOTH",
"868 1413 OFFCURVE",
"833 1456 OFFCURVE",
"774 1456 CURVE SMOOTH",
"123 1456 LINE",
"95 1299 LINE",
"655 1299 LINE",
"426 0 LINE"
);
}
);
width = 982;
},
{
anchors = (
{
name = haa.acute;
position = "{492, 8}";
},
{
name = hat.caps;
position = "{352, 1665}";
},
{
name = he.ring.uniq;
position = "{114, 1305}";
},
{
name = hee;
position = "{466, 11}";
},
{
name = hi;
position = "{651, 65}";
},
{
name = ho;
position = "{446, 1464}";
},
{
name = ho.ring;
position = "{468, 1315}";
},
{
name = hu;
position = "{760, 955}";
},
{
name = neck.caps;
position = "{412, 1463}";
},
{
name = neck.left.caps;
position = "{147, 1452}";
},
{
name = nose;
position = "{72, 1625}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"565 0 LINE",
"818 1436 LINE SMOOTH",
"820 1447 OFFCURVE",
"813 1456 OFFCURVE",
"802 1456 CURVE SMOOTH",
"120 1456 LINE",
"110 1402 LINE",
"757 1402 LINE",
"510 0 LINE"
);
}
);
width = 955;
}
);
leftMetricsKey = X;
rightMetricsKey = N;
userData = {
lsb = 9;
rsb = 71;
};
},
{
glyphname = ha.base.cap;
lastChange = "2020-12-14 06:09:50 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1040, -7}";
},
{
name = he.left.inner;
position = "{375, 1082}";
},
{
name = he.left.outer;
position = "{170.845, 1081}";
},
{
name = hee;
position = "{1004, 15}";
},
{
name = hi;
position = "{1094, -300}";
},
{
name = ho.ring;
position = "{1288, 1524}";
},
{
name = hu;
position = "{1164, 1086}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1019 -20 OFFCURVE",
"1232 178 OFFCURVE",
"1232 497 CURVE SMOOTH",
"1232 1456 LINE",
"931 1456 LINE",
"931 487 LINE SMOOTH",
"931 310 OFFCURVE",
"843 221 OFFCURVE",
"674 221 CURVE SMOOTH",
"513 221 OFFCURVE",
"416 304 OFFCURVE",
"416 495 CURVE SMOOTH",
"416 1456 LINE",
"116 1456 LINE",
"116 486 LINE SMOOTH",
"116 171 OFFCURVE",
"334 -20 OFFCURVE",
"674 -20 CURVE SMOOTH"
);
}
);
width = 1348;
},
{
anchors = (
{
name = haa;
position = "{1115, -2}";
},
{
name = he.left.inner;
position = "{299, 1083}";
},
{
name = he.left.outer;
position = "{168.311, 1081}";
},
{
name = hee;
position = "{1075, 18}";
},
{
name = hi;
position = "{1162, -250}";
},
{
name = ho.ring;
position = "{1211, 1497}";
},
{
name = hu;
position = "{1156, 1086}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1009 3 OFFCURVE",
"1194 191 OFFCURVE",
"1194 466 CURVE SMOOTH",
"1194 1456 LINE",
"1001 1456 LINE",
"1001 469 LINE SMOOTH",
"1001 258 OFFCURVE",
"882 137 OFFCURVE",
"665 137 CURVE SMOOTH",
"450 137 OFFCURVE",
"330 259 OFFCURVE",
"330 470 CURVE SMOOTH",
"330 1456 LINE",
"140 1456 LINE",
"140 464 LINE SMOOTH",
"140 163 OFFCURVE",
"346 -20 OFFCURVE",
"665 -20 CURVE SMOOTH"
);
}
);
width = 1328;
},
{
anchors = (
{
name = haa;
position = "{1119, 30}";
},
{
name = he.left.inner;
position = "{256, 1083}";
},
{
name = he.left.outer;
position = "{153, 1081}";
},
{
name = hee;
position = "{1028, -1}";
},
{
name = hi;
position = "{1187, -270}";
},
{
name = ho.ring;
position = "{1196, 1467}";
},
{
name = hu;
position = "{1250, 1086}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"988.333 -20 OFFCURVE",
"1180 162 OFFCURVE",
"1180 470 CURVE SMOOTH",
"1180 1456 LINE",
"1126 1456 LINE",
"1126 473 LINE SMOOTH",
"1126 202.333 OFFCURVE",
"951 34 OFFCURVE",
"683 34 CURVE SMOOTH",
"415 34 OFFCURVE",
"239 202.667 OFFCURVE",
"239 472 CURVE SMOOTH",
"239 1456 LINE",
"185 1456 LINE",
"185 466 LINE SMOOTH",
"185 163 OFFCURVE",
"377.667 -20 OFFCURVE",
"683 -20 CURVE SMOOTH"
);
}
);
width = 1365;
},
{
anchors = (
{
name = haa;
position = "{924, -2}";
},
{
name = he.left.inner;
position = "{299, 1083}";
},
{
name = he.left.outer;
position = "{168, 1081}";
},
{
name = hee;
position = "{887, 18}";
},
{
name = hi;
position = "{937, -250}";
},
{
name = ho.ring;
position = "{1362, 1497}";
},
{
name = hu;
position = "{1157, 1086}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"819 3 OFFCURVE",
"1036 191 OFFCURVE",
"1085 466 CURVE SMOOTH",
"1260 1456 LINE",
"1067 1456 LINE",
"893 469 LINE SMOOTH",
"856 258 OFFCURVE",
"715 137 OFFCURVE",
"498 137 CURVE SMOOTH",
"283 137 OFFCURVE",
"185 259 OFFCURVE",
"222 470 CURVE SMOOTH",
"396 1456 LINE",
"206 1456 LINE",
"31 464 LINE SMOOTH",
"-22 163 OFFCURVE",
"152 -20 OFFCURVE",
"471 -20 CURVE SMOOTH"
);
}
);
width = 1328;
},
{
anchors = (
{
name = haa;
position = "{934, 30}";
},
{
name = he.left.inner;
position = "{256, 1083}";
},
{
name = he.left.outer;
position = "{153, 1081}";
},
{
name = hee;
position = "{837, -1}";
},
{
name = hi;
position = "{949, -270}";
},
{
name = ho.ring;
position = "{1264, 1467}";
},
{
name = hu;
position = "{1251, 1086}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"794 -20 OFFCURVE",
"1018 162 OFFCURVE",
"1072 470 CURVE SMOOTH",
"1246 1456 LINE",
"1192 1456 LINE",
"1019 473 LINE SMOOTH",
"971 202 OFFCURVE",
"766 34 OFFCURVE",
"498 34 CURVE SMOOTH",
"230 34 OFFCURVE",
"84 203 OFFCURVE",
"131 472 CURVE SMOOTH",
"305 1456 LINE",
"251 1456 LINE",
"76 466 LINE SMOOTH",
"23 163 OFFCURVE",
"183 -20 OFFCURVE",
"489 -20 CURVE SMOOTH"
);
}
);
width = 1365;
}
);
leftMetricsKey = U;
rightMetricsKey = U;
userData = {
lsb = 136;
rsb = 141;
};
},
{
glyphname = hha.base.cap;
lastChange = "2020-12-15 04:33:59 +0000";
layers = (
{
anchors = (
{
name = cha.caps;
position = "{888, 5}";
},
{
name = haa;
position = "{1538, -32}";
},
{
name = haa.acute;
position = "{1116, 6}";
},
{
name = he.acute.top;
position = "{678, 1440}";
},
{
name = hee;
position = "{1494, 64}";
},
{
name = hi;
position = "{1623, 110}";
},
{
name = ho;
position = "{243, -48}";
},
{
name = hu;
position = "{1645, 1081}";
},
{
name = hwa;
position = "{1528, -29}";
},
{
name = neck.hha.caps;
position = "{921, 602}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"400 1084 LINE {name = \"❌\";}",
"792 0 LINE",
"998 0 LINE",
"1391 1085 LINE {name = \"❌\";}",
"1361 0 LINE",
"1662 0 LINE",
"1662 1456 LINE",
"1268 1456 LINE",
"896 400 LINE",
"522 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1794;
},
{
anchors = (
{
name = cha.caps;
position = "{866, 85}";
},
{
name = haa;
position = "{1556, -50}";
},
{
name = haa.acute;
position = "{1085, 6}";
},
{
name = he.acute.top;
position = "{706, 1420}";
},
{
name = hee;
position = "{1483, 54}";
},
{
name = hi;
position = "{1623, 110}";
},
{
name = ho;
position = "{253, -48}";
},
{
name = hu;
position = "{1621, 1081}";
},
{
name = hwa;
position = "{1524, -48}";
},
{
name = neck.hha.caps;
position = "{970, 802}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"342 1176 LINE",
"819 0 LINE",
"966 0 LINE",
"1444 1179 LINE",
"1426 0 LINE",
"1618 0 LINE",
"1618 1456 LINE",
"1369 1456 LINE",
"893 268 LINE",
"417 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
anchors = (
{
name = cha.caps;
position = "{721, 20}";
},
{
name = haa;
position = "{1538, -27}";
},
{
name = haa.acute;
position = "{976, 6}";
},
{
name = he.acute.top;
position = "{753, 1420}";
},
{
name = hee;
position = "{1443, 54}";
},
{
name = hi;
position = "{1613, 50}";
},
{
name = ho;
position = "{222, -48}";
},
{
name = hu;
position = "{1617, 1081}";
},
{
name = hwa;
position = "{1528, -9}";
},
{
name = neck.hha.caps;
position = "{897, 744}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 1369 LINE",
"855 0 LINE",
"898 0 LINE",
"1502 1376 LINE",
"1502 0 LINE",
"1556 0 LINE",
"1556 1456 LINE",
"1477 1456 LINE",
"876 79 LINE",
"277 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
},
{
anchors = (
{
name = cha.caps;
position = "{690, 85}";
},
{
name = haa;
position = "{1356, -50}";
},
{
name = haa.acute;
position = "{895, 6}";
},
{
name = he.acute.top;
position = "{766, 1420}";
},
{
name = hee;
position = "{1302, 54}";
},
{
name = hi;
position = "{1452, 110}";
},
{
name = ho;
position = "{54, -48}";
},
{
name = hu;
position = "{1622, 1081}";
},
{
name = hwa;
position = "{1325, -48}";
},
{
name = neck.hha.caps;
position = "{990, 832}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"359 1176 LINE",
"628 0 LINE",
"775 0 LINE",
"1461 1179 LINE",
"1235 0 LINE",
"1427 0 LINE",
"1684 1456 LINE",
"1435 1456 LINE",
"749 268 LINE",
"483 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1788;
},
{
anchors = (
{
name = cha.caps;
position = "{534, 20}";
},
{
name = haa;
position = "{1296, -27}";
},
{
name = haa.acute;
position = "{786, 6}";
},
{
name = he.acute.top;
position = "{813, 1420}";
},
{
name = hee;
position = "{1262, 54}";
},
{
name = hi;
position = "{1431, 50}";
},
{
name = ho;
position = "{23, -48}";
},
{
name = hu;
position = "{1617, 1081}";
},
{
name = hwa;
position = "{1336, -9}";
},
{
name = neck.hha.caps;
position = "{937, 837}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"305 1369 LINE",
"664 0 LINE",
"707 0 LINE",
"1554 1376 LINE",
"1311 0 LINE",
"1365 0 LINE",
"1622 1456 LINE",
"1543 1456 LINE",
"699 79 LINE",
"343 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
userData = {
_smart.neck.hha.caps.cap = 1;
};
width = 1756;
}
);
leftMetricsKey = M;
rightMetricsKey = M;
},
{
glyphname = la.base.cap;
lastChange = "2020-12-16 02:59:23 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1204, 12}";
},
{
name = hee;
position = "{1178, 71}";
},
{
name = hi;
position = "{1240, 135}";
},
{
name = ho.ring;
position = "{1266, 1076}";
},
{
name = ho.ring.uniq;
position = "{384, 653}";
},
{
name = hu;
position = "{864, 1081}";
},
{
name = hwa;
position = "{1157, -125}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"340 0 LINE",
"668 925 LINE",
"998 0 LINE",
"1332 0 LINE",
"847 1230 LINE",
"612 1623 LINE",
"417 1540 LINE {name = \"❌\";}",
"572 1286 LINE",
"7 0 LINE"
);
}
);
width = 1338;
},
{
anchors = (
{
name = haa;
position = "{1215, -8}";
},
{
name = hee;
position = "{1152, 47}";
},
{
name = hi;
position = "{1249, 109}";
},
{
name = ho.ring;
position = "{1195, 1076}";
},
{
name = ho.ring.uniq;
position = "{412, 695}";
},
{
name = hu;
position = "{813, 1081}";
},
{
name = hwa;
position = "{1188, -32}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"237 0 LINE",
"651 1041 LINE",
"1067 0 LINE",
"1277 0 LINE",
"737 1296 LINE",
"519 1578 LINE",
"392 1512 LINE",
"578 1296 LINE",
"28 0 LINE"
);
}
);
width = 1304;
},
{
anchors = (
{
name = haa;
position = "{1146, -28}";
},
{
name = hee;
position = "{1039, 77}";
},
{
name = hi;
position = "{1195, 50}";
},
{
name = ho.ring;
position = "{1103, 1076}";
},
{
name = ho.ring.uniq;
position = "{105, 203}";
},
{
name = hu;
position = "{771, 1081}";
},
{
name = hwa;
position = "{1146, -61}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"82 0 LINE",
"600 1242 LINE",
"1118 0 LINE",
"1177 0 LINE",
"635 1290 LINE",
"469 1553 LINE",
"455 1494 LINE",
"580 1296 LINE",
"33 0 LINE"
);
}
);
width = 1211;
},
{
anchors = (
{
name = haa;
position = "{1023, -8}";
},
{
name = hee;
position = "{970, 47}";
},
{
name = hi;
position = "{1077, 109}";
},
{
name = ho.ring;
position = "{1314, 1116}";
},
{
name = ho.ring.uniq;
position = "{247, 665}";
},
{
name = hu;
position = "{813, 1081}";
},
{
name = hwa;
position = "{992, -32}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"46 0 LINE",
"644 1041 LINE",
"876 0 LINE",
"1086 0 LINE",
"775 1296 LINE",
"606 1578 LINE",
"468 1512 LINE",
"616 1296 LINE",
"-163 0 LINE"
);
}
);
width = 1304;
},
{
anchors = (
{
name = haa;
position = "{957, 12}";
},
{
name = hee;
position = "{862, 77}";
},
{
name = hi;
position = "{1013, 50}";
},
{
name = ho.ring;
position = "{1102, 1076}";
},
{
name = ho.ring.uniq;
position = "{-38, 243}";
},
{
name = hu;
position = "{771, 1081}";
},
{
name = hwa;
position = "{957, 9}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-109 0 LINE",
"628 1242 LINE",
"927 0 LINE",
"986 0 LINE",
"672 1290 LINE",
"552 1553 LINE",
"528 1494 LINE",
"618 1296 LINE",
"-158 0 LINE"
);
}
);
width = 1211;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
userData = {
lsb = 140;
rsb = 137;
};
},
{
glyphname = ma.base.cap;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1534, 10}";
},
{
name = he.acute.bottom;
position = "{366, -1}";
},
{
name = hee;
position = "{1475, 0}";
},
{
name = hi;
position = "{1591, -274}";
},
{
name = ho;
position = "{378, 0}";
},
{
name = hu;
position = "{1620, 851}";
},
{
name = hwa;
position = "{1538, 0}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"558 0 LINE",
"875 670 LINE",
"1210 0 LINE",
"1662 0 LINE",
"1662 1459 LINE",
"1052 1459 LINE",
"869 1069 LINE",
"636 1459 LINE",
"130 1459 LINE",
"130 0 LINE"
);
},
{
closed = 1;
nodes = (
"420 1090 LINE",
"582 1090 LINE",
"703 827 LINE",
"498 357 LINE",
"420 357 LINE"
);
},
{
closed = 1;
nodes = (
"1261 357 LINE",
"1044 839 LINE",
"1147 1090 LINE",
"1364 1090 LINE",
"1364 357 LINE"
);
}
);
width = 1794;
},
{
anchors = (
{
name = haa;
position = "{1554, 0}";
},
{
name = he.acute.bottom;
position = "{595, -1}";
},
{
name = hee;
position = "{1495, 0}";
},
{
name = hi;
position = "{1601, -274}";
},
{
name = ho;
position = "{547, 0}";
},
{
name = hu;
position = "{1590, 831}";
},
{
name = hwa;
position = "{1528, 0}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"617 0 LINE",
"893 939 LINE",
"1200 0 LINE",
"1618 0 LINE",
"1618 1456 LINE",
"1011 1456 LINE",
"889 1082 LINE",
"767 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
},
{
closed = 1;
nodes = (
"361 1313 LINE",
"660 1313 LINE",
"761 962 LINE",
"516 128 LINE",
"361 128 LINE"
);
},
{
closed = 1;
nodes = (
"1306 128 LINE",
"1024 962 LINE",
"1125 1331 LINE",
"1444 1331 LINE",
"1444 128 LINE"
);
}
);
width = 1788;
},
{
anchors = (
{
name = haa;
position = "{1524, 0}";
},
{
name = he.acute.bottom;
position = "{516, -1}";
},
{
name = hee;
position = "{1515, 0}";
},
{
name = hi;
position = "{1581, -314}";
},
{
name = ho;
position = "{468, 0}";
},
{
name = hu;
position = "{1610, 791}";
},
{
name = hwa;
position = "{1519, 0}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"499 0 LINE",
"876 907 LINE",
"1241 0 LINE",
"1556 0 LINE",
"1556 1459 LINE",
"1053 1459 LINE",
"870 999 LINE",
"637 1459 LINE",
"200 1459 LINE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"254 1397 LINE",
"591 1397 LINE",
"841 935 LINE",
"458 50 LINE",
"254 50 LINE"
);
},
{
closed = 1;
nodes = (
"1280 50 LINE",
"912 935 LINE",
"1103 1397 LINE",
"1502 1397 LINE",
"1502 50 LINE"
);
}
);
width = 1756;
},
{
anchors = (
{
name = haa;
position = "{1363, 0}";
},
{
name = he.acute.bottom;
position = "{404, -1}";
},
{
name = hee;
position = "{1304, 0}";
},
{
name = hi;
position = "{1362, -274}";
},
{
name = ho;
position = "{356, 0}";
},
{
name = hu;
position = "{1546, 831}";
},
{
name = hwa;
position = "{1337, 0}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"426 0 LINE",
"868 939 LINE",
"1009 0 LINE",
"1427 0 LINE",
"1684 1456 LINE",
"1077 1456 LINE",
"889 1082 LINE",
"833 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
},
{
closed = 1;
nodes = (
"402 1313 LINE",
"701 1313 LINE",
"740 962 LINE",
"348 128 LINE",
"193 128 LINE"
);
},
{
closed = 1;
nodes = (
"1138 128 LINE",
"1003 962 LINE",
"1169 1331 LINE",
"1488 1331 LINE",
"1276 128 LINE"
);
}
);
width = 1788;
},
{
anchors = (
{
name = haa;
position = "{1333, 0}";
},
{
name = he.acute.bottom;
position = "{325, -1}";
},
{
name = hee;
position = "{1324, 0}";
},
{
name = hi;
position = "{1335, -314}";
},
{
name = ho;
position = "{277, 0}";
},
{
name = hu;
position = "{1559, 791}";
},
{
name = hwa;
position = "{1328, 0}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"308 0 LINE",
"845 907 LINE",
"1050 0 LINE",
"1365 0 LINE",
"1622 1459 LINE",
"1119 1459 LINE",
"855 999 LINE",
"703 1459 LINE",
"266 1459 LINE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"310 1397 LINE",
"647 1397 LINE",
"815 935 LINE",
"276 50 LINE",
"72 50 LINE"
);
},
{
closed = 1;
nodes = (
"1098 50 LINE",
"886 935 LINE",
"1159 1397 LINE",
"1558 1397 LINE",
"1320 50 LINE"
);
}
);
width = 1755;
}
);
leftMetricsKey = M;
rightMetricsKey = M;
userData = {
lsb = 91;
rsb = 92;
};
},
{
glyphname = na.base.cap;
lastChange = "2020-12-16 02:09:00 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{805, 228}";
},
{
name = haa;
position = "{950, -17}";
},
{
name = hat;
position = "{537, 1278}";
},
{
name = hat.caps;
position = "{692, 1554}";
},
{
name = he.left;
position = "{96, 815}";
},
{
name = ho.ring;
position = "{1173, 949}";
},
{
name = hwa;
position = "{953, -50}";
},
{
name = nose;
position = "{218, 1541}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1074 -22 LINE",
"1074 225 LINE",
"628 225 LINE SMOOTH",
"521 225 OFFCURVE",
"383 328 OFFCURVE",
"383 795 CURVE SMOOTH",
"383 1098 OFFCURVE",
"523 1222 OFFCURVE",
"622 1231 CURVE",
"1068 1231 LINE",
"1068 1477 LINE",
"644 1477 LINE",
"311 1462 OFFCURVE",
"86 1204 OFFCURVE",
"86 660 CURVE SMOOTH",
"86 247 OFFCURVE",
"339 -22 OFFCURVE",
"643 -22 CURVE SMOOTH"
);
}
);
width = 1095;
},
{
anchors = (
{
name = fa;
position = "{915, 148}";
},
{
name = haa;
position = "{1010, -17}";
},
{
name = hat;
position = "{587, 1278}";
},
{
name = hat.caps;
position = "{1006, 1554}";
},
{
name = he.left;
position = "{156, 815}";
},
{
name = ho.ring;
position = "{1128, 1079}";
},
{
name = hwa;
position = "{996, -20}";
},
{
name = nose;
position = "{261.468, 1451}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1074 -22 LINE",
"1074 136 LINE",
"688 136 LINE SMOOTH",
"451 136 OFFCURVE",
"312 338 OFFCURVE",
"312 795 CURVE SMOOTH",
"312 1123 OFFCURVE",
"454 1311 OFFCURVE",
"691 1318 CURVE",
"1074 1318 LINE",
"1074 1476 LINE",
"688 1476 LINE SMOOTH",
"318 1476 OFFCURVE",
"119 1175 OFFCURVE",
"119 800 CURVE SMOOTH",
"119 247 OFFCURVE",
"344 -22 OFFCURVE",
"688 -22 CURVE SMOOTH"
);
}
);
width = 1128;
},
{
anchors = (
{
name = fa;
position = "{755, 108}";
},
{
name = haa;
position = "{1036, -17}";
},
{
name = hat;
position = "{566, 1278}";
},
{
name = hat.caps;
position = "{989.636, 1554}";
},
{
name = he.left;
position = "{135, 815}";
},
{
name = ho.ring;
position = "{1172, 1197}";
},
{
name = hwa;
position = "{1041, -20}";
},
{
name = nose;
position = "{257.215, 1451}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1069 -22 LINE",
"1069 30 LINE",
"683 30 LINE SMOOTH",
"316 30 OFFCURVE",
"198 400 OFFCURVE",
"198 795 CURVE SMOOTH",
"198 1299 OFFCURVE",
"408 1420 OFFCURVE",
"677 1429 CURVE",
"1063 1429 LINE",
"1063 1477 LINE",
"677 1477 LINE",
"284 1462 OFFCURVE",
"144 1204 OFFCURVE",
"144 800 CURVE SMOOTH",
"144 247 OFFCURVE",
"339 -22 OFFCURVE",
"683 -22 CURVE SMOOTH"
);
}
);
width = 1124;
},
{
anchors = (
{
name = fa;
position = "{639, 138}";
},
{
name = haa;
position = "{816, -17}";
},
{
name = hat;
position = "{622, 1278}";
},
{
name = hat.caps;
position = "{1089, 1554}";
},
{
name = he.left;
position = "{109, 815}";
},
{
name = ho.ring;
position = "{1271, 1129}";
},
{
name = hwa;
position = "{782, -36}";
},
{
name = nose;
position = "{327, 1451}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"879 -22 LINE",
"907 136 LINE",
"521 136 LINE SMOOTH",
"285 136 OFFCURVE",
"181 338 OFFCURVE",
"261 795 CURVE SMOOTH",
"319 1123 OFFCURVE",
"494 1311 OFFCURVE",
"733 1318 CURVE",
"1116 1318 LINE",
"1143 1476 LINE",
"757 1476 LINE SMOOTH",
"387 1476 OFFCURVE",
"135 1175 OFFCURVE",
"69 800 CURVE SMOOTH",
"-28 247 OFFCURVE",
"149 -22 OFFCURVE",
"493 -22 CURVE SMOOTH"
);
}
);
width = 1129;
},
{
anchors = (
{
name = fa;
position = "{583, 108}";
},
{
name = haa;
position = "{842, -17}";
},
{
name = hat;
position = "{601, 1278}";
},
{
name = hat.caps;
position = "{1073, 1554}";
},
{
name = he.left;
position = "{88, 815}";
},
{
name = ho.ring;
position = "{1185, 1187}";
},
{
name = hwa;
position = "{847, -20}";
},
{
name = nose;
position = "{322, 1451}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"874 -22 LINE",
"884 30 LINE",
"498 30 LINE SMOOTH",
"131 30 OFFCURVE",
"78 400 OFFCURVE",
"147 795 CURVE SMOOTH",
"236 1299 OFFCURVE",
"468 1420 OFFCURVE",
"738 1429 CURVE",
"1124 1429 LINE",
"1133 1477 LINE",
"747 1477 LINE",
"351 1462 OFFCURVE",
"166 1204 OFFCURVE",
"94 800 CURVE SMOOTH",
"-3 247 OFFCURVE",
"144 -22 OFFCURVE",
"488 -22 CURVE SMOOTH"
);
}
);
width = 1125;
}
);
leftMetricsKey = C;
rightMetricsKey = X;
userData = {
lsb = 92;
rsb = 68;
};
},
{
glyphname = oPh.base.cap;
lastChange = "2020-12-16 04:41:56 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{870.362, 0}";
},
{
name = haa.acute;
position = "{734, -112}";
},
{
name = hee;
position = "{859.37, -39}";
},
{
name = hi;
position = "{922, -302}";
},
{
name = hu;
position = "{1282, 1071}";
},
{
name = hwa;
position = "{855, -69}";
},
{
name = neck;
position = "{715, 1401}";
},
{
name = tsa.belt;
position = "{483.645, 550}";
},
{
name = tsa.belt.caps;
position = "{631, 757}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"900.333 -20 OFFCURVE",
"1073.5 90.5 OFFCURVE",
"1163.5 284.5 CURVE SMOOTH",
"1208.5 381.5 OFFCURVE",
"1231 520 OFFCURVE",
"1231 659 CURVE SMOOTH",
"1231 1154 OFFCURVE",
"1107 1456 OFFCURVE",
"721 1476 CURVE SMOOTH",
"302 1498 OFFCURVE",
"133 1164 OFFCURVE",
"133 712 CURVE SMOOTH",
"133 497 OFFCURVE",
"204 225 OFFCURVE",
"326 113 CURVE SMOOTH",
"419 27 OFFCURVE",
"541 -20 OFFCURVE",
"683 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"355 34 OFFCURVE",
"191 317 OFFCURVE",
"191 747 CURVE SMOOTH",
"191 1124 OFFCURVE",
"345 1422 OFFCURVE",
"711 1422 CURVE SMOOTH",
"1095 1422 OFFCURVE",
"1177 1020 OFFCURVE",
"1177 627 CURVE SMOOTH",
"1177 262 OFFCURVE",
"987 34 OFFCURVE",
"683 34 CURVE SMOOTH"
);
}
);
width = 1364;
},
{
anchors = (
{
name = haa;
position = "{902, -30}";
},
{
name = haa.acute;
position = "{724, -99}";
},
{
name = hee;
position = "{891, -39}";
},
{
name = hi;
position = "{1035, -292}";
},
{
name = hu;
position = "{1302, 931}";
},
{
name = hwa;
position = "{887, -40}";
},
{
name = neck;
position = "{666, 1451}";
},
{
name = tsa.belt;
position = "{501.374, 550}";
},
{
name = tsa.belt.caps;
position = "{706, 757}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"950 -20 OFFCURVE",
"1148 101 OFFCURVE",
"1250 318 CURVE SMOOTH",
"1300.667 426 OFFCURVE",
"1326 551.667 OFFCURVE",
"1326 760 CURVE SMOOTH",
"1326 1168 OFFCURVE",
"1100 1476 OFFCURVE",
"706 1476 CURVE SMOOTH",
"305 1476 OFFCURVE",
"86 1161 OFFCURVE",
"86 759 CURVE SMOOTH",
"86 407 OFFCURVE",
"195.667 183 OFFCURVE",
"385 67 CURVE SMOOTH",
"479.667 9 OFFCURVE",
"587.333 -20 OFFCURVE",
"708 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"502.667 226 OFFCURVE",
"390 397.667 OFFCURVE",
"390 766 CURVE SMOOTH",
"390 1069 OFFCURVE",
"504.667 1228 OFFCURVE",
"706 1228 CURVE SMOOTH",
"908.667 1228 OFFCURVE",
"1022 1066.333 OFFCURVE",
"1022 761 CURVE SMOOTH",
"1022 387 OFFCURVE",
"909.333 226 OFFCURVE",
"708 226 CURVE SMOOTH"
);
}
);
width = 1414;
},
{
anchors = (
{
name = haa;
position = "{898.438, 0}";
},
{
name = haa.acute;
position = "{732, -72}";
},
{
name = hee;
position = "{887.092, -39}";
},
{
name = hi;
position = "{971, -243}";
},
{
name = hu;
position = "{1287, 971}";
},
{
name = hwa;
position = "{883, -20}";
},
{
name = neck;
position = "{693, 1401}";
},
{
name = tsa.belt;
position = "{499.247, 550}";
},
{
name = tsa.belt.caps;
position = "{652, 757}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"939.667 -20 OFFCURVE",
"1121 94.833 OFFCURVE",
"1217 307.5 CURVE SMOOTH",
"1265 413.833 OFFCURVE",
"1289 538.333 OFFCURVE",
"1289 773 CURVE SMOOTH",
"1289 1173 OFFCURVE",
"1086 1476 OFFCURVE",
"703 1476 CURVE SMOOTH",
"317 1476 OFFCURVE",
"118 1159 OFFCURVE",
"118 773 CURVE SMOOTH",
"118 476 OFFCURVE",
"170 313 OFFCURVE",
"261 193 CURVE SMOOTH",
"367 54 OFFCURVE",
"522 -20 OFFCURVE",
"705 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"458.333 143 OFFCURVE",
"309 346.333 OFFCURVE",
"309 788 CURVE SMOOTH",
"309 1116 OFFCURVE",
"460.333 1311 OFFCURVE",
"703 1311 CURVE SMOOTH",
"952.333 1311 OFFCURVE",
"1098 1120.333 OFFCURVE",
"1098 775 CURVE SMOOTH",
"1098 330 OFFCURVE",
"953 143 OFFCURVE",
"705 143 CURVE SMOOTH"
);
}
);
width = 1408;
},
{
anchors = (
{
name = haa;
position = "{708, -50}";
},
{
name = haa.acute;
position = "{447, -102}";
},
{
name = hee;
position = "{689, -39}";
},
{
name = hi;
position = "{748, -302}";
},
{
name = hu;
position = "{1267, 971}";
},
{
name = hwa;
position = "{692, -50}";
},
{
name = neck;
position = "{749, 1401}";
},
{
name = tsa.belt;
position = "{405, 550}";
},
{
name = tsa.belt.caps;
position = "{595, 757}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"745 -20 OFFCURVE",
"947 95 OFFCURVE",
"1080 308 CURVE SMOOTH",
"1147 414 OFFCURVE",
"1193 538 OFFCURVE",
"1235 773 CURVE SMOOTH",
"1305 1173 OFFCURVE",
"1155 1476 OFFCURVE",
"772 1476 CURVE SMOOTH",
"386 1476 OFFCURVE",
"132 1159 OFFCURVE",
"64 773 CURVE SMOOTH",
"11 476 OFFCURVE",
"34 313 OFFCURVE",
"104 193 CURVE SMOOTH",
"186 54 OFFCURVE",
"328 -20 OFFCURVE",
"511 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 143 OFFCURVE",
"179 346 OFFCURVE",
"257 788 CURVE SMOOTH",
"315 1116 OFFCURVE",
"501 1311 OFFCURVE",
"743 1311 CURVE SMOOTH",
"993 1311 OFFCURVE",
"1105 1120 OFFCURVE",
"1044 775 CURVE SMOOTH",
"965 330 OFFCURVE",
"787 143 OFFCURVE",
"539 143 CURVE SMOOTH"
);
}
);
width = 1408;
},
{
anchors = (
{
name = haa;
position = "{680, 0}";
},
{
name = haa.acute;
position = "{449, -132}";
},
{
name = hee;
position = "{662, -39}";
},
{
name = hi;
position = "{678, -302}";
},
{
name = hu;
position = "{1280, 1071}";
},
{
name = hwa;
position = "{665, 0}";
},
{
name = neck;
position = "{771, 1401}";
},
{
name = tsa.belt;
position = "{390, 550}";
},
{
name = tsa.belt.caps;
position = "{574, 757}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"706 -20 OFFCURVE",
"899 91 OFFCURVE",
"1023 285 CURVE SMOOTH",
"1085 382 OFFCURVE",
"1132 520 OFFCURVE",
"1156 659 CURVE SMOOTH",
"1244 1154 OFFCURVE",
"1173 1456 OFFCURVE",
"790 1476 CURVE SMOOTH",
"375 1498 OFFCURVE",
"147 1164 OFFCURVE",
"68 712 CURVE SMOOTH",
"30 497 OFFCURVE",
"53 225 OFFCURVE",
"155 113 CURVE SMOOTH",
"233 27 OFFCURVE",
"347 -20 OFFCURVE",
"489 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 34 OFFCURVE",
"56 317 OFFCURVE",
"132 747 CURVE SMOOTH",
"198 1124 OFFCURVE",
"405 1422 OFFCURVE",
"771 1422 CURVE SMOOTH",
"1155 1422 OFFCURVE",
"1166 1020 OFFCURVE",
"1097 627 CURVE SMOOTH",
"1032 262 OFFCURVE",
"802 34 OFFCURVE",
"498 34 CURVE SMOOTH"
);
}
);
width = 1363;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = pa.base.cap;
lastChange = "2020-12-15 18:42:27 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{939, 15}";
},
{
name = haa.acute;
position = "{571, 16}";
},
{
name = hat.caps;
position = "{559, 1606}";
},
{
name = he.acute.top;
position = "{570, 1521}";
},
{
name = hee;
position = "{628, 52}";
},
{
name = hi;
position = "{755, 114}";
},
{
name = ho.ring;
position = "{910, 1561}";
},
{
name = hu;
position = "{734.072, 983}";
},
{
name = hwa;
position = "{589, -52}";
},
{
name = neck.caps;
position = "{612.764, 1532}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"780 0 LINE",
"780 1213 LINE",
"1226 1213 LINE",
"1226 1456 LINE",
"40 1456 LINE",
"40 1213 LINE",
"480 1213 LINE",
"480 0 LINE"
);
}
);
userData = {
_smart.he.acute.top.cap = 1;
};
width = 1267;
},
{
anchors = (
{
name = haa;
position = "{788, 15}";
},
{
name = haa.acute;
position = "{589, 16}";
},
{
name = hat.caps;
position = "{873, 1636}";
},
{
name = he.acute.top;
position = "{579, 1511}";
},
{
name = hee;
position = "{644, 52}";
},
{
name = hi;
position = "{699, 114}";
},
{
name = ho.ring;
position = "{868, 1561}";
},
{
name = hu;
position = "{708, 983}";
},
{
name = hwa;
position = "{616, -52}";
},
{
name = neck.caps;
position = "{601, 1532}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"707 0 LINE",
"707 1298 LINE",
"1175 1298 LINE",
"1175 1456 LINE",
"49 1456 LINE",
"49 1298 LINE",
"516 1298 LINE",
"516 0 LINE"
);
}
);
userData = {
_smart.he.acute.top.cap = 1;
};
width = 1222;
},
{
anchors = (
{
name = haa;
position = "{749, 75}";
},
{
name = haa.acute;
position = "{618, 16}";
},
{
name = hat.caps;
position = "{594, 1736}";
},
{
name = he.acute.top;
position = "{608, 1531}";
},
{
name = hee;
position = "{705, 72}";
},
{
name = hi;
position = "{670, 54}";
},
{
name = ho.ring;
position = "{819, 1641}";
},
{
name = hu;
position = "{709.159, 983}";
},
{
name = hwa;
position = "{614, -32}";
},
{
name = neck.caps;
position = "{602, 1532}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"639 0 LINE",
"639 1402 LINE",
"1169 1402 LINE",
"1169 1456 LINE",
"55 1456 LINE",
"55 1402 LINE",
"585 1402 LINE",
"585 0 LINE"
);
}
);
userData = {
_smart.he.acute.top.cap = 1;
};
width = 1224;
},
{
anchors = (
{
name = haa;
position = "{600, 15}";
},
{
name = haa.acute;
position = "{401, 16}";
},
{
name = hat.caps;
position = "{971, 1636}";
},
{
name = he.acute.top;
position = "{655, 1511}";
},
{
name = hee;
position = "{462, 52}";
},
{
name = hi;
position = "{528, 114}";
},
{
name = ho.ring;
position = "{1035, 1581}";
},
{
name = hu;
position = "{691, 983}";
},
{
name = hwa;
position = "{416, -52}";
},
{
name = neck.caps;
position = "{680, 1532}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"516 0 LINE",
"745 1298 LINE",
"1213 1298 LINE",
"1241 1456 LINE",
"115 1456 LINE",
"87 1298 LINE",
"554 1298 LINE",
"325 0 LINE"
);
}
);
userData = {
_smart.he.acute.top.cap = 1;
};
width = 1222;
},
{
anchors = (
{
name = haa;
position = "{571, 75}";
},
{
name = haa.acute;
position = "{430, 16}";
},
{
name = hat.caps;
position = "{709, 1736}";
},
{
name = he.acute.top;
position = "{687, 1531}";
},
{
name = hee;
position = "{527, 72}";
},
{
name = hi;
position = "{489, 54}";
},
{
name = ho.ring;
position = "{958, 1641}";
},
{
name = hu;
position = "{692, 983}";
},
{
name = hwa;
position = "{418, -32}";
},
{
name = neck.caps;
position = "{681, 1532}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"448 0 LINE",
"695 1402 LINE",
"1225 1402 LINE",
"1235 1456 LINE",
"121 1456 LINE",
"111 1402 LINE",
"641 1402 LINE",
"394 0 LINE"
);
}
);
userData = {
_smart.he.acute.top.cap = 1;
};
width = 1224;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
userData = {
lsb = 9;
rsb = 71;
};
},
{
glyphname = ra.base.cap;
lastChange = "2020-12-15 04:44:47 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{849, 201}";
},
{
name = haa;
position = "{710, 3}";
},
{
name = haa.acute;
position = "{706, 5}";
},
{
name = hat.left;
position = "{318.007, 1360}";
},
{
name = hee;
position = "{1200, 170}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1067 0 LINE",
"1067 241 LINE",
"430 241 LINE",
"430 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
width = 1109;
},
{
anchors = (
{
name = fa;
position = "{822, 151}";
},
{
name = haa;
position = "{746, 3}";
},
{
name = haa.acute;
position = "{673, -5}";
},
{
name = hat.left;
position = "{316, 1360}";
},
{
name = hee;
position = "{1072, 80}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1052 0 LINE",
"1052 157 LINE",
"362 157 LINE",
"362 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
width = 1102;
},
{
anchors = (
{
name = fa;
position = "{726, 91}";
},
{
name = haa;
position = "{614, 3}";
},
{
name = haa.acute;
position = "{603, -4}";
},
{
name = hat.left;
position = "{303.096, 1360}";
},
{
name = hee;
position = "{990, 20}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1002 0 LINE",
"1002 54 LINE",
"255 54 LINE",
"255 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
width = 1057;
},
{
anchors = (
{
name = fa;
position = "{598, 151}";
},
{
name = haa;
position = "{556, 3}";
},
{
name = haa.acute;
position = "{481, -5}";
},
{
name = hat.left;
position = "{365, 1360}";
},
{
name = hee;
position = "{895, 80}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"861 0 LINE",
"889 157 LINE",
"199 157 LINE",
"428 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
width = 1102;
},
{
anchors = (
{
name = fa;
position = "{580, 91}";
},
{
name = haa;
position = "{424, 3}";
},
{
name = haa.acute;
position = "{412, -4}";
},
{
name = hat.left;
position = "{352, 1360}";
},
{
name = hee;
position = "{803, 20}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"811 0 LINE",
"821 54 LINE",
"74 54 LINE",
"321 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
width = 1057;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
userData = {
lsb = 136;
rsb = 141;
};
},
{
glyphname = sa.base.cap;
lastChange = "2020-12-16 04:18:56 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1303, -23}";
},
{
name = he.acute.bottom;
position = "{646, 12}";
},
{
name = hee;
position = "{1247.884, 20}";
},
{
name = hha.acute;
position = "{546, 18}";
},
{
name = hi;
position = "{1432, -288}";
},
{
name = ho;
position = "{471, 11}";
},
{
name = hu;
position = "{1606, 956}";
},
{
name = hwa;
position = "{1319, -81}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"660 0 LINE",
"897 974 LINE",
"1134 0 LINE",
"1436 0 LINE",
"1759 1456 LINE",
"1460 1456 LINE",
"1264 420 LINE",
"1025 1456 LINE",
"771 1456 LINE",
"531 422 LINE",
"334 1456 LINE",
"35 1456 LINE",
"358 0 LINE"
);
}
);
width = 1791;
},
{
anchors = (
{
name = haa;
position = "{1368, -13}";
},
{
name = he.acute.bottom;
position = "{655, 12}";
},
{
name = hee;
position = "{1266, 20}";
},
{
name = hha.acute;
position = "{553.926, 18}";
},
{
name = hi;
position = "{1442, -288}";
},
{
name = ho;
position = "{491, 11}";
},
{
name = hu;
position = "{1670, 956}";
},
{
name = hwa;
position = "{1340, -44}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"588 0 LINE",
"922 1172 LINE",
"1245 0 LINE",
"1420 0 LINE",
"1773 1456 LINE",
"1580 1456 LINE",
"1323 264 LINE",
"1002 1456 LINE",
"840 1456 LINE",
"511 267 LINE",
"253 1456 LINE",
"61 1456 LINE",
"413 0 LINE"
);
}
);
width = 1817;
},
{
anchors = (
{
name = haa;
position = "{1370, -23}";
},
{
name = he.acute.bottom;
position = "{668.698, 12}";
},
{
name = hee;
position = "{1292.477, 20}";
},
{
name = hha.acute;
position = "{565.511, 18}";
},
{
name = hi;
position = "{1442, -288}";
},
{
name = ho;
position = "{477.788, 11}";
},
{
name = hu;
position = "{1704.926, 956}";
},
{
name = hwa;
position = "{1386.401, 49}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"515 0 LINE",
"928 1368 LINE",
"1340 0 LINE",
"1401 0 LINE",
"1793 1456 LINE",
"1734 1456 LINE",
"1366 90 LINE",
"959 1456 LINE",
"899 1456 LINE",
"489 90 LINE",
"121 1456 LINE",
"61 1456 LINE",
"454 0 LINE"
);
}
);
width = 1855;
},
{
anchors = (
{
name = haa;
position = "{1167, -23}";
},
{
name = he.acute.bottom;
position = "{466, 12}";
},
{
name = hee;
position = "{1079, 20}";
},
{
name = hha.acute;
position = "{366, 18}";
},
{
name = hi;
position = "{1200, -288}";
},
{
name = ho;
position = "{302, 11}";
},
{
name = hu;
position = "{1648, 956}";
},
{
name = hwa;
position = "{1141, -44}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"397 0 LINE",
"938 1172 LINE",
"1054 0 LINE",
"1229 0 LINE",
"1839 1456 LINE",
"1646 1456 LINE",
"1179 264 LINE",
"1068 1456 LINE",
"906 1456 LINE",
"367 267 LINE",
"319 1456 LINE",
"127 1456 LINE",
"222 0 LINE"
);
}
);
width = 1817;
},
{
anchors = (
{
name = haa;
position = "{1175, -30}";
},
{
name = he.acute.bottom;
position = "{480, 12}";
},
{
name = hee;
position = "{1105, 20}";
},
{
name = hha.acute;
position = "{378, 18}";
},
{
name = hi;
position = "{1200, -288}";
},
{
name = ho;
position = "{289, 11}";
},
{
name = hu;
position = "{1683, 956}";
},
{
name = hwa;
position = "{1191, 9}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"324 0 LINE",
"978 1368 LINE",
"1149 0 LINE",
"1210 0 LINE",
"1859 1456 LINE",
"1800 1456 LINE",
"1191 90 LINE",
"1025 1456 LINE",
"965 1456 LINE",
"314 90 LINE",
"187 1456 LINE",
"127 1456 LINE",
"263 0 LINE"
);
}
);
width = 1855;
}
);
leftMetricsKey = W;
rightMetricsKey = W;
userData = {
lsb = 43;
rsb = 48;
};
},
{
glyphname = tsa.base.cap;
lastChange = "2020-12-16 04:32:18 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{995.581, 18}";
},
{
name = hat.caps;
position = "{573.244, 1654}";
},
{
name = he;
position = "{1414, 1164}";
},
{
name = hee;
position = "{916.583, 67}";
},
{
name = hi;
position = "{1120, 124}";
},
{
name = ho;
position = "{185, 7}";
},
{
name = hu;
position = "{1006.722, 647}";
},
{
name = hwa;
position = "{984.44, 63}";
},
{
name = neck.caps;
position = "{585.398, 1465}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"331 0 LINE",
"331 349 LINE SMOOTH",
"331 440 OFFCURVE",
"474 510 OFFCURVE",
"601 575 CURVE",
"704 510 OFFCURVE",
"811 419 OFFCURVE",
"811 349 CURVE SMOOTH",
"811 0 LINE",
"1113 0 LINE",
"1113 351 LINE SMOOTH",
"1113 583 OFFCURVE",
"1034 673 OFFCURVE",
"813 742 CURVE",
"1022 807 OFFCURVE",
"1113 888 OFFCURVE",
"1113 1120 CURVE SMOOTH",
"1113 1331 OFFCURVE",
"919 1476 OFFCURVE",
"635 1476 CURVE SMOOTH",
"607 1476 LINE SMOOTH",
"323 1476 OFFCURVE",
"69 1331 OFFCURVE",
"69 1120 CURVE SMOOTH",
"69 888 OFFCURVE",
"187 807 OFFCURVE",
"396 742 CURVE",
"175 673 OFFCURVE",
"69 583 OFFCURVE",
"69 351 CURVE SMOOTH",
"69 0 LINE"
);
},
{
closed = 1;
nodes = (
"548 917 OFFCURVE",
"377 980 OFFCURVE",
"377 1091 CURVE SMOOTH",
"377 1175 OFFCURVE",
"499 1238 OFFCURVE",
"622 1240 CURVE SMOOTH",
"768 1243 OFFCURVE",
"841 1175 OFFCURVE",
"841 1091 CURVE SMOOTH",
"841 981 OFFCURVE",
"701 917 OFFCURVE",
"624 917 CURVE SMOOTH"
);
}
);
width = 1186;
},
{
anchors = (
{
name = haa;
position = "{1053, 18}";
},
{
name = hat.caps;
position = "{562.137, 1654}";
},
{
name = he;
position = "{1209, 1164}";
},
{
name = hee;
position = "{898.823, 67}";
},
{
name = hi;
position = "{1108, 54}";
},
{
name = ho;
position = "{123, 7}";
},
{
name = hu;
position = "{987.215, 647}";
},
{
name = hwa;
position = "{1055, 63}";
},
{
name = neck.caps;
position = "{574.055, 1465}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"150 0 LINE",
"150 349 LINE SMOOTH",
"152 580 OFFCURVE",
"360 650 OFFCURVE",
"588 714.77 CURVE",
"816 650 OFFCURVE",
"1024 580 OFFCURVE",
"1025 349 CURVE SMOOTH",
"1025 0 LINE",
"1080 0 LINE",
"1080 351 LINE SMOOTH",
"1080 583 OFFCURVE",
"904 673 OFFCURVE",
"682.756 742.071 CURVE",
"892 807 OFFCURVE",
"1080 888 OFFCURVE",
"1080 1120 CURVE SMOOTH",
"1080 1331 OFFCURVE",
"886 1476 OFFCURVE",
"602.002 1475.985 CURVE SMOOTH",
"574 1476 LINE SMOOTH",
"290 1476 OFFCURVE",
"96 1330.766 OFFCURVE",
"96 1120 CURVE SMOOTH",
"96 888 OFFCURVE",
"284 807 OFFCURVE",
"493.244 742.071 CURVE",
"272 673 OFFCURVE",
"96 583 OFFCURVE",
"96 351 CURVE SMOOTH",
"96 0 LINE"
);
},
{
closed = 1;
nodes = (
"435 771 OFFCURVE",
"150 897 OFFCURVE",
"150 1122 CURVE SMOOTH",
"150 1290.878 OFFCURVE",
"337 1417 OFFCURVE",
"585 1422 CURVE SMOOTH",
"879 1427 OFFCURVE",
"1026 1290.878 OFFCURVE",
"1026 1122 CURVE SMOOTH",
"1026 899 OFFCURVE",
"743 771 OFFCURVE",
"588 771 CURVE SMOOTH"
);
}
);
width = 1164;
},
{
anchors = (
{
name = haa;
position = "{1033, 18}";
},
{
name = hat.caps;
position = "{876, 1654}";
},
{
name = he;
position = "{1307, 1164}";
},
{
name = hee;
position = "{905, 67}";
},
{
name = hi;
position = "{1106, 94}";
},
{
name = ho;
position = "{164, 7}";
},
{
name = hu;
position = "{994, 647}";
},
{
name = hwa;
position = "{1005, -27}";
},
{
name = neck.caps;
position = "{578, 1465}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"272 0 LINE",
"272 368 LINE SMOOTH",
"272 505 OFFCURVE",
"350.027 567.596 OFFCURVE",
"587.5 639.4 CURVE",
"824.973 567.596 OFFCURVE",
"903 505 OFFCURVE",
"903 368 CURVE SMOOTH",
"903 0 LINE",
"1095 0 LINE",
"1095 373 LINE SMOOTH",
"1095 552 OFFCURVE",
"994 660 OFFCURVE",
"844.52 733.631 CURVE",
"997.894 810.84 OFFCURVE",
"1075.494 908.054 OFFCURVE",
"1092 1079 CURVE {name = \"❌\";}",
"1092 1308 OFFCURVE",
"890 1476 OFFCURVE",
"597 1476 CURVE SMOOTH",
"578 1476 LINE SMOOTH",
"285 1476 OFFCURVE",
"83 1308 OFFCURVE",
"83 1079 CURVE {name = \"❌\";}",
"99.506 908.054 OFFCURVE",
"177.106 810.84 OFFCURVE",
"330.48 733.631 CURVE",
"144.927 626.548 OFFCURVE",
"80 519 OFFCURVE",
"80 370 CURVE SMOOTH",
"80 0 LINE"
);
},
{
closed = 1;
nodes = (
"362 825 OFFCURVE",
"277 960 OFFCURVE",
"277.436 1068 CURVE SMOOTH",
"277 1222 OFFCURVE",
"402.28 1314.853 OFFCURVE",
"587.5 1317.922 CURVE SMOOTH",
"772.72 1314.853 OFFCURVE",
"898 1222 OFFCURVE",
"897.564 1068 CURVE SMOOTH",
"898 960 OFFCURVE",
"813 825 OFFCURVE",
"587.5 825.474 CURVE SMOOTH"
);
}
);
width = 1172;
},
{
anchors = (
{
name = haa;
position = "{842, -21}";
},
{
name = hat.caps;
position = "{918, 1654}";
},
{
name = he;
position = "{1322, 1164}";
},
{
name = hee;
position = "{727, 67}";
},
{
name = hi;
position = "{933, 94}";
},
{
name = ho;
position = "{-25, 7}";
},
{
name = hu;
position = "{918, 647}";
},
{
name = hwa;
position = "{810, -27}";
},
{
name = neck.caps;
position = "{647, 1465}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"82 0 LINE",
"147 368 LINE SMOOTH",
"171 505 OFFCURVE",
"260 568 OFFCURVE",
"510 639 CURVE",
"735 568 OFFCURVE",
"802 505 OFFCURVE",
"778 368 CURVE SMOOTH",
"713 0 LINE",
"905 0 LINE",
"971 373 LINE SMOOTH",
"1003 552 OFFCURVE",
"921 660 OFFCURVE",
"784 734 CURVE",
"951 811 OFFCURVE",
"1046 908 OFFCURVE",
"1092 1079 CURVE {name = \"❌\";}",
"1133 1308 OFFCURVE",
"960 1476 OFFCURVE",
"667 1476 CURVE SMOOTH",
"648 1476 LINE SMOOTH",
"355 1476 OFFCURVE",
"124 1308 OFFCURVE",
"83 1079 CURVE {name = \"❌\";}",
"70 908 OFFCURVE",
"130 811 OFFCURVE",
"270 734 CURVE",
"66 627 OFFCURVE",
"-19 519 OFFCURVE",
"-45 370 CURVE SMOOTH",
"-110 0 LINE"
);
},
{
closed = 1;
nodes = (
"318 825 OFFCURVE",
"256 960 OFFCURVE",
"276 1068 CURVE SMOOTH",
"303 1222 OFFCURVE",
"444 1315 OFFCURVE",
"630 1318 CURVE SMOOTH",
"815 1315 OFFCURVE",
"924 1222 OFFCURVE",
"896 1068 CURVE SMOOTH",
"877 960 OFFCURVE",
"769 825 OFFCURVE",
"543 825 CURVE SMOOTH"
);
}
);
width = 1174;
},
{
anchors = (
{
name = haa;
position = "{865, -8}";
},
{
name = hat.caps;
position = "{664, 1654}";
},
{
name = he;
position = "{1224, 1164}";
},
{
name = hee;
position = "{721, 67}";
},
{
name = hi;
position = "{928, 54}";
},
{
name = ho;
position = "{-66, 7}";
},
{
name = hu;
position = "{912, 647}";
},
{
name = hwa;
position = "{876, 63}";
},
{
name = neck.caps;
position = "{643, 1465}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-40 0 LINE",
"22 349 LINE SMOOTH",
"63 580 OFFCURVE",
"285 650 OFFCURVE",
"524 715 CURVE",
"741 650 OFFCURVE",
"938 580 OFFCURVE",
"897 349 CURVE SMOOTH",
"835 0 LINE",
"890 0 LINE",
"952 351 LINE SMOOTH",
"993 583 OFFCURVE",
"833 673 OFFCURVE",
"624 742 CURVE",
"845 807 OFFCURVE",
"1047 888 OFFCURVE",
"1088 1120 CURVE SMOOTH",
"1125 1331 OFFCURVE",
"956 1476 OFFCURVE",
"672 1476 CURVE SMOOTH",
"644 1476 LINE SMOOTH",
"360 1476 OFFCURVE",
"141 1331 OFFCURVE",
"104 1120 CURVE SMOOTH",
"63 888 OFFCURVE",
"237 807 OFFCURVE",
"434 742 CURVE",
"201 673 OFFCURVE",
"9 583 OFFCURVE",
"-32 351 CURVE SMOOTH",
"-94 0 LINE"
);
},
{
closed = 1;
nodes = (
"381 771 OFFCURVE",
"118 897 OFFCURVE",
"158 1122 CURVE SMOOTH",
"188 1291 OFFCURVE",
"397 1417 OFFCURVE",
"646 1422 CURVE SMOOTH",
"941 1427 OFFCURVE",
"1064 1291 OFFCURVE",
"1034 1122 CURVE SMOOTH",
"995 899 OFFCURVE",
"689 771 OFFCURVE",
"534 771 CURVE SMOOTH"
);
}
);
width = 1165;
}
);
leftMetricsKey = S;
rightMetricsKey = S;
},
{
glyphname = tsa.belt.cap;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _tsa.belt;
position = "{501.374, 550}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1060 596 LINE",
"1060 832 LINE",
"197 832 LINE",
"197 596 LINE"
);
}
);
width = 1481;
},
{
anchors = (
{
name = _tsa.belt;
position = "{499.247, 550}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1105 651 LINE",
"1105 802 LINE",
"270 802 LINE",
"270 651 LINE"
);
}
);
width = 1453;
},
{
anchors = (
{
name = _tsa.belt;
position = "{465.557, 550}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"1098 721 LINE",
"1098 775 LINE",
"263 775 LINE",
"263 721 LINE"
);
}
);
width = 1365;
},
{
anchors = (
{
name = _tsa.belt;
position = "{405, 550}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"1029 651 LINE",
"1056 802 LINE",
"221 802 LINE",
"194 651 LINE"
);
}
);
width = 1453;
},
{
anchors = (
{
name = _tsa.belt;
position = "{372, 550}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"1034 721 LINE",
"1044 775 LINE",
"209 775 LINE",
"199 721 LINE"
);
}
);
width = 1365;
}
);
},
{
glyphname = wa.base.cap;
lastChange = "2020-12-16 19:12:43 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{948, -4}";
},
{
name = haa.acute;
position = "{972, -55}";
},
{
name = hat.caps;
position = "{925.93, 1638}";
},
{
name = he;
position = "{1759, 990}";
},
{
name = he.acute.bottom;
position = "{1014, -23}";
},
{
name = he.acute.top;
position = "{920.687, 1546}";
},
{
name = hee;
position = "{1373, -81}";
},
{
name = hi;
position = "{1073, -293}";
},
{
name = ho.ring;
position = "{1242, 1624}";
},
{
name = hu;
position = "{1747, 1043}";
},
{
name = hwa;
position = "{987, 26}";
},
{
name = neck.caps;
position = "{977, 1446}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"1214 0 LINE SMOOTH",
"1439 0 OFFCURVE",
"1632 116 OFFCURVE",
"1734 311 CURVE SMOOTH",
"1785 408 OFFCURVE",
"1810 518 OFFCURVE",
"1810 639 CURVE SMOOTH",
"1810 828 LINE SMOOTH",
"1810 1067 OFFCURVE",
"1698 1269 OFFCURVE",
"1515 1376 CURVE SMOOTH",
"1424 1429 OFFCURVE",
"1322 1456 OFFCURVE",
"1209 1456 CURVE SMOOTH",
"710 1456 LINE SMOOTH",
"597 1456 OFFCURVE",
"472 1429 OFFCURVE",
"381 1376 CURVE SMOOTH",
"198 1269 OFFCURVE",
"86 1067 OFFCURVE",
"86 828 CURVE SMOOTH",
"86 639 LINE SMOOTH",
"86 518 OFFCURVE",
"111 408 OFFCURVE",
"162 311 CURVE SMOOTH",
"264 116 OFFCURVE",
"457 0 OFFCURVE",
"682 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"539 231 OFFCURVE",
"372 418 OFFCURVE",
"372 658 CURVE SMOOTH",
"372 796 LINE SMOOTH",
"372 1029 OFFCURVE",
"530 1225 OFFCURVE",
"769 1225 CURVE SMOOTH",
"831 1225 LINE",
"831 231 LINE",
"775 231 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1086 1225 LINE",
"1138 1225 LINE SMOOTH",
"1377 1225 OFFCURVE",
"1535 1029 OFFCURVE",
"1535 796 CURVE SMOOTH",
"1535 658 LINE SMOOTH",
"1535 419 OFFCURVE",
"1367 231 OFFCURVE",
"1131 231 CURVE SMOOTH",
"1086 231 LINE"
);
}
);
width = 1898;
},
{
anchors = (
{
name = haa;
position = "{944, -4}";
},
{
name = haa.acute;
position = "{901, -116}";
},
{
name = hat.caps;
position = "{1193, 1638}";
},
{
name = he;
position = "{1678, 990}";
},
{
name = he.acute.bottom;
position = "{967, -23}";
},
{
name = he.acute.top;
position = "{878, 1546}";
},
{
name = hee;
position = "{1309, -81}";
},
{
name = hi;
position = "{1033, -263}";
},
{
name = ho.ring;
position = "{1162, 1624}";
},
{
name = hu;
position = "{1649.204, 1043}";
},
{
name = hwa;
position = "{989, 26}";
},
{
name = neck.caps;
position = "{914, 1446}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"1171 0 LINE",
"1370 37 OFFCURVE",
"1524 152 OFFCURVE",
"1612 323 CURVE SMOOTH",
"1665 426 OFFCURVE",
"1691 547 OFFCURVE",
"1691 684 CURVE SMOOTH",
"1691 777 LINE SMOOTH",
"1691 1045 OFFCURVE",
"1580 1260 OFFCURVE",
"1385 1372 CURVE SMOOTH",
"1274 1436 OFFCURVE",
"1219 1456 OFFCURVE",
"1078 1456 CURVE SMOOTH",
"760 1456 LINE SMOOTH",
"507 1456 OFFCURVE",
"305 1340 OFFCURVE",
"199 1133 CURVE SMOOTH",
"146 1030 OFFCURVE",
"118 911 OFFCURVE",
"118 777 CURVE SMOOTH",
"118 684 LINE SMOOTH",
"118 409 OFFCURVE",
"228 196 OFFCURVE",
"425 85 CURVE SMOOTH",
"523 30 OFFCURVE",
"637 0 OFFCURVE",
"768 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"481 157 OFFCURVE",
"308 348 OFFCURVE",
"308 688 CURVE SMOOTH",
"308 773 LINE SMOOTH",
"308 1104 OFFCURVE",
"470 1298 OFFCURVE",
"755 1298 CURVE SMOOTH",
"820 1298 LINE",
"820 157 LINE",
"777 157 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1006 1298 LINE",
"1171 1298 LINE SMOOTH",
"1390 1298 OFFCURVE",
"1501 1056 OFFCURVE",
"1501 773 CURVE SMOOTH",
"1501 688 LINE SMOOTH",
"1501 405 OFFCURVE",
"1390 157 OFFCURVE",
"1171 157 CURVE SMOOTH",
"1006 157 LINE"
);
}
);
width = 1810;
},
{
anchors = (
{
name = haa;
position = "{829, -34}";
},
{
name = haa.acute;
position = "{828, -96}";
},
{
name = hat.caps;
position = "{810, 1648}";
},
{
name = he;
position = "{1538.939, 990}";
},
{
name = he.acute.bottom;
position = "{886.862, -23}";
},
{
name = he.acute.top;
position = "{805.238, 1546}";
},
{
name = hee;
position = "{1201, -51}";
},
{
name = hi;
position = "{899, -333}";
},
{
name = ho.ring;
position = "{1029, 1624}";
},
{
name = hu;
position = "{1476.726, 1043}";
},
{
name = hwa;
position = "{847, 26}";
},
{
name = neck.caps;
position = "{831, 1446}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"931 0 LINE SMOOTH",
"1156 0 OFFCURVE",
"1349 116 OFFCURVE",
"1451 311 CURVE SMOOTH",
"1502 408 OFFCURVE",
"1527 518 OFFCURVE",
"1527 639 CURVE SMOOTH",
"1527 828 LINE SMOOTH",
"1527 1067 OFFCURVE",
"1415 1269 OFFCURVE",
"1232 1376 CURVE SMOOTH",
"1141 1429 OFFCURVE",
"1039 1456 OFFCURVE",
"926 1456 CURVE SMOOTH",
"734 1456 LINE SMOOTH",
"621 1456 OFFCURVE",
"519 1429 OFFCURVE",
"428 1376 CURVE SMOOTH",
"245 1269 OFFCURVE",
"133 1067 OFFCURVE",
"133 828 CURVE SMOOTH",
"133 639 LINE SMOOTH",
"133 518 OFFCURVE",
"158 408 OFFCURVE",
"209 311 CURVE SMOOTH",
"311 116 OFFCURVE",
"504 0 OFFCURVE",
"729 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"414 54 OFFCURVE",
"187 308 OFFCURVE",
"187 633 CURVE SMOOTH",
"187 820 LINE SMOOTH",
"187 1136 OFFCURVE",
"402 1402 OFFCURVE",
"726 1402 CURVE SMOOTH",
"810 1402 LINE",
"810 54 LINE",
"734 54 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"864 1402 LINE",
"934 1402 LINE SMOOTH",
"1258 1402 OFFCURVE",
"1473 1136 OFFCURVE",
"1473 820 CURVE SMOOTH",
"1473 633 LINE SMOOTH",
"1473 308 OFFCURVE",
"1246 54 OFFCURVE",
"926 54 CURVE SMOOTH",
"864 54 LINE"
);
}
);
width = 1660;
},
{
anchors = (
{
name = haa;
position = "{714, -4}";
},
{
name = haa.acute;
position = "{681, -116}";
},
{
name = hat.caps;
position = "{1292, 1638}";
},
{
name = he;
position = "{1663, 990}";
},
{
name = he.acute.bottom;
position = "{773, -23}";
},
{
name = he.acute.top;
position = "{961, 1546}";
},
{
name = hee;
position = "{1130, -71}";
},
{
name = hi;
position = "{739, -253}";
},
{
name = ho.ring;
position = "{1271, 1674}";
},
{
name = hu;
position = "{1643, 1043}";
},
{
name = hwa;
position = "{754, -24}";
},
{
name = neck.caps;
position = "{979, 1446}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"981 0 LINE",
"1187 37 OFFCURVE",
"1361 152 OFFCURVE",
"1479 323 CURVE SMOOTH",
"1550 426 OFFCURVE",
"1598 547 OFFCURVE",
"1622 684 CURVE SMOOTH",
"1638 777 LINE SMOOTH",
"1684 1045 OFFCURVE",
"1612 1260 OFFCURVE",
"1437 1372 CURVE SMOOTH",
"1337 1436 OFFCURVE",
"1286 1456 OFFCURVE",
"1145 1456 CURVE SMOOTH",
"827 1456 LINE SMOOTH",
"574 1456 OFFCURVE",
"351 1340 OFFCURVE",
"209 1133 CURVE SMOOTH",
"138 1030 OFFCURVE",
"88 911 OFFCURVE",
"65 777 CURVE SMOOTH",
"49 684 LINE SMOOTH",
"2 409 OFFCURVE",
"73 196 OFFCURVE",
"250 85 CURVE SMOOTH",
"339 30 OFFCURVE",
"447 0 OFFCURVE",
"578 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"319 157 OFFCURVE",
"180 348 OFFCURVE",
"240 688 CURVE SMOOTH",
"255 773 LINE SMOOTH",
"313 1104 OFFCURVE",
"509 1298 OFFCURVE",
"794 1298 CURVE SMOOTH",
"859 1298 LINE",
"658 157 LINE",
"615 157 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1045 1298 LINE",
"1210 1298 LINE SMOOTH",
"1394 1298 OFFCURVE",
"1498 1056 OFFCURVE",
"1448 773 CURVE SMOOTH",
"1433 688 LINE SMOOTH",
"1383 405 OFFCURVE",
"1234 157 OFFCURVE",
"1009 157 CURVE SMOOTH",
"844 157 LINE"
);
}
);
width = 1811;
},
{
anchors = (
{
name = haa;
position = "{633, -34}";
},
{
name = haa.acute;
position = "{621, -96}";
},
{
name = hat.caps;
position = "{911, 1648}";
},
{
name = he;
position = "{1524, 990}";
},
{
name = he.acute.bottom;
position = "{693, -23}";
},
{
name = he.acute.top;
position = "{888, 1546}";
},
{
name = hee;
position = "{1021, -41}";
},
{
name = hi;
position = "{667, -343}";
},
{
name = ho.ring;
position = "{1126, 1624}";
},
{
name = hu;
position = "{1541, 1043}";
},
{
name = hwa;
position = "{662, 26}";
},
{
name = neck.caps;
position = "{896, 1446}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"741 0 LINE SMOOTH",
"966 0 OFFCURVE",
"1180 116 OFFCURVE",
"1316 311 CURVE SMOOTH",
"1384 408 OFFCURVE",
"1429 518 OFFCURVE",
"1450 639 CURVE SMOOTH",
"1483 828 LINE SMOOTH",
"1525 1067 OFFCURVE",
"1449 1269 OFFCURVE",
"1285 1376 CURVE SMOOTH",
"1203 1429 OFFCURVE",
"1106 1456 OFFCURVE",
"993 1456 CURVE SMOOTH",
"801 1456 LINE SMOOTH",
"688 1456 OFFCURVE",
"581 1429 OFFCURVE",
"481 1376 CURVE SMOOTH",
"279 1269 OFFCURVE",
"131 1067 OFFCURVE",
"89 828 CURVE SMOOTH",
"56 639 LINE SMOOTH",
"35 518 OFFCURVE",
"40 408 OFFCURVE",
"74 311 CURVE SMOOTH",
"142 116 OFFCURVE",
"314 0 OFFCURVE",
"539 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"234 54 OFFCURVE",
"52 308 OFFCURVE",
"109 633 CURVE SMOOTH",
"142 820 LINE SMOOTH",
"198 1136 OFFCURVE",
"459 1402 OFFCURVE",
"783 1402 CURVE SMOOTH",
"867 1402 LINE",
"630 54 LINE",
"554 54 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"921 1402 LINE",
"991 1402 LINE SMOOTH",
"1315 1402 OFFCURVE",
"1484 1136 OFFCURVE",
"1428 820 CURVE SMOOTH",
"1395 633 LINE SMOOTH",
"1338 308 OFFCURVE",
"1066 54 OFFCURVE",
"746 54 CURVE SMOOTH",
"684 54 LINE"
);
}
);
width = 1661;
}
);
leftMetricsKey = O;
rightMetricsKey = O;
},
{
glyphname = ya.base.cap;
lastChange = "2020-12-14 09:20:42 +0000";
layers = (
{
anchors = (
{
name = da.caps;
position = "{291.397, 10}";
},
{
name = haa;
position = "{1153, 14}";
},
{
name = hat.caps;
position = "{665.612, 1642}";
},
{
name = he;
position = "{1482, 1009}";
},
{
name = he.left.outer;
position = "{259.536, 1466}";
},
{
name = hee;
position = "{1209, -8}";
},
{
name = hi;
position = "{1285, 105}";
},
{
name = ho;
position = "{249, -26}";
},
{
name = hu;
position = "{1154.341, 319}";
},
{
name = hwa;
position = "{1162, -2}";
},
{
name = neck.caps;
position = "{655.388, 1480}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 513 LINE",
"693 513 LINE SMOOTH",
"1038.333 513 OFFCURVE",
"1245 688.667 OFFCURVE",
"1245 974 CURVE SMOOTH",
"1242.593 1323.966 OFFCURVE",
"854 1456 OFFCURVE",
"698 1456 CURVE SMOOTH",
"130 1456 LINE",
"130 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 1213 LINE",
"705 1213 LINE SMOOTH",
"853 1213 OFFCURVE",
"942 1114.667 OFFCURVE",
"942 972 CURVE SMOOTH",
"942 833.333 OFFCURVE",
"856.667 756 OFFCURVE",
"698 756 CURVE SMOOTH",
"430 756 LINE"
);
}
);
userData = {
_smart.ho.caps.cap = 1;
};
width = 1321;
},
{
anchors = (
{
name = da.caps;
position = "{278, 10}";
},
{
name = haa;
position = "{1140, 14}";
},
{
name = hat.caps;
position = "{891, 1642}";
},
{
name = he;
position = "{1405, 1009}";
},
{
name = he.left.outer;
position = "{250, 1466}";
},
{
name = hee;
position = "{1118, 32}";
},
{
name = hi;
position = "{1209, 75}";
},
{
name = ho;
position = "{253, -24}";
},
{
name = hu;
position = "{1109, 329}";
},
{
name = hwa;
position = "{1119, -52}";
},
{
name = neck.caps;
position = "{641, 1480}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 570 LINE",
"704 570 LINE SMOOTH",
"1033.333 570 OFFCURVE",
"1216 728.333 OFFCURVE",
"1216 1011 CURVE SMOOTH",
"1216 1279 OFFCURVE",
"1024.667 1456 OFFCURVE",
"706 1456 CURVE SMOOTH",
"169 1456 LINE",
"169 0 LINE"
);
},
{
closed = 1;
nodes = (
"361 1298 LINE",
"717 1298 LINE SMOOTH",
"908 1298 OFFCURVE",
"1024 1182.333 OFFCURVE",
"1024 1009 CURVE SMOOTH",
"1024 826.333 OFFCURVE",
"911.333 727 OFFCURVE",
"706 727 CURVE SMOOTH",
"361 727 LINE"
);
}
);
userData = {
_smart.ho.caps.cap = 1;
};
width = 1292;
},
{
anchors = (
{
name = da.caps;
position = "{271.324, 10}";
},
{
name = haa;
position = "{1051, 14}";
},
{
name = hat.caps;
position = "{620, 1682}";
},
{
name = he;
position = "{1287, 1009}";
},
{
name = he.left.outer;
position = "{220, 1526}";
},
{
name = hee;
position = "{933, 102}";
},
{
name = hi;
position = "{1124, 15}";
},
{
name = ho;
position = "{226, -25}";
},
{
name = hu;
position = "{975, 339}";
},
{
name = hwa;
position = "{1057, -2}";
},
{
name = neck.caps;
position = "{610.24, 1480}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 615 LINE",
"662 615 LINE SMOOTH",
"958 615 OFFCURVE",
"1125 767 OFFCURVE",
"1125 1031 CURVE SMOOTH",
"1125 1298 OFFCURVE",
"952 1456 OFFCURVE",
"655 1456 CURVE SMOOTH",
"200 1456 LINE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"254 1402 LINE",
"655 1402 LINE SMOOTH",
"918 1402 OFFCURVE",
"1071 1264 OFFCURVE",
"1071 1029 CURVE SMOOTH",
"1071 802 OFFCURVE",
"918 669 OFFCURVE",
"655 669 CURVE SMOOTH",
"254 669 LINE"
);
}
);
userData = {
_smart.ho.caps.cap = 1;
};
width = 1230;
},
{
anchors = (
{
name = da.caps;
position = "{89, 10}";
},
{
name = haa;
position = "{952, 14}";
},
{
name = hat.caps;
position = "{990, 1642}";
},
{
name = he;
position = "{1392, 1009}";
},
{
name = he.left.outer;
position = "{318, 1466}";
},
{
name = hee;
position = "{933, 32}";
},
{
name = hi;
position = "{1021, 75}";
},
{
name = ho;
position = "{58, -24}";
},
{
name = hu;
position = "{976, 329}";
},
{
name = hwa;
position = "{919, -52}";
},
{
name = neck.caps;
position = "{711, 1480}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"271 570 LINE",
"614 570 LINE SMOOTH",
"943 570 OFFCURVE",
"1154 728 OFFCURVE",
"1203 1011 CURVE SMOOTH",
"1251 1279 OFFCURVE",
"1091 1456 OFFCURVE",
"772 1456 CURVE SMOOTH",
"235 1456 LINE",
"-22 0 LINE"
);
},
{
closed = 1;
nodes = (
"399 1298 LINE",
"755 1298 LINE SMOOTH",
"946 1298 OFFCURVE",
"1042 1182 OFFCURVE",
"1011 1009 CURVE SMOOTH",
"979 826 OFFCURVE",
"849 727 OFFCURVE",
"643 727 CURVE SMOOTH",
"298 727 LINE"
);
}
);
userData = {
_smart.ho.caps.cap = 1;
};
width = 1292;
},
{
anchors = (
{
name = da.caps;
position = "{82, 10}";
},
{
name = haa;
position = "{863, 14}";
},
{
name = hat.caps;
position = "{726, 1682}";
},
{
name = he;
position = "{1274, 1009}";
},
{
name = he.left.outer;
position = "{298, 1526}";
},
{
name = hee;
position = "{760, 102}";
},
{
name = hi;
position = "{936, 8}";
},
{
name = ho;
position = "{31, -25}";
},
{
name = hu;
position = "{844, 339}";
},
{
name = hwa;
position = "{866, -2}";
},
{
name = neck.caps;
position = "{680, 1480}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"172 615 LINE",
"580 615 LINE SMOOTH",
"876 615 OFFCURVE",
"1069 767 OFFCURVE",
"1116 1031 CURVE SMOOTH",
"1163 1298 OFFCURVE",
"1018 1456 OFFCURVE",
"721 1456 CURVE SMOOTH",
"266 1456 LINE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"310 1402 LINE",
"711 1402 LINE SMOOTH",
"974 1402 OFFCURVE",
"1103 1264 OFFCURVE",
"1062 1029 CURVE SMOOTH",
"1022 802 OFFCURVE",
"845 669 OFFCURVE",
"582 669 CURVE SMOOTH",
"181 669 LINE"
);
}
);
userData = {
_smart.ho.caps.cap = 1;
};
width = 1230;
}
);
leftMetricsKey = P;
rightMetricsKey = P;
userData = {
lsb = 93;
rsb = 74;
};
},
{
glyphname = za.base.cap;
lastChange = "2020-12-16 03:32:39 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{1187, -37}";
},
{
name = he.acute.top;
position = "{296.846, 1530}";
},
{
name = hee;
position = "{1191, -13}";
},
{
name = hi;
position = "{1317, 139}";
},
{
name = ho;
position = "{247, -49}";
},
{
name = hu;
position = "{1268.603, 1001}";
},
{
name = hwa;
position = "{1194, -77}";
},
{
name = zha.caps;
position = "{1078.312, 1455}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"430 0 LINE",
"430 624 LINE",
"1015 624 LINE",
"1015 0 LINE",
"1315 0 LINE",
"1315 1456 LINE",
"1015 1456 LINE",
"1015 866 LINE",
"430 866 LINE",
"430 1456 LINE",
"130 1456 LINE",
"130 0 LINE"
);
}
);
width = 1447;
},
{
anchors = (
{
name = haa;
position = "{1228, -27}";
},
{
name = he.acute.top;
position = "{299.513, 1530}";
},
{
name = hee;
position = "{1151, 67}";
},
{
name = hi;
position = "{1298, 99}";
},
{
name = ho;
position = "{256, -29}";
},
{
name = hu;
position = "{1280, 1001}";
},
{
name = hwa;
position = "{1194, -27}";
},
{
name = zha.caps;
position = "{1088, 1455}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 673 LINE",
"1095 673 LINE",
"1095 0 LINE",
"1288 0 LINE",
"1288 1456 LINE",
"1095 1456 LINE",
"1095 830 LINE",
"361 830 LINE",
"361 1456 LINE",
"169 1456 LINE",
"169 0 LINE"
);
}
);
width = 1460;
},
{
anchors = (
{
name = haa;
position = "{1210, -27}";
},
{
name = he.acute.top;
position = "{295, 1530}";
},
{
name = hee;
position = "{1105, 77}";
},
{
name = hi;
position = "{1279, 59}";
},
{
name = ho;
position = "{225, -58}";
},
{
name = hu;
position = "{1260.712, 1001}";
},
{
name = hwa;
position = "{1207, -37}";
},
{
name = zha.caps;
position = "{1071.605, 1455}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 722 LINE",
"1184 722 LINE",
"1184 0 LINE",
"1238 0 LINE",
"1238 1456 LINE",
"1184 1456 LINE",
"1184 776 LINE",
"254 776 LINE",
"254 1456 LINE",
"200 1456 LINE",
"200 0 LINE"
);
}
);
width = 1438;
},
{
anchors = (
{
name = haa;
position = "{1032, -27}";
},
{
name = he.acute.top;
position = "{299.513, 1530}";
},
{
name = hee;
position = "{972, 67}";
},
{
name = hi;
position = "{1127, 119}";
},
{
name = ho;
position = "{60, -29}";
},
{
name = hu;
position = "{1266, 1001}";
},
{
name = hwa;
position = "{999, -67}";
},
{
name = zha.caps;
position = "{1154, 1455}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"289 673 LINE",
"1023 673 LINE",
"904 0 LINE",
"1097 0 LINE",
"1354 1456 LINE",
"1161 1456 LINE",
"1051 830 LINE",
"317 830 LINE",
"427 1456 LINE",
"235 1456 LINE",
"-22 0 LINE"
);
}
);
width = 1460;
},
{
anchors = (
{
name = haa;
position = "{1014, -27}";
},
{
name = he.acute.top;
position = "{295, 1530}";
},
{
name = hee;
position = "{928, 77}";
},
{
name = hi;
position = "{1099, 59}";
},
{
name = ho;
position = "{24, -58}";
},
{
name = hu;
position = "{1246, 1001}";
},
{
name = hwa;
position = "{1010, -37}";
},
{
name = zha.caps;
position = "{1137, 1455}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"63 0 LINE",
"191 722 LINE",
"1121 722 LINE",
"993 0 LINE",
"1047 0 LINE",
"1304 1456 LINE",
"1250 1456 LINE",
"1130 776 LINE",
"200 776 LINE",
"320 1456 LINE",
"266 1456 LINE",
"9 0 LINE"
);
}
);
width = 1438;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
userData = {
lsb = 141;
rsb = 137;
};
},
{
glyphname = _smart.hat.caps.old;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
layerId = m002;
width = 600;
},
{
layerId = m003;
width = 600;
},
{
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
width = 600;
},
{
layerId = m004;
width = 600;
},
{
layerId = m005;
width = 600;
}
);
},
{
glyphname = _smart.he.acute.bottom;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _he.acute.bottom;
position = "{-1, -3}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-74 -314 LINE",
"203 -4 LINE {name = \"❌\";}",
"-112 -4 LINE {name = \"❌\";}",
"-309 -314 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _he.acute.bottom;
position = "{-1, -3}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-148 -297 LINE",
"120 -3 LINE {name = \"❌\";}",
"-104 -3 LINE {name = \"❌\";}",
"-297 -297 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _he.acute.bottom;
position = "{-1, -3}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-164 -266 LINE",
"31 0 LINE",
"-35 0 LINE",
"-224 -266 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _he.acute.bottom;
position = "{-192, -3}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-391 -297 LINE",
"-71 -3 LINE {name = \"❌\";}",
"-295 -3 LINE {name = \"❌\";}",
"-540 -297 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
},
{
anchors = (
{
name = _he.acute.bottom;
position = "{-192, -3}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-402 -266 LINE",
"-160 0 LINE",
"-226 0 LINE",
"-462 -266 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
15 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
15 0 31 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
RTHG[ ]	/* RoundToHalfGrid */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = uni00B4;
},
{
glyphname = _smart.he.acute.top;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _he.acute.top;
position = "{0, 1086}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-93 1376 LINE",
"-317 1376 LINE",
"-49 1082 LINE",
"100 1082 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.acute.top;
position = "{0, 1086}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-158 1346 LINE",
"-224 1346 LINE",
"-29 1080 LINE {name = \"❌\";}",
"31 1080 LINE {name = \"❌\";}"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.acute.top;
position = "{0, 1086}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-34 1386 LINE",
"-349 1386 LINE",
"-72 1076 LINE",
"163 1076 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.acute.top;
position = "{1, 1086}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-41 1376 LINE",
"-265 1376 LINE",
"-49 1082 LINE",
"100 1082 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.acute.top;
position = "{1, 1086}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-111 1346 LINE",
"-177 1346 LINE",
"-29 1080 LINE {name = \"❌\";}",
"31 1080 LINE {name = \"❌\";}"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.he.left.inner;
lastChange = "2020-12-16 18:56:59 +0000";
layers = (
{
anchors = (
{
name = _he.left.inner;
position = "{0, -41}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"182 -146 OFFCURVE",
"220 -101 OFFCURVE",
"220 -41 CURVE SMOOTH",
"220 19 OFFCURVE",
"182 66 OFFCURVE",
"110 66 CURVE SMOOTH",
"38 66 OFFCURVE",
"1 19 OFFCURVE",
"1 -41 CURVE SMOOTH",
"1 -101 OFFCURVE",
"38 -146 OFFCURVE",
"110 -146 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.inner;
position = "{0, -41}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"213 -157 OFFCURVE",
"259 -111 OFFCURVE",
"259 -46 CURVE SMOOTH",
"259 19 OFFCURVE",
"213 66 OFFCURVE",
"138 66 CURVE SMOOTH",
"65 66 OFFCURVE",
"17 19 OFFCURVE",
"17 -46 CURVE SMOOTH",
"17 -111 OFFCURVE",
"64 -157 OFFCURVE",
"138 -157 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.inner;
position = "{0, -41}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"86 -108 OFFCURVE",
"111 -84 OFFCURVE",
"111 -53 CURVE SMOOTH",
"111 -22 OFFCURVE",
"86 3 OFFCURVE",
"55 3 CURVE SMOOTH {name = \"❌\";}",
"24 3 OFFCURVE",
"0 -22 OFFCURVE",
"0 -53 CURVE SMOOTH",
"0 -84 OFFCURVE",
"24 -108 OFFCURVE",
"55 -108 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.inner;
position = "{-198, -41}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-35 -146 OFFCURVE",
"11 -101 OFFCURVE",
"22 -41 CURVE SMOOTH",
"33 19 OFFCURVE",
"3 66 OFFCURVE",
"-69 66 CURVE SMOOTH",
"-141 66 OFFCURVE",
"-186 19 OFFCURVE",
"-197 -41 CURVE SMOOTH",
"-208 -101 OFFCURVE",
"-179 -146 OFFCURVE",
"-107 -146 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.inner;
position = "{-198, -41}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-124 -108 OFFCURVE",
"-95 -84 OFFCURVE",
"-89 -53 CURVE SMOOTH",
"-84 -22 OFFCURVE",
"-104 3 OFFCURVE",
"-135 3 CURVE SMOOTH {name = \"❌\";}",
"-166 3 OFFCURVE",
"-195 -22 OFFCURVE",
"-200 -53 CURVE SMOOTH",
"-206 -84 OFFCURVE",
"-186 -108 OFFCURVE",
"-155 -108 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.he.left.outer;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _he.left.outer;
position = "{0, -41}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-38 -146 OFFCURVE",
"0 -101 OFFCURVE",
"0 -41 CURVE SMOOTH",
"0 19 OFFCURVE",
"-38 66 OFFCURVE",
"-110 66 CURVE SMOOTH",
"-182 66 OFFCURVE",
"-219 19 OFFCURVE",
"-219 -41 CURVE SMOOTH",
"-219 -101 OFFCURVE",
"-182 -146 OFFCURVE",
"-110 -146 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.outer;
position = "{0, -41}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-54 -182 OFFCURVE",
"2 -126 OFFCURVE",
"2 -46 CURVE SMOOTH",
"2 34 OFFCURVE",
"-54 91 OFFCURVE",
"-146 91 CURVE SMOOTH",
"-235 91 OFFCURVE",
"-294 34 OFFCURVE",
"-294 -46 CURVE SMOOTH",
"-294 -126 OFFCURVE",
"-237 -182 OFFCURVE",
"-146 -182 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.outer;
position = "{0, -41}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-24 -108 OFFCURVE",
"1 -84 OFFCURVE",
"1 -53 CURVE SMOOTH",
"1 -22 OFFCURVE",
"-24 3 OFFCURVE",
"-55 3 CURVE SMOOTH {name = \"❌\";}",
"-86 3 OFFCURVE",
"-110 -22 OFFCURVE",
"-110 -53 CURVE SMOOTH",
"-110 -84 OFFCURVE",
"-86 -108 OFFCURVE",
"-55 -108 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.outer;
position = "{-198, -41}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-255 -146 OFFCURVE",
"-209 -101 OFFCURVE",
"-198 -41 CURVE SMOOTH",
"-187 19 OFFCURVE",
"-217 66 OFFCURVE",
"-289 66 CURVE SMOOTH",
"-361 66 OFFCURVE",
"-406 19 OFFCURVE",
"-417 -41 CURVE SMOOTH",
"-428 -101 OFFCURVE",
"-399 -146 OFFCURVE",
"-327 -146 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _he.left.outer;
position = "{-198, -41}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-234 -108 OFFCURVE",
"-205 -84 OFFCURVE",
"-199 -53 CURVE SMOOTH",
"-194 -22 OFFCURVE",
"-214 3 OFFCURVE",
"-245 3 CURVE SMOOTH {name = \"❌\";}",
"-276 3 OFFCURVE",
"-305 -22 OFFCURVE",
"-310 -53 CURVE SMOOTH",
"-316 -84 OFFCURVE",
"-296 -108 OFFCURVE",
"-265 -108 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.ho.ring.uniq;
lastChange = "2020-12-14 06:20:17 +0000";
layers = (
{
anchors = (
{
name = _ho.ring.uniq;
position = "{-876, 151}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-581 -682 OFFCURVE",
"-482 -544 OFFCURVE",
"-510 -389 CURVE SMOOTH",
"-537 -232 OFFCURVE",
"-681 -133 OFFCURVE",
"-840 -161 CURVE SMOOTH",
"-1005 -190 OFFCURVE",
"-1107 -335 OFFCURVE",
"-1080 -490 CURVE SMOOTH",
"-1053 -643 OFFCURVE",
"-912 -741 OFFCURVE",
"-743 -711 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-765 -664 OFFCURVE",
"-862 -633 OFFCURVE",
"-891 -529 CURVE SMOOTH",
"-914 -442 OFFCURVE",
"-863 -344 OFFCURVE",
"-767 -318 CURVE SMOOTH",
"-677 -295 OFFCURVE",
"-589 -350 OFFCURVE",
"-563 -441 CURVE SMOOTH",
"-535 -545 OFFCURVE",
"-602 -618 OFFCURVE",
"-685 -642 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring.uniq;
position = "{-872, 154}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-619 -738 OFFCURVE",
"-489 -619 OFFCURVE",
"-489 -466 CURVE SMOOTH",
"-489 -307 OFFCURVE",
"-624 -188 OFFCURVE",
"-791 -188 CURVE SMOOTH",
"-959 -188 OFFCURVE",
"-1093 -310 OFFCURVE",
"-1093 -466 CURVE SMOOTH",
"-1093 -616 OFFCURVE",
"-966 -738 OFFCURVE",
"-791 -738 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-762 -652 OFFCURVE",
"-819 -586 OFFCURVE",
"-819 -505 CURVE SMOOTH",
"-819 -422 OFFCURVE",
"-760 -356 OFFCURVE",
"-671 -356 CURVE SMOOTH",
"-582 -356 OFFCURVE",
"-523 -422 OFFCURVE",
"-523 -505 CURVE SMOOTH",
"-523 -586 OFFCURVE",
"-580 -652 OFFCURVE",
"-671 -652 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring.uniq;
position = "{-944, 133}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-686 -334 OFFCURVE",
"-585 -245 OFFCURVE",
"-585 -118 CURVE SMOOTH",
"-585 10 OFFCURVE",
"-684 104 OFFCURVE",
"-803 104 CURVE SMOOTH",
"-925 104 OFFCURVE",
"-1021 5 OFFCURVE",
"-1021 -118 CURVE SMOOTH",
"-1021 -240 OFFCURVE",
"-925 -334 OFFCURVE",
"-803 -334 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-897 -278 OFFCURVE",
"-965 -213 OFFCURVE",
"-965 -118 CURVE SMOOTH",
"-965 -18 OFFCURVE",
"-897 48 OFFCURVE",
"-803 48 CURVE SMOOTH",
"-709 48 OFFCURVE",
"-641 -18 OFFCURVE",
"-641 -118 CURVE SMOOTH",
"-641 -213 OFFCURVE",
"-709 -278 OFFCURVE",
"-803 -278 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring.uniq;
position = "{-1040, 151}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-1069 -811 OFFCURVE",
"-894 -714 OFFCURVE",
"-813 -560 CURVE SMOOTH",
"-731 -404 OFFCURVE",
"-781 -262 OFFCURVE",
"-932 -233 CURVE SMOOTH",
"-1085 -204 OFFCURVE",
"-1266 -305 OFFCURVE",
"-1348 -461 CURVE SMOOTH",
"-1428 -612 OFFCURVE",
"-1379 -753 OFFCURVE",
"-1222 -782 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-1244 -733 OFFCURVE",
"-1299 -657 OFFCURVE",
"-1238 -540 CURVE SMOOTH",
"-1185 -442 OFFCURVE",
"-1062 -368 OFFCURVE",
"-961 -386 CURVE SMOOTH",
"-866 -405 OFFCURVE",
"-837 -501 OFFCURVE",
"-893 -605 CURVE SMOOTH",
"-954 -722 OFFCURVE",
"-1071 -766 OFFCURVE",
"-1159 -751 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ho.ring.uniq;
position = "{-1111, 133}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-945 -374 OFFCURVE",
"-828 -285 OFFCURVE",
"-805 -158 CURVE SMOOTH",
"-783 -30 OFFCURVE",
"-865 64 OFFCURVE",
"-984 64 CURVE SMOOTH",
"-1106 64 OFFCURVE",
"-1220 -35 OFFCURVE",
"-1241 -158 CURVE SMOOTH",
"-1263 -280 OFFCURVE",
"-1184 -374 OFFCURVE",
"-1062 -374 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-1146 -318 OFFCURVE",
"-1202 -253 OFFCURVE",
"-1185 -158 CURVE SMOOTH",
"-1168 -58 OFFCURVE",
"-1088 8 OFFCURVE",
"-994 8 CURVE SMOOTH",
"-900 8 OFFCURVE",
"-844 -58 OFFCURVE",
"-861 -158 CURVE SMOOTH",
"-878 -253 OFFCURVE",
"-958 -318 OFFCURVE",
"-1052 -318 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.neck.hha.caps;
lastChange = "2020-12-15 04:32:03 +0000";
layers = (
{
anchors = (
{
name = _neck.hha.caps;
position = "{-869, 680}";
},
{
name = _smart..neck.hha.caps;
position = "{-869, 1180}";
},
{
name = _smart.neck.hha.caps;
position = "{-909, 680.5}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-754 1174 LINE",
"-754 1738 LINE",
"-1054 1738 LINE",
"-1054 1174 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.hha.caps;
position = "{-869, 680}";
},
{
name = _smart..neck.hha.caps;
position = "{-908.833, 888.417}";
},
{
name = _smart.neck.hha.caps;
position = "{-909, 680.5}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-846 678 LINE",
"-846 1572 LINE",
"-1015 1572 LINE",
"-1015 678 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.hha.caps;
position = "{-869, 680}";
},
{
name = _smart..neck.hha.caps;
position = "{-892.333, 846.667}";
},
{
name = _smart.neck.hha.caps;
position = "{-869, 680}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-842 678 LINE",
"-842 1572 LINE",
"-899 1572 LINE",
"-899 678 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.hha.caps;
position = "{-869, 680}";
},
{
name = _smart..neck.hha.caps;
position = "{-940, 680}";
},
{
name = _smart.neck.hha.caps;
position = "{-980, 681}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-917 678 LINE",
"-760 1572 LINE",
"-929 1572 LINE",
"-1086 678 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.hha.caps;
position = "{-869, 680}";
},
{
name = _smart..neck.hha.caps;
position = "{-934, 847}";
},
{
name = _smart.neck.hha.caps;
position = "{-940, 680}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-913 678 LINE",
"-756 1572 LINE",
"-813 1572 LINE",
"-970 678 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.neck.left.caps;
lastChange = "2020-12-13 10:32:31 +0000";
layers = (
{
anchors = (
{
name = _neck.left.caps;
position = "{1, -24}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"126 -23 LINE",
"126 367 LINE",
"-111 367 LINE",
"-111 -23 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left.caps;
position = "{1, -24}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"88 -24 LINE",
"88 340 LINE",
"-81 340 LINE",
"-81 -24 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left.caps;
position = "{29, -24}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"60 -16 LINE",
"60 250 LINE",
"0 250 LINE",
"0 -16 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left.caps;
position = "{-194, -24}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-107 -24 LINE",
"-43 340 LINE",
"-212 340 LINE",
"-276 -24 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _neck.left.caps;
position = "{-166, -24}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-134 -16 LINE",
"-87 250 LINE",
"-147 250 LINE",
"-194 -16 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.tsa.belt.caps;
lastChange = "2020-12-14 20:38:00 +0000";
layers = (
{
anchors = (
{
name = _tsa.belt.caps;
position = "{17, 755}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"309 636 LINE",
"309 872 LINE",
"-284 872 LINE",
"-284 636 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt.caps;
position = "{17, 755}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"443 681 LINE",
"443 832 LINE",
"-312 832 LINE",
"-312 681 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt.caps;
position = "{17, 755}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"488 751 LINE",
"488 805 LINE",
"-347 805 LINE",
"-347 751 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt.caps;
position = "{-41, 755}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"372 681 LINE",
"399 832 LINE",
"-346 832 LINE",
"-373 681 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _tsa.belt.caps;
position = "{-41, 755}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"430 751 LINE",
"439 805 LINE",
"-396 805 LINE",
"-405 751 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.aGlhat;
lastChange = "2020-12-14 19:31:48 +0000";
layers = (
{
anchors = (
{
name = _aGlhat;
position = "{198, 1242}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"56 1536 LINE",
"-259 1536 LINE",
"18 1226 LINE",
"253 1226 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _aGlhat;
position = "{198, 1242}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"67 1536 LINE",
"-157 1536 LINE",
"111 1242 LINE",
"260 1242 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _aGlhat;
position = "{198, 1242}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"37 1536 LINE",
"-29 1536 LINE",
"166 1270 LINE",
"226 1270 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _aGlhat;
position = "{198, 1242}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"128 1536 LINE",
"-96 1536 LINE",
"224 1242 LINE",
"373 1242 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _aGlhat;
position = "{198, 1242}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"28 1536 LINE",
"-38 1536 LINE",
"204 1270 LINE",
"264 1270 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.eGl;
lastChange = "2020-12-14 18:31:42 +0000";
layers = (
{
anchors = (
{
name = _eGl;
position = "{231, 1360}";
},
{
name = _hee;
position = "{769.667, 73.333}";
},
{
name = _hu;
position = "{1070, 673}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"220 1449 LINE",
"233 1865 LINE",
"-8 1662 LINE",
"40 1298 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _eGl;
position = "{231, 1360}";
},
{
name = _hee;
position = "{769.667, 73.333}";
},
{
name = _hu;
position = "{1055, 673}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"141 1438 LINE",
"157 1836 LINE",
"-14 1692 LINE",
"27 1342 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _eGl;
position = "{231, 1360}";
},
{
name = _hee;
position = "{880, 80}";
},
{
name = _hu;
position = "{1062.5, 673}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"214 1375 LINE",
"221 1705 LINE",
"167 1667 LINE",
"165 1341 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _eGl;
position = "{231, 1360}";
},
{
name = _hee;
position = "{726, 60}";
},
{
name = _hu;
position = "{1062.5, 673}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"197 1418 LINE",
"327 1832 LINE",
"133 1720 LINE",
"68 1343 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _eGl;
position = "{231, 1360}";
},
{
name = _hee;
position = "{703, 80}";
},
{
name = _hu;
position = "{1062.5, 673}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"257 1372 LINE",
"333 1724 LINE",
"276 1691 LINE",
"205 1342 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ring;
lastChange = "2020-12-14 18:48:15 +0000";
layers = (
{
anchors = (
{
name = _ring;
position = "{443, 1025}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"569 1024 OFFCURVE",
"665 1112 OFFCURVE",
"665 1225 CURVE SMOOTH",
"665 1342 OFFCURVE",
"565 1430 OFFCURVE",
"442 1430 CURVE SMOOTH",
"318 1430 OFFCURVE",
"219 1340 OFFCURVE",
"219 1225 CURVE SMOOTH",
"219 1114 OFFCURVE",
"313 1024 OFFCURVE",
"442 1024 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"375 1118 OFFCURVE",
"334 1166 OFFCURVE",
"334 1225 CURVE SMOOTH",
"334 1286 OFFCURVE",
"377 1334 OFFCURVE",
"442 1334 CURVE SMOOTH",
"507 1334 OFFCURVE",
"550 1286 OFFCURVE",
"550 1225 CURVE SMOOTH",
"550 1166 OFFCURVE",
"509 1118 OFFCURVE",
"442 1118 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ring;
position = "{443, 1025}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"497 1054 OFFCURVE",
"591 1142 OFFCURVE",
"591 1258 CURVE SMOOTH",
"591 1373 OFFCURVE",
"499 1466 OFFCURVE",
"376 1466 CURVE SMOOTH",
"253 1466 OFFCURVE",
"161 1373 OFFCURVE",
"161 1258 CURVE SMOOTH",
"161 1143 OFFCURVE",
"253 1054 OFFCURVE",
"376 1054 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"311 1143 OFFCURVE",
"260 1195 OFFCURVE",
"260 1258 CURVE SMOOTH",
"260 1322 OFFCURVE",
"309 1376 OFFCURVE",
"376 1376 CURVE SMOOTH",
"453 1376 OFFCURVE",
"491 1318 OFFCURVE",
"491 1260 CURVE SMOOTH",
"491 1202 OFFCURVE",
"453 1143 OFFCURVE",
"376 1143 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ring;
position = "{443, 1025}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"411 1062 OFFCURVE",
"486 1136 OFFCURVE",
"486 1232 CURVE SMOOTH",
"486 1328 OFFCURVE",
"411 1406 OFFCURVE",
"315 1406 CURVE SMOOTH",
"222 1406 OFFCURVE",
"144 1332 OFFCURVE",
"144 1232 CURVE SMOOTH",
"144 1132 OFFCURVE",
"223 1062 OFFCURVE",
"315 1062 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"247 1116 OFFCURVE",
"198 1163 OFFCURVE",
"198 1232 CURVE SMOOTH",
"198 1304 OFFCURVE",
"247 1352 OFFCURVE",
"315 1352 CURVE SMOOTH",
"383 1352 OFFCURVE",
"432 1304 OFFCURVE",
"432 1232 CURVE SMOOTH",
"432 1163 OFFCURVE",
"383 1116 OFFCURVE",
"315 1116 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ring;
position = "{443, 1025}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"479 1004 OFFCURVE",
"588 1092 OFFCURVE",
"608 1208 CURVE SMOOTH",
"629 1323 OFFCURVE",
"553 1416 OFFCURVE",
"430 1416 CURVE SMOOTH",
"307 1416 OFFCURVE",
"199 1323 OFFCURVE",
"178 1208 CURVE SMOOTH",
"158 1093 OFFCURVE",
"235 1004 OFFCURVE",
"358 1004 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 1093 OFFCURVE",
"266 1145 OFFCURVE",
"277 1208 CURVE SMOOTH",
"289 1272 OFFCURVE",
"348 1326 OFFCURVE",
"414 1326 CURVE SMOOTH",
"491 1326 OFFCURVE",
"519 1268 OFFCURVE",
"509 1210 CURVE SMOOTH",
"499 1152 OFFCURVE",
"450 1093 OFFCURVE",
"373 1093 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _ring;
position = "{443, 1025}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"424 1032 OFFCURVE",
"512 1106 OFFCURVE",
"529 1202 CURVE SMOOTH",
"546 1298 OFFCURVE",
"485 1376 OFFCURVE",
"389 1376 CURVE SMOOTH",
"295 1376 OFFCURVE",
"205 1302 OFFCURVE",
"187 1202 CURVE SMOOTH",
"169 1102 OFFCURVE",
"236 1032 OFFCURVE",
"328 1032 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"269 1086 OFFCURVE",
"229 1133 OFFCURVE",
"241 1202 CURVE SMOOTH",
"254 1274 OFFCURVE",
"311 1322 OFFCURVE",
"379 1322 CURVE SMOOTH",
"447 1322 OFFCURVE",
"488 1274 OFFCURVE",
"475 1202 CURVE SMOOTH",
"463 1133 OFFCURVE",
"405 1086 OFFCURVE",
"337 1086 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.xwaa;
lastChange = "2020-12-14 20:47:06 +0000";
layers = (
{
anchors = (
{
name = _xwaa;
position = "{461.772, 19}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"673 -146 LINE",
"673 -397 LINE",
"910 -397 LINE",
"910 10 LINE",
"247 10 LINE",
"247 -146 LINE {name = \"❌\";}"
);
}
);
width = 951;
},
{
anchors = (
{
name = _xwaa;
position = "{416.614, 19}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"675 -74 LINE",
"675 -358 LINE",
"844 -358 LINE",
"844 8 LINE",
"213 8 LINE",
"213 -74 LINE"
);
}
);
width = 858;
},
{
anchors = (
{
name = _xwaa;
position = "{370, 19}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"694 -37 LINE",
"694 -259 LINE",
"754 -259 LINE",
"754 7 LINE",
"218 7 LINE",
"218 -37 LINE"
);
}
);
width = 762;
},
{
anchors = (
{
name = _xwaa;
position = "{416.614, 19}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"476 -44 LINE",
"426 -328 LINE",
"595 -328 LINE",
"660 38 LINE",
"29 38 LINE",
"14 -44 LINE"
);
}
);
width = 858;
},
{
anchors = (
{
name = _xwaa;
position = "{370, 19}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"498 -27 LINE",
"459 -249 LINE",
"519 -249 LINE",
"566 17 LINE",
"30 17 LINE",
"22 -27 LINE"
);
}
);
width = 762;
}
);
},
{
export = 0;
glyphname = _smart.yee;
lastChange = "2020-12-15 17:55:40 +0000";
layers = (
{
anchors = (
{
name = _yee;
position = "{-30, 336}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"307 134 OFFCURVE",
"401 222 OFFCURVE",
"401 338 CURVE SMOOTH",
"401 453 OFFCURVE",
"309 546 OFFCURVE",
"186 546 CURVE SMOOTH",
"63 546 OFFCURVE",
"-29 453 OFFCURVE",
"-29 338 CURVE SMOOTH",
"-29 223 OFFCURVE",
"63 134 OFFCURVE",
"186 134 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 223 OFFCURVE",
"70 275 OFFCURVE",
"70 338 CURVE SMOOTH",
"70 402 OFFCURVE",
"119 456 OFFCURVE",
"186 456 CURVE SMOOTH",
"263 456 OFFCURVE",
"301 398 OFFCURVE",
"301 340 CURVE SMOOTH",
"301 282 OFFCURVE",
"263 223 OFFCURVE",
"186 223 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yee;
position = "{-26, 322}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"241 152 OFFCURVE",
"316 226 OFFCURVE",
"316 322 CURVE SMOOTH",
"316 418 OFFCURVE",
"241 496 OFFCURVE",
"145 496 CURVE SMOOTH",
"52 496 OFFCURVE",
"-26 422 OFFCURVE",
"-26 322 CURVE SMOOTH",
"-26 222 OFFCURVE",
"53 152 OFFCURVE",
"145 152 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 206 OFFCURVE",
"28 253 OFFCURVE",
"28 322 CURVE SMOOTH",
"28 394 OFFCURVE",
"77 442 OFFCURVE",
"145 442 CURVE SMOOTH",
"213 442 OFFCURVE",
"262 394 OFFCURVE",
"262 322 CURVE SMOOTH",
"262 253 OFFCURVE",
"213 206 OFFCURVE",
"145 206 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yee;
position = "{-52, 338}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"249 134 OFFCURVE",
"358 222 OFFCURVE",
"378 338 CURVE SMOOTH",
"399 453 OFFCURVE",
"323 546 OFFCURVE",
"200 546 CURVE SMOOTH",
"77 546 OFFCURVE",
"-31 453 OFFCURVE",
"-52 338 CURVE SMOOTH",
"-72 223 OFFCURVE",
"5 134 OFFCURVE",
"128 134 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 223 OFFCURVE",
"36 275 OFFCURVE",
"47 338 CURVE SMOOTH",
"59 402 OFFCURVE",
"118 456 OFFCURVE",
"184 456 CURVE SMOOTH",
"261 456 OFFCURVE",
"289 398 OFFCURVE",
"279 340 CURVE SMOOTH",
"269 282 OFFCURVE",
"220 223 OFFCURVE",
"143 223 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yee;
position = "{-39, 336}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"185 182 OFFCURVE",
"273 256 OFFCURVE",
"290 352 CURVE SMOOTH",
"307 448 OFFCURVE",
"246 526 OFFCURVE",
"150 526 CURVE SMOOTH",
"56 526 OFFCURVE",
"-34 452 OFFCURVE",
"-52 352 CURVE SMOOTH",
"-70 252 OFFCURVE",
"-3 182 OFFCURVE",
"89 182 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"30 236 OFFCURVE",
"-10 283 OFFCURVE",
"2 352 CURVE SMOOTH",
"15 424 OFFCURVE",
"72 472 OFFCURVE",
"140 472 CURVE SMOOTH",
"208 472 OFFCURVE",
"249 424 OFFCURVE",
"236 352 CURVE SMOOTH",
"224 283 OFFCURVE",
"166 236 OFFCURVE",
"98 236 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yee;
position = "{-40, 326}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"309 114 OFFCURVE",
"405 202 OFFCURVE",
"405 315 CURVE SMOOTH",
"405 432 OFFCURVE",
"305 520 OFFCURVE",
"182 520 CURVE SMOOTH",
"58 520 OFFCURVE",
"-41 430 OFFCURVE",
"-41 315 CURVE SMOOTH",
"-41 204 OFFCURVE",
"53 114 OFFCURVE",
"182 114 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 208 OFFCURVE",
"74 256 OFFCURVE",
"74 315 CURVE SMOOTH",
"74 376 OFFCURVE",
"117 424 OFFCURVE",
"182 424 CURVE SMOOTH",
"247 424 OFFCURVE",
"290 376 OFFCURVE",
"290 315 CURVE SMOOTH",
"290 256 OFFCURVE",
"249 208 OFFCURVE",
"182 208 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.yi;
lastChange = "2020-12-15 18:14:53 +0000";
layers = (
{
anchors = (
{
name = _yi;
position = "{149, 726}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"650 506 LINE",
"650 742 LINE",
"187 742 LINE",
"187 506 LINE"
);
},
{
closed = 1;
nodes = (
"858 438 OFFCURVE",
"914 494 OFFCURVE",
"914 574 CURVE SMOOTH",
"914 654 OFFCURVE",
"858 711 OFFCURVE",
"766 711 CURVE SMOOTH",
"677 711 OFFCURVE",
"618 654 OFFCURVE",
"618 574 CURVE SMOOTH",
"618 494 OFFCURVE",
"675 438 OFFCURVE",
"766 438 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yi;
position = "{149, 726}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"643 581 LINE",
"643 732 LINE",
"208 732 LINE",
"208 581 LINE"
);
},
{
closed = 1;
nodes = (
"802 462 OFFCURVE",
"840 507 OFFCURVE",
"840 567 CURVE SMOOTH",
"840 627 OFFCURVE",
"802 674 OFFCURVE",
"730 674 CURVE SMOOTH",
"658 674 OFFCURVE",
"621 627 OFFCURVE",
"621 567 CURVE SMOOTH",
"621 507 OFFCURVE",
"658 462 OFFCURVE",
"730 462 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yi;
position = "{149, 726}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"648 631 LINE",
"648 685 LINE",
"213 685 LINE",
"213 631 LINE"
);
},
{
closed = 1;
nodes = (
"712 522 OFFCURVE",
"737 546 OFFCURVE",
"737 577 CURVE SMOOTH",
"737 608 OFFCURVE",
"712 633 OFFCURVE",
"681 633 CURVE SMOOTH {name = \"❌\";}",
"650 633 OFFCURVE",
"626 608 OFFCURVE",
"626 577 CURVE SMOOTH",
"626 546 OFFCURVE",
"650 522 OFFCURVE",
"681 522 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yi;
position = "{149, 726}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"597 591 LINE",
"624 742 LINE",
"189 742 LINE",
"162 591 LINE"
);
},
{
closed = 1;
nodes = (
"744 462 OFFCURVE",
"790 507 OFFCURVE",
"800 567 CURVE SMOOTH",
"811 627 OFFCURVE",
"781 674 OFFCURVE",
"709 674 CURVE",
"637 674 OFFCURVE",
"592 627 OFFCURVE",
"581 567 CURVE SMOOTH",
"571 507 OFFCURVE",
"600 462 OFFCURVE",
"672 462 CURVE SMOOTH"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yi;
position = "{149, 726}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"534 691 LINE",
"544 745 LINE",
"109 745 LINE",
"99 691 LINE"
);
},
{
closed = 1;
nodes = (
"598 552 OFFCURVE",
"627 576 OFFCURVE",
"633 607 CURVE SMOOTH",
"638 638 OFFCURVE",
"617 663 OFFCURVE",
"586 663 CURVE SMOOTH {name = \"❌\";}",
"556 663 OFFCURVE",
"527 638 OFFCURVE",
"522 607 CURVE SMOOTH",
"516 576 OFFCURVE",
"536 552 OFFCURVE",
"567 552 CURVE"
);
},
{
closed = 0;
nodes = (
"564 691 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.yu;
lastChange = "2020-12-15 18:01:22 +0000";
layers = (
{
anchors = (
{
name = _yu;
position = "{149, 726}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"610 596 LINE",
"610 832 LINE",
"147 832 LINE",
"147 596 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yu;
position = "{149, 726}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"603 651 LINE",
"603 802 LINE",
"168 802 LINE",
"168 651 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yu;
position = "{149, 726}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"598 721 LINE",
"598 775 LINE",
"163 775 LINE",
"163 721 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yu;
position = "{149, 726}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"527 651 LINE",
"554 802 LINE",
"119 802 LINE",
"92 651 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _yu;
position = "{149, 726}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"564 691 LINE",
"574 745 LINE",
"139 745 LINE",
"129 691 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.nose.extend;
lastChange = "2020-12-16 19:10:07 +0000";
layers = (
{
anchors = (
{
name = _nose.extend;
position = "{-92, 915}";
}
);
layerId = "A9B054E9-1A63-4AEF-9EE1-561B1DFE8422";
paths = (
{
closed = 1;
nodes = (
"-220 650 LINE",
"-92 650 LINE",
"-92 915 LINE",
"-220 915 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose.extend;
position = "{28, 1009}";
}
);
layerId = m002;
paths = (
{
closed = 1;
nodes = (
"-83 748 LINE",
"28 748 LINE",
"28 1009 LINE",
"-83 1009 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose.extend;
position = "{-31, 1061}";
}
);
layerId = m003;
paths = (
{
closed = 1;
nodes = (
"-31 797 LINE",
"10 797 LINE",
"10 1061 LINE",
"-31 1061 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose.extend;
position = "{-54, 1040}";
}
);
layerId = m004;
paths = (
{
closed = 1;
nodes = (
"-54 824 LINE",
"20 824 LINE",
"20 1040 LINE",
"-54 1040 LINE"
);
}
);
width = 0;
},
{
anchors = (
{
name = _nose.extend;
position = "{29, 1053}";
}
);
layerId = m005;
paths = (
{
closed = 1;
nodes = (
"-34 844 LINE",
"8 844 LINE",
"48 1052 LINE",
"6 1052 LINE"
);
}
);
width = 0;
}
);
}
);
instances = (
{
interpolationWeight = 700;
interpolationWidth = 200;
instanceInterpolations = {
"A9B054E9-1A63-4AEF-9EE1-561B1DFE8422" = 1;
};
isBold = 1;
linkStyle = Regular;
name = Bold;
},
{
interpolationWeight = 400;
interpolationWidth = 99;
instanceInterpolations = {
m002 = 1;
};
name = Regular;
},
{
interpolationWidth = 49;
instanceInterpolations = {
m003 = 1;
};
name = Thin;
},
{
interpolationWeight = 400;
instanceInterpolations = {
m004 = 1;
};
isItalic = 1;
linkStyle = Regular;
name = Italic;
},
{
interpolationWidth = 50;
instanceInterpolations = {
m005 = 1;
};
isItalic = 1;
linkStyle = Thin;
name = "Thin Italic";
}
);
kerning = {
"A9B054E9-1A63-4AEF-9EE1-561B1DFE8422" = {
"@MMK_L_A" = {
"@MMK_R_C" = -11;
"@MMK_R_T" = -129;
"@MMK_R_U" = -17;
"@MMK_R_V" = -87;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -94;
"@MMK_R_o" = -12;
"@MMK_R_quotedbl" = -120;
"@MMK_R_u" = -11;
"@MMK_R_v" = -50;
"@MMK_R_z" = 12;
question = -61;
t = -17;
w = -33;
};
"@MMK_L_B" = {
"@MMK_R_T" = -27;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -55;
};
"@MMK_L_C" = {
"@MMK_R_T" = -29;
braceright = -17;
bracketright = -12;
parenright = -26;
};
"@MMK_L_D" = {
"@MMK_R_A" = -21;
"@MMK_R_T" = -27;
"@MMK_R_V" = -22;
"@MMK_R_X" = -22;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -23;
"@MMK_R_comma" = -102;
AE = -33;
};
"@MMK_L_E" = {
"@MMK_R_T" = 20;
"@MMK_R_c" = -19;
"@MMK_R_o" = -19;
"@MMK_R_u" = -17;
"@MMK_R_v" = -26;
f = -18;
w = -22;
};
"@MMK_L_H" = {
"@MMK_R_A" = 18;
"@MMK_R_T" = -29;
"@MMK_R_X" = 17;
"@MMK_R_Y" = -28;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
};
"@MMK_L_K" = {
"@MMK_R_C" = -31;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -64;
"@MMK_R_m" = -23;
"@MMK_R_o" = -27;
"@MMK_R_u" = -23;
"@MMK_R_v" = -40;
w = -63;
};
"@MMK_L_L" = {
"@MMK_R_A" = 19;
"@MMK_R_C" = -65;
"@MMK_R_T" = -275;
"@MMK_R_U" = -54;
"@MMK_R_V" = -175;
"@MMK_R_W" = -143;
"@MMK_R_Y" = -239;
"@MMK_R_quotedbl" = -336;
"@MMK_R_u" = -44;
"@MMK_R_v" = -133;
w = -92;
};
"@MMK_L_P" = {
"@MMK_R_A" = -138;
"@MMK_R_J" = -200;
"@MMK_R_X" = -31;
"@MMK_R_Z" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -324;
"@MMK_R_o" = -13;
"@MMK_R_v" = 15;
AE = -97;
t = 14;
};
"@MMK_L_T" = {
"@MMK_R_A" = -79;
"@MMK_R_C" = -28;
"@MMK_R_J" = -240;
"@MMK_R_S" = -16;
"@MMK_R_T" = 16;
"@MMK_R_V" = 16;
"@MMK_R_W" = 15;
"@MMK_R_Y" = 16;
"@MMK_R_a" = -113;
"@MMK_R_c" = -99;
"@MMK_R_comma" = -218;
"@MMK_R_hyphen" = -232;
"@MMK_R_m" = -109;
"@MMK_R_o" = -99;
"@MMK_R_s" = -116;
"@MMK_R_u" = -95;
"@MMK_R_v" = -72;
"@MMK_R_x" = -77;
"@MMK_R_z" = -60;
AE = -179;
ae = -114;
guillemetleft = -328;
guillemetright = -216;
oslash = -95;
r = -75;
space = -40;
w = -57;
};
"@MMK_L_V" = {
"@MMK_R_A" = -77;
"@MMK_R_C" = -13;
"@MMK_R_a" = -46;
"@MMK_R_c" = -44;
"@MMK_R_comma" = -225;
"@MMK_R_hyphen" = -37;
"@MMK_R_o" = -46;
"@MMK_R_u" = -28;
"@MMK_R_v" = -11;
braceright = 19;
bracketright = 17;
parenright = 20;
r = -30;
};
"@MMK_L_W" = {
"@MMK_R_A" = -43;
"@MMK_R_T" = 14;
"@MMK_R_a" = -33;
"@MMK_R_c" = -31;
"@MMK_R_comma" = -123;
"@MMK_R_hyphen" = -60;
"@MMK_R_o" = -31;
"@MMK_R_u" = -19;
braceright = 14;
bracketright = 12;
parenright = 15;
r = -21;
};
"@MMK_L_X" = {
"@MMK_R_C" = -25;
"@MMK_R_V" = 14;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -46;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -31;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -29;
"@MMK_R_J" = -96;
"@MMK_R_S" = -16;
"@MMK_R_T" = 17;
"@MMK_R_U" = -96;
"@MMK_R_V" = 18;
"@MMK_R_W" = 17;
"@MMK_R_X" = 13;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -73;
"@MMK_R_c" = -65;
"@MMK_R_comma" = -211;
"@MMK_R_hyphen" = -52;
"@MMK_R_m" = -40;
"@MMK_R_o" = -65;
"@MMK_R_s" = -58;
"@MMK_R_u" = -39;
"@MMK_R_v" = -20;
"@MMK_R_x" = -23;
"@MMK_R_z" = -30;
AE = -96;
ae = -63;
ampersand = -30;
asterisk = -49;
braceright = 19;
bracketright = 18;
f = -22;
guillemetleft = -82;
guillemetright = -51;
oslash = -64;
parenright = 20;
r = -40;
t = -22;
};
"@MMK_L_Z" = {
"@MMK_R_A" = 13;
"@MMK_R_C" = -26;
"@MMK_R_c" = -21;
"@MMK_R_o" = -21;
"@MMK_R_u" = -19;
"@MMK_R_v" = -27;
w = -27;
};
"@MMK_L_a" = {
"@MMK_R_quotedbl" = -67;
"@MMK_R_v" = -15;
};
"@MMK_L_b" = {
"@MMK_R_quotedbl" = -29;
"@MMK_R_v" = -11;
"@MMK_R_x" = -15;
"@MMK_R_z" = -15;
};
"@MMK_L_c" = {
"@MMK_R_quotedbl" = -11;
};
"@MMK_L_comma" = {
"@MMK_R_quotedbl" = -170;
};
"@MMK_L_e" = {
"@MMK_R_quotedbl" = -14;
"@MMK_R_v" = -13;
};
"@MMK_L_h" = {
"@MMK_R_quotedbl" = -104;
};
"@MMK_L_o" = {
"@MMK_R_quotedbl" = -136;
"@MMK_R_v" = -15;
"@MMK_R_x" = -21;
"@MMK_R_z" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_A" = -120;
"@MMK_R_a" = -50;
"@MMK_R_c" = -59;
"@MMK_R_m" = -20;
"@MMK_R_o" = -61;
"@MMK_R_quotedbl" = -107;
"@MMK_R_s" = -80;
w = 11;
};
"@MMK_L_r" = {
"@MMK_R_a" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -123;
"@MMK_R_o" = -20;
"@MMK_R_quotedbl" = 16;
"@MMK_R_v" = 18;
f = 15;
t = 50;
w = 17;
};
"@MMK_L_v" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -107;
"@MMK_R_o" = -15;
"@MMK_R_quotedbl" = 15;
f = 13;
};
"@MMK_L_x" = {
"@MMK_R_c" = -20;
"@MMK_R_o" = -20;
};
"@MMK_L_z" = {
"@MMK_R_c" = -16;
"@MMK_R_o" = -16;
};
F = {
"@MMK_R_A" = -170;
"@MMK_R_J" = -264;
"@MMK_R_T" = 20;
"@MMK_R_a" = -34;
"@MMK_R_c" = -21;
"@MMK_R_comma" = -234;
"@MMK_R_o" = -21;
"@MMK_R_u" = -22;
"@MMK_R_v" = -24;
r = -26;
};
Q = {
"@MMK_R_T" = -43;
"@MMK_R_V" = -28;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -35;
};
R = {
"@MMK_R_T" = -80;
"@MMK_R_V" = -19;
"@MMK_R_Y" = -48;
};
braceleft = {
"@MMK_R_J" = -20;
"@MMK_R_U" = -20;
};
bracketleft = {
"@MMK_R_J" = -18;
"@MMK_R_U" = -18;
};
f = {
"@MMK_R_c" = -24;
"@MMK_R_quotedbl" = 16;
braceright = 19;
bracketright = 18;
parenright = 20;
};
k = {
"@MMK_R_c" = -20;
};
parenleft = {
"@MMK_R_V" = 20;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 22;
};
slash = {
slash = -224;
};
space = {
"@MMK_R_T" = -40;
};
t = {
"@MMK_R_o" = -20;
};
w = {
"@MMK_R_comma" = -124;
};
};
m002 = {
"@MMK_L_A" = {
"@MMK_R_C" = -11;
"@MMK_R_T" = -129;
"@MMK_R_U" = -17;
"@MMK_R_V" = -87;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -94;
"@MMK_R_o" = -12;
"@MMK_R_quotedbl" = -120;
"@MMK_R_u" = -11;
"@MMK_R_v" = -50;
"@MMK_R_z" = 12;
question = -61;
t = -17;
w = -33;
};
"@MMK_L_B" = {
"@MMK_R_T" = -27;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -55;
};
"@MMK_L_C" = {
"@MMK_R_T" = -29;
braceright = -17;
bracketright = -12;
parenright = -26;
};
"@MMK_L_D" = {
"@MMK_R_A" = -21;
"@MMK_R_T" = -27;
"@MMK_R_V" = -22;
"@MMK_R_X" = -22;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -23;
"@MMK_R_comma" = -102;
AE = -33;
};
"@MMK_L_E" = {
"@MMK_R_T" = 20;
"@MMK_R_c" = -19;
"@MMK_R_o" = -19;
"@MMK_R_u" = -17;
"@MMK_R_v" = -26;
f = -18;
w = -22;
};
"@MMK_L_H" = {
"@MMK_R_A" = 18;
"@MMK_R_T" = -29;
"@MMK_R_X" = 17;
"@MMK_R_Y" = -28;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
};
"@MMK_L_K" = {
"@MMK_R_C" = -31;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -64;
"@MMK_R_m" = -23;
"@MMK_R_o" = -27;
"@MMK_R_u" = -23;
"@MMK_R_v" = -40;
w = -63;
};
"@MMK_L_L" = {
"@MMK_R_A" = 19;
"@MMK_R_C" = -65;
"@MMK_R_T" = -275;
"@MMK_R_U" = -54;
"@MMK_R_V" = -175;
"@MMK_R_W" = -143;
"@MMK_R_Y" = -239;
"@MMK_R_quotedbl" = -336;
"@MMK_R_u" = -44;
"@MMK_R_v" = -133;
w = -92;
};
"@MMK_L_P" = {
"@MMK_R_A" = -138;
"@MMK_R_J" = -200;
"@MMK_R_X" = -31;
"@MMK_R_Z" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -324;
"@MMK_R_o" = -13;
"@MMK_R_v" = 15;
AE = -97;
t = 14;
};
"@MMK_L_T" = {
"@MMK_R_A" = -79;
"@MMK_R_C" = -28;
"@MMK_R_J" = -240;
"@MMK_R_S" = -16;
"@MMK_R_T" = 16;
"@MMK_R_V" = 16;
"@MMK_R_W" = 15;
"@MMK_R_Y" = 16;
"@MMK_R_a" = -113;
"@MMK_R_c" = -99;
"@MMK_R_comma" = -218;
"@MMK_R_hyphen" = -232;
"@MMK_R_m" = -109;
"@MMK_R_o" = -99;
"@MMK_R_s" = -116;
"@MMK_R_u" = -95;
"@MMK_R_v" = -72;
"@MMK_R_x" = -77;
"@MMK_R_z" = -60;
AE = -179;
ae = -114;
guillemetleft = -328;
guillemetright = -216;
oslash = -95;
r = -75;
space = -40;
w = -57;
};
"@MMK_L_V" = {
"@MMK_R_A" = -77;
"@MMK_R_C" = -13;
"@MMK_R_a" = -46;
"@MMK_R_c" = -44;
"@MMK_R_comma" = -225;
"@MMK_R_hyphen" = -37;
"@MMK_R_o" = -46;
"@MMK_R_u" = -28;
"@MMK_R_v" = -11;
braceright = 19;
bracketright = 17;
parenright = 20;
r = -30;
};
"@MMK_L_W" = {
"@MMK_R_A" = -43;
"@MMK_R_T" = 14;
"@MMK_R_a" = -33;
"@MMK_R_c" = -31;
"@MMK_R_comma" = -123;
"@MMK_R_hyphen" = -60;
"@MMK_R_o" = -31;
"@MMK_R_u" = -19;
braceright = 14;
bracketright = 12;
parenright = 15;
r = -21;
};
"@MMK_L_X" = {
"@MMK_R_C" = -25;
"@MMK_R_V" = 14;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -46;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -31;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -29;
"@MMK_R_J" = -96;
"@MMK_R_S" = -16;
"@MMK_R_T" = 17;
"@MMK_R_U" = -96;
"@MMK_R_V" = 18;
"@MMK_R_W" = 17;
"@MMK_R_X" = 13;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -73;
"@MMK_R_c" = -65;
"@MMK_R_comma" = -211;
"@MMK_R_hyphen" = -52;
"@MMK_R_m" = -40;
"@MMK_R_o" = -65;
"@MMK_R_s" = -58;
"@MMK_R_u" = -39;
"@MMK_R_v" = -20;
"@MMK_R_x" = -23;
"@MMK_R_z" = -30;
AE = -96;
ae = -63;
ampersand = -30;
asterisk = -49;
braceright = 19;
bracketright = 18;
f = -22;
guillemetleft = -82;
guillemetright = -51;
oslash = -64;
parenright = 20;
r = -40;
t = -22;
};
"@MMK_L_Z" = {
"@MMK_R_A" = 13;
"@MMK_R_C" = -26;
"@MMK_R_c" = -21;
"@MMK_R_o" = -21;
"@MMK_R_u" = -19;
"@MMK_R_v" = -27;
w = -27;
};
"@MMK_L_a" = {
"@MMK_R_quotedbl" = -67;
"@MMK_R_v" = -15;
};
"@MMK_L_b" = {
"@MMK_R_quotedbl" = -29;
"@MMK_R_v" = -11;
"@MMK_R_x" = -15;
"@MMK_R_z" = -15;
};
"@MMK_L_c" = {
"@MMK_R_quotedbl" = -11;
};
"@MMK_L_comma" = {
"@MMK_R_quotedbl" = -170;
};
"@MMK_L_e" = {
"@MMK_R_quotedbl" = -14;
"@MMK_R_v" = -13;
};
"@MMK_L_h" = {
"@MMK_R_quotedbl" = -104;
};
"@MMK_L_o" = {
"@MMK_R_quotedbl" = -136;
"@MMK_R_v" = -15;
"@MMK_R_x" = -21;
"@MMK_R_z" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_A" = -120;
"@MMK_R_a" = -50;
"@MMK_R_c" = -59;
"@MMK_R_m" = -20;
"@MMK_R_o" = -61;
"@MMK_R_quotedbl" = -107;
"@MMK_R_s" = -80;
w = 11;
};
"@MMK_L_r" = {
"@MMK_R_a" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -123;
"@MMK_R_o" = -20;
"@MMK_R_quotedbl" = 16;
"@MMK_R_v" = 18;
f = 15;
t = 50;
w = 17;
};
"@MMK_L_v" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -107;
"@MMK_R_o" = -15;
"@MMK_R_quotedbl" = 15;
f = 13;
};
"@MMK_L_x" = {
"@MMK_R_c" = -20;
"@MMK_R_o" = -20;
};
"@MMK_L_z" = {
"@MMK_R_c" = -16;
"@MMK_R_o" = -16;
};
F = {
"@MMK_R_A" = -170;
"@MMK_R_J" = -264;
"@MMK_R_T" = 20;
"@MMK_R_a" = -34;
"@MMK_R_c" = -21;
"@MMK_R_comma" = -234;
"@MMK_R_o" = -21;
"@MMK_R_u" = -22;
"@MMK_R_v" = -24;
r = -26;
};
Q = {
"@MMK_R_T" = -43;
"@MMK_R_V" = -28;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -35;
};
R = {
"@MMK_R_T" = -80;
"@MMK_R_V" = -19;
"@MMK_R_Y" = -48;
};
braceleft = {
"@MMK_R_J" = -20;
"@MMK_R_U" = -20;
};
bracketleft = {
"@MMK_R_J" = -18;
"@MMK_R_U" = -18;
};
f = {
"@MMK_R_c" = -24;
"@MMK_R_quotedbl" = 16;
braceright = 19;
bracketright = 18;
parenright = 20;
};
k = {
"@MMK_R_c" = -20;
};
parenleft = {
"@MMK_R_V" = 20;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 22;
};
slash = {
slash = -224;
};
space = {
"@MMK_R_T" = -40;
};
t = {
"@MMK_R_o" = -20;
};
w = {
"@MMK_R_comma" = -124;
};
};
m003 = {
"@MMK_L_A" = {
"@MMK_R_C" = -11;
"@MMK_R_T" = -129;
"@MMK_R_U" = -17;
"@MMK_R_V" = -87;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -94;
"@MMK_R_o" = -12;
"@MMK_R_quotedbl" = -120;
"@MMK_R_u" = -11;
"@MMK_R_v" = -50;
"@MMK_R_z" = 12;
question = -61;
t = -17;
w = -33;
};
"@MMK_L_B" = {
"@MMK_R_T" = -27;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -55;
};
"@MMK_L_C" = {
"@MMK_R_T" = -29;
braceright = -17;
bracketright = -12;
parenright = -26;
};
"@MMK_L_D" = {
"@MMK_R_A" = -21;
"@MMK_R_T" = -27;
"@MMK_R_V" = -22;
"@MMK_R_X" = -22;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -23;
"@MMK_R_comma" = -102;
AE = -33;
};
"@MMK_L_E" = {
"@MMK_R_T" = 20;
"@MMK_R_c" = -19;
"@MMK_R_o" = -19;
"@MMK_R_u" = -17;
"@MMK_R_v" = -26;
f = -18;
w = -22;
};
"@MMK_L_H" = {
"@MMK_R_A" = 18;
"@MMK_R_T" = -29;
"@MMK_R_X" = 17;
"@MMK_R_Y" = -28;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
};
"@MMK_L_K" = {
"@MMK_R_C" = -31;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -64;
"@MMK_R_m" = -23;
"@MMK_R_o" = -27;
"@MMK_R_u" = -23;
"@MMK_R_v" = -40;
w = -63;
};
"@MMK_L_L" = {
"@MMK_R_A" = 19;
"@MMK_R_C" = -65;
"@MMK_R_T" = -275;
"@MMK_R_U" = -54;
"@MMK_R_V" = -175;
"@MMK_R_W" = -143;
"@MMK_R_Y" = -239;
"@MMK_R_quotedbl" = -336;
"@MMK_R_u" = -44;
"@MMK_R_v" = -133;
w = -92;
};
"@MMK_L_P" = {
"@MMK_R_A" = -138;
"@MMK_R_J" = -200;
"@MMK_R_X" = -31;
"@MMK_R_Z" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -324;
"@MMK_R_o" = -13;
"@MMK_R_v" = 15;
AE = -97;
t = 14;
};
"@MMK_L_T" = {
"@MMK_R_A" = -79;
"@MMK_R_C" = -28;
"@MMK_R_J" = -240;
"@MMK_R_S" = -16;
"@MMK_R_T" = 16;
"@MMK_R_V" = 16;
"@MMK_R_W" = 15;
"@MMK_R_Y" = 16;
"@MMK_R_a" = -113;
"@MMK_R_c" = -99;
"@MMK_R_comma" = -218;
"@MMK_R_hyphen" = -232;
"@MMK_R_m" = -109;
"@MMK_R_o" = -99;
"@MMK_R_s" = -116;
"@MMK_R_u" = -95;
"@MMK_R_v" = -72;
"@MMK_R_x" = -77;
"@MMK_R_z" = -60;
AE = -179;
ae = -114;
guillemetleft = -328;
guillemetright = -216;
oslash = -95;
r = -75;
space = -40;
w = -57;
};
"@MMK_L_V" = {
"@MMK_R_A" = -77;
"@MMK_R_C" = -13;
"@MMK_R_a" = -46;
"@MMK_R_c" = -44;
"@MMK_R_comma" = -225;
"@MMK_R_hyphen" = -37;
"@MMK_R_o" = -46;
"@MMK_R_u" = -28;
"@MMK_R_v" = -11;
braceright = 19;
bracketright = 17;
parenright = 20;
r = -30;
};
"@MMK_L_W" = {
"@MMK_R_A" = -43;
"@MMK_R_T" = 14;
"@MMK_R_a" = -33;
"@MMK_R_c" = -31;
"@MMK_R_comma" = -123;
"@MMK_R_hyphen" = -60;
"@MMK_R_o" = -31;
"@MMK_R_u" = -19;
braceright = 14;
bracketright = 12;
parenright = 15;
r = -21;
};
"@MMK_L_X" = {
"@MMK_R_C" = -25;
"@MMK_R_V" = 14;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -46;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -31;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -29;
"@MMK_R_J" = -96;
"@MMK_R_S" = -16;
"@MMK_R_T" = 17;
"@MMK_R_U" = -96;
"@MMK_R_V" = 18;
"@MMK_R_W" = 17;
"@MMK_R_X" = 13;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -73;
"@MMK_R_c" = -65;
"@MMK_R_comma" = -211;
"@MMK_R_hyphen" = -52;
"@MMK_R_m" = -40;
"@MMK_R_o" = -65;
"@MMK_R_s" = -58;
"@MMK_R_u" = -39;
"@MMK_R_v" = -20;
"@MMK_R_x" = -23;
"@MMK_R_z" = -30;
AE = -96;
ae = -63;
ampersand = -30;
asterisk = -49;
braceright = 19;
bracketright = 18;
f = -22;
guillemetleft = -82;
guillemetright = -51;
oslash = -64;
parenright = 20;
r = -40;
t = -22;
};
"@MMK_L_Z" = {
"@MMK_R_A" = 13;
"@MMK_R_C" = -26;
"@MMK_R_c" = -21;
"@MMK_R_o" = -21;
"@MMK_R_u" = -19;
"@MMK_R_v" = -27;
w = -27;
};
"@MMK_L_a" = {
"@MMK_R_quotedbl" = -67;
"@MMK_R_v" = -15;
};
"@MMK_L_b" = {
"@MMK_R_quotedbl" = -29;
"@MMK_R_v" = -11;
"@MMK_R_x" = -15;
"@MMK_R_z" = -15;
};
"@MMK_L_c" = {
"@MMK_R_quotedbl" = -11;
};
"@MMK_L_comma" = {
"@MMK_R_quotedbl" = -170;
};
"@MMK_L_e" = {
"@MMK_R_quotedbl" = -14;
"@MMK_R_v" = -13;
};
"@MMK_L_h" = {
"@MMK_R_quotedbl" = -104;
};
"@MMK_L_o" = {
"@MMK_R_quotedbl" = -136;
"@MMK_R_v" = -15;
"@MMK_R_x" = -21;
"@MMK_R_z" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_A" = -120;
"@MMK_R_a" = -50;
"@MMK_R_c" = -59;
"@MMK_R_m" = -20;
"@MMK_R_o" = -61;
"@MMK_R_quotedbl" = -107;
"@MMK_R_s" = -80;
w = 11;
};
"@MMK_L_r" = {
"@MMK_R_a" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -123;
"@MMK_R_o" = -20;
"@MMK_R_quotedbl" = 16;
"@MMK_R_v" = 18;
f = 15;
t = 50;
w = 17;
};
"@MMK_L_v" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -107;
"@MMK_R_o" = -15;
"@MMK_R_quotedbl" = 15;
f = 13;
};
"@MMK_L_x" = {
"@MMK_R_c" = -20;
"@MMK_R_o" = -20;
};
"@MMK_L_z" = {
"@MMK_R_c" = -16;
"@MMK_R_o" = -16;
};
F = {
"@MMK_R_A" = -170;
"@MMK_R_J" = -264;
"@MMK_R_T" = 20;
"@MMK_R_a" = -34;
"@MMK_R_c" = -21;
"@MMK_R_comma" = -234;
"@MMK_R_o" = -21;
"@MMK_R_u" = -22;
"@MMK_R_v" = -24;
r = -26;
};
Q = {
"@MMK_R_T" = -43;
"@MMK_R_V" = -28;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -35;
};
R = {
"@MMK_R_T" = -80;
"@MMK_R_V" = -19;
"@MMK_R_Y" = -48;
};
braceleft = {
"@MMK_R_J" = -20;
"@MMK_R_U" = -20;
};
bracketleft = {
"@MMK_R_J" = -18;
"@MMK_R_U" = -18;
};
f = {
"@MMK_R_c" = -24;
"@MMK_R_quotedbl" = 16;
braceright = 19;
bracketright = 18;
parenright = 20;
};
k = {
"@MMK_R_c" = -20;
};
parenleft = {
"@MMK_R_V" = 20;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 22;
};
slash = {
slash = -224;
};
space = {
"@MMK_R_T" = -40;
};
t = {
"@MMK_R_o" = -20;
};
w = {
"@MMK_R_comma" = -124;
};
};
m004 = {
"@MMK_L_A" = {
"@MMK_R_C" = -11;
"@MMK_R_T" = -129;
"@MMK_R_U" = -17;
"@MMK_R_V" = -87;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -94;
"@MMK_R_o" = -12;
"@MMK_R_quotedbl" = -120;
"@MMK_R_u" = -11;
"@MMK_R_v" = -50;
"@MMK_R_z" = 12;
question = -61;
t = -17;
w = -33;
};
"@MMK_L_B" = {
"@MMK_R_T" = -27;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -55;
};
"@MMK_L_C" = {
"@MMK_R_T" = -29;
braceright = -17;
bracketright = -12;
parenright = -26;
};
"@MMK_L_D" = {
"@MMK_R_A" = -21;
"@MMK_R_T" = -27;
"@MMK_R_V" = -22;
"@MMK_R_X" = -22;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -23;
"@MMK_R_comma" = -102;
AE = -33;
};
"@MMK_L_E" = {
"@MMK_R_T" = 20;
"@MMK_R_c" = -19;
"@MMK_R_o" = -19;
"@MMK_R_u" = -17;
"@MMK_R_v" = -26;
f = -18;
w = -22;
};
"@MMK_L_H" = {
"@MMK_R_A" = 18;
"@MMK_R_T" = -29;
"@MMK_R_X" = 17;
"@MMK_R_Y" = -28;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
};
"@MMK_L_K" = {
"@MMK_R_C" = -31;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -64;
"@MMK_R_m" = -23;
"@MMK_R_o" = -27;
"@MMK_R_u" = -23;
"@MMK_R_v" = -40;
w = -63;
};
"@MMK_L_L" = {
"@MMK_R_A" = 19;
"@MMK_R_C" = -65;
"@MMK_R_T" = -275;
"@MMK_R_U" = -54;
"@MMK_R_V" = -175;
"@MMK_R_W" = -143;
"@MMK_R_Y" = -239;
"@MMK_R_quotedbl" = -336;
"@MMK_R_u" = -44;
"@MMK_R_v" = -133;
w = -92;
};
"@MMK_L_P" = {
"@MMK_R_A" = -138;
"@MMK_R_J" = -200;
"@MMK_R_X" = -31;
"@MMK_R_Z" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -324;
"@MMK_R_o" = -13;
"@MMK_R_v" = 15;
AE = -97;
t = 14;
};
"@MMK_L_T" = {
"@MMK_R_A" = -79;
"@MMK_R_C" = -28;
"@MMK_R_J" = -240;
"@MMK_R_S" = -16;
"@MMK_R_T" = 16;
"@MMK_R_V" = 16;
"@MMK_R_W" = 15;
"@MMK_R_Y" = 16;
"@MMK_R_a" = -113;
"@MMK_R_c" = -99;
"@MMK_R_comma" = -218;
"@MMK_R_hyphen" = -232;
"@MMK_R_m" = -109;
"@MMK_R_o" = -99;
"@MMK_R_s" = -116;
"@MMK_R_u" = -95;
"@MMK_R_v" = -72;
"@MMK_R_x" = -77;
"@MMK_R_z" = -60;
AE = -179;
ae = -114;
guillemetleft = -328;
guillemetright = -216;
oslash = -95;
r = -75;
space = -40;
w = -57;
};
"@MMK_L_V" = {
"@MMK_R_A" = -77;
"@MMK_R_C" = -13;
"@MMK_R_a" = -46;
"@MMK_R_c" = -44;
"@MMK_R_comma" = -225;
"@MMK_R_hyphen" = -37;
"@MMK_R_o" = -46;
"@MMK_R_u" = -28;
"@MMK_R_v" = -11;
braceright = 19;
bracketright = 17;
parenright = 20;
r = -30;
};
"@MMK_L_W" = {
"@MMK_R_A" = -43;
"@MMK_R_T" = 14;
"@MMK_R_a" = -33;
"@MMK_R_c" = -31;
"@MMK_R_comma" = -123;
"@MMK_R_hyphen" = -60;
"@MMK_R_o" = -31;
"@MMK_R_u" = -19;
braceright = 14;
bracketright = 12;
parenright = 15;
r = -21;
};
"@MMK_L_X" = {
"@MMK_R_C" = -25;
"@MMK_R_V" = 14;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -46;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -31;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -29;
"@MMK_R_J" = -96;
"@MMK_R_S" = -16;
"@MMK_R_T" = 17;
"@MMK_R_U" = -96;
"@MMK_R_V" = 18;
"@MMK_R_W" = 17;
"@MMK_R_X" = 13;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -73;
"@MMK_R_c" = -65;
"@MMK_R_comma" = -211;
"@MMK_R_hyphen" = -52;
"@MMK_R_m" = -40;
"@MMK_R_o" = -65;
"@MMK_R_s" = -58;
"@MMK_R_u" = -39;
"@MMK_R_v" = -20;
"@MMK_R_x" = -23;
"@MMK_R_z" = -30;
AE = -96;
ae = -63;
ampersand = -30;
asterisk = -49;
braceright = 19;
bracketright = 18;
f = -22;
guillemetleft = -82;
guillemetright = -51;
oslash = -64;
parenright = 20;
r = -40;
t = -22;
};
"@MMK_L_Z" = {
"@MMK_R_A" = 13;
"@MMK_R_C" = -26;
"@MMK_R_c" = -21;
"@MMK_R_o" = -21;
"@MMK_R_u" = -19;
"@MMK_R_v" = -27;
w = -27;
};
"@MMK_L_a" = {
"@MMK_R_quotedbl" = -67;
"@MMK_R_v" = -15;
};
"@MMK_L_b" = {
"@MMK_R_quotedbl" = -29;
"@MMK_R_v" = -11;
"@MMK_R_x" = -15;
"@MMK_R_z" = -15;
};
"@MMK_L_c" = {
"@MMK_R_quotedbl" = -11;
};
"@MMK_L_comma" = {
"@MMK_R_quotedbl" = -170;
};
"@MMK_L_e" = {
"@MMK_R_quotedbl" = -14;
"@MMK_R_v" = -13;
};
"@MMK_L_h" = {
"@MMK_R_quotedbl" = -104;
};
"@MMK_L_o" = {
"@MMK_R_quotedbl" = -136;
"@MMK_R_v" = -15;
"@MMK_R_x" = -21;
"@MMK_R_z" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_A" = -120;
"@MMK_R_a" = -50;
"@MMK_R_c" = -59;
"@MMK_R_m" = -20;
"@MMK_R_o" = -61;
"@MMK_R_quotedbl" = -107;
"@MMK_R_s" = -80;
w = 11;
};
"@MMK_L_r" = {
"@MMK_R_a" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -123;
"@MMK_R_o" = -20;
"@MMK_R_quotedbl" = 16;
"@MMK_R_v" = 18;
f = 15;
t = 50;
w = 17;
};
"@MMK_L_v" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -107;
"@MMK_R_o" = -15;
"@MMK_R_quotedbl" = 15;
f = 13;
};
"@MMK_L_x" = {
"@MMK_R_c" = -20;
"@MMK_R_o" = -20;
};
"@MMK_L_z" = {
"@MMK_R_c" = -16;
"@MMK_R_o" = -16;
};
F = {
"@MMK_R_A" = -170;
"@MMK_R_J" = -264;
"@MMK_R_T" = 20;
"@MMK_R_a" = -34;
"@MMK_R_c" = -21;
"@MMK_R_comma" = -234;
"@MMK_R_o" = -21;
"@MMK_R_u" = -22;
"@MMK_R_v" = -24;
r = -26;
};
Q = {
"@MMK_R_T" = -43;
"@MMK_R_V" = -28;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -35;
};
R = {
"@MMK_R_T" = -80;
"@MMK_R_V" = -19;
"@MMK_R_Y" = -48;
};
braceleft = {
"@MMK_R_J" = -20;
"@MMK_R_U" = -20;
};
bracketleft = {
"@MMK_R_J" = -18;
"@MMK_R_U" = -18;
};
f = {
"@MMK_R_c" = -24;
"@MMK_R_quotedbl" = 16;
braceright = 19;
bracketright = 18;
parenright = 20;
};
k = {
"@MMK_R_c" = -20;
};
parenleft = {
"@MMK_R_V" = 20;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 22;
};
slash = {
slash = -224;
};
space = {
"@MMK_R_T" = -40;
};
t = {
"@MMK_R_o" = -20;
};
w = {
"@MMK_R_comma" = -124;
};
};
m005 = {
"@MMK_L_A" = {
"@MMK_R_C" = -11;
"@MMK_R_T" = -129;
"@MMK_R_U" = -17;
"@MMK_R_V" = -87;
"@MMK_R_W" = -69;
"@MMK_R_Y" = -94;
"@MMK_R_o" = -12;
"@MMK_R_quotedbl" = -120;
"@MMK_R_u" = -11;
"@MMK_R_v" = -50;
"@MMK_R_z" = 12;
question = -61;
t = -17;
w = -33;
};
"@MMK_L_B" = {
"@MMK_R_T" = -27;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -55;
};
"@MMK_L_C" = {
"@MMK_R_T" = -29;
braceright = -17;
bracketright = -12;
parenright = -26;
};
"@MMK_L_D" = {
"@MMK_R_A" = -21;
"@MMK_R_T" = -27;
"@MMK_R_V" = -22;
"@MMK_R_X" = -22;
"@MMK_R_Y" = -43;
"@MMK_R_Z" = -23;
"@MMK_R_comma" = -102;
AE = -33;
};
"@MMK_L_E" = {
"@MMK_R_T" = 20;
"@MMK_R_c" = -19;
"@MMK_R_o" = -19;
"@MMK_R_u" = -17;
"@MMK_R_v" = -26;
f = -18;
w = -22;
};
"@MMK_L_H" = {
"@MMK_R_A" = 18;
"@MMK_R_T" = -29;
"@MMK_R_X" = 17;
"@MMK_R_Y" = -28;
};
"@MMK_L_J" = {
"@MMK_R_A" = -22;
};
"@MMK_L_K" = {
"@MMK_R_C" = -31;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -64;
"@MMK_R_m" = -23;
"@MMK_R_o" = -27;
"@MMK_R_u" = -23;
"@MMK_R_v" = -40;
w = -63;
};
"@MMK_L_L" = {
"@MMK_R_A" = 19;
"@MMK_R_C" = -65;
"@MMK_R_T" = -275;
"@MMK_R_U" = -54;
"@MMK_R_V" = -175;
"@MMK_R_W" = -143;
"@MMK_R_Y" = -239;
"@MMK_R_quotedbl" = -336;
"@MMK_R_u" = -44;
"@MMK_R_v" = -133;
w = -92;
};
"@MMK_L_P" = {
"@MMK_R_A" = -138;
"@MMK_R_J" = -200;
"@MMK_R_X" = -31;
"@MMK_R_Z" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -324;
"@MMK_R_o" = -13;
"@MMK_R_v" = 15;
AE = -97;
t = 14;
};
"@MMK_L_T" = {
"@MMK_R_A" = -79;
"@MMK_R_C" = -28;
"@MMK_R_J" = -240;
"@MMK_R_S" = -16;
"@MMK_R_T" = 16;
"@MMK_R_V" = 16;
"@MMK_R_W" = 15;
"@MMK_R_Y" = 16;
"@MMK_R_a" = -113;
"@MMK_R_c" = -99;
"@MMK_R_comma" = -218;
"@MMK_R_hyphen" = -232;
"@MMK_R_m" = -109;
"@MMK_R_o" = -99;
"@MMK_R_s" = -116;
"@MMK_R_u" = -95;
"@MMK_R_v" = -72;
"@MMK_R_x" = -77;
"@MMK_R_z" = -60;
AE = -179;
ae = -114;
guillemetleft = -328;
guillemetright = -216;
oslash = -95;
r = -75;
space = -40;
w = -57;
};
"@MMK_L_V" = {
"@MMK_R_A" = -77;
"@MMK_R_C" = -13;
"@MMK_R_a" = -46;
"@MMK_R_c" = -44;
"@MMK_R_comma" = -225;
"@MMK_R_hyphen" = -37;
"@MMK_R_o" = -46;
"@MMK_R_u" = -28;
"@MMK_R_v" = -11;
braceright = 19;
bracketright = 17;
parenright = 20;
r = -30;
};
"@MMK_L_W" = {
"@MMK_R_A" = -43;
"@MMK_R_T" = 14;
"@MMK_R_a" = -33;
"@MMK_R_c" = -31;
"@MMK_R_comma" = -123;
"@MMK_R_hyphen" = -60;
"@MMK_R_o" = -31;
"@MMK_R_u" = -19;
braceright = 14;
bracketright = 12;
parenright = 15;
r = -21;
};
"@MMK_L_X" = {
"@MMK_R_C" = -25;
"@MMK_R_V" = 14;
"@MMK_R_c" = -26;
"@MMK_R_hyphen" = -46;
"@MMK_R_o" = -21;
"@MMK_R_u" = -21;
"@MMK_R_v" = -31;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -94;
"@MMK_R_C" = -29;
"@MMK_R_J" = -96;
"@MMK_R_S" = -16;
"@MMK_R_T" = 17;
"@MMK_R_U" = -96;
"@MMK_R_V" = 18;
"@MMK_R_W" = 17;
"@MMK_R_X" = 13;
"@MMK_R_Y" = 18;
"@MMK_R_a" = -73;
"@MMK_R_c" = -65;
"@MMK_R_comma" = -211;
"@MMK_R_hyphen" = -52;
"@MMK_R_m" = -40;
"@MMK_R_o" = -65;
"@MMK_R_s" = -58;
"@MMK_R_u" = -39;
"@MMK_R_v" = -20;
"@MMK_R_x" = -23;
"@MMK_R_z" = -30;
AE = -96;
ae = -63;
ampersand = -30;
asterisk = -49;
braceright = 19;
bracketright = 18;
f = -22;
guillemetleft = -82;
guillemetright = -51;
oslash = -64;
parenright = 20;
r = -40;
t = -22;
};
"@MMK_L_Z" = {
"@MMK_R_A" = 13;
"@MMK_R_C" = -26;
"@MMK_R_c" = -21;
"@MMK_R_o" = -21;
"@MMK_R_u" = -19;
"@MMK_R_v" = -27;
w = -27;
};
"@MMK_L_a" = {
"@MMK_R_quotedbl" = -67;
"@MMK_R_v" = -15;
};
"@MMK_L_b" = {
"@MMK_R_quotedbl" = -29;
"@MMK_R_v" = -11;
"@MMK_R_x" = -15;
"@MMK_R_z" = -15;
};
"@MMK_L_c" = {
"@MMK_R_quotedbl" = -11;
};
"@MMK_L_comma" = {
"@MMK_R_quotedbl" = -170;
};
"@MMK_L_e" = {
"@MMK_R_quotedbl" = -14;
"@MMK_R_v" = -13;
};
"@MMK_L_h" = {
"@MMK_R_quotedbl" = -104;
};
"@MMK_L_o" = {
"@MMK_R_quotedbl" = -136;
"@MMK_R_v" = -15;
"@MMK_R_x" = -21;
"@MMK_R_z" = -16;
};
"@MMK_L_quotedbl" = {
"@MMK_R_A" = -120;
"@MMK_R_a" = -50;
"@MMK_R_c" = -59;
"@MMK_R_m" = -20;
"@MMK_R_o" = -61;
"@MMK_R_quotedbl" = -107;
"@MMK_R_s" = -80;
w = 11;
};
"@MMK_L_r" = {
"@MMK_R_a" = -40;
"@MMK_R_c" = -19;
"@MMK_R_comma" = -123;
"@MMK_R_o" = -20;
"@MMK_R_quotedbl" = 16;
"@MMK_R_v" = 18;
f = 15;
t = 50;
w = 17;
};
"@MMK_L_v" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -107;
"@MMK_R_o" = -15;
"@MMK_R_quotedbl" = 15;
f = 13;
};
"@MMK_L_x" = {
"@MMK_R_c" = -20;
"@MMK_R_o" = -20;
};
"@MMK_L_z" = {
"@MMK_R_c" = -16;
"@MMK_R_o" = -16;
};
F = {
"@MMK_R_A" = -170;
"@MMK_R_J" = -264;
"@MMK_R_T" = 20;
"@MMK_R_a" = -34;
"@MMK_R_c" = -21;
"@MMK_R_comma" = -234;
"@MMK_R_o" = -21;
"@MMK_R_u" = -22;
"@MMK_R_v" = -24;
r = -26;
};
Q = {
"@MMK_R_T" = -43;
"@MMK_R_V" = -28;
"@MMK_R_W" = -20;
"@MMK_R_Y" = -35;
};
R = {
"@MMK_R_T" = -80;
"@MMK_R_V" = -19;
"@MMK_R_Y" = -48;
};
braceleft = {
"@MMK_R_J" = -20;
"@MMK_R_U" = -20;
};
bracketleft = {
"@MMK_R_J" = -18;
"@MMK_R_U" = -18;
};
f = {
"@MMK_R_c" = -24;
"@MMK_R_quotedbl" = 16;
braceright = 19;
bracketright = 18;
parenright = 20;
};
k = {
"@MMK_R_c" = -20;
};
parenleft = {
"@MMK_R_V" = 20;
"@MMK_R_W" = 18;
"@MMK_R_Y" = 22;
};
slash = {
slash = -224;
};
space = {
"@MMK_R_T" = -40;
};
t = {
"@MMK_R_o" = -20;
};
w = {
"@MMK_R_comma" = -124;
};
};
};
manufacturer = Mulat.org;
unitsPerEm = 2048;
userData = {
GSDimensionPlugin.Dimensions = {
"A9B054E9-1A63-4AEF-9EE1-561B1DFE8422" = {
};
};
};
versionMajor = 1;
versionMinor = 0;
}
