<?xml version='1.0' encoding='UTF-8'?>
<glyph name="G" format="2">
  <advance width="1395"/>
  <unicode hex="0047"/>
  <note>
uni0047
</note>
  <outline>
    <contour>
      <point x="725" y="-20" type="curve" smooth="yes"/>
      <point x="965" y="-20"/>
      <point x="1174" y="54.667"/>
      <point x="1282" y="184" type="curve"/>
      <point x="1282" y="765" type="line"/>
      <point x="709" y="765" type="line"/>
      <point x="709" y="544" type="line"/>
      <point x="982" y="544" type="line"/>
      <point x="982" y="293" type="line"/>
      <point x="934" y="245"/>
      <point x="853.667" y="221"/>
      <point x="741" y="221" type="curve" smooth="yes"/>
      <point x="517" y="221"/>
      <point x="399" y="378.667"/>
      <point x="399" y="684" type="curve" smooth="yes"/>
      <point x="399" y="777" type="line" smooth="yes"/>
      <point x="400.333" y="1079.667"/>
      <point x="509" y="1234"/>
      <point x="713" y="1234" type="curve" smooth="yes"/>
      <point x="873" y="1234"/>
      <point x="963.333" y="1159.667"/>
      <point x="990" y="993" type="curve"/>
      <point x="1282" y="993" type="line"/>
      <point x="1246" y="1307.667"/>
      <point x="1049.333" y="1476"/>
      <point x="704" y="1476" type="curve" smooth="yes"/>
      <point x="298" y="1476"/>
      <point x="94" y="1176"/>
      <point x="94" y="770" type="curve" smooth="yes"/>
      <point x="94" y="671" type="line" smooth="yes"/>
      <point x="100.52" y="129.707"/>
      <point x="546" y="-20"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
