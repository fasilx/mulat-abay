<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Psi" format="2">
  <advance width="1417"/>
  <unicode hex="03A8"/>
  <note>
uni03A8
</note>
  <outline>
    <contour>
      <point x="597" y="0" type="line"/>
      <point x="897" y="0" type="line"/>
      <point x="897" y="390" type="line"/>
      <point x="1230" y="427"/>
      <point x="1428" y="642"/>
      <point x="1432" y="984" type="curve" smooth="yes"/>
      <point x="1432" y="1456" type="line"/>
      <point x="1130" y="1456" type="line"/>
      <point x="1130" y="993" type="line" smooth="yes"/>
      <point x="1130" y="778.333"/>
      <point x="1054.333" y="663.333"/>
      <point x="897" y="634" type="curve"/>
      <point x="897" y="1456" type="line"/>
      <point x="597" y="1456" type="line"/>
      <point x="597" y="636" type="line"/>
      <point x="442.333" y="666.667"/>
      <point x="352" y="783.667"/>
      <point x="352" y="993" type="curve" smooth="yes"/>
      <point x="352" y="1456" type="line"/>
      <point x="52" y="1456" type="line"/>
      <point x="52" y="990" type="line" smooth="yes"/>
      <point x="53.333" y="636.667"/>
      <point x="262.333" y="415.667"/>
      <point x="597" y="389" type="curve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
0 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 4 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
