<?xml version='1.0' encoding='UTF-8'?>
<glyph name="sterling" format="2">
  <advance width="1190"/>
  <unicode hex="00A3"/>
  <note>
uni00A3
</note>
  <outline>
    <contour>
      <point x="102" y="0" type="line"/>
      <point x="1161" y="0" type="line"/>
      <point x="1161" y="241" type="line"/>
      <point x="508" y="241" type="line"/>
      <point x="549.333" y="289.667"/>
      <point x="570" y="355"/>
      <point x="570" y="437" type="curve" smooth="yes"/>
      <point x="564" y="576" type="line"/>
      <point x="864" y="576" type="line"/>
      <point x="864" y="812" type="line"/>
      <point x="555" y="812" type="line"/>
      <point x="546" y="1039" type="line"/>
      <point x="546" y="1167"/>
      <point x="611" y="1233"/>
      <point x="699" y="1233" type="curve" smooth="yes"/>
      <point x="807" y="1233"/>
      <point x="867" y="1171.333"/>
      <point x="867" y="1058" type="curve"/>
      <point x="1154" y="1058" type="line"/>
      <point x="1154" y="1314"/>
      <point x="982.667" y="1475"/>
      <point x="700" y="1475" type="curve" smooth="yes"/>
      <point x="424" y="1475"/>
      <point x="246" y="1308.333"/>
      <point x="246" y="1039" type="curve"/>
      <point x="253" y="812" type="line"/>
      <point x="99" y="812" type="line"/>
      <point x="99" y="576" type="line"/>
      <point x="261" y="576" type="line"/>
      <point x="266" y="420" type="line" smooth="yes"/>
      <point x="266" y="312.667"/>
      <point x="242" y="253"/>
      <point x="194" y="241" type="curve"/>
      <point x="102" y="241" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
28 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
31 20 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
95 31 1 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHB[ ]	/* 3 values pushed */
143 31 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
191 31 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
