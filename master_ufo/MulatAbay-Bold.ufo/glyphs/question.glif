<?xml version='1.0' encoding='UTF-8'?>
<glyph name="question" format="2">
  <advance width="1019"/>
  <unicode hex="003F"/>
  <note>
uni003F
</note>
  <outline>
    <contour>
      <point x="347" y="447" type="curve"/>
      <point x="603" y="447" type="line"/>
      <point x="614.333" y="573.333"/>
      <point x="643" y="630"/>
      <point x="694" y="679" type="curve" smooth="yes"/>
      <point x="902" y="879"/>
      <point x="946" y="970.667"/>
      <point x="946" y="1084" type="curve" smooth="yes"/>
      <point x="946" y="1333.333"/>
      <point x="782.667" y="1476"/>
      <point x="500" y="1476" type="curve" smooth="yes"/>
      <point x="220" y="1476"/>
      <point x="47.667" y="1323.667"/>
      <point x="45" y="1069" type="curve"/>
      <point x="335" y="1069" type="line"/>
      <point x="337.667" y="1175.667"/>
      <point x="401.333" y="1240"/>
      <point x="500" y="1240" type="curve" smooth="yes"/>
      <point x="604" y="1240"/>
      <point x="656" y="1183.667"/>
      <point x="656" y="1071" type="curve" smooth="yes"/>
      <point x="656" y="996.333"/>
      <point x="626.167" y="940.833"/>
      <point x="505.5" y="833.5" type="curve" smooth="yes"/>
      <point x="384.833" y="726.167"/>
      <point x="347" y="633.667"/>
    </contour>
    <contour>
      <point x="480" y="-12" type="curve" smooth="yes"/>
      <point x="577.333" y="-12"/>
      <point x="642" y="52"/>
      <point x="642" y="140" type="curve" smooth="yes"/>
      <point x="642" y="229.333"/>
      <point x="574.667" y="294"/>
      <point x="480" y="294" type="curve" smooth="yes"/>
      <point x="385.333" y="294"/>
      <point x="318" y="229.333"/>
      <point x="318" y="140" type="curve" smooth="yes"/>
      <point x="318" y="52"/>
      <point x="382.667" y="-12"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
32 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
27 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 27 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
4 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
21 0 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
