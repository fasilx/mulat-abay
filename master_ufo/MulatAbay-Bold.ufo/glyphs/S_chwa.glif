<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Schwa" format="2">
  <advance width="1415"/>
  <unicode hex="018F"/>
  <note>
uni018F
</note>
  <outline>
    <contour>
      <point x="701" y="-20" type="curve" smooth="yes"/>
      <point x="934.333" y="-20"/>
      <point x="1137" y="101.833"/>
      <point x="1245" y="306.5" type="curve" smooth="yes"/>
      <point x="1299" y="408.833"/>
      <point x="1326" y="523.667"/>
      <point x="1326" y="651" type="curve" smooth="yes"/>
      <point x="1326" y="789" type="line" smooth="yes"/>
      <point x="1326" y="1219.667"/>
      <point x="1064.333" y="1476"/>
      <point x="635" y="1476" type="curve" smooth="yes"/>
      <point x="479" y="1476"/>
      <point x="269.333" y="1437"/>
      <point x="184" y="1397" type="curve"/>
      <point x="233" y="1150" type="line"/>
      <point x="355" y="1192"/>
      <point x="484" y="1213"/>
      <point x="620" y="1213" type="curve" smooth="yes"/>
      <point x="876" y="1213"/>
      <point x="1015.667" y="1076.667"/>
      <point x="1025" y="826" type="curve"/>
      <point x="75" y="826" type="line"/>
      <point x="75" y="227"/>
      <point x="305" y="-20"/>
    </contour>
    <contour>
      <point x="701" y="241" type="curve" smooth="yes"/>
      <point x="490.333" y="241"/>
      <point x="375" y="348.333"/>
      <point x="375" y="551" type="curve" smooth="yes"/>
      <point x="375" y="582" type="line"/>
      <point x="1022" y="582" type="line"/>
      <point x="998" y="367.333"/>
      <point x="878.333" y="241"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
0 32 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 16 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
