<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Theta" format="2">
  <advance width="1393"/>
  <unicode hex="0398"/>
  <note>
uni0398
</note>
  <outline>
    <contour>
      <point x="704" y="-20" type="curve" smooth="yes"/>
      <point x="1104" y="-20"/>
      <point x="1322" y="291"/>
      <point x="1322" y="695" type="curve" smooth="yes"/>
      <point x="1322" y="760" type="line" smooth="yes"/>
      <point x="1322" y="1166"/>
      <point x="1098" y="1476"/>
      <point x="702" y="1476" type="curve" smooth="yes"/>
      <point x="301" y="1476"/>
      <point x="82" y="1161"/>
      <point x="82" y="759" type="curve" smooth="yes"/>
      <point x="82" y="687" type="line" smooth="yes"/>
      <point x="84" y="285"/>
      <point x="314" y="-20"/>
    </contour>
    <contour>
      <point x="704" y="226" type="curve" smooth="yes"/>
      <point x="498.667" y="226"/>
      <point x="386" y="397.667"/>
      <point x="386" y="695" type="curve" smooth="yes"/>
      <point x="386" y="766" type="line" smooth="yes"/>
      <point x="387.333" y="1068.667"/>
      <point x="500.667" y="1228"/>
      <point x="702" y="1228" type="curve" smooth="yes"/>
      <point x="904.667" y="1228"/>
      <point x="1018" y="1066.333"/>
      <point x="1018" y="761" type="curve" smooth="yes"/>
      <point x="1018" y="690" type="line" smooth="yes"/>
      <point x="1016.667" y="387.333"/>
      <point x="905.333" y="226"/>
    </contour>
    <contour>
      <point x="518" y="607" type="line"/>
      <point x="901" y="607" type="line"/>
      <point x="901" y="839" type="line"/>
      <point x="518" y="839" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
8 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 2 207 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
