<?xml version='1.0' encoding='UTF-8'?>
<glyph name="B" format="2">
  <advance width="1307"/>
  <unicode hex="0042"/>
  <note>
uni0042
</note>
  <outline>
    <contour>
      <point x="130" y="0" type="line"/>
      <point x="696" y="0" type="line" smooth="yes"/>
      <point x="1026.667" y="2.667"/>
      <point x="1212" y="148"/>
      <point x="1212" y="428" type="curve" smooth="yes"/>
      <point x="1212" y="592"/>
      <point x="1120.333" y="711.667"/>
      <point x="971" y="749" type="curve"/>
      <point x="1101.667" y="799.667"/>
      <point x="1179" y="914.333"/>
      <point x="1179" y="1057" type="curve" smooth="yes"/>
      <point x="1179" y="1318.333"/>
      <point x="993.333" y="1456"/>
      <point x="640" y="1456" type="curve" smooth="yes"/>
      <point x="130" y="1456" type="line"/>
    </contour>
    <contour>
      <point x="430" y="241" type="line"/>
      <point x="430" y="634" type="line"/>
      <point x="705" y="634" type="line" smooth="yes"/>
      <point x="843" y="632"/>
      <point x="912" y="564.333"/>
      <point x="912" y="431" type="curve" smooth="yes"/>
      <point x="912" y="312.333"/>
      <point x="828.333" y="241"/>
      <point x="687" y="241" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="430" y="846" type="line"/>
      <point x="430" y="1213" type="line"/>
      <point x="640" y="1213" type="line" smooth="yes"/>
      <point x="805.333" y="1213"/>
      <point x="879" y="1159"/>
      <point x="879" y="1027" type="curve" smooth="yes"/>
      <point x="879" y="909"/>
      <point x="803.333" y="848.667"/>
      <point x="652" y="846" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
