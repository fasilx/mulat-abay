<?xml version='1.0' encoding='UTF-8'?>
<glyph name="rho" format="2">
  <advance width="1160"/>
  <unicode hex="03C1"/>
  <note>
uni03C1
</note>
  <outline>
    <contour>
      <point x="113" y="-416" type="line"/>
      <point x="402" y="-416" type="line"/>
      <point x="402" y="101" type="line"/>
      <point x="470" y="20.333"/>
      <point x="558.333" y="-20"/>
      <point x="667" y="-20" type="curve" smooth="yes"/>
      <point x="923" y="-20"/>
      <point x="1086" y="181.333"/>
      <point x="1086" y="512" type="curve" smooth="yes"/>
      <point x="1086" y="525" type="line" smooth="yes"/>
      <point x="1086" y="886.333"/>
      <point x="904.667" y="1102"/>
      <point x="606" y="1102" type="curve" smooth="yes"/>
      <point x="308.667" y="1102"/>
      <point x="113" y="893.333"/>
      <point x="113" y="568" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="591" y="212" type="curve" smooth="yes"/>
      <point x="502.333" y="212"/>
      <point x="439.333" y="242.667"/>
      <point x="402" y="304" type="curve"/>
      <point x="402" y="545" type="line" smooth="yes"/>
      <point x="402" y="755.667"/>
      <point x="473.333" y="868"/>
      <point x="592" y="868" type="curve" smooth="yes"/>
      <point x="722.667" y="868"/>
      <point x="797" y="749"/>
      <point x="797" y="533" type="curve" smooth="yes"/>
      <point x="797" y="306.333"/>
      <point x="724.333" y="212"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
18 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
