<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six" format="2">
  <advance width="1175"/>
  <unicode hex="0036"/>
  <note>
uni0036
</note>
  <outline>
    <contour>
      <point x="613" y="-20" type="curve" smooth="yes"/>
      <point x="1038.486" y="-18.026"/>
      <point x="1103" y="410"/>
      <point x="1103" y="480" type="curve" smooth="yes"/>
      <point x="1103" y="776"/>
      <point x="942.333" y="974"/>
      <point x="689" y="974" type="curve" smooth="yes"/>
      <point x="571" y="974"/>
      <point x="473.333" y="934.667"/>
      <point x="396" y="856" type="curve"/>
      <point x="428" y="1090.667"/>
      <point x="593.667" y="1229"/>
      <point x="855" y="1233" type="curve" smooth="yes"/>
      <point x="883" y="1233" type="line"/>
      <point x="883" y="1471" type="line"/>
      <point x="378" y="1469"/>
      <point x="100" y="1144"/>
      <point x="100" y="671" type="curve" smooth="yes"/>
      <point x="100" y="567" type="line" smooth="yes"/>
      <point x="100" y="211"/>
      <point x="306.333" y="-20"/>
    </contour>
    <contour>
      <point x="607" y="213" type="curve" smooth="yes"/>
      <point x="469.667" y="213"/>
      <point x="390" y="327.667"/>
      <point x="390" y="521" type="curve" smooth="yes"/>
      <point x="390" y="609" type="line"/>
      <point x="426" y="689"/>
      <point x="507.667" y="742"/>
      <point x="601" y="742" type="curve" smooth="yes"/>
      <point x="731.667" y="742"/>
      <point x="815" y="635.667"/>
      <point x="815" y="477" type="curve" smooth="yes"/>
      <point x="815" y="321"/>
      <point x="731" y="213"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
