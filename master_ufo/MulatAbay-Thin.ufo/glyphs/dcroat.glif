<?xml version='1.0' encoding='UTF-8'?>
<glyph name="dcroat" format="2">
  <advance width="1223"/>
  <unicode hex="0111"/>
  <note>
uni0111
</note>
  <outline>
    <contour>
      <point x="528" y="-20" type="curve" smooth="yes"/>
      <point x="690.667" y="-20"/>
      <point x="823.667" y="50.333"/>
      <point x="897" y="173" type="curve"/>
      <point x="897" y="0" type="line"/>
      <point x="951" y="0" type="line"/>
      <point x="951" y="1281" type="line"/>
      <point x="1111" y="1281" type="line"/>
      <point x="1111" y="1335" type="line"/>
      <point x="951" y="1335" type="line"/>
      <point x="951" y="1536" type="line"/>
      <point x="897" y="1536" type="line"/>
      <point x="897" y="1335" type="line"/>
      <point x="524" y="1335" type="line"/>
      <point x="524" y="1281" type="line"/>
      <point x="897" y="1281" type="line"/>
      <point x="897" y="883" type="line"/>
      <point x="819.667" y="1028.333"/>
      <point x="692.667" y="1102"/>
      <point x="530" y="1102" type="curve" smooth="yes"/>
      <point x="276.667" y="1102"/>
      <point x="122" y="897.333"/>
      <point x="122" y="538" type="curve" smooth="yes"/>
      <point x="122" y="191.333"/>
      <point x="277.333" y="-20"/>
    </contour>
    <contour>
      <point x="527" y="34" type="curve" smooth="yes"/>
      <point x="304.333" y="34"/>
      <point x="178" y="224.333"/>
      <point x="178" y="531" type="curve" smooth="yes"/>
      <point x="178" y="871"/>
      <point x="307.667" y="1048"/>
      <point x="529" y="1048" type="curve" smooth="yes"/>
      <point x="712.333" y="1048"/>
      <point x="835" y="957"/>
      <point x="897" y="775" type="curve"/>
      <point x="897" y="268" type="line"/>
      <point x="835.667" y="114.667"/>
      <point x="705.667" y="34"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
15 20 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 20 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
19 3 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 3 values pushed */
4 6 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
15 13 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
