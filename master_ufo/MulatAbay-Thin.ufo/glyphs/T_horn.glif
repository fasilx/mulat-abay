<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Thorn" format="2">
  <advance width="1219"/>
  <unicode hex="00DE"/>
  <note>
uni00DE
</note>
  <outline>
    <contour>
      <point x="200" y="0" type="line"/>
      <point x="254" y="0" type="line"/>
      <point x="254" y="334" type="line"/>
      <point x="639" y="334" type="line" smooth="yes"/>
      <point x="907" y="339.333"/>
      <point x="1075" y="498"/>
      <point x="1075" y="738" type="curve" smooth="yes"/>
      <point x="1075" y="910"/>
      <point x="989" y="1041"/>
      <point x="840" y="1103" type="curve" smooth="yes"/>
      <point x="780" y="1128"/>
      <point x="710" y="1142"/>
      <point x="631" y="1143" type="curve" smooth="yes"/>
      <point x="254" y="1143" type="line"/>
      <point x="254" y="1456" type="line"/>
      <point x="200" y="1456" type="line"/>
    </contour>
    <contour>
      <point x="254" y="388" type="line"/>
      <point x="254" y="1089" type="line"/>
      <point x="640" y="1089" type="line" smooth="yes"/>
      <point x="872" y="1083.667"/>
      <point x="1021" y="940"/>
      <point x="1021" y="736" type="curve" smooth="yes"/>
      <point x="1021" y="533.333"/>
      <point x="866.333" y="388"/>
      <point x="625" y="388" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
9 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
1 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
16 0 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
9 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
14 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
