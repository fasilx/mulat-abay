<?xml version='1.0' encoding='UTF-8'?>
<glyph name="thetaSymbol" format="2">
  <advance width="1185"/>
  <unicode hex="03D1"/>
  <note>
uni03D1
</note>
  <outline>
    <contour>
      <point x="547" y="-20" type="curve" smooth="yes"/>
      <point x="815" y="-20"/>
      <point x="946" y="123"/>
      <point x="950" y="407" type="curve" smooth="yes"/>
      <point x="950" y="685" type="line"/>
      <point x="1014" y="687.667"/>
      <point x="1101" y="705.333"/>
      <point x="1137" y="720" type="curve"/>
      <point x="1126" y="772" type="line"/>
      <point x="1075" y="753"/>
      <point x="1016" y="742"/>
      <point x="950" y="739" type="curve"/>
      <point x="950" y="1074" type="line" smooth="yes"/>
      <point x="950" y="1346"/>
      <point x="837" y="1497"/>
      <point x="641" y="1497" type="curve" smooth="yes"/>
      <point x="486" y="1497"/>
      <point x="374" y="1363"/>
      <point x="374" y="1161" type="curve" smooth="yes"/>
      <point x="374" y="871.667"/>
      <point x="565.333" y="698"/>
      <point x="896" y="686" type="curve"/>
      <point x="896" y="401" type="line" smooth="yes"/>
      <point x="890.667" y="150.333"/>
      <point x="788.333" y="34"/>
      <point x="547" y="34" type="curve" smooth="yes"/>
      <point x="328.333" y="34"/>
      <point x="202.667" y="165"/>
      <point x="200" y="413" type="curve" smooth="yes"/>
      <point x="200" y="748" type="line"/>
      <point x="146" y="746" type="line"/>
      <point x="146" y="410" type="line" smooth="yes"/>
      <point x="150" y="134"/>
      <point x="301.667" y="-20"/>
    </contour>
    <contour>
      <point x="896" y="740" type="line"/>
      <point x="593.333" y="752"/>
      <point x="428" y="895.333"/>
      <point x="428" y="1154" type="curve" smooth="yes"/>
      <point x="430.667" y="1343"/>
      <point x="518.333" y="1443"/>
      <point x="641" y="1443" type="curve"/>
      <point x="814.333" y="1443"/>
      <point x="894.667" y="1320"/>
      <point x="896" y="1084" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
20 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
