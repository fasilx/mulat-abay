<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Theta" format="2">
  <advance width="1393"/>
  <unicode hex="0398"/>
  <note>
uni0398
</note>
  <outline>
    <contour>
      <point x="679" y="-20" type="curve" smooth="yes"/>
      <point x="1035" y="-20"/>
      <point x="1227" y="263"/>
      <point x="1227" y="619" type="curve" smooth="yes"/>
      <point x="1227" y="837" type="line" smooth="yes"/>
      <point x="1227" y="1193"/>
      <point x="1033" y="1476"/>
      <point x="677" y="1476" type="curve" smooth="yes"/>
      <point x="322" y="1476"/>
      <point x="129" y="1189"/>
      <point x="129" y="837" type="curve" smooth="yes"/>
      <point x="129" y="627" type="line" smooth="yes"/>
      <point x="129" y="231"/>
      <point x="351" y="-20"/>
    </contour>
    <contour>
      <point x="679" y="34" type="curve" smooth="yes"/>
      <point x="351" y="34"/>
      <point x="184" y="297"/>
      <point x="184" y="619" type="curve" smooth="yes"/>
      <point x="184" y="832" type="line" smooth="yes"/>
      <point x="184" y="1196"/>
      <point x="377" y="1422"/>
      <point x="677" y="1422" type="curve" smooth="yes"/>
      <point x="981" y="1422"/>
      <point x="1173" y="1191"/>
      <point x="1173" y="839" type="curve" smooth="yes"/>
      <point x="1173" y="627" type="line" smooth="yes"/>
      <point x="1173" y="260"/>
      <point x="983" y="34"/>
    </contour>
    <contour>
      <point x="439" y="699" type="line"/>
      <point x="956" y="699" type="line"/>
      <point x="956" y="741" type="line"/>
      <point x="439" y="741" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
8 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 2 207 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
