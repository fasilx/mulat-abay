<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Psi" format="2">
  <advance width="1417"/>
  <unicode hex="03A8"/>
  <note>
uni03A8
</note>
  <outline>
    <contour>
      <point x="686" y="0" type="line"/>
      <point x="741" y="0" type="line"/>
      <point x="741" y="416" type="line"/>
      <point x="1134.921" y="423.874"/>
      <point x="1274" y="688"/>
      <point x="1274" y="939" type="curve" smooth="yes"/>
      <point x="1274" y="1456" type="line"/>
      <point x="1220" y="1456" type="line"/>
      <point x="1220" y="938" type="line" smooth="yes"/>
      <point x="1220" y="661"/>
      <point x="1019.667" y="476.333"/>
      <point x="741" y="471" type="curve"/>
      <point x="741" y="1456" type="line"/>
      <point x="686" y="1456" type="line"/>
      <point x="686" y="471" type="line"/>
      <point x="402" y="479"/>
      <point x="211" y="667"/>
      <point x="211" y="951" type="curve" smooth="yes"/>
      <point x="211" y="1456" type="line"/>
      <point x="156" y="1456" type="line"/>
      <point x="156" y="941" type="line" smooth="yes"/>
      <point x="156" y="625"/>
      <point x="366" y="424"/>
      <point x="686" y="416" type="curve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
0 25 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
23 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
22 4 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
