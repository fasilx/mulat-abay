<?xml version='1.0' encoding='UTF-8'?>
<glyph name="G" format="2">
  <advance width="1406"/>
  <unicode hex="0047"/>
  <note>
uni0047
</note>
  <outline>
    <contour>
      <point x="729" y="-20" type="curve" smooth="yes"/>
      <point x="950.333" y="-20"/>
      <point x="1152.667" y="54.667"/>
      <point x="1226" y="156" type="curve"/>
      <point x="1226" y="660" type="line"/>
      <point x="727" y="660" type="line"/>
      <point x="727" y="605" type="line"/>
      <point x="1172" y="605" type="line"/>
      <point x="1172" y="181" type="line"/>
      <point x="1109.333" y="99.667"/>
      <point x="923.667" y="34"/>
      <point x="729" y="34" type="curve" smooth="yes"/>
      <point x="408" y="34"/>
      <point x="222" y="294"/>
      <point x="222" y="620" type="curve" smooth="yes"/>
      <point x="222" y="852" type="line" smooth="yes"/>
      <point x="222" y="1083"/>
      <point x="418.667" y="1422"/>
      <point x="712" y="1422" type="curve" smooth="yes"/>
      <point x="972" y="1422"/>
      <point x="1134" y="1294"/>
      <point x="1170" y="1062" type="curve"/>
      <point x="1224" y="1062" type="line"/>
      <point x="1194.667" y="1318"/>
      <point x="1001.333" y="1476"/>
      <point x="712" y="1476" type="curve" smooth="yes"/>
      <point x="320.923" y="1474.205"/>
      <point x="168" y="1027"/>
      <point x="168" y="858" type="curve" smooth="yes"/>
      <point x="168" y="608" type="line" smooth="yes"/>
      <point x="168" y="255"/>
      <point x="384" y="-20"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
