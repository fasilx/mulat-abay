<?xml version='1.0' encoding='UTF-8'?>
<glyph name="B" format="2">
  <advance width="1235"/>
  <unicode hex="0042"/>
  <note>
uni0042
</note>
  <outline>
    <contour>
      <point x="200" y="0" type="line"/>
      <point x="669" y="0" type="line" smooth="yes"/>
      <point x="955.667" y="0"/>
      <point x="1125" y="153"/>
      <point x="1125" y="401" type="curve" smooth="yes"/>
      <point x="1125" y="575.667"/>
      <point x="987" y="729"/>
      <point x="803" y="753" type="curve"/>
      <point x="965.667" y="785"/>
      <point x="1059" y="907"/>
      <point x="1059" y="1083" type="curve" smooth="yes"/>
      <point x="1059" y="1325.667"/>
      <point x="896.333" y="1456"/>
      <point x="583" y="1456" type="curve" smooth="yes"/>
      <point x="200" y="1456" type="line"/>
    </contour>
    <contour>
      <point x="254" y="54" type="line"/>
      <point x="254" y="719" type="line"/>
      <point x="696" y="719" type="line" smooth="yes"/>
      <point x="924" y="715"/>
      <point x="1071" y="583"/>
      <point x="1071" y="399" type="curve" smooth="yes"/>
      <point x="1071" y="183"/>
      <point x="921.667" y="54"/>
      <point x="675" y="54" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="254" y="773" type="line"/>
      <point x="254" y="1402" type="line"/>
      <point x="595" y="1402" type="line" smooth="yes"/>
      <point x="867.667" y="1398.667"/>
      <point x="1004" y="1293.667"/>
      <point x="1004" y="1087" type="curve" smooth="yes"/>
      <point x="1004" y="872.333"/>
      <point x="868.333" y="773"/>
      <point x="603" y="773" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
