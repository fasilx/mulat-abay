<?xml version='1.0' encoding='UTF-8'?>
<glyph name="rho" format="2">
  <advance width="1160"/>
  <unicode hex="03C1"/>
  <note>
uni03C1
</note>
  <outline>
    <contour>
      <point x="-92" y="-416" type="line"/>
      <point x="-38" y="-416" type="line"/>
      <point x="65" y="163" type="line"/>
      <point x="115" y="41"/>
      <point x="227" y="-20"/>
      <point x="399" y="-20" type="curve" smooth="yes"/>
      <point x="651" y="-20"/>
      <point x="841" y="186"/>
      <point x="900" y="521" type="curve" smooth="yes"/>
      <point x="903" y="536" type="line" smooth="yes"/>
      <point x="965" y="892"/>
      <point x="846" y="1102"/>
      <point x="596" y="1102" type="curve" smooth="yes"/>
      <point x="344" y="1102"/>
      <point x="147" y="925"/>
      <point x="94" y="642" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="409" y="34" type="curve" smooth="yes"/>
      <point x="231" y="34"/>
      <point x="116" y="117"/>
      <point x="82" y="261" type="curve"/>
      <point x="144" y="608" type="line" smooth="yes"/>
      <point x="195" y="885"/>
      <point x="362" y="1048"/>
      <point x="586" y="1048" type="curve" smooth="yes"/>
      <point x="807" y="1048"/>
      <point x="904" y="855"/>
      <point x="846" y="526" type="curve" smooth="yes"/>
      <point x="791" y="213"/>
      <point x="632" y="34"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
18 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
