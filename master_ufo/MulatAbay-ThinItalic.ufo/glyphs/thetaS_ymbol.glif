<?xml version='1.0' encoding='UTF-8'?>
<glyph name="thetaSymbol" format="2">
  <advance width="1185"/>
  <unicode hex="03D1"/>
  <note>
uni03D1
</note>
  <outline>
    <contour>
      <point x="353" y="-20" type="curve" smooth="yes"/>
      <point x="621" y="-20"/>
      <point x="777" y="123"/>
      <point x="831" y="407" type="curve" smooth="yes"/>
      <point x="880" y="685" type="line"/>
      <point x="944" y="688"/>
      <point x="1035" y="705"/>
      <point x="1073" y="720" type="curve"/>
      <point x="1071" y="772" type="line"/>
      <point x="1017" y="753"/>
      <point x="956" y="742"/>
      <point x="890" y="739" type="curve"/>
      <point x="949" y="1074" type="line" smooth="yes"/>
      <point x="997" y="1346"/>
      <point x="910" y="1497"/>
      <point x="714" y="1497" type="curve" smooth="yes"/>
      <point x="559" y="1497"/>
      <point x="424" y="1363"/>
      <point x="388" y="1161" type="curve" smooth="yes"/>
      <point x="337" y="872"/>
      <point x="498" y="698"/>
      <point x="826" y="686" type="curve"/>
      <point x="776" y="401" type="line" smooth="yes"/>
      <point x="726" y="150"/>
      <point x="604" y="34"/>
      <point x="362" y="34" type="curve" smooth="yes"/>
      <point x="144" y="34"/>
      <point x="41" y="165"/>
      <point x="82" y="413" type="curve" smooth="yes"/>
      <point x="141" y="748" type="line"/>
      <point x="87" y="746" type="line"/>
      <point x="28" y="410" type="line" smooth="yes"/>
      <point x="-17" y="134"/>
      <point x="107" y="-20"/>
    </contour>
    <contour>
      <point x="836" y="740" type="line"/>
      <point x="535" y="752"/>
      <point x="395" y="895"/>
      <point x="441" y="1154" type="curve" smooth="yes"/>
      <point x="477" y="1343"/>
      <point x="582" y="1443"/>
      <point x="705" y="1443" type="curve"/>
      <point x="878" y="1443"/>
      <point x="937" y="1320"/>
      <point x="896" y="1084" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
20 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
