<?xml version='1.0' encoding='UTF-8'?>
<glyph name="cent" format="2">
  <advance width="1110"/>
  <unicode hex="00A2"/>
  <note>
uni00A2
</note>
  <outline>
    <contour>
      <point x="315" y="-245" type="line"/>
      <point x="370" y="-245" type="line"/>
      <point x="410" y="-19" type="line"/>
      <point x="618" y="-8"/>
      <point x="798" y="128"/>
      <point x="844" y="328" type="curve"/>
      <point x="790" y="328" type="line"/>
      <point x="746" y="144"/>
      <point x="587" y="34"/>
      <point x="391" y="34" type="curve" smooth="yes"/>
      <point x="150" y="34"/>
      <point x="36" y="217"/>
      <point x="89" y="520" type="curve" smooth="yes"/>
      <point x="95" y="555" type="line" smooth="yes"/>
      <point x="150" y="864"/>
      <point x="327" y="1048"/>
      <point x="568" y="1048" type="curve" smooth="yes"/>
      <point x="769" y="1048"/>
      <point x="885" y="920"/>
      <point x="860" y="725" type="curve"/>
      <point x="914" y="725" type="line"/>
      <point x="943" y="942"/>
      <point x="822" y="1086"/>
      <point x="607" y="1101" type="curve"/>
      <point x="646" y="1318" type="line"/>
      <point x="591" y="1318" type="line"/>
      <point x="552" y="1101" type="line"/>
      <point x="295" y="1088"/>
      <point x="99" y="882"/>
      <point x="42" y="562" type="curve" smooth="yes"/>
      <point x="36" y="526" type="line" smooth="yes"/>
      <point x="-22" y="199"/>
      <point x="103" y="-6"/>
      <point x="355" y="-19" type="curve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
0 34 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
20 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
