<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00546
</note>
  <outline>
    <contour>
      <point x="194" y="-11" type="curve" smooth="yes"/>
      <point x="342" y="-11"/>
      <point x="470" y="102"/>
      <point x="498" y="259" type="curve" smooth="yes"/>
      <point x="526" y="416"/>
      <point x="441" y="519"/>
      <point x="288" y="519" type="curve" smooth="yes"/>
      <point x="185" y="519"/>
      <point x="96" y="472"/>
      <point x="43" y="411" type="curve"/>
      <point x="90" y="622"/>
      <point x="246" y="747"/>
      <point x="475" y="747" type="curve"/>
      <point x="484" y="797" type="line"/>
      <point x="202" y="797"/>
      <point x="27" y="629"/>
      <point x="-21" y="354" type="curve" smooth="yes"/>
      <point x="-35" y="277" type="line" smooth="yes"/>
      <point x="-65" y="106"/>
      <point x="29" y="-11"/>
    </contour>
    <contour>
      <point x="203" y="37" type="curve" smooth="yes"/>
      <point x="69" y="37"/>
      <point x="-8" y="130"/>
      <point x="18" y="274" type="curve" smooth="yes"/>
      <point x="28" y="334" type="line"/>
      <point x="70" y="415"/>
      <point x="177" y="470"/>
      <point x="270" y="470" type="curve" smooth="yes"/>
      <point x="402" y="470"/>
      <point x="467" y="386"/>
      <point x="445" y="258" type="curve" smooth="yes"/>
      <point x="422" y="130"/>
      <point x="319" y="37"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
