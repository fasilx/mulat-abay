<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six" format="2">
  <advance width="1150"/>
  <unicode hex="0036"/>
  <note>
uni0036
</note>
  <outline>
    <contour>
      <point x="408" y="-20" type="curve" smooth="yes"/>
      <point x="666" y="-20"/>
      <point x="860" y="217"/>
      <point x="907" y="480" type="curve" smooth="yes"/>
      <point x="957" y="767"/>
      <point x="826" y="957"/>
      <point x="570" y="957" type="curve" smooth="yes"/>
      <point x="395" y="957"/>
      <point x="223" y="870"/>
      <point x="121" y="733" type="curve"/>
      <point x="216" y="1169"/>
      <point x="492" y="1422"/>
      <point x="900" y="1422" type="curve"/>
      <point x="909" y="1476" type="line"/>
      <point x="448" y="1476"/>
      <point x="145" y="1177"/>
      <point x="54" y="660" type="curve" smooth="yes"/>
      <point x="22" y="481" type="line" smooth="yes"/>
      <point x="-54" y="47"/>
      <point x="270" y="-20"/>
    </contour>
    <contour>
      <point x="417" y="33" type="curve" smooth="yes"/>
      <point x="169" y="33"/>
      <point x="30" y="218"/>
      <point x="78" y="493" type="curve" smooth="yes"/>
      <point x="101" y="621" type="line"/>
      <point x="169" y="782"/>
      <point x="367" y="903"/>
      <point x="553" y="903" type="curve" smooth="yes"/>
      <point x="785" y="903"/>
      <point x="898" y="739"/>
      <point x="853" y="480" type="curve" smooth="yes"/>
      <point x="813" y="255"/>
      <point x="624" y="33"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
