<?xml version='1.0' encoding='UTF-8'?>
<glyph name="B" format="2">
  <advance width="1275"/>
  <unicode hex="0042"/>
  <note>
uni0042
</note>
  <outline>
    <contour>
      <point x="9" y="0" type="line"/>
      <point x="478" y="0" type="line" smooth="yes"/>
      <point x="765" y="0"/>
      <point x="961" y="153"/>
      <point x="1005" y="401" type="curve" smooth="yes"/>
      <point x="1036" y="576"/>
      <point x="925" y="729"/>
      <point x="745" y="753" type="curve"/>
      <point x="913" y="785"/>
      <point x="1028" y="907"/>
      <point x="1059" y="1083" type="curve" smooth="yes"/>
      <point x="1102" y="1326"/>
      <point x="962" y="1456"/>
      <point x="649" y="1456" type="curve" smooth="yes"/>
      <point x="266" y="1456" type="line"/>
    </contour>
    <contour>
      <point x="73" y="54" type="line"/>
      <point x="190" y="719" type="line"/>
      <point x="632" y="719" type="line" smooth="yes"/>
      <point x="859" y="715"/>
      <point x="983" y="583"/>
      <point x="951" y="399" type="curve" smooth="yes"/>
      <point x="912" y="183"/>
      <point x="740" y="54"/>
      <point x="494" y="54" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="200" y="773" type="line"/>
      <point x="310" y="1402" type="line"/>
      <point x="651" y="1402" type="line" smooth="yes"/>
      <point x="924" y="1399"/>
      <point x="1041" y="1294"/>
      <point x="1005" y="1087" type="curve" smooth="yes"/>
      <point x="967" y="872"/>
      <point x="814" y="773"/>
      <point x="549" y="773" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
