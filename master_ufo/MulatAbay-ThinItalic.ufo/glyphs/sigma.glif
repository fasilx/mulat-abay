<?xml version='1.0' encoding='UTF-8'?>
<glyph name="sigma" format="2">
  <advance width="1160"/>
  <unicode hex="03C3"/>
  <note>
uni03C3
</note>
  <outline>
    <contour>
      <point x="401" y="-20" type="curve" smooth="yes"/>
      <point x="584" y="-20"/>
      <point x="752" y="77"/>
      <point x="860" y="241" type="curve" smooth="yes"/>
      <point x="913" y="323"/>
      <point x="950" y="416"/>
      <point x="968" y="521" type="curve" smooth="yes"/>
      <point x="1013" y="775"/>
      <point x="945" y="943"/>
      <point x="795" y="1027" type="curve"/>
      <point x="1140" y="1027" type="line"/>
      <point x="1150" y="1082" type="line"/>
      <point x="587" y="1082" type="line" smooth="yes"/>
      <point x="163" y="1077"/>
      <point x="37" y="612"/>
      <point x="28" y="562" type="curve" smooth="yes"/>
      <point x="-42" y="140"/>
      <point x="245" y="-20"/>
    </contour>
    <contour>
      <point x="410" y="34" type="curve" smooth="yes"/>
      <point x="145" y="34"/>
      <point x="30" y="265"/>
      <point x="75" y="520" type="curve" smooth="yes"/>
      <point x="129" y="828"/>
      <point x="336" y="1027"/>
      <point x="583" y="1027" type="curve" smooth="yes"/>
      <point x="951" y="1027"/>
      <point x="930" y="611"/>
      <point x="916" y="531" type="curve" smooth="yes"/>
      <point x="864" y="239"/>
      <point x="657" y="34"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
8 30 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
16 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
