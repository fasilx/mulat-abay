<?xml version='1.0' encoding='UTF-8'?>
<glyph name="G" format="2">
  <advance width="1395"/>
  <unicode hex="0047"/>
  <note>
uni0047
</note>
  <outline>
    <contour>
      <point x="508" y="-20" type="curve" smooth="yes"/>
      <point x="729" y="-20"/>
      <point x="945" y="55"/>
      <point x="1036" y="156" type="curve"/>
      <point x="1125" y="660" type="line"/>
      <point x="626" y="660" type="line"/>
      <point x="616" y="605" type="line"/>
      <point x="1061" y="605" type="line"/>
      <point x="986" y="181" type="line"/>
      <point x="909" y="100"/>
      <point x="712" y="34"/>
      <point x="517" y="34" type="curve" smooth="yes"/>
      <point x="193" y="34"/>
      <point x="57" y="298"/>
      <point x="114" y="620" type="curve" smooth="yes"/>
      <point x="154" y="852" type="line" smooth="yes"/>
      <point x="215" y="1193"/>
      <point x="452" y="1422"/>
      <point x="745" y="1422" type="curve" smooth="yes"/>
      <point x="1005" y="1422"/>
      <point x="1144" y="1294"/>
      <point x="1139" y="1062" type="curve"/>
      <point x="1193" y="1062" type="line"/>
      <point x="1210" y="1318"/>
      <point x="1043" y="1476"/>
      <point x="754" y="1476" type="curve" smooth="yes"/>
      <point x="363" y="1474"/>
      <point x="166" y="1225"/>
      <point x="102" y="858" type="curve" smooth="yes"/>
      <point x="57" y="608" type="line" smooth="yes"/>
      <point x="-4" y="259"/>
      <point x="162" y="-20"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
