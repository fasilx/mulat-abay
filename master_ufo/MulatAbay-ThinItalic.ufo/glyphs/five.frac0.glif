<?xml version='1.0' encoding='UTF-8'?>
<glyph name="five.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00545
</note>
  <outline>
    <contour>
      <point x="191" y="-11" type="curve" smooth="yes"/>
      <point x="359" y="-11"/>
      <point x="474" y="82"/>
      <point x="503" y="251" type="curve" smooth="yes"/>
      <point x="530" y="402"/>
      <point x="440" y="501"/>
      <point x="279" y="501" type="curve" smooth="yes"/>
      <point x="196" y="501"/>
      <point x="124" y="475"/>
      <point x="89" y="455" type="curve"/>
      <point x="176" y="738" type="line"/>
      <point x="578" y="738" type="line"/>
      <point x="587" y="789" type="line"/>
      <point x="140" y="789" type="line"/>
      <point x="26" y="407" type="line"/>
      <point x="65" y="394" type="line"/>
      <point x="146" y="441"/>
      <point x="200" y="453"/>
      <point x="265" y="453" type="curve" smooth="yes"/>
      <point x="406" y="453"/>
      <point x="472" y="372"/>
      <point x="450" y="251" type="curve" smooth="yes"/>
      <point x="425" y="108"/>
      <point x="342" y="37"/>
      <point x="200" y="37" type="curve" smooth="yes"/>
      <point x="85" y="37"/>
      <point x="16" y="105"/>
      <point x="25" y="208" type="curve"/>
      <point x="-29" y="208" type="line"/>
      <point x="-41" y="75"/>
      <point x="54" y="-11"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
