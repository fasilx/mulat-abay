<?xml version='1.0' encoding='UTF-8'?>
<glyph name="oslash" format="2">
  <advance width="1127"/>
  <unicode hex="00F8"/>
  <note>
uni00F8
</note>
  <outline>
    <contour>
      <point x="371" y="-20" type="curve" smooth="yes"/>
      <point x="671" y="-20"/>
      <point x="886" y="226"/>
      <point x="946" y="568" type="curve" smooth="yes"/>
      <point x="999" y="868"/>
      <point x="857" y="1102"/>
      <point x="567" y="1102" type="curve" smooth="yes"/>
      <point x="271" y="1102"/>
      <point x="51" y="858"/>
      <point x="-2" y="562" type="curve" smooth="yes"/>
      <point x="-72" y="140"/>
      <point x="217" y="-20"/>
    </contour>
    <contour>
      <point x="380" y="34" type="curve" smooth="yes"/>
      <point x="201" y="34"/>
      <point x="-7" y="228"/>
      <point x="51" y="552" type="curve" smooth="yes"/>
      <point x="101" y="837"/>
      <point x="310" y="1048"/>
      <point x="557" y="1048" type="curve" smooth="yes"/>
      <point x="818" y="1048"/>
      <point x="936" y="818"/>
      <point x="891" y="562" type="curve" smooth="yes"/>
      <point x="834" y="239"/>
      <point x="627" y="34"/>
    </contour>
    <contour>
      <point x="-21" y="-295" type="line"/>
      <point x="38" y="-295" type="line"/>
      <point x="925" y="1286" type="line"/>
      <point x="866" y="1286" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
4 39 40 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
35 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
33 35 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
25 27 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
