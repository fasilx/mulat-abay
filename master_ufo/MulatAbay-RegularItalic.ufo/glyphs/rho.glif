<?xml version='1.0' encoding='UTF-8'?>
<glyph name="rho" format="2">
  <advance width="1160"/>
  <unicode hex="03C1"/>
  <note>
uni03C1
</note>
  <outline>
    <contour>
      <point x="-119" y="-416" type="line"/>
      <point x="67" y="-416" type="line"/>
      <point x="159" y="104" type="line"/>
      <point x="220" y="21"/>
      <point x="316" y="-20"/>
      <point x="446" y="-20" type="curve" smooth="yes"/>
      <point x="700" y="-20"/>
      <point x="896" y="180"/>
      <point x="952" y="500" type="curve" smooth="yes"/>
      <point x="963" y="566" type="line" smooth="yes"/>
      <point x="1008" y="905"/>
      <point x="872" y="1102"/>
      <point x="596" y="1102" type="curve" smooth="yes"/>
      <point x="308" y="1102"/>
      <point x="107" y="868"/>
      <point x="56" y="580" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="417" y="131" type="curve" smooth="yes"/>
      <point x="303" y="131"/>
      <point x="227" y="180"/>
      <point x="189" y="278" type="curve"/>
      <point x="240" y="565" type="line" smooth="yes"/>
      <point x="280" y="790"/>
      <point x="413" y="950"/>
      <point x="569" y="950" type="curve" smooth="yes"/>
      <point x="746" y="950"/>
      <point x="819" y="794"/>
      <point x="771" y="521" type="curve" smooth="yes"/>
      <point x="725" y="261"/>
      <point x="597" y="131"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
18 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
