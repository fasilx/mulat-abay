<?xml version='1.0' encoding='UTF-8'?>
<glyph name="G" format="2">
  <advance width="1395"/>
  <unicode hex="0047"/>
  <note>
uni0047
</note>
  <outline>
    <contour>
      <point x="535" y="-20" type="curve" smooth="yes"/>
      <point x="769" y="-20"/>
      <point x="963" y="50"/>
      <point x="1087" y="191" type="curve"/>
      <point x="1181" y="725" type="line"/>
      <point x="653" y="725" type="line"/>
      <point x="626" y="569" type="line"/>
      <point x="963" y="569" type="line"/>
      <point x="905" y="242" type="line"/>
      <point x="821" y="166"/>
      <point x="707" y="137"/>
      <point x="563" y="137" type="curve" smooth="yes"/>
      <point x="309" y="137"/>
      <point x="185" y="344"/>
      <point x="243" y="671" type="curve" smooth="yes"/>
      <point x="264" y="790" type="line" smooth="yes"/>
      <point x="325" y="1133"/>
      <point x="492" y="1318"/>
      <point x="750" y="1318" type="curve" smooth="yes"/>
      <point x="943" y="1318"/>
      <point x="1041" y="1222"/>
      <point x="1043" y="1029" type="curve"/>
      <point x="1235" y="1029" type="line"/>
      <point x="1244" y="1314"/>
      <point x="1080" y="1476"/>
      <point x="776" y="1476" type="curve" smooth="yes"/>
      <point x="406" y="1476"/>
      <point x="147" y="1224"/>
      <point x="70" y="785" type="curve" smooth="yes"/>
      <point x="47" y="658" type="line" smooth="yes"/>
      <point x="-17" y="271"/>
      <point x="151" y="-20"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
