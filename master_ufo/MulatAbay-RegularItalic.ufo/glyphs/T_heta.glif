<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Theta" format="2">
  <advance width="1393"/>
  <unicode hex="0398"/>
  <note>
uni0398
</note>
  <outline>
    <contour>
      <point x="503" y="-20" type="curve" smooth="yes"/>
      <point x="894" y="-20"/>
      <point x="1141" y="290"/>
      <point x="1210" y="681" type="curve" smooth="yes"/>
      <point x="1229" y="786" type="line" smooth="yes"/>
      <point x="1293" y="1175"/>
      <point x="1145" y="1476"/>
      <point x="764" y="1476" type="curve" smooth="yes"/>
      <point x="379" y="1476"/>
      <point x="123" y="1158"/>
      <point x="56" y="773" type="curve" smooth="yes"/>
      <point x="37" y="668" type="line" smooth="yes"/>
      <point x="-27" y="282"/>
      <point x="129" y="-20"/>
    </contour>
    <contour>
      <point x="531" y="143" type="curve" smooth="yes"/>
      <point x="282" y="143"/>
      <point x="172" y="348"/>
      <point x="230" y="681" type="curve" smooth="yes"/>
      <point x="249" y="788" type="line" smooth="yes"/>
      <point x="311" y="1116"/>
      <point x="492" y="1311"/>
      <point x="735" y="1311" type="curve" smooth="yes"/>
      <point x="984" y="1311"/>
      <point x="1097" y="1120"/>
      <point x="1036" y="775" type="curve" smooth="yes"/>
      <point x="1017" y="667" type="line" smooth="yes"/>
      <point x="953" y="330"/>
      <point x="779" y="143"/>
    </contour>
    <contour>
      <point x="375" y="659" type="line"/>
      <point x="892" y="659" type="line"/>
      <point x="919" y="811" type="line"/>
      <point x="402" y="811" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
8 36 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
17 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 8 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
207 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
255 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 3 values pushed */
47 2 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
191 2 207 2 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
