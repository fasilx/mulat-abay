<?xml version='1.0' encoding='UTF-8'?>
<glyph name="thetaSymbol" format="2">
  <advance width="1185"/>
  <unicode hex="03D1"/>
  <note>
uni03D1
</note>
  <outline>
    <contour>
      <point x="377" y="-20" type="curve" smooth="yes"/>
      <point x="643" y="-20"/>
      <point x="835" y="148"/>
      <point x="887" y="429" type="curve" smooth="yes"/>
      <point x="916" y="595" type="line"/>
      <point x="973" y="601"/>
      <point x="1022" y="612"/>
      <point x="1065" y="627" type="curve"/>
      <point x="1083" y="776" type="line"/>
      <point x="1033" y="763"/>
      <point x="986" y="755"/>
      <point x="944" y="752" type="curve"/>
      <point x="1006" y="1103" type="line" smooth="yes"/>
      <point x="1048" y="1340"/>
      <point x="947" y="1478"/>
      <point x="735" y="1478" type="curve" smooth="yes"/>
      <point x="535" y="1478"/>
      <point x="377" y="1344"/>
      <point x="340" y="1131" type="curve" smooth="yes"/>
      <point x="289" y="842"/>
      <point x="450" y="642"/>
      <point x="732" y="601" type="curve"/>
      <point x="703" y="435" type="line" smooth="yes"/>
      <point x="667" y="232"/>
      <point x="559" y="137"/>
      <point x="404" y="137" type="curve" smooth="yes"/>
      <point x="239" y="137"/>
      <point x="159" y="244"/>
      <point x="193" y="435" type="curve" smooth="yes"/>
      <point x="252" y="771" type="line"/>
      <point x="66" y="769" type="line"/>
      <point x="8" y="442" type="line" smooth="yes"/>
      <point x="-42" y="155"/>
      <point x="106" y="-20"/>
    </contour>
    <contour>
      <point x="761" y="762" type="line"/>
      <point x="584" y="802"/>
      <point x="491" y="937"/>
      <point x="524" y="1124" type="curve" smooth="yes"/>
      <point x="547" y="1255"/>
      <point x="608" y="1320"/>
      <point x="707" y="1320" type="curve" smooth="yes"/>
      <point x="805" y="1320"/>
      <point x="844" y="1254"/>
      <point x="824" y="1122" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
20 41 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
11 25 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
