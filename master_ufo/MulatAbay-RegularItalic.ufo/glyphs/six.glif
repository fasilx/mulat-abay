<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six" format="2">
  <advance width="1150"/>
  <unicode hex="0036"/>
  <note>
uni0036
</note>
  <outline>
    <contour>
      <point x="407" y="-20" type="curve" smooth="yes"/>
      <point x="681" y="-20"/>
      <point x="892" y="175"/>
      <point x="945" y="475" type="curve" smooth="yes"/>
      <point x="995" y="758"/>
      <point x="866" y="955"/>
      <point x="613" y="955" type="curve" smooth="yes"/>
      <point x="480" y="955"/>
      <point x="368" y="911"/>
      <point x="275" y="823" type="curve"/>
      <point x="355" y="1123"/>
      <point x="562" y="1295"/>
      <point x="851" y="1300" type="curve" smooth="yes"/>
      <point x="885" y="1300" type="line"/>
      <point x="913" y="1457" type="line" name="❌"/>
      <point x="427" y="1450"/>
      <point x="146" y="1161"/>
      <point x="51" y="625" type="curve" smooth="yes"/>
      <point x="39" y="554" type="line" smooth="yes"/>
      <point x="-21" y="217"/>
      <point x="128" y="-20"/>
    </contour>
    <contour>
      <point x="434" y="133" type="curve" smooth="yes"/>
      <point x="272" y="133"/>
      <point x="179" y="293"/>
      <point x="221" y="533" type="curve" smooth="yes"/>
      <point x="233" y="601" type="line"/>
      <point x="295" y="716"/>
      <point x="428" y="801"/>
      <point x="554" y="801" type="curve" smooth="yes"/>
      <point x="714" y="801"/>
      <point x="796" y="666"/>
      <point x="760" y="466" type="curve" smooth="yes"/>
      <point x="725" y="267"/>
      <point x="600" y="133"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
