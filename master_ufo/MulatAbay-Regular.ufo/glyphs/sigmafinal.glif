<?xml version='1.0' encoding='UTF-8'?>
<glyph name="sigmafinal" format="2">
  <advance width="1101"/>
  <unicode hex="03C2"/>
  <note>
uni03C2
</note>
  <outline>
    <contour>
      <point x="740" y="-374" type="line"/>
      <point x="839" y="-291"/>
      <point x="912" y="-166"/>
      <point x="915" y="-82" type="curve" smooth="yes"/>
      <point x="915" y="25"/>
      <point x="868" y="84"/>
      <point x="603" y="161" type="curve" smooth="yes"/>
      <point x="390" y="227"/>
      <point x="283" y="347"/>
      <point x="283" y="552" type="curve" smooth="yes"/>
      <point x="283" y="791"/>
      <point x="394" y="950"/>
      <point x="570" y="950" type="curve" smooth="yes"/>
      <point x="718" y="950"/>
      <point x="815" y="856"/>
      <point x="815" y="709" type="curve"/>
      <point x="990" y="709" type="line"/>
      <point x="990" y="949"/>
      <point x="822" y="1102"/>
      <point x="570" y="1102" type="curve" smooth="yes"/>
      <point x="254" y="1102"/>
      <point x="98" y="848"/>
      <point x="98" y="520" type="curve" smooth="yes"/>
      <point x="98" y="239"/>
      <point x="267" y="70"/>
      <point x="582" y="0" type="curve" smooth="yes"/>
      <point x="651" y="-15"/>
      <point x="738" y="-33"/>
      <point x="738" y="-105" type="curve" smooth="yes"/>
      <point x="738" y="-152"/>
      <point x="722" y="-195"/>
      <point x="642" y="-289" type="curve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
0 35 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
27 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
13 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
