<?xml version='1.0' encoding='UTF-8'?>
<glyph name="q" format="2">
  <advance width="1164"/>
  <unicode hex="0071"/>
  <note>
uni0071
</note>
  <outline>
    <contour>
      <point x="822" y="-416" type="line"/>
      <point x="1007" y="-416" type="line"/>
      <point x="1007" y="1082" type="line"/>
      <point x="837" y="1082" type="line"/>
      <point x="829" y="973" type="line"/>
      <point x="755" y="1059"/>
      <point x="654" y="1102"/>
      <point x="526" y="1102" type="curve" smooth="yes"/>
      <point x="263.333" y="1102"/>
      <point x="95" y="890"/>
      <point x="95" y="537" type="curve" smooth="yes"/>
      <point x="95" y="201"/>
      <point x="262.667" y="-20"/>
      <point x="524" y="-20" type="curve" smooth="yes"/>
      <point x="648" y="-20"/>
      <point x="747.333" y="20"/>
      <point x="822" y="100" type="curve"/>
    </contour>
    <contour>
      <point x="570" y="131" type="curve" smooth="yes"/>
      <point x="392.667" y="131"/>
      <point x="280" y="281"/>
      <point x="280" y="529" type="curve" smooth="yes"/>
      <point x="280" y="806.333"/>
      <point x="393.333" y="950"/>
      <point x="572" y="950" type="curve" smooth="yes"/>
      <point x="680" y="950"/>
      <point x="763.333" y="902.333"/>
      <point x="822" y="807" type="curve"/>
      <point x="822" y="277" type="line"/>
      <point x="764" y="179.667"/>
      <point x="680" y="131"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
