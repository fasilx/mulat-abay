<?xml version='1.0' encoding='UTF-8'?>
<glyph name="divide" format="2">
  <advance width="1169"/>
  <unicode hex="00F7"/>
  <note>
uni00F7
</note>
  <outline>
    <contour>
      <point x="71" y="600" type="line"/>
      <point x="1069" y="600" type="line"/>
      <point x="1069" y="784" type="line"/>
      <point x="71" y="784" type="line"/>
    </contour>
    <contour>
      <point x="575" y="172" type="curve" smooth="yes"/>
      <point x="651" y="172"/>
      <point x="691" y="219.667"/>
      <point x="691" y="281" type="curve" smooth="yes"/>
      <point x="691" y="345"/>
      <point x="651" y="393"/>
      <point x="575" y="393" type="curve" smooth="yes"/>
      <point x="499" y="393"/>
      <point x="461" y="345"/>
      <point x="461" y="281" type="curve" smooth="yes"/>
      <point x="461" y="219.667"/>
      <point x="499" y="172"/>
    </contour>
    <contour>
      <point x="575" y="989" type="curve" smooth="yes"/>
      <point x="651" y="989"/>
      <point x="691" y="1035.333"/>
      <point x="691" y="1098" type="curve" smooth="yes"/>
      <point x="691" y="1162"/>
      <point x="651" y="1210"/>
      <point x="575" y="1210" type="curve" smooth="yes"/>
      <point x="499" y="1210"/>
      <point x="461" y="1162"/>
      <point x="461" y="1098" type="curve" smooth="yes"/>
      <point x="461" y="1035.333"/>
      <point x="499" y="989"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
7 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
6 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
22 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MDRP[11100]	/* MoveDirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
