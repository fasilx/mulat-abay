<?xml version='1.0' encoding='UTF-8'?>
<glyph name="rho" format="2">
  <advance width="1160"/>
  <unicode hex="03C1"/>
  <note>
uni03C1
</note>
  <outline>
    <contour>
      <point x="145" y="-416" type="line"/>
      <point x="331" y="-416" type="line"/>
      <point x="331" y="104" type="line"/>
      <point x="407" y="21.333"/>
      <point x="510" y="-20"/>
      <point x="640" y="-20" type="curve" smooth="yes"/>
      <point x="894.667" y="-20"/>
      <point x="1055" y="180"/>
      <point x="1055" y="500" type="curve" smooth="yes"/>
      <point x="1054" y="566" type="line" smooth="yes"/>
      <point x="1039.333" y="904.667"/>
      <point x="868" y="1102"/>
      <point x="592" y="1102" type="curve" smooth="yes"/>
      <point x="304" y="1102"/>
      <point x="145" y="868"/>
      <point x="145" y="580" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="585" y="131" type="curve" smooth="yes"/>
      <point x="471" y="131"/>
      <point x="386.333" y="180"/>
      <point x="331" y="278" type="curve"/>
      <point x="331" y="565" type="line" smooth="yes"/>
      <point x="331" y="790.333"/>
      <point x="436" y="950"/>
      <point x="592" y="950" type="curve" smooth="yes"/>
      <point x="769.333" y="950"/>
      <point x="870" y="794.333"/>
      <point x="870" y="521" type="curve" smooth="yes"/>
      <point x="870" y="261"/>
      <point x="765" y="131"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
18 28 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
9 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
