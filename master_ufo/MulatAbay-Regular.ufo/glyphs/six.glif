<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six" format="2">
  <advance width="1150"/>
  <unicode hex="0036"/>
  <note>
uni0036
</note>
  <outline>
    <contour>
      <point x="601" y="-20" type="curve" smooth="yes"/>
      <point x="875.667" y="-20"/>
      <point x="1052" y="175"/>
      <point x="1052" y="475" type="curve" smooth="yes"/>
      <point x="1052" y="757.667"/>
      <point x="888.333" y="955"/>
      <point x="635" y="955" type="curve" smooth="yes"/>
      <point x="502.333" y="955"/>
      <point x="397.667" y="911"/>
      <point x="321" y="823" type="curve"/>
      <point x="347.667" y="1123"/>
      <point x="525" y="1294.667"/>
      <point x="847" y="1300" type="curve"/>
      <point x="847" y="1457" type="line"/>
      <point x="362" y="1450.333"/>
      <point x="132" y="1161"/>
      <point x="132" y="625" type="curve" smooth="yes"/>
      <point x="132" y="554" type="line" smooth="yes"/>
      <point x="132" y="216.667"/>
      <point x="322.333" y="-20"/>
    </contour>
    <contour>
      <point x="601" y="133" type="curve" smooth="yes"/>
      <point x="439.667" y="133"/>
      <point x="318" y="293"/>
      <point x="318" y="533" type="curve" smooth="yes"/>
      <point x="318" y="601" type="line"/>
      <point x="359.333" y="715.667"/>
      <point x="477.333" y="801"/>
      <point x="604" y="801" type="curve" smooth="yes"/>
      <point x="764" y="801"/>
      <point x="869" y="666"/>
      <point x="869" y="466" type="curve" smooth="yes"/>
      <point x="869" y="267.333"/>
      <point x="767.667" y="133"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
