<?xml version='1.0' encoding='UTF-8'?>
<glyph name="B" format="2">
  <advance width="1275"/>
  <unicode hex="0042"/>
  <note>
uni0042
</note>
  <outline>
    <contour>
      <point x="-22" y="0" type="line"/>
      <point x="483" y="0" type="line" smooth="yes"/>
      <point x="793" y="0"/>
      <point x="997" y="159"/>
      <point x="1043" y="420" type="curve" smooth="yes"/>
      <point x="1073" y="591"/>
      <point x="999" y="722"/>
      <point x="849" y="766" type="curve"/>
      <point x="993" y="823"/>
      <point x="1095" y="932"/>
      <point x="1119" y="1068" type="curve" smooth="yes"/>
      <point x="1164" y="1324"/>
      <point x="1027" y="1456"/>
      <point x="711" y="1456" type="curve" smooth="yes"/>
      <point x="235" y="1456" type="line"/>
    </contour>
    <contour>
      <point x="198" y="157" type="line"/>
      <point x="290" y="681" type="line"/>
      <point x="610" y="681" type="line" smooth="yes"/>
      <point x="801" y="681"/>
      <point x="881" y="593"/>
      <point x="850" y="418" type="curve" smooth="yes"/>
      <point x="821" y="255"/>
      <point x="694" y="157"/>
      <point x="515" y="157" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="317" y="835" type="line"/>
      <point x="399" y="1298" type="line"/>
      <point x="683" y="1298" type="line" smooth="yes"/>
      <point x="874" y="1298"/>
      <point x="954" y="1229"/>
      <point x="926" y="1069" type="curve" smooth="yes"/>
      <point x="900" y="925"/>
      <point x="775" y="835"/>
      <point x="607" y="835" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
