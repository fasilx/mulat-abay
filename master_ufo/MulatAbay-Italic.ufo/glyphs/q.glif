<?xml version='1.0' encoding='UTF-8'?>
<glyph name="q" format="2">
  <advance width="1164"/>
  <unicode hex="0071"/>
  <note>
uni0071
</note>
  <outline>
    <contour>
      <point x="558" y="-416" type="line"/>
      <point x="743" y="-416" type="line"/>
      <point x="1007" y="1082" type="line"/>
      <point x="837" y="1082" type="line"/>
      <point x="810" y="973" type="line"/>
      <point x="751" y="1059"/>
      <point x="658" y="1102"/>
      <point x="530" y="1102" type="curve" smooth="yes"/>
      <point x="267" y="1102"/>
      <point x="61" y="890"/>
      <point x="1" y="550" type="curve" smooth="yes"/>
      <point x="-60" y="201"/>
      <point x="68" y="-20"/>
      <point x="330" y="-20" type="curve" smooth="yes"/>
      <point x="454" y="-20"/>
      <point x="560" y="20"/>
      <point x="649" y="100" type="curve"/>
    </contour>
    <contour>
      <point x="402" y="131" type="curve" smooth="yes"/>
      <point x="225" y="131"/>
      <point x="139" y="281"/>
      <point x="182" y="529" type="curve" smooth="yes"/>
      <point x="231" y="806"/>
      <point x="370" y="950"/>
      <point x="549" y="950" type="curve" smooth="yes"/>
      <point x="657" y="950"/>
      <point x="732" y="902"/>
      <point x="774" y="807" type="curve"/>
      <point x="680" y="277" type="line"/>
      <point x="605" y="180"/>
      <point x="512" y="131"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
6 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
