<?xml version='1.0' encoding='UTF-8'?>
<glyph name="O" format="2">
  <advance width="1414"/>
  <unicode hex="004F"/>
  <note>
uni004F
</note>
  <outline>
    <contour>
      <point x="708" y="-20" type="curve" smooth="yes"/>
      <point x="952" y="-20"/>
      <point x="1148.667" y="102"/>
      <point x="1250" y="318" type="curve" smooth="yes"/>
      <point x="1300.667" y="426"/>
      <point x="1326" y="551.667"/>
      <point x="1326" y="695" type="curve" smooth="yes"/>
      <point x="1326" y="760" type="line" smooth="yes"/>
      <point x="1326" y="1045.333"/>
      <point x="1218.167" y="1271.833"/>
      <point x="1029.5" y="1388.5" type="curve" smooth="yes"/>
      <point x="935.167" y="1446.833"/>
      <point x="827.333" y="1476"/>
      <point x="706" y="1476" type="curve" smooth="yes"/>
      <point x="463.333" y="1476"/>
      <point x="266.833" y="1355.5"/>
      <point x="163.5" y="1137.5" type="curve" smooth="yes"/>
      <point x="111.833" y="1028.5"/>
      <point x="86" y="902.333"/>
      <point x="86" y="759" type="curve" smooth="yes"/>
      <point x="86" y="687" type="line" smooth="yes"/>
      <point x="87.333" y="407"/>
      <point x="195.667" y="183"/>
      <point x="385" y="67" type="curve" smooth="yes"/>
      <point x="479.667" y="9"/>
      <point x="587.333" y="-20"/>
    </contour>
    <contour>
      <point x="708" y="226" type="curve" smooth="yes"/>
      <point x="502.667" y="226"/>
      <point x="390" y="397.667"/>
      <point x="390" y="695" type="curve" smooth="yes"/>
      <point x="390" y="766" type="line" smooth="yes"/>
      <point x="391.333" y="1068.667"/>
      <point x="504.667" y="1228"/>
      <point x="706" y="1228" type="curve" smooth="yes"/>
      <point x="908.667" y="1228"/>
      <point x="1022" y="1066.333"/>
      <point x="1022" y="761" type="curve" smooth="yes"/>
      <point x="1022" y="690" type="line" smooth="yes"/>
      <point x="1020.667" y="387.333"/>
      <point x="909.333" y="226"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
