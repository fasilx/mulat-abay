<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00546
</note>
  <outline>
    <contour>
      <point x="199" y="-11" type="curve" smooth="yes"/>
      <point x="375" y="-11"/>
      <point x="511" y="104"/>
      <point x="538" y="259" type="curve" smooth="yes"/>
      <point x="566" y="418"/>
      <point x="489" y="523"/>
      <point x="331" y="523" type="curve" smooth="yes"/>
      <point x="255" y="523"/>
      <point x="189" y="497"/>
      <point x="132" y="446" type="curve"/>
      <point x="173" y="592"/>
      <point x="283" y="666"/>
      <point x="479" y="667" type="curve"/>
      <point x="502" y="798" type="line"/>
      <point x="188" y="791"/>
      <point x="7" y="634"/>
      <point x="-42" y="357" type="curve" smooth="yes"/>
      <point x="-51" y="306" type="line" smooth="yes"/>
      <point x="-86" y="105"/>
      <point x="14" y="-11"/>
    </contour>
    <contour>
      <point x="218" y="117" type="curve" smooth="yes"/>
      <point x="134" y="117"/>
      <point x="82" y="174"/>
      <point x="102" y="286" type="curve" smooth="yes"/>
      <point x="108" y="320" type="line"/>
      <point x="138" y="363"/>
      <point x="198" y="396"/>
      <point x="266" y="396" type="curve" smooth="yes"/>
      <point x="358" y="396"/>
      <point x="396" y="341"/>
      <point x="382" y="258" type="curve" smooth="yes"/>
      <point x="367" y="175"/>
      <point x="299" y="117"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
