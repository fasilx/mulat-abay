<?xml version='1.0' encoding='UTF-8'?>
<glyph name="nine.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00549
</note>
  <outline>
    <contour>
      <point x="202" y="-8" type="line"/>
      <point x="225" y="-8" type="line" smooth="yes"/>
      <point x="479.667" y="-6.667"/>
      <point x="620" y="139"/>
      <point x="620" y="411" type="curve" smooth="yes"/>
      <point x="620" y="486" type="line" smooth="yes"/>
      <point x="620" y="683.333"/>
      <point x="523" y="800"/>
      <point x="347" y="800" type="curve" smooth="yes"/>
      <point x="191" y="800"/>
      <point x="78" y="679.667"/>
      <point x="78" y="521" type="curve" smooth="yes"/>
      <point x="78" y="373"/>
      <point x="183.667" y="255"/>
      <point x="337" y="255" type="curve" smooth="yes"/>
      <point x="439.667" y="255"/>
      <point x="523.333" y="302.667"/>
      <point x="566" y="372" type="curve"/>
      <point x="563.333" y="158.667"/>
      <point x="445" y="42.667"/>
      <point x="203" y="40" type="curve"/>
    </contour>
    <contour>
      <point x="342" y="304" type="curve" smooth="yes"/>
      <point x="218" y="304"/>
      <point x="134" y="400.667"/>
      <point x="134" y="522" type="curve" smooth="yes"/>
      <point x="134" y="648.667"/>
      <point x="224" y="750"/>
      <point x="348" y="750" type="curve" smooth="yes"/>
      <point x="482.667" y="750"/>
      <point x="566" y="664.333"/>
      <point x="566" y="491" type="curve" smooth="yes"/>
      <point x="566" y="453" type="line"/>
      <point x="536.667" y="365"/>
      <point x="448.667" y="304"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
