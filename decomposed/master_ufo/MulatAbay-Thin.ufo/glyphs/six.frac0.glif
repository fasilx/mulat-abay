<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00546
</note>
  <outline>
    <contour>
      <point x="387" y="-11" type="curve" smooth="yes"/>
      <point x="535" y="-11"/>
      <point x="643" y="101.667"/>
      <point x="643" y="259" type="curve" smooth="yes"/>
      <point x="643" y="416.333"/>
      <point x="540.333" y="519"/>
      <point x="387" y="519" type="curve" smooth="yes"/>
      <point x="284.333" y="519"/>
      <point x="203.667" y="472.333"/>
      <point x="161" y="411" type="curve"/>
      <point x="171.667" y="621.667"/>
      <point x="304.667" y="747"/>
      <point x="534" y="747" type="curve"/>
      <point x="534" y="797" type="line"/>
      <point x="252.667" y="797"/>
      <point x="107" y="628.667"/>
      <point x="107" y="354" type="curve" smooth="yes"/>
      <point x="107" y="277" type="line" smooth="yes"/>
      <point x="107" y="106.333"/>
      <point x="221.667" y="-11"/>
    </contour>
    <contour>
      <point x="387" y="37" type="curve" smooth="yes"/>
      <point x="253.667" y="37"/>
      <point x="160" y="130"/>
      <point x="160" y="274" type="curve" smooth="yes"/>
      <point x="160" y="334" type="line"/>
      <point x="188" y="415.333"/>
      <point x="284.667" y="470"/>
      <point x="378" y="470" type="curve" smooth="yes"/>
      <point x="510" y="470"/>
      <point x="590" y="386"/>
      <point x="590" y="258" type="curve" smooth="yes"/>
      <point x="590" y="130"/>
      <point x="503" y="37"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
6 12 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
20 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
