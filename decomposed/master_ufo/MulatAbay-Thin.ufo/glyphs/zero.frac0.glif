<?xml version='1.0' encoding='UTF-8'?>
<glyph name="zero.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00455
</note>
  <outline>
    <contour>
      <point x="364" y="-11" type="curve" smooth="yes"/>
      <point x="538.667" y="-11"/>
      <point x="632" y="109.667"/>
      <point x="632" y="327" type="curve" smooth="yes"/>
      <point x="632" y="462" type="line" smooth="yes"/>
      <point x="632" y="679.333"/>
      <point x="536.333" y="800"/>
      <point x="363" y="800" type="curve" smooth="yes"/>
      <point x="191" y="800"/>
      <point x="94" y="679.333"/>
      <point x="94" y="462" type="curve" smooth="yes"/>
      <point x="94" y="327" type="line" smooth="yes"/>
      <point x="94" y="109.667"/>
      <point x="193.333" y="-11"/>
    </contour>
    <contour>
      <point x="364" y="37" type="curve" smooth="yes"/>
      <point x="228" y="37"/>
      <point x="147" y="140.667"/>
      <point x="147" y="322" type="curve" smooth="yes"/>
      <point x="147" y="465" type="line" smooth="yes"/>
      <point x="147" y="649"/>
      <point x="225.667" y="751"/>
      <point x="363" y="751" type="curve" smooth="yes"/>
      <point x="501.667" y="751"/>
      <point x="579" y="647"/>
      <point x="579" y="467" type="curve" smooth="yes"/>
      <point x="579" y="324" type="line" smooth="yes"/>
      <point x="579" y="140"/>
      <point x="502.667" y="37"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
3 24 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
10 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
