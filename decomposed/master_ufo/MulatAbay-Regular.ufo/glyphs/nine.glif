<?xml version='1.0' encoding='UTF-8'?>
<glyph name="nine" format="2">
  <advance width="1150"/>
  <unicode hex="0039"/>
  <note>
uni0039
</note>
  <outline>
    <contour>
      <point x="305" y="-1" type="line" name="❌"/>
      <point x="341" y="-1" type="line" smooth="yes" name="❌"/>
      <point x="793" y="5.667"/>
      <point x="1016" y="253.333"/>
      <point x="1016" y="820" type="curve" smooth="yes"/>
      <point x="1016" y="874" type="line" smooth="yes"/>
      <point x="1016" y="1246"/>
      <point x="839" y="1476"/>
      <point x="551" y="1476" type="curve" smooth="yes"/>
      <point x="369.667" y="1476"/>
      <point x="229.5" y="1391"/>
      <point x="155.5" y="1235" type="curve" smooth="yes"/>
      <point x="118.5" y="1157"/>
      <point x="100" y="1069"/>
      <point x="100" y="972" type="curve" smooth="yes"/>
      <point x="100" y="704"/>
      <point x="251" y="487"/>
      <point x="515" y="487" type="curve" smooth="yes"/>
      <point x="643" y="487"/>
      <point x="752.667" y="548"/>
      <point x="830" y="640" type="curve"/>
      <point x="815.333" y="306.667"/>
      <point x="649.333" y="160.333"/>
      <point x="344" y="155" type="curve" smooth="yes"/>
      <point x="305" y="155" type="line"/>
    </contour>
    <contour>
      <point x="545" y="640" type="curve" smooth="yes"/>
      <point x="385" y="640"/>
      <point x="282" y="783.333"/>
      <point x="282" y="982" type="curve" smooth="yes"/>
      <point x="282" y="1186"/>
      <point x="389.333" y="1322"/>
      <point x="552" y="1322" type="curve" smooth="yes"/>
      <point x="713.333" y="1322"/>
      <point x="831" y="1154.667"/>
      <point x="831" y="912" type="curve" smooth="yes"/>
      <point x="831" y="838" type="line"/>
      <point x="783" y="726"/>
      <point x="669" y="640"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
