<?xml version='1.0' encoding='UTF-8'?>
<glyph name="nine.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00549
</note>
  <outline>
    <contour>
      <point x="10" y="-8" type="line"/>
      <point x="33" y="-8" type="line" smooth="yes"/>
      <point x="288" y="-7"/>
      <point x="454" y="139"/>
      <point x="502" y="411" type="curve" smooth="yes"/>
      <point x="515" y="486" type="line" smooth="yes"/>
      <point x="550" y="683"/>
      <point x="473" y="800"/>
      <point x="297" y="800" type="curve" smooth="yes"/>
      <point x="141" y="800"/>
      <point x="7" y="680"/>
      <point x="-21" y="521" type="curve" smooth="yes"/>
      <point x="-47" y="373"/>
      <point x="38" y="255"/>
      <point x="191" y="255" type="curve" smooth="yes"/>
      <point x="294" y="255"/>
      <point x="386" y="303"/>
      <point x="441" y="372" type="curve"/>
      <point x="401" y="159"/>
      <point x="262" y="43"/>
      <point x="19" y="40" type="curve"/>
    </contour>
    <contour>
      <point x="205" y="304" type="curve" smooth="yes"/>
      <point x="81" y="304"/>
      <point x="14" y="401"/>
      <point x="35" y="522" type="curve" smooth="yes"/>
      <point x="58" y="649"/>
      <point x="165" y="750"/>
      <point x="289" y="750" type="curve" smooth="yes"/>
      <point x="424" y="750"/>
      <point x="492" y="664"/>
      <point x="462" y="491" type="curve" smooth="yes"/>
      <point x="455" y="453" type="line"/>
      <point x="410" y="365"/>
      <point x="311" y="304"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
