<?xml version='1.0' encoding='UTF-8'?>
<glyph name="dollar" format="2">
  <advance width="1121"/>
  <unicode hex="0024"/>
  <note>
uni0024
</note>
  <outline>
    <contour>
      <point x="565" y="-208" type="line"/>
      <point x="620" y="-208" type="line"/>
      <point x="620" y="-20" type="line"/>
      <point x="852" y="-6.667"/>
      <point x="1001" y="134"/>
      <point x="1001" y="346" type="curve" smooth="yes"/>
      <point x="1001" y="598"/>
      <point x="817" y="677"/>
      <point x="575" y="760" type="curve" smooth="yes"/>
      <point x="368" y="831"/>
      <point x="222" y="893"/>
      <point x="222" y="1112" type="curve" smooth="yes"/>
      <point x="222" y="1296"/>
      <point x="363" y="1424"/>
      <point x="579" y="1424" type="curve" smooth="yes"/>
      <point x="801.667" y="1424"/>
      <point x="939" y="1274"/>
      <point x="939" y="1047" type="curve"/>
      <point x="993" y="1047" type="line"/>
      <point x="993" y="1305.667"/>
      <point x="854.333" y="1462.667"/>
      <point x="609" y="1476" type="curve"/>
      <point x="609" y="1663" type="line"/>
      <point x="554" y="1663" type="line"/>
      <point x="554" y="1476" type="line"/>
      <point x="324.667" y="1468"/>
      <point x="168" y="1327.333"/>
      <point x="168" y="1110" type="curve" smooth="yes"/>
      <point x="168" y="867"/>
      <point x="335" y="785"/>
      <point x="553.5" y="709.5" type="curve" smooth="yes"/>
      <point x="765" y="636"/>
      <point x="947" y="568"/>
      <point x="947" y="344" type="curve" smooth="yes"/>
      <point x="947" y="168"/>
      <point x="795.333" y="32"/>
      <point x="586" y="32" type="curve" smooth="yes"/>
      <point x="332.667" y="32"/>
      <point x="175" y="173"/>
      <point x="175" y="409" type="curve"/>
      <point x="121" y="409" type="line"/>
      <point x="121" y="146.333"/>
      <point x="282.333" y="-10.333"/>
      <point x="565" y="-21" type="curve"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
9 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
34 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 34 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
41 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
