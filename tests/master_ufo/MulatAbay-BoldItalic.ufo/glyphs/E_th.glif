<?xml version='1.0' encoding='UTF-8'?>
<glyph name="Eth" format="2">
  <advance width="1373"/>
  <unicode hex="00D0"/>
  <note>
uni00D0
</note>
  <outline>
    <contour>
      <point x="-31" y="0" type="line"/>
      <point x="420" y="0" type="line" smooth="yes"/>
      <point x="1004" y="7"/>
      <point x="1187" y="594"/>
      <point x="1205" y="694" type="curve" smooth="yes"/>
      <point x="1216" y="761" type="line" smooth="yes"/>
      <point x="1264" y="1032"/>
      <point x="1184" y="1254"/>
      <point x="1002" y="1370" type="curve" smooth="yes"/>
      <point x="911" y="1427"/>
      <point x="802" y="1456"/>
      <point x="674" y="1456" type="curve" smooth="yes"/>
      <point x="226" y="1456" type="line"/>
      <point x="115" y="825" type="line"/>
      <point x="-65" y="825" type="line"/>
      <point x="-98" y="642" type="line"/>
      <point x="82" y="642" type="line"/>
    </contour>
    <contour>
      <point x="312" y="241" type="line"/>
      <point x="382" y="642" type="line"/>
      <point x="601" y="642" type="line"/>
      <point x="634" y="825" type="line"/>
      <point x="415" y="825" type="line"/>
      <point x="483" y="1213" type="line"/>
      <point x="631" y="1213" type="line" smooth="yes"/>
      <point x="867" y="1213"/>
      <point x="965" y="1058"/>
      <point x="913" y="762" type="curve" smooth="yes"/>
      <point x="901" y="694" type="line" smooth="yes"/>
      <point x="849" y="403"/>
      <point x="694" y="241"/>
      <point x="457" y="241" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
5 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
4 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
111 4 1 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHB[ ]	/* 3 values pushed */
159 4 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
1 7 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
18 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
27 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
