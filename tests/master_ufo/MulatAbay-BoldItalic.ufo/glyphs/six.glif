<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six" format="2">
  <advance width="1150"/>
  <unicode hex="0036"/>
  <note>
uni0036
</note>
  <outline>
    <contour>
      <point x="419" y="-20" type="curve" smooth="yes"/>
      <point x="845" y="-18"/>
      <point x="985" y="410"/>
      <point x="997" y="480" type="curve" smooth="yes"/>
      <point x="1049" y="776"/>
      <point x="923" y="974"/>
      <point x="670" y="974" type="curve" smooth="yes"/>
      <point x="552" y="974"/>
      <point x="447" y="935"/>
      <point x="356" y="856" type="curve"/>
      <point x="430" y="1091"/>
      <point x="631" y="1233"/>
      <point x="910" y="1233" type="curve"/>
      <point x="952" y="1471" type="line"/>
      <point x="446" y="1469"/>
      <point x="111" y="1144"/>
      <point x="28" y="671" type="curve" smooth="yes"/>
      <point x="9" y="567" type="line" smooth="yes"/>
      <point x="-54" y="211"/>
      <point x="112" y="-20"/>
    </contour>
    <contour>
      <point x="454" y="213" type="curve" smooth="yes"/>
      <point x="316" y="213"/>
      <point x="257" y="328"/>
      <point x="291" y="521" type="curve" smooth="yes"/>
      <point x="307" y="609" type="line"/>
      <point x="357" y="689"/>
      <point x="448" y="742"/>
      <point x="541" y="742" type="curve" smooth="yes"/>
      <point x="672" y="742"/>
      <point x="736" y="636"/>
      <point x="708" y="477" type="curve" smooth="yes"/>
      <point x="681" y="321"/>
      <point x="578" y="213"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
