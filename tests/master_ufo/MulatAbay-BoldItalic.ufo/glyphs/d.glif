<?xml version='1.0' encoding='UTF-8'?>
<glyph name="d" format="2">
  <advance width="1155"/>
  <unicode hex="0064"/>
  <note>
uni0064
</note>
  <outline>
    <contour>
      <point x="294" y="-20" type="curve" smooth="yes"/>
      <point x="407" y="-20"/>
      <point x="508" y="25"/>
      <point x="595" y="115" type="curve"/>
      <point x="589" y="0" type="line"/>
      <point x="850" y="0" type="line"/>
      <point x="1121" y="1536" type="line"/>
      <point x="831" y="1536" type="line"/>
      <point x="734" y="984" type="line"/>
      <point x="679" y="1063"/>
      <point x="599" y="1102"/>
      <point x="494" y="1102" type="curve" smooth="yes"/>
      <point x="201" y="1102"/>
      <point x="24" y="842"/>
      <point x="-28" y="549" type="curve" smooth="yes"/>
      <point x="-91" y="192"/>
      <point x="39" y="-20"/>
    </contour>
    <contour>
      <point x="409" y="214" type="curve" smooth="yes"/>
      <point x="274" y="214"/>
      <point x="222" y="325"/>
      <point x="257" y="528" type="curve" smooth="yes"/>
      <point x="297" y="754"/>
      <point x="387" y="867"/>
      <point x="526" y="867" type="curve" smooth="yes"/>
      <point x="615" y="867"/>
      <point x="670" y="829"/>
      <point x="693" y="754" type="curve"/>
      <point x="618" y="327" type="line"/>
      <point x="568" y="252"/>
      <point x="498" y="214"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
24 27 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 3 values pushed */
10 3 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
