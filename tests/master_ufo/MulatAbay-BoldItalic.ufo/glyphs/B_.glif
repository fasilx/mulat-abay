<?xml version='1.0' encoding='UTF-8'?>
<glyph name="B" format="2">
  <advance width="1275"/>
  <unicode hex="0042"/>
  <note>
uni0042
</note>
  <outline>
    <contour>
      <point x="-61" y="0" type="line"/>
      <point x="505" y="0" type="line" smooth="yes"/>
      <point x="836" y="3"/>
      <point x="1047" y="148"/>
      <point x="1097" y="428" type="curve" smooth="yes"/>
      <point x="1126" y="592"/>
      <point x="1055" y="712"/>
      <point x="912" y="749" type="curve"/>
      <point x="1052" y="800"/>
      <point x="1149" y="914"/>
      <point x="1175" y="1057" type="curve" smooth="yes"/>
      <point x="1221" y="1318"/>
      <point x="1059" y="1456"/>
      <point x="706" y="1456" type="curve" smooth="yes"/>
      <point x="196" y="1456" type="line"/>
    </contour>
    <contour>
      <point x="282" y="241" type="line"/>
      <point x="351" y="634" type="line"/>
      <point x="626" y="634" type="line" smooth="yes"/>
      <point x="764" y="632"/>
      <point x="821" y="564"/>
      <point x="797" y="431" type="curve" smooth="yes"/>
      <point x="776" y="312"/>
      <point x="680" y="241"/>
      <point x="539" y="241" type="curve" smooth="yes"/>
    </contour>
    <contour>
      <point x="388" y="846" type="line"/>
      <point x="453" y="1213" type="line"/>
      <point x="663" y="1213" type="line" smooth="yes"/>
      <point x="828" y="1213"/>
      <point x="893" y="1159"/>
      <point x="869" y="1027" type="curve" smooth="yes"/>
      <point x="848" y="909"/>
      <point x="762" y="849"/>
      <point x="610" y="846" type="curve" smooth="yes"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
23 0 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
15 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
8 15 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
