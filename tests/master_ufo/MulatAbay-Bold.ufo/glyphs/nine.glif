<?xml version='1.0' encoding='UTF-8'?>
<glyph name="nine" format="2">
  <advance width="1175"/>
  <unicode hex="0039"/>
  <note>
uni0039
</note>
  <outline>
    <contour>
      <point x="303" y="-14" type="line"/>
      <point x="374" y="-13" type="line" smooth="yes"/>
      <point x="816.667" y="5.667"/>
      <point x="1068" y="295.667"/>
      <point x="1068" y="781" type="curve" smooth="yes"/>
      <point x="1068" y="888" type="line" smooth="yes"/>
      <point x="1066" y="1213"/>
      <point x="892" y="1476"/>
      <point x="575" y="1476" type="curve" smooth="yes"/>
      <point x="324" y="1476"/>
      <point x="200" y="1324"/>
      <point x="140" y="1185" type="curve" smooth="yes"/>
      <point x="95" y="1079"/>
      <point x="86" y="980"/>
      <point x="86" y="961" type="curve" smooth="yes"/>
      <point x="86" y="661"/>
      <point x="253.667" y="471"/>
      <point x="511" y="471" type="curve" smooth="yes"/>
      <point x="611.667" y="471"/>
      <point x="699.667" y="508"/>
      <point x="775" y="582" type="curve"/>
      <point x="754.333" y="357.333"/>
      <point x="618.333" y="239.333"/>
      <point x="367" y="228" type="curve" smooth="yes"/>
      <point x="303" y="227" type="line"/>
    </contour>
    <contour>
      <point x="582" y="692" type="curve" smooth="yes"/>
      <point x="450" y="692"/>
      <point x="374" y="805.333"/>
      <point x="374" y="964" type="curve" smooth="yes"/>
      <point x="374" y="1124"/>
      <point x="457" y="1243"/>
      <point x="573" y="1243" type="curve" smooth="yes"/>
      <point x="698.333" y="1243"/>
      <point x="779" y="1130"/>
      <point x="779" y="934" type="curve" smooth="yes"/>
      <point x="779" y="815" type="line"/>
      <point x="744.333" y="747"/>
      <point x="675.333" y="692"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
19 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
3 19 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 3 values pushed */
0 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
31 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
