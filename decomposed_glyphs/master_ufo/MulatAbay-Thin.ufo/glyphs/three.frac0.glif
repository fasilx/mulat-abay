<?xml version='1.0' encoding='UTF-8'?>
<glyph name="three.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00543
</note>
  <outline>
    <contour>
      <point x="367" y="-11" type="curve" smooth="yes"/>
      <point x="529.667" y="-11"/>
      <point x="637" y="77.667"/>
      <point x="637" y="211" type="curve" smooth="yes"/>
      <point x="637" y="307"/>
      <point x="577.667" y="376.333"/>
      <point x="463" y="403" type="curve"/>
      <point x="563" y="433.667"/>
      <point x="618" y="506"/>
      <point x="618" y="582" type="curve" smooth="yes"/>
      <point x="618" y="718"/>
      <point x="520.667" y="800"/>
      <point x="362" y="800" type="curve" smooth="yes"/>
      <point x="210" y="800"/>
      <point x="97" y="710"/>
      <point x="97" y="582" type="curve"/>
      <point x="150" y="582" type="line"/>
      <point x="150" y="683.333"/>
      <point x="240.667" y="751"/>
      <point x="362" y="751" type="curve" smooth="yes"/>
      <point x="488.667" y="751"/>
      <point x="564" y="687.667"/>
      <point x="564" y="585" type="curve" smooth="yes"/>
      <point x="564" y="493"/>
      <point x="479.667" y="427.333"/>
      <point x="345" y="426" type="curve" smooth="yes"/>
      <point x="270" y="426" type="line"/>
      <point x="270" y="377" type="line"/>
      <point x="330" y="377" type="line" smooth="yes"/>
      <point x="498.667" y="377"/>
      <point x="583" y="321.333"/>
      <point x="583" y="210" type="curve" smooth="yes"/>
      <point x="583" y="102"/>
      <point x="504.333" y="37"/>
      <point x="367" y="37" type="curve" smooth="yes"/>
      <point x="229.667" y="37"/>
      <point x="134" y="113"/>
      <point x="134" y="217" type="curve"/>
      <point x="80" y="217" type="line"/>
      <point x="80" y="82.333"/>
      <point x="201.667" y="-11"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
