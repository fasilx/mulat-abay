<?xml version='1.0' encoding='UTF-8'?>
<glyph name="period" format="2">
  <advance width="439"/>
  <unicode hex="002E"/>
  <note>
uni002E
</note>
  <outline>
    <contour>
      <point x="202" y="-6" type="curve" smooth="yes"/>
      <point x="232.667" y="-6"/>
      <point x="258" y="18.333"/>
      <point x="258" y="49" type="curve" smooth="yes"/>
      <point x="258" y="79.667"/>
      <point x="232.667" y="105"/>
      <point x="202" y="105" type="curve" smooth="yes"/>
      <point x="171.333" y="105"/>
      <point x="147" y="79.667"/>
      <point x="147" y="49" type="curve" smooth="yes"/>
      <point x="147" y="18.333"/>
      <point x="171.333" y="-6"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
7 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
2 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
