<?xml version='1.0' encoding='UTF-8'?>
<glyph name="six" format="2">
  <advance width="1121"/>
  <unicode hex="0036"/>
  <note>
uni0036
</note>
  <outline>
    <contour>
      <point x="602" y="-20" type="curve" smooth="yes"/>
      <point x="860" y="-20"/>
      <point x="1013" y="217"/>
      <point x="1013" y="480" type="curve" smooth="yes"/>
      <point x="1013" y="766.667"/>
      <point x="848" y="957"/>
      <point x="592" y="957" type="curve" smooth="yes"/>
      <point x="417.333" y="957"/>
      <point x="260.333" y="870.333"/>
      <point x="183" y="733" type="curve"/>
      <point x="200" y="1153"/>
      <point x="416" y="1404"/>
      <point x="840" y="1422" type="curve"/>
      <point x="840" y="1476" type="line"/>
      <point x="379" y="1476"/>
      <point x="128" y="1177"/>
      <point x="128" y="660" type="curve" smooth="yes"/>
      <point x="128" y="481" type="line" smooth="yes"/>
      <point x="136.071" y="47.139"/>
      <point x="533" y="-20"/>
    </contour>
    <contour>
      <point x="602" y="33" type="curve" smooth="yes"/>
      <point x="354" y="33"/>
      <point x="182" y="218.333"/>
      <point x="182" y="493" type="curve" smooth="yes"/>
      <point x="182" y="621" type="line"/>
      <point x="222" y="782.333"/>
      <point x="398.333" y="903"/>
      <point x="585" y="903" type="curve" smooth="yes"/>
      <point x="817" y="903"/>
      <point x="959" y="738.667"/>
      <point x="959" y="480" type="curve" smooth="yes"/>
      <point x="959" y="229.333"/>
      <point x="808.667" y="33"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
0 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
