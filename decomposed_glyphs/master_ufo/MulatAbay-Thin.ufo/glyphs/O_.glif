<?xml version='1.0' encoding='UTF-8'?>
<glyph name="O" format="2">
  <advance width="1364"/>
  <unicode hex="004F"/>
  <note>
uni004F
</note>
  <outline>
    <contour>
      <point x="683" y="-20" type="curve" smooth="yes"/>
      <point x="900.333" y="-20"/>
      <point x="1073.5" y="90.5"/>
      <point x="1163.5" y="284.5" type="curve" smooth="yes"/>
      <point x="1208.5" y="381.5"/>
      <point x="1231" y="493"/>
      <point x="1231" y="619" type="curve" smooth="yes"/>
      <point x="1231" y="837" type="line" smooth="yes"/>
      <point x="1231" y="1086.333"/>
      <point x="1136.833" y="1290.5"/>
      <point x="969.5" y="1396.5" type="curve" smooth="yes"/>
      <point x="885.833" y="1449.5"/>
      <point x="789.667" y="1476"/>
      <point x="681" y="1476" type="curve" smooth="yes"/>
      <point x="465" y="1476"/>
      <point x="290.5" y="1365.667"/>
      <point x="200.5" y="1171" type="curve" smooth="yes"/>
      <point x="155.5" y="1073.667"/>
      <point x="133" y="962.333"/>
      <point x="133" y="837" type="curve" smooth="yes"/>
      <point x="133" y="627" type="line" smooth="yes"/>
      <point x="133" y="419"/>
      <point x="194" y="251"/>
      <point x="300" y="138" type="curve" smooth="yes"/>
      <point x="395" y="37"/>
      <point x="527" y="-20"/>
    </contour>
    <contour>
      <point x="683" y="34" type="curve" smooth="yes"/>
      <point x="355" y="34"/>
      <point x="188" y="296"/>
      <point x="188" y="619" type="curve" smooth="yes"/>
      <point x="188" y="832" type="line" smooth="yes"/>
      <point x="188" y="1196"/>
      <point x="381" y="1422"/>
      <point x="681" y="1422" type="curve" smooth="yes"/>
      <point x="985" y="1422"/>
      <point x="1177" y="1191"/>
      <point x="1177" y="839" type="curve" smooth="yes"/>
      <point x="1177" y="627" type="line" smooth="yes"/>
      <point x="1177" y="260.333"/>
      <point x="987" y="34"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
4 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
21 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
28 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
