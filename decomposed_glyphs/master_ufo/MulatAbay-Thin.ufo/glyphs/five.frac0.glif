<?xml version='1.0' encoding='UTF-8'?>
<glyph name="five.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00545
</note>
  <outline>
    <contour>
      <point x="384" y="-11" type="curve" smooth="yes"/>
      <point x="552" y="-11"/>
      <point x="650" y="81.667"/>
      <point x="650" y="251" type="curve" smooth="yes"/>
      <point x="650" y="401.667"/>
      <point x="542.333" y="501"/>
      <point x="381" y="501" type="curve" smooth="yes"/>
      <point x="298.333" y="501"/>
      <point x="230.667" y="475"/>
      <point x="200" y="455" type="curve"/>
      <point x="237" y="738" type="line"/>
      <point x="639" y="738" type="line"/>
      <point x="639" y="789" type="line"/>
      <point x="192" y="789" type="line"/>
      <point x="145" y="407" type="line"/>
      <point x="186" y="394" type="line"/>
      <point x="258.667" y="441"/>
      <point x="310.667" y="453"/>
      <point x="376" y="453" type="curve" smooth="yes"/>
      <point x="517.333" y="453"/>
      <point x="597" y="372.333"/>
      <point x="597" y="251" type="curve" smooth="yes"/>
      <point x="597" y="108.333"/>
      <point x="526" y="37"/>
      <point x="384" y="37" type="curve" smooth="yes"/>
      <point x="269.333" y="37"/>
      <point x="188.333" y="105.333"/>
      <point x="179" y="208" type="curve"/>
      <point x="125" y="208" type="line"/>
      <point x="137" y="74.667"/>
      <point x="246.667" y="-11"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 9 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
