<?xml version='1.0' encoding='UTF-8'?>
<glyph name="G" format="2">
  <advance width="1395"/>
  <unicode hex="0047"/>
  <note>
uni0047
</note>
  <outline>
    <contour>
      <point x="729" y="-20" type="curve" smooth="yes"/>
      <point x="963.667" y="-20"/>
      <point x="1145.333" y="49.667"/>
      <point x="1244" y="191" type="curve"/>
      <point x="1244" y="725" type="line"/>
      <point x="716" y="725" type="line"/>
      <point x="716" y="569" type="line"/>
      <point x="1053" y="569" type="line"/>
      <point x="1053" y="242" type="line"/>
      <point x="982.333" y="166"/>
      <point x="874" y="137"/>
      <point x="730" y="137" type="curve" smooth="yes"/>
      <point x="475.333" y="137"/>
      <point x="315" y="344.333"/>
      <point x="315" y="671" type="curve" smooth="yes"/>
      <point x="315" y="790" type="line" smooth="yes"/>
      <point x="316.333" y="1132.667"/>
      <point x="450.667" y="1318"/>
      <point x="708" y="1318" type="curve" smooth="yes"/>
      <point x="901.333" y="1318"/>
      <point x="1016" y="1221.667"/>
      <point x="1052" y="1029" type="curve"/>
      <point x="1244" y="1029" type="line"/>
      <point x="1202.667" y="1314.333"/>
      <point x="1011" y="1476"/>
      <point x="707" y="1476" type="curve" smooth="yes"/>
      <point x="336.333" y="1476"/>
      <point x="122" y="1223.667"/>
      <point x="122" y="785" type="curve" smooth="yes"/>
      <point x="122" y="658" type="line" smooth="yes"/>
      <point x="126" y="262"/>
      <point x="353" y="-20"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
11 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
17 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
24 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
30 3 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 5 values pushed */
191 30 207 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
15 30 31 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 5 values pushed */
63 30 79 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 2 values pushed */
29 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
