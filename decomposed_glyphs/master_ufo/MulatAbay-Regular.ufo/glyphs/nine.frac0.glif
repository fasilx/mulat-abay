<?xml version='1.0' encoding='UTF-8'?>
<glyph name="nine.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00549
</note>
  <outline>
    <contour>
      <point x="209" y="-7" type="line"/>
      <point x="264" y="-6" type="line" smooth="yes"/>
      <point x="528.667" y="7.333"/>
      <point x="661" y="151.333"/>
      <point x="661" y="426" type="curve" smooth="yes"/>
      <point x="661" y="487" type="line" smooth="yes"/>
      <point x="657" y="684.333"/>
      <point x="547.667" y="800"/>
      <point x="365" y="800" type="curve" smooth="yes"/>
      <point x="193" y="800"/>
      <point x="73" y="680.333"/>
      <point x="73" y="519" type="curve" smooth="yes"/>
      <point x="73" y="351"/>
      <point x="174.667" y="255"/>
      <point x="332" y="255" type="curve" smooth="yes"/>
      <point x="399.333" y="255"/>
      <point x="456" y="276.667"/>
      <point x="502" y="320" type="curve"/>
      <point x="487.333" y="184"/>
      <point x="409" y="120"/>
      <point x="209" y="120" type="curve"/>
    </contour>
    <contour>
      <point x="368" y="376" type="curve" smooth="yes"/>
      <point x="282.667" y="376"/>
      <point x="230" y="432.333"/>
      <point x="230" y="519" type="curve" smooth="yes"/>
      <point x="230" y="608.333"/>
      <point x="286.333" y="670"/>
      <point x="365" y="670" type="curve" smooth="yes"/>
      <point x="445" y="670"/>
      <point x="504" y="617.667"/>
      <point x="504" y="507" type="curve" smooth="yes"/>
      <point x="504" y="447" type="line"/>
      <point x="476" y="399.667"/>
      <point x="430.667" y="376"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
8 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
15 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
2 15 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 7 values pushed */
15 2 31 2 47 2 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
16 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
19 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
25 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
