<?xml version='1.0' encoding='UTF-8'?>
<glyph name="five" format="2">
  <advance width="1150"/>
  <unicode hex="0035"/>
  <note>
uni0035
</note>
  <outline>
    <contour>
      <point x="608" y="-20" type="curve" smooth="yes"/>
      <point x="898.667" y="-20"/>
      <point x="1069" y="164"/>
      <point x="1069" y="464" type="curve" smooth="yes"/>
      <point x="1069" y="762.667"/>
      <point x="901.333" y="951"/>
      <point x="636" y="951" type="curve" smooth="yes"/>
      <point x="545.333" y="951"/>
      <point x="464.333" y="930"/>
      <point x="393" y="888" type="curve"/>
      <point x="437" y="1285" type="line"/>
      <point x="1026" y="1285" type="line"/>
      <point x="1026" y="1456" type="line"/>
      <point x="280" y="1456" type="line"/>
      <point x="206" y="730" type="line"/>
      <point x="354" y="692" type="line"/>
      <point x="449" y="767.333"/>
      <point x="512.333" y="785"/>
      <point x="593" y="785" type="curve" smooth="yes"/>
      <point x="769" y="785"/>
      <point x="884" y="656.667"/>
      <point x="884" y="462" type="curve" smooth="yes"/>
      <point x="884" y="255.333"/>
      <point x="780" y="131"/>
      <point x="608" y="131" type="curve" smooth="yes"/>
      <point x="450.667" y="131"/>
      <point x="351.667" y="216.333"/>
      <point x="329" y="383" type="curve"/>
      <point x="154" y="383" type="line"/>
      <point x="176.667" y="131"/>
      <point x="350.667" y="-20"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
1 30 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
13 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
7 13 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
26 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
5 7 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
20 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
