<?xml version='1.0' encoding='UTF-8'?>
<glyph name="three.frac0" format="2">
  <advance width="751"/>
  <note>
glyph00543
</note>
  <outline>
    <contour>
      <point x="360" y="-11" type="curve" smooth="yes"/>
      <point x="541.333" y="-11"/>
      <point x="666" y="78.667"/>
      <point x="666" y="220" type="curve" smooth="yes"/>
      <point x="666" y="315.333"/>
      <point x="616.333" y="376.667"/>
      <point x="517" y="404" type="curve"/>
      <point x="605" y="437.333"/>
      <point x="653" y="501.667"/>
      <point x="653" y="575" type="curve" smooth="yes"/>
      <point x="653" y="713.667"/>
      <point x="542.667" y="800"/>
      <point x="360" y="800" type="curve" smooth="yes"/>
      <point x="194.667" y="800"/>
      <point x="73" y="709.667"/>
      <point x="73" y="579" type="curve"/>
      <point x="230" y="579" type="line"/>
      <point x="230" y="633.667"/>
      <point x="286" y="671"/>
      <point x="362" y="671" type="curve" smooth="yes"/>
      <point x="455.333" y="671"/>
      <point x="495" y="628"/>
      <point x="495" y="568" type="curve" smooth="yes"/>
      <point x="495" y="504"/>
      <point x="447.667" y="459"/>
      <point x="349" y="459" type="curve" smooth="yes"/>
      <point x="265" y="459" type="line"/>
      <point x="265" y="343" type="line"/>
      <point x="353" y="343" type="line" smooth="yes"/>
      <point x="457" y="341.667"/>
      <point x="509" y="303.333"/>
      <point x="509" y="228" type="curve" smooth="yes"/>
      <point x="509" y="160"/>
      <point x="459.333" y="117"/>
      <point x="366" y="117" type="curve" smooth="yes"/>
      <point x="276.667" y="117"/>
      <point x="220" y="162"/>
      <point x="220" y="222" type="curve"/>
      <point x="62" y="222" type="line"/>
      <point x="62" y="79.333"/>
      <point x="184" y="-11"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
14 24 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
25 18 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
0 25 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
RUTG[ ]	/* RoundUpToGrid */
PUSHB[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
RTG[ ]	/* RoundToGrid */
PUSHB[ ]	/* 7 values pushed */
128 0 144 0 160 0 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHB[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
38 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
20 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 2 values pushed */
32 2 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 3 values pushed */
29 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
