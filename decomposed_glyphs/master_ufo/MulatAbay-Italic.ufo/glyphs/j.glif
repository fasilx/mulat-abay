<?xml version='1.0' encoding='UTF-8'?>
<glyph name="j" format="2">
  <advance width="489"/>
  <unicode hex="006A"/>
  <note>
uni006A
</note>
  <outline>
    <contour>
      <point x="-220" y="-437" type="curve" smooth="yes"/>
      <point x="-31" y="-437"/>
      <point x="81" y="-333"/>
      <point x="118" y="-125" type="curve" smooth="yes"/>
      <point x="331" y="1082" type="line"/>
      <point x="146" y="1082" type="line"/>
      <point x="-68" y="-129" type="line" smooth="yes"/>
      <point x="-87" y="-240"/>
      <point x="-138" y="-279"/>
      <point x="-221" y="-279" type="curve" smooth="yes"/>
      <point x="-256" y="-279"/>
      <point x="-283" y="-276"/>
      <point x="-304" y="-271" type="curve"/>
      <point x="-330" y="-419" type="line"/>
      <point x="-297" y="-431"/>
      <point x="-261" y="-437"/>
    </contour>
    <contour>
      <point x="267" y="1264" type="curve" smooth="yes"/>
      <point x="339" y="1264"/>
      <point x="385" y="1309"/>
      <point x="396" y="1369" type="curve" smooth="yes"/>
      <point x="406" y="1429"/>
      <point x="376" y="1476"/>
      <point x="304" y="1476" type="curve" smooth="yes"/>
      <point x="234" y="1476"/>
      <point x="188" y="1428"/>
      <point x="178" y="1369" type="curve" smooth="yes"/>
      <point x="167" y="1309"/>
      <point x="195" y="1264"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>PUSHB[ ]	/* 3 values pushed */
16 23 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHB[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
12 26 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHB[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHB[ ]	/* 2 values pushed */
3 20 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHB[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHB[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHB[ ]	/* 2 values pushed */
16 5 
PUSHB[ ]	/* 1 value pushed */
10 
CALL[ ]	/* CallFunction */
IF[ ]	/* If */
POP[ ]	/* PopTopStack */
MDRP[11000]	/* MoveDirectRelPt */
ELSE[ ]	/* Else */
MIRP[10100]	/* MoveIndirectRelPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
    </dict>
  </lib>
</glyph>
